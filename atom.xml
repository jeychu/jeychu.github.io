<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>javfa&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-10T14:57:25.241Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Javfa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/10/js/echarts.min/"/>
    <id>http://yoursite.com/2019/03/10/js/echarts.min/</id>
    <published>2019-03-10T15:32:00.208Z</published>
    <updated>2019-03-10T14:57:25.241Z</updated>
    
    <content type="html"><![CDATA[/** Licensed to the Apache Software Foundation (ASF) under one* or more contributor license agreements.  See the NOTICE file* distributed with this work for additional information* regarding copyright ownership.  The ASF licenses this file* to you under the Apache License, Version 2.0 (the* "License"); you may not use this file except in compliance* with the License.  You may obtain a copy of the License at**   http://www.apache.org/licenses/LICENSE-2.0** Unless required by applicable law or agreed to in writing,* software distributed under the License is distributed on an* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY* KIND, either express or implied.  See the License for the* specific language governing permissions and limitations* under the License.*/!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.echarts={})}(this,function(t){"use strict";function e(t,e){"createCanvas"===t&&(nw=null),ew[t]=e}function i(t){if(null==t||"object"!=typeof t)return t;var e=t,n=Y_.call(t);if("[object Array]"===n){if(!O(t)){e=[];for(var o=0,a=t.length;o<a;o++)e[o]=i(t[o])}}else 0="==i?(t[0]=0,t[1]=0):(t[0]=e[0]/i,t[1]=e[1]/i),t}function" 2="==e?[t[0],t[1],t[0],t[1]]:3===e?[t[0],t[1],t[2],t[1]]:t}function" if(j_[n]){if(!o(t)){var r="t.constructor;if(t.constructor.from)e=r.from(t);else{e=new" r(t.length);for(var o="0,a=t.length;o<a;o++)e[o]=i(t[o])}}}else" if(!x_[n]&&!o(t)&&!m(t)){e="{};for(var" s in t)t.hasownproperty(s)&&(e[s]="i(t[s]))}return" e}function n(t,e,o){if(!w(e)||!w(t))return o?i(e):t;for(var a e)if(e.hasownproperty(a)){var t||(t[a]="i(e[a],!0)):n(r,s,o)}return" t}function o(t,e){for(var i="t[0],o=1,a=t.length;o<a;o++)i=n(i,t[o],e);return" i}function a(t,e){for(var e)e.hasownproperty(i)&&(t[i]="e[i]);return" r(t,e,i){for(var n e)e.hasownproperty(n)&&(i?null!="e[n]:null==t[n])&&(t[n]=e[n]);return" s(){return nw||(nw="iw().getContext(" 2d")),nw}function" l(t,e){if(t){if(t.indexof)return t.indexof(e);for(var i}return-1}function u(t,e){function i(){}var i;for(var n)t.prototype[o]="n[o];t.prototype.constructor=t,t.superClass=e}function" h(t,e,i){r(t="prototype" t?t.prototype:t,e="prototype" e?e.prototype:e,i)}function c(t){if(t)return"string"!="typeof" t&&"number"="=typeof" t.length}function d(t,e,i){if(t&&e)if(t.foreach&&t.foreach="==K_)t.forEach(e,i);else" if(t.length="==+t.length)for(var" for(var t)t.hasownproperty(a)&&e.call(i,t[a],a,t)}function f(t,e,i){if(t&&e){if(t.map&&t.map="==Q_)return" t.map(e,i);for(var n}}function p(t,e,i,n){if(t&&e){if(t.reduce&&t.reduce="==tw)return" t.reduce(e,i,n);for(var i}}function g(t,e,i){if(t&&e){if(t.filter&&t.filter="==$_)return" t.filter(e,i);for(var m(t,e){var function(){return t.apply(e,i.concat(j_.call(arguments)))}}function v(t){var e="J_.call(arguments,1);return" t.apply(this,e.concat(j_.call(arguments)))}}function y(t){return"[object array]"="==Y_.call(t)}function" x(t){return"function"="=typeof" _(t){return"[object string]"="==Y_.call(t)}function" w(t){var t;return"function"="==e||!!t&&" object"="==e}function" " b(t){return!!x_[y_.call(t)]}function s(t){return!!j_[y_.call(t)]}function m(t){return"object"="=typeof" t.nodetype&&"object"="=typeof" t.ownerdocument}function i(t){return t!="=t}function" t(t){for(var arguments[e]}function a(t,e){return null!="t?t:e}function" d(t,e,i){return c(){return function.call.apply(j_,arguments)}function l(t){if("number"="=typeof" t)return[t,t,t,t];var k(t,e){if(!t)throw new error(e)}function p(t){return null="=t?null:" function"="=typeof" t.trim?t.trim():t.replace( ^[\s\ufeff\xa0]+|[\s\ufeff\xa0]+$ g,"")}function n(t){t[ow]="!0}function" o(t){return t[ow]}function e(t){function e(t,e){i?n.set(t,e):n.set(e,t)}var instanceof e?t.each(e):t&&d(t,e)}function r(t){return e(t)}function z(t,e){for(var t.constructor(t.length+e.length),n="0;n<t.length;n++)i[n]=t[n];var" b(){}function v(t,e){var rw(2);return g(t,e){return t[0]="e[0],t[1]=e[1],t}function" f(t){var e[0]="t[0],e[1]=t[1],e}function" w(t,e,i){return h(t,e,i){return z(t,e,i,n){return u(t,e,i){return x(t){return math.sqrt(j(t))}function j(t){return t[0]*t[0]+t[1]*t[1]}function y(t,e,i){return q(t,e){var k(t,e){return math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))}function $(t,e){return(t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])}function j(t,e,i,n){return q(t,e,i){var tt(t,e,i){return et(t,e,i){return it(){this.on("mousedown",this._dragstart,this),this.on("mousemove",this._drag,this),this.on("mouseup",this._dragend,this),this.on("globalout",this._dragend,this)}function nt(t,e){return{target:t,toptarget:e&&e.toptarget}}function ot(t,e){var at(t,e,i,n,o,a){var i&&(o="n,n=i,i=null),!n||!e)return" t;i="ot(t,i),r[e]||(r[e]=[]);for(var" t;var l="{h:n,one:a,query:i,ctx:o||t,callAtLast:n.zrEventfulCallAtLast},u=r[e].length-1,h=r[e][u];return" h&&h.callatlast?r[e].splice(u,0,l):r[e].push(l),t}function rt(t){return t.getboundingclientrect?t.getboundingclientrect():{left:0,top:0}}function st(t,e,i,n){return lt(t,e,i){var ut(t,e,i){if(null!="(e=e||window.event).zrX)return" e;var>=0){var o="touchend"!==n?e.targetTouches[0]:e.changedTouches[0];o&&st(t,o,e,i)}else st(t,e,e,i),e.zrDelta=e.wheelDelta?e.wheelDelta/120:-(e.detail||0)/3;var a=e.button;return null==e.which&&void 0!==a&&gw.test(e.type)&&(e.which=1&a?1:2&a?3:4&a?2:0),e}function ht(t,e,i){pw?t.addEventListener(e,i):t.attachEvent("on"+e,i)}function ct(t,e,i){pw?t.removeEventListener(e,i):t.detachEvent("on"+e,i)}function dt(t){return 2===t.which||3===t.which}function ft(t){var e=t[1][0]-t[0][0],i=t[1][1]-t[0][1];return Math.sqrt(e*e+i*i)}function pt(t){return[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2]}function gt(t,e,i){return{type:t,event:i,target:e.target,topTarget:e.topTarget,cancelBubble:!1,offsetX:i.zrX,offsetY:i.zrY,gestureEvent:i.gestureEvent,pinchX:i.pinchX,pinchY:i.pinchY,pinchScale:i.pinchScale,wheelDelta:i.zrDelta,zrByTouch:i.zrByTouch,which:i.which,stop:mt}}function mt(t){mw(this.event)}function vt(){}function yt(t,e,i){if(t[t.rectHover?"rectContain":"contain"](e,i)){for(var n,o=t;o;){if(o.clipPath&&!o.clipPath.contain(e,i))return!1;o.silent&&(n=!0),o=o.parent}return!n||xw}return!1}function xt(){var t=new bw(6);return _t(t),t}function _t(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t}function wt(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t}function bt(t,e,i){var n=e[0]*i[0]+e[2]*i[1],o=e[1]*i[0]+e[3]*i[1],a=e[0]*i[2]+e[2]*i[3],r=e[1]*i[2]+e[3]*i[3],s=e[0]*i[4]+e[2]*i[5]+e[4],l=e[1]*i[4]+e[3]*i[5]+e[5];return t[0]=n,t[1]=o,t[2]=a,t[3]=r,t[4]=s,t[5]=l,t}function St(t,e,i){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4]+i[0],t[5]=e[5]+i[1],t}function Mt(t,e,i){var n=e[0],o=e[2],a=e[4],r=e[1],s=e[3],l=e[5],u=Math.sin(i),h=Math.cos(i);return t[0]=n*h+r*u,t[1]=-n*u+r*h,t[2]=o*h+s*u,t[3]=-o*u+h*s,t[4]=h*a+u*l,t[5]=h*l-u*a,t}function It(t,e,i){var n=i[0],o=i[1];return t[0]=e[0]*n,t[1]=e[1]*o,t[2]=e[2]*n,t[3]=e[3]*o,t[4]=e[4]*n,t[5]=e[5]*o,t}function Tt(t,e){var i=e[0],n=e[2],o=e[4],a=e[1],r=e[3],s=e[5],l=i*r-a*n;return l?(l=1/l,t[0]=r*l,t[1]=-a*l,t[2]=-n*l,t[3]=i*l,t[4]=(n*s-r*o)*l,t[5]=(a*o-i*s)*l,t):null}function At(t){var e=xt();return wt(e,t),e}function Dt(t){return t>Iw||t<-iw}function ct(t){this._target="t.target,this._life=t.life||1e3,this._delay=t.delay||0,this._initialized=!1,this.loop=null!=t.loop&&t.loop,this.gap=t.gap||0,this.easing=t.easing||" linear",this.onframe="t.onframe,this.ondestroy=t.ondestroy,this.onrestart=t.onrestart,this._pausedTime=0,this._paused=!1}function" " lt(t){return(t="Math.round(t))<0?0:t">255?255:t}function kt(t){return(t=Math.round(t))<0?0:t>360?360:t}function Pt(t){return t<0?0:t>1?1:t}function Nt(t){return Lt(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100*255:parseInt(t,10))}function Ot(t){return Pt(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100:parseFloat(t))}function Et(t,e,i){return i<0?i+=1:i>1&&(i-=1),6*i<1?t+(e-t)*i*6:2*i<1?e:3*i<2?t+(e-t)*(2 3-i)*6:t}function rt(t,e,i){return t+(e-t)*i}function zt(t,e,i,n,o){return t[0]="e,t[1]=i,t[2]=n,t[3]=o,t}function" bt(t,e){return vt(t,e){vw&&bt(vw,e),vw="Bw.put(t,Vw||e.slice())}function" gt(t,e){if(t){e="e||[];var" i="Bw.get(t);if(i)return" bt(e,i);var n="(t+=" ").replace( " g,"").tolowercase();if(n in zw)return bt(e,zw[n]),vt(t,e),e;if("#"!="=n.charAt(0)){var" o="n.indexOf(" ("),a="n.indexOf(" )");if(-1!="=o&&a+1===n.length){var""" r="n.substr(0,o),s=n.substr(o+1,a-(o+1)).split(" ,"),l="1;switch(r){case" rgba":if(4!="=s.length)return""" void zt(e,0,0,0,1);l="Ot(s.pop());case" rgb":return" 3!="=s.length?void" zt(e,0,0,0,1):(zt(e,nt(s[0]),nt(s[1]),nt(s[2]),l),vt(t,e),e);case"hsla":return 4!="=s.length?void" zt(e,0,0,0,1):(s[3]="Ot(s[3]),Ft(s,e),Vt(t,e),e);case" hsl":return" zt(e,0,0,0,1):(ft(s,e),vt(t,e),e);default:return}}zt(e,0,0,0,1)}else{if(4="==n.length)return(u=parseInt(n.substr(1),16))">=0&&u<=4095?(zt(e,(3840&u)>>4|(3840&u)>>8,240&u|(240&u)>>4,15&u|(15&u)<<4,1),vt(t,e),e):void zt(e,0,0,0,1);if(7="==n.length){var" u="parseInt(n.substr(1),16);return">=0&&u<=16777215?(zt(e,(16711680&u)>>16,(65280&u)>>8,255&u,1),Vt(t,e),e):void zt(e,0,0,0,1)}}}}function Ft(t,e){var i=(parseFloat(t[0])%360+360)%360/360,n=Ot(t[1]),o=Ot(t[2]),a=o<=.5?o*(n+1):o+n-o*n,r=2*o-a;return e="e||[],zt(e,Lt(255*Et(r,a,i+1/3)),Lt(255*Et(r,a,i)),Lt(255*Et(r,a,i-1/3)),1),4===t.length&&(e[3]=t[3]),e}function" wt(t){if(t){var e,i,n="t[0]/255,o=t[1]/255,a=t[2]/255,r=Math.min(n,o,a),s=Math.max(n,o,a),l=s-r,u=(s+r)/2;if(0===l)e=0,i=0;else{i=u<.5?l/(s+r):l/(2-s-r);var" h="((s-n)/6+l/2)/l,c=((s-o)/6+l/2)/l,d=((s-a)/6+l/2)/l;n===s?e=d-c:o===s?e=1/3+h-d:a===s&&(e=2/3+c-h),e<0&&(e+=1),e">1&&(e-=1)}var f=[360*e,i,u];return null!=t[3]&&f.push(t[3]),f}}function Ht(t,e){var i=Gt(t);if(i){for(var n=0;n<3;n++)i[n]=e<0?i[n]*(1-e)|0:(255-i[n])*e+i[n]|0,i[n]>255?i[n]=255:t[n]<0&&(i[n]=0);return qt(i,4="==i.length?" rgba":"rgb")}}function" zt(t){var e="Gt(t);if(e)return((1<<24)+(e[0]<<16)+(e[1]<<8)+" +e[2]).tostring(16).slice(1)}function ut(t,e,i){if(e&&e.length&&t>=0&&t<=1){i=i||[];var n="t*(e.length-1),o=Math.floor(n),a=Math.ceil(n),r=e[o],s=e[a],l=n-o;return" i[0]="Lt(Rt(r[0],s[0],l)),i[1]=Lt(Rt(r[1],s[1],l)),i[2]=Lt(Rt(r[2],s[2],l)),i[3]=Pt(Rt(r[3],s[3],l)),i}}function" xt(t,e,i){if(e&&e.length&&t>=0&&t<=1){var n="t*(e.length-1),o=Math.floor(n),a=Math.ceil(n),r=Gt(e[o]),s=Gt(e[a]),l=n-o,u=qt([Lt(Rt(r[0],s[0],l)),Lt(Rt(r[1],s[1],l)),Lt(Rt(r[2],s[2],l)),Pt(Rt(r[3],s[3],l))]," rgba");return" i?{color:u,leftindex:o,rightindex:a,value:n}:u}}function jt(t,e,i,n){if(t="Gt(t))return" t="Wt(t),null!=e&&(t[0]=kt(e)),null!=i&&(t[1]=Ot(i)),null!=n&&(t[2]=Ot(n)),qt(Ft(t)," rgba")}function" yt(t,e){if((t="Gt(t))&&null!=e)return" t[3]="Pt(e),qt(t," qt(t,e){if(t&&t.length){var i="t[0]+" ,"+t[1]+","+t[2];return"rgba"!="=e&&" hsva"!="=e&&"hsla"!==e||(i+=","+t[3]),e+"("+i+")"}}function""" kt(t,e){return t[e]}function $t(t,e,i){t[e]="i}function" jt(t,e,i){return(e-t)*i+t}function qt(t,e,i){return>.5?e:t}function te(t,e,i,n,o){var a=t.length;if(1===o)for(s=0;s<a;s++)n[s]=jt(t[s],e[s],i);else for(var r="a&&t[0].length,s=0;s<a;s++)for(var" l="0;l<r;l++)n[s][l]=Jt(t[s][l],e[s][l],i)}function" ee(t,e,i){var n="t.length,o=e.length;if(n!==o)if(n">o)t.length=o;else for(r=n;r<o;r++)t.push(1===i?e[r]:hw.call(e[r]));for(var a="t[0]&&t[0].length,r=0;r<t.length;r++)if(1===i)isNaN(t[r])&&(t[r]=e[r]);else" for(var s="0;s<a;s++)isNaN(t[r][s])&&(t[r][s]=e[r][s])}function" ie(t,e,i){if(t="==e)return!0;var" n="t.length;if(n!==e.length)return!1;if(1===i){for(a=0;a<n;a++)if(t[a]!==e[a])return!1}else" o="t[0].length,a=0;a<n;a++)for(var" r="0;r<o;r++)if(t[a][r]!==e[a][r])return!1;return!0}function" ne(t,e,i,n,o,a,r,s,l){var u="t.length;if(1===l)for(c=0;c<u;c++)s[c]=oe(t[c],e[c],i[c],n[c],o,a,r);else" h="t[0].length,c=0;c<u;c++)for(var" d="0;d<h;d++)s[c][d]=oe(t[c][d],e[c][d],i[c][d],n[c][d],o,a,r)}function" oe(t,e,i,n,o,a,r){var ae(t){if(c(t)){var e="t.length;if(c(t[0])){for(var" i="[],n=0;n<e;n++)i.push(Hw.call(t[n]));return" i}return hw.call(t)}return t}function re(t){return t[0]="Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.floor(t[2])," rgba("+t.join(",")+")"}function" se(t){var c(e&&e[0])?2:1}function le(t,e,i,n,o,a){var h,d="c(n[0].value),f=!1,p=!1,g=d?se(n):0;n.sort(function(t,e){return" t.time-e.time}),h="n[u-1].time;for(var" m="[],v=[],y=n[0].value,x=!0,_=0;_<u;_++){m.push(n[_].time/h);var" w="n[_].value;if(d&&ie(w,y,g)||!d&&w===y||(x=!1),y=w," string"="=typeof" " w){var b="Gt(w);b?(w=b,f=!0):p=!0}v.push(w)}if(a||!x){for(var" m,i,t,a,d,c,l="0,k=0;if(f)var" p="[0,0,0,0];var" ct({target:t._target,life:h,loop:t._loop,delay:t._delay,onframe:function(t,e){var i;if(e<0)i="0;else" if(e<k){for(i="M=Math.min(L+1,u-1);i">=0&&!(m[i]<=e);i--);i=math.min(i,u-2)}else{for(i=l;i<u&&!(m[i]>e);i++);i=Math.min(i-1,u-2)}L=i,k=e;var n=m[i+1]-m[i];if(0!==n)if(I=(e-m[i])/n,l)if(A=v[i],T=v[0===i?i:i-1],D=v[i>u-2?u-1:i+1],C=v[i>u-3?u-1:i+2],d)ne(T,A,D,C,I,I*I,I*I*I,r(t,o),g);else{if(f)a=ne(T,A,D,C,I,I*I,I*I*I,P,1),a=re(P);else{if(p)return Qt(A,D,I);a=oe(T,A,D,C,I,I*I,I*I*I)}s(t,o,a)}else if(d)te(v[i],v[i+1],I,r(t,o),g);else{var a;if(f)te(v[i],v[i+1],I,P,1),a=re(P);else{if(p)return Qt(v[i],v[i+1],I);a=Jt(v[i],v[i+1],I)}s(t,o,a)}},ondestroy:i});return e&&"spline"!==e&&(N.easing=e),N}}}function ue(t,e,i,n,o,a,r,s){_(n)?(a=o,o=n,n=0):x(o)?(a=o,o="linear",n=0):x(n)?(a=n,n=0):x(i)?(a=i,i=500):i||(i=500),t.stopAnimation(),he(t,"",t,e,i,n,s);var l=t.animators.slice(),u=l.length;u||a&&a();for(var h=0;h<l.length;h++)l[h].done(function(){--u||a&&a()}).start(o,r)}function he(t,e,i,n,o,a,r){var s="{},l=0;for(var" u in n)n.hasownproperty(u)&&(null!="i[u]?w(n[u])&&!c(n[u])?he(t,e?e+" ."+u:u,i[u],n[u],o,a,r):(r?(s[u]="i[u],ce(t,e,u,n[u])):s[u]=n[u],l++):null==n[u]||r||ce(t,e,u,n[u]));l" ">0&&t.animate(e,!1).when(null==o?500:o,s).delay(a||0)}function ce(t,e,i,n){if(e){var o={};o[e]={},o[e][i]=n,t.attr(o)}else t.attr(i,n)}function de(t,e,i,n){i<0&&(t+=i,i=-i),n<0&&(e+=n,n=-n),this.x=t,this.y=e,this.width=i,this.height=n}function fe(t){for(var e="0;t">=eb;)e|=1&t,t>>=1;return t+e}function pe(t,e,i,n){var o=e+1;if(o===i)return 1;if(n(t[o++],t[e])<0){for(;o<i&&n(t[o],t[o-1])<0;)o++;ge(t,e,o)}else for(;o<i&&n(t[o],t[o-1])>=0;)o++;return o-e}function ge(t,e,i){for(i--;e<i;){var n="t[e];t[e++]=t[i],t[i--]=n}}function" me(t,e,i,n,o){for(n="==e&&n++;n<i;n++){for(var" a,r="t[n],s=e,l=n;s<l;)o(r,t[a=s+l">>>1])<0?l=a:s=a+1;var u="n-s;switch(u){case" 3:t[s+3]="t[s+2];case" 2:t[s+2]="t[s+1];case" 1:t[s+1]="t[s];break;default:for(;u">0;)t[s+u]=t[s+u-1],u--}t[s]=r}}function ve(t,e,i,n,o,a){var r=0,s=0,l=1;if(a(t,e[i+o])>0){for(s=n-o;l<s&&a(t,e[i+o+l])>0;)r=l,(l=1+(l<<1))<=0&&(l=s);l>s&&(l=s),r+=o,l+=o}else{for(s=o+1;l<s&&a(t,e[i+o-l])<=0;)r=l,(l=1+(l<<1))<=0&&(l=s);l>s&&(l=s);var u=r;r=o-l,l=o-u}for(r++;r<l;){var h="r+(l-r">>>1);a(t,e[i+h])>0?r=h+1:l=h}return l}function ye(t,e,i,n,o,a){var r=0,s=0,l=1;if(a(t,e[i+o])<0){for(s=o+1;l<s&&a(t,e[i+o-l])<0;)r=l,(l=1+(l<<1))<=0&&(l=s);l>s&&(l=s);var u=r;r=o-l,l=o-u}else{for(s=n-o;l<s&&a(t,e[i+o+l])>=0;)r=l,(l=1+(l<<1))<=0&&(l=s);l>s&&(l=s),r+=o,l+=o}for(r++;r<l;){var h="r+(l-r">>>1);a(t,e[i+h])<0?l=h:r=h+1}return l}function xe(t,e){function i(i){var s="a[i],u=r[i],h=a[i+1],c=r[i+1];r[i]=u+c,i===l-3&&(a[i+1]=a[i+2],r[i+1]=r[i+2]),l--;var" d="ye(t[h],t,s,u,0,e);s+=d,0!==(u-=d)&&0!==(c=ve(t[s+u-1],t,h,c,c-1,e))&&(u<=c?n(s,u,h,c):o(s,u,h,c))}function" n(i,n,o,a){var r="0;for(r=0;r<n;r++)u[r]=t[i+r];var" l="0,h=o,c=i;if(t[c++]=t[h++],0!=--a)if(1!==n){for(var" d,f,p,g="s;;){d=0,f=0,p=!1;do{if(e(t[h],u[l])<0){if(t[c++]=t[h++],f++,d=0,0==--a){p=!0;break}}else" if(t[c++]="u[l++],d++,f=0,1==--n){p=!0;break}}while((d|f)<g);if(p)break;do{if(0!==(d=ye(t[h],u,l,n,0,e))){for(r=0;r<d;r++)t[c+r]=u[l+r];if(c+=d,l+=d,(n-=d)<=1){p=!0;break}}if(t[c++]=t[h++],0==--a){p=!0;break}if(0!==(f=ve(u[l],t,h,a,0,e))){for(r=0;r<f;r++)t[c+r]=t[h+r];if(c+=f,h+=f,0===(a-=f)){p=!0;break}}if(t[c++]=u[l++],1==--n){p=!0;break}g--}while(d">=ib||f>=ib);if(p)break;g<0&&(g=0),g+=2}if((s=g)<1&&(s=1),1===n){for(r=0;r<a;r++)t[c+r]=t[h+r];t[c+a]=u[l]}else{if(0===n)throw new error;for(r="0;r<n;r++)t[c+r]=u[l+r]}}else{for(r=0;r<a;r++)t[c+r]=t[h+r];t[c+a]=u[l]}else" for(r="0;r<n;r++)t[c+r]=u[l+r]}function" o(i,n,o,a){var r="0;for(r=0;r<a;r++)u[r]=t[o+r];var" l="i+n-1,h=a-1,c=o+a-1,d=0,f=0;if(t[c--]=t[l--],0!=--n)if(1!==a){for(var" p="s;;){var" g="0,m=0,v=!1;do{if(e(u[h],t[l])<0){if(t[c--]=t[l--],g++,m=0,0==--n){v=!0;break}}else" if(t[c--]="u[h--],m++,g=0,1==--a){v=!0;break}}while((g|m)<p);if(v)break;do{if(0!=(g=n-ye(u[h],t,i,n,n-1,e))){for(n-=g,f=(c-=g)+1,d=(l-=g)+1,r=g-1;r">=0;r--)t[f+r]=t[d+r];if(0===n){v=!0;break}}if(t[c--]=u[h--],1==--a){v=!0;break}if(0!=(m=a-ve(t[l],u,0,a,a-1,e))){for(a-=m,f=(c-=m)+1,d=(h-=m)+1,r=0;r<m;r++)t[f+r]=u[d+r];if(a<=1){v=!0;break}}if(t[c--]=t[l--],0==--n){v=!0;break}p--}while(g>=ib||m>=ib);if(v)break;p<0&&(p=0),p+=2}if((s=p)<1&&(s=1),1===a){for(f=(c-=n)+1,d=(l-=n)+1,r=n-1;r>=0;r--)t[f+r]=t[d+r];t[c]=u[h]}else{if(0===a)throw new Error;for(d=c-(a-1),r=0;r<a;r++)t[d+r]=u[r]}}else{for(f=(c-=n)+1,d=(l-=n)+1,r=n-1;r>=0;r--)t[f+r]=t[d+r];t[c]=u[h]}else for(d=c-(a-1),r=0;r<a;r++)t[d+r]=u[r]}var a,r,s="ib,l=0,u=[];a=[],r=[],this.mergeRuns=function(){for(;l">1;){var t=l-2;if(t>=1&&r[t-1]<=r[t]+r[t+1]||t>=2&&r[t-2]<=r[t]+r[t-1])r[t-1]<r[t+1]&&t--;else if(r[t]>r[t+1])break;i(t)}},this.forceMergeRuns=function(){for(;l>1;){var t=l-2;t>0&&r[t-1]<r[t+1]&&t--,i(t)}},this.pushrun=function(t,e){a[l]=t,r[l]=e,l+=1}}function _e(t,e,i,n){i||(i="0),n||(n=t.length);var" o="n-i;if(!(o<2)){var" a="0;if(o<eb)return" me(t,i,n,i+a,e);var r="new" xe(t,e),s="fe(o);do{if((a=pe(t,i,n,e))<s){var" l="o;l">s&&(l=s),me(t,i,i+l,i+a,e),a=l}r.pushRun(i,a),r.mergeRuns(),o-=a,i+=a}while(0!==o);r.forceMergeRuns()}}function we(t,e){return t.zlevel===e.zlevel?t.z===e.z?t.z2-e.z2:t.z-e.z:t.zlevel-e.zlevel}function be(t,e,i){var n=null==e.x?0:e.x,o=null==e.x2?1:e.x2,a=null==e.y?0:e.y,r=null==e.y2?0:e.y2;return e.global||(n=n*i.width+i.x,o=o*i.width+i.x,a=a*i.height+i.y,r=r*i.height+i.y),n=isNaN(n)?0:n,o=isNaN(o)?1:o,a=isNaN(a)?0:a,r=isNaN(r)?0:r,t.createLinearGradient(n,a,o,r)}function Se(t,e,i){var n=i.width,o=i.height,a=Math.min(n,o),r=null==e.x?.5:e.x,s=null==e.y?.5:e.y,l=null==e.r?.5:e.r;return e.global||(r=r*n+i.x,s=s*o+i.y,l*=a),t.createRadialGradient(r,s,0,r,s,l)}function Me(){return!1}function Ie(t,e,i){var n=iw(),o=e.getWidth(),a=e.getHeight(),r=n.style;return r&&(r.position="absolute",r.left=0,r.top=0,r.width=o+"px",r.height=a+"px",n.setAttribute("data-zr-dom-id",t)),n.width=o*i,n.height=a*i,n}function Te(t){if("string"==typeof t){var e=mb.get(t);return e&&e.image}return t}function Ae(t,e,i,n,o){if(t){if("string"==typeof t){if(e&&e.__zrImageSrc===t||!i)return e;var a=mb.get(t),r={hostEl:i,cb:n,cbPayload:o};return a?!Ce(e=a.image)&&a.pending.push(r):((e=new Image).onload=e.onerror=De,mb.put(t,e.__cachedImgObj={image:e,pending:[r]}),e.src=e.__zrImageSrc=t),e}return t}return e}function De(){var t=this.__cachedImgObj;this.onload=this.onerror=this.__cachedImgObj=null;for(var e=0;e<t.pending.length;e++){var i="t.pending[e],n=i.cb;n&&n(this,i.cbPayload),i.hostEl.dirty()}t.pending.length=0}function" ce(t){return t&&t.width&&t.height}function le(t,e){var vb[i];for(var n="(t+" ").split("\n"),o="0,a=0,r=n.length;a<r;a++)o=Math.max(We(n[a],e).width,o);return" " yb>xb&&(yb=0,vb={}),yb++,vb[i]=o,o}function ke(t,e,i,n,o,a,r,s){return r?Ne(t,e,i,n,o,r,a,s):Pe(t,e,i,n,o,a,s)}function Pe(t,e,i,n,o,a,r){var s=He(t,e,o,a,r),l=Le(t,e);o&&(l+=o[1]+o[3]);var u=s.outerHeight,h=new de(Oe(0,l,i),Ee(0,u,n),l,u);return h.lineHeight=s.lineHeight,h}function Ne(t,e,i,n,o,a,r,s){var l=Ze(t,{rich:r,truncate:s,font:e,textAlign:i,textPadding:o,textLineHeight:a}),u=l.outerWidth,h=l.outerHeight;return new de(Oe(0,u,i),Ee(0,h,n),u,h)}function Oe(t,e,i){return"right"===i?t-=e:"center"===i&&(t-=e/2),t}function Ee(t,e,i){return"middle"===i?t-=e/2:"bottom"===i&&(t-=e),t}function Re(t,e,i){var n=e.x,o=e.y,a=e.height,r=e.width,s=a/2,l="left",u="top";switch(t){case"left":n-=i,o+=s,l="right",u="middle";break;case"right":n+=i+r,o+=s,u="middle";break;case"top":n+=r/2,o-=i,l="center",u="bottom";break;case"bottom":n+=r/2,o+=a+i,l="center";break;case"inside":n+=r/2,o+=s,l="center",u="middle";break;case"insideLeft":n+=i,o+=s,u="middle";break;case"insideRight":n+=r-i,o+=s,l="right",u="middle";break;case"insideTop":n+=r/2,o+=i,l="center";break;case"insideBottom":n+=r/2,o+=a-i,l="center",u="bottom";break;case"insideTopLeft":n+=i,o+=i;break;case"insideTopRight":n+=r-i,o+=i,l="right";break;case"insideBottomLeft":n+=i,o+=a-i,u="bottom";break;case"insideBottomRight":n+=r-i,o+=a-i,l="right",u="bottom"}return{x:n,y:o,textAlign:l,textVerticalAlign:u}}function ze(t,e,i,n,o){if(!e)return"";var a=(t+"").split("\n");o=Be(e,i,n,o);for(var r=0,s=a.length;r<s;r++)a[r]=ve(a[r],o);return a.join("\n")}function be(t,e,i,n){(n="a({},n)).font=e;var" i="A(i," ...");n.maxiterations="A(n.maxIterations,2);var" " o="n.minChar=A(n.minChar,0);n.cnCharWidth=Le(" 国",e);var" r="n.ascCharWidth=Le(" a",e);n.placeholder="A(n.placeholder," ");for(var"" s="t=Math.max(0,t-1),l=0;l<o&&s">=r;l++)s-=r;var u=Le(i,e);return u>s&&(i="",u=0),s=t-u,n.ellipsis=i,n.ellipsisWidth=u,n.contentWidth=s,n.containerWidth=t,n}function Ve(t,e){var i=e.containerWidth,n=e.font,o=e.contentWidth;if(!i)return"";var a=Le(t,n);if(a<=i)return t;for(var r="0;;r++){if(a<=o||r">=e.maxIterations){t+=e.ellipsis;break}var s=0===r?Ge(t,o,e.ascCharWidth,e.cnCharWidth):a>0?Math.floor(t.length*o/a):0;a=Le(t=t.substr(0,s),n)}return""===t&&(t=e.placeholder),t}function Ge(t,e,i,n){for(var o=0,a=0,r=t.length;a<r&&o<e;a++){var s="t.charCodeAt(a);o+=0<=s&&s<=127?i:n}return" a}function fe(t){return le("国",t)}function we(t,e){return bb.measuretext(t,e)}function he(t,e,i,n,o){null!="t&&(t+=" ");var" a="A(n,Fe(e)),r=t?t.split(" \n"):[],s="r.length*a,l=s;if(i&&(l+=i[0]+i[2]),t&&o){var" " u="o.outerHeight,h=o.outerWidth;if(null!=u&&l">u)t="",r=[];else if(null!=h)for(var c=Be(h-(i?i[1]+i[3]:0),e,o.ellipsis,{minChar:o.minChar,placeholder:o.placeholder}),d=0,f=r.length;d<f;d++)r[d]=ve(r[d],c)}return{lines:r,height:s,outerheight:l,lineheight:a}}function ze(t,e){var i="{lines:[],width:0,height:0};if(null!=t&&(t+=" "),!t)return" i;for(var n,o="_b.lastIndex=0;null!=(n=_b.exec(t));){var" a="n.index;a">o&&Ue(i,t.substring(o,a)),Ue(i,n[2],n[1]),o=_b.lastIndex}o<t.length&&ue(i,t.substring(o,t.length));var r="i.lines,s=0,l=0,u=[],h=e.textPadding,c=e.truncate,d=c&&c.outerWidth,f=c&&c.outerHeight;h&&(null!=d&&(d-=h[1]+h[3]),null!=f&&(f-=h[0]+h[2]));for(L=0;L<r.length;L++){for(var" p="r[L],g=0,m=0,v=0;v<p.tokens.length;v++){var" y="(k=p.tokens[v]).styleName&&e.rich[k.styleName]||{},x=k.textPadding=y.textPadding,_=k.font=y.font||e.font,w=k.textHeight=A(y.textHeight,Fe(_));if(x&&(w+=x[0]+x[2]),k.height=w,k.lineHeight=D(y.textLineHeight,e.textLineHeight,w),k.textAlign=y&&y.textAlign||e.textAlign,k.textVerticalAlign=y&&y.textVerticalAlign||" middle",null!="f&&s+k.lineHeight" ">f)return{lines:[],width:0,height:0};k.textWidth=Le(k.text,_);var b=y.textWidth,S=null==b||"auto"===b;if("string"==typeof b&&"%"===b.charAt(b.length-1))k.percentWidth=b,u.push(k),b=0;else{if(S){b=k.textWidth;var M=y.textBackgroundColor,I=M&&M.image;I&&Ce(I=Te(I))&&(b=Math.max(b,I.width*w/I.height))}var T=x?x[1]+x[3]:0;b+=T;var C=null!=d?d-m:null;null!=C&&C<b&&(!s||c<t?(k.text="",k.textwidth=b=0):(k.text=ze(k.text,c-t,_,c.ellipsis,{minchar:c.minchar}),k.textwidth=le(k.text,_),b=k.textwidth+t))}m+=k.width=b,y&&(g=math.max(g,k.lineheight))}p.width=m,p.lineheight=g,s+=g,l=math.max(l,m)}i.outerwidth=i.width=a(e.textwidth,l),i.outerheight=i.height=a(e.textheight,s),h&&(i.outerwidth+=h[1]+h[3],i.outerheight+=h[0]+h[2]);for(var l="0;L<u.length;L++){var" k="u[L],P=k.percentWidth;k.width=parseInt(P,10)/100*l}return" i}function ue(t,e,i){for(var n="=" =e,o="e.split("\n"),a=t.lines,r=0;r<o.length;r++){var""" s="o[r],l={styleName:i,text:s,isLineHolder:!s&&!n};if(r)a.push({tokens:[l]});else{var" u="(a[a.length-1]||(a[0]={tokens:[]})).tokens,h=u.length;1===h&&u[0].isLineHolder?u[0]=l:(s||!h||n)&&u.push(l)}}}function" xe(t){var e="(t.fontSize||t.fontFamily)&&[t.fontStyle,t.fontWeight,(t.fontSize||12)+" px",t.fontfamily||"sans-serif"].join("" ");return e&&p(e)||t.textfont||t.font}function je(t,e){var i,n,o,a,r="e.x,s=e.y,l=e.width,u=e.height,h=e.r;l<0&&(r+=l,l=-l),u<0&&(s+=u,u=-u)," number"="=typeof" " h?i="n=o=a=h:h" instanceof array?1="==h.length?i=n=o=a=h[0]:2===h.length?(i=o=h[0],n=a=h[1]):3===h.length?(i=h[0],n=a=h[1],o=h[2]):(i=h[0],n=h[1],o=h[2],a=h[3]):i=n=o=a=0;var" c;i+n>l&&(i*=l/(c=i+n),n*=l/c),o+a>l&&(o*=l/(c=o+a),a*=l/c),n+o>u&&(n*=u/(c=n+o),o*=u/c),i+a>u&&(i*=u/(c=i+a),a*=u/c),t.moveTo(r+i,s),t.lineTo(r+l-n,s),0!==n&&t.arc(r+l-n,s+n,n,-Math.PI/2,0),t.lineTo(r+l,s+u-o),0!==o&&t.arc(r+l-o,s+u-o,o,0,Math.PI/2),t.lineTo(r+a,s+u),0!==a&&t.arc(r+a,s+u-a,a,Math.PI/2,Math.PI),t.lineTo(r,s+i),0!==i&&t.arc(r+i,s+i,i,Math.PI,1.5*Math.PI)}function Ye(t){return qe(t),d(t.rich,qe),t}function qe(t){if(t){t.font=Xe(t);var e=t.textAlign;"middle"===e&&(e="center"),t.textAlign=null==e||Mb[e]?e:"left";var i=t.textVerticalAlign||t.textBaseline;"center"===i&&(i="middle"),t.textVerticalAlign=null==i||Ib[i]?i:"top",t.textPadding&&(t.textPadding=L(t.textPadding))}}function Ke(t,e,i,n,o,a){n.rich?Je(t,e,i,n,o,a):$e(t,e,i,n,o,a)}function $e(t,e,i,n,o,a){var r,s=ii(n),l=!1,u=e.__attrCachedBy===rb.PLAIN_TEXT;a!==sb?(a&&(r=a.style,l=!s&&u&&r),e.__attrCachedBy=s?rb.NONE:rb.PLAIN_TEXT):u&&(e.__attrCachedBy=rb.NONE);var h=n.font||Sb;l&&h===(r.font||Sb)||(e.font=h);var c=t.__computedFont;t.__styleFont!==h&&(t.__styleFont=h,c=t.__computedFont=e.font);var d=n.textPadding,f=n.textLineHeight,p=t.__textCotentBlock;p&&!t.__dirtyText||(p=t.__textCotentBlock=He(i,c,d,f,n.truncate));var g=p.outerHeight,m=p.lines,v=p.lineHeight,y=ai(g,n,o),x=y.baseX,_=y.baseY,w=y.textAlign||"left",b=y.textVerticalAlign;ti(e,n,o,x,_);var S=Ee(_,g,b),M=x,I=S;if(s||d){var T=Le(i,c);d&&(T+=d[1]+d[3]);var A=Oe(x,T,w);s&&ni(t,e,n,A,S,T,g),d&&(M=hi(x,w,d),I+=d[0])}e.textAlign=w,e.textBaseline="middle",e.globalAlpha=n.opacity||1;for(B=0;B<tb.length;b++){var d="Tb[B],C=D[0],L=D[1],k=n[C];l&&k===r[C]||(e[L]=ab(e,L,k||D[2]))}I+=v/2;var" p="n.textStrokeWidth,N=l?r.textStrokeWidth:null,O=!l||P!==N,E=!l||O||n.textStroke!==r.textStroke,R=si(n.textStroke,P),z=li(n.textFill);if(R&&(O&&(e.lineWidth=P),E&&(e.strokeStyle=R)),z&&(l&&n.textFill===r.textFill||(e.fillStyle=z)),1===m.length)R&&e.strokeText(m[0],M,I),z&&e.fillText(m[0],M,I);else" for(var b="0;B<m.length;B++)R&&e.strokeText(m[B],M,I),z&&e.fillText(m[B],M,I),I+=v}function" je(t,e,i,n,o,a){a!="=sb&&(e.__attrCachedBy=rb.NONE);var" r="t.__textCotentBlock;r&&!t.__dirtyText||(r=t.__textCotentBlock=Ze(i,n)),Qe(t,e,r,n,o)}function" qe(t,e,i,n,o){var a="i.width,r=i.outerWidth,s=i.outerHeight,l=n.textPadding,u=ai(s,n,o),h=u.baseX,c=u.baseY,d=u.textAlign,f=u.textVerticalAlign;ti(e,n,o,h,c);var" y="m+a;ii(n)&&ni(t,e,n,p,g,r,s);for(var" x="0;x<i.lines.length;x++){for(var" _,w="i.lines[x],b=w.tokens,S=b.length,M=w.lineHeight,I=w.width,T=0,A=m,D=y,C=S-1;T<S&&(!(_=b[T]).textAlign||" left"="==_.textAlign);)ei(t,e,_,n,M,v,A," left"),i-="_.width,A+=_.width,T++;for(;C""">=0&&"right"===(_=b[C]).textAlign;)ei(t,e,_,n,M,v,D,"right"),I-=_.width,D-=_.width,C--;for(A+=(a-(A-m)-(y-D)-I)/2;T<=c;)ei(t,e,_=b[t],n,m,v,a+_.width 2,"center"),a+="_.width,T++;v+=M}}function" ti(t,e,i,n,o){if(i&&e.textrotation){var a="e.textOrigin;" center"="==a?(n=i.width/2+i.x,o=i.height/2+i.y):a&&(n=a[0]+i.x,o=a[1]+i.y),t.translate(n,o),t.rotate(-e.textRotation),t.translate(-n,-o)}}function" " ei(t,e,i,n,o,a,r,s){var l="n.rich[i.styleName]||{};l.text=i.text;var" u="i.textVerticalAlign,h=a+o/2;" top"="==u?h=a+i.height/2:" bottom"="==u&&(h=a+o-i.height/2),!i.isLineHolder&&ii(l)&&ni(t,e,l,"right"===s?r-i.width:"center"===s?r-i.width/2:r,h-i.height/2,i.width,i.height);var""" c="i.textPadding;c&&(r=hi(r,s,c),h-=i.height/2-c[2]-i.textHeight/2),ri(e," shadowblur",d(l.textshadowblur,n.textshadowblur,0)),ri(e,"shadowcolor",l.textshadowcolor||n.textshadowcolor||"transparent"),ri(e,"shadowoffsetx",d(l.textshadowoffsetx,n.textshadowoffsetx,0)),ri(e,"shadowoffsety",d(l.textshadowoffsety,n.textshadowoffsety,0)),ri(e,"textalign",s),ri(e,"textbaseline","middle"),ri(e,"font",i.font||sb);var" d="si(l.textStroke||n.textStroke,p),f=li(l.textFill||n.textFill),p=A(l.textStrokeWidth,n.textStrokeWidth);d&&(ri(e," linewidth",p),ri(e,"strokestyle",d),e.stroketext(i.text,r,h)),f&&(ri(e,"fillstyle",f),e.filltext(i.text,r,h))}function" ii(t){return!!(t.textbackgroundcolor||t.textborderwidth&&t.textbordercolor)}function ni(t,e,i,n,o,a,r){var s="i.textBackgroundColor,l=i.textBorderWidth,u=i.textBorderColor,h=_(s);if(ri(e," shadowblur",i.textboxshadowblur||0),ri(e,"shadowcolor",i.textboxshadowcolor||"transparent"),ri(e,"shadowoffsetx",i.textboxshadowoffsetx||0),ri(e,"shadowoffsety",i.textboxshadowoffsety||0),h||l&&u){e.beginpath();var" e.fill();else if(w(s)){var f="e.globalAlpha;e.globalAlpha=i.strokeOpacity*i.opacity,e.stroke(),e.globalAlpha=f}else" e.stroke()}function oi(t,e){e.image="t}function" ai(t,e,i){var n="e.x||0,o=e.y||0,a=e.textAlign,r=e.textVerticalAlign;if(i){var" instanceof array)n="i.x+ui(s[0],i.width),o=i.y+ui(s[1],i.height);else{var" ri(t,e,i){return t[e]="ab(t,e,i),t[e]}function" si(t,e){return null="=t||e<=0||" transparent"="==t||" none"="==t?null:t.image||t.colorStops?"#000":t}function""" li(t){return ui(t,e){return"string"="=typeof" t?t.lastindexof("%")>=0?parseFloat(t)/100*e:parseFloat(t):t}function hi(t,e,i){return"right"===e?t-i[1]:"center"===e?t+i[3]/2-i[1]/2:t+i[3]}function ci(t,e){return null!=t&&(t||e.textBackgroundColor||e.textBorderWidth&&e.textBorderColor||e.textPadding)}function di(t){t=t||{},Kw.call(this,t);for(var e in t)t.hasOwnProperty(e)&&"style"!==e&&(this[e]=t[e]);this.style=new ub(t.style,this),this._rect=null,this.__clipPaths=[]}function fi(t){di.call(this,t)}function pi(t){return parseInt(t,10)}function gi(t){return!!t&&(!!t.__builtin__||"function"==typeof t.resize&&"function"==typeof t.refresh)}function mi(t,e,i){return Cb.copy(t.getBoundingRect()),t.transform&&Cb.applyTransform(t.transform),Lb.width=e,Lb.height=i,!Cb.intersect(Lb)}function vi(t,e){if(t===e)return!1;if(!t||!e||t.length!==e.length)return!0;for(var i=0;i<t.length;i++)if(t[i]!==e[i])return!0}function yi(t,e){for(var i="0;i<t.length;i++){var" n="t[i];n.setTransform(e),e.beginPath(),n.buildPath(e,n.shape),e.clip(),n.restoreTransform(e)}}function" xi(t,e){var i.style.csstext="[" position:relative","overflow:hidden","width:"+t+"px","height:"+e+"px","padding:0","margin:0","border-width:0"].join(";")+";",i}function" _i(t){return"mousewheel"="==t&&U_.browser.firefox?" dommousescroll":t}function" wi(t){t._touching="!0,clearTimeout(t._touchTimer),t._touchTimer=setTimeout(function(){t._touching=!1},700)}function" bi(t){var e="t.pointerType;return" pen"="==e||" touch"="==e}function""" si(t){function e(t,e){return function(){if(!e._touching)return t.apply(e,arguments)}}d(ob,function(e){t._handlers[e]="m(zb[e],t)}),d(Rb,function(e){t._handlers[e]=m(zb[e],t)}),d(Nb,function(i){t._handlers[i]=e(zb[i],t)})}function" mi(t){function e(e,i){d(e,function(e){ht(t,_i(e),i._handlers[e])},i)}fw.call(this),this.dom="t,this._touching=!1,this._touchTimer,this._handlers={},Si(this),U_.pointerEventsSupported?e(Rb,this):(U_.touchEventsSupported&&e(Ob,this),e(Nb,this))}function" ii(t,e){var wb(h_(),t,e);return fb[i.id]="i,i}function" ti(t,e){gb[t]="e}function" ai(t){delete fb[t]}function di(t){return t instanceof array?t:null="=t?[]:[t]}function" ci(t,e,i){if(t){t[e]="t[e]||{},t.emphasis=t.emphasis||{},t.emphasis[e]=t.emphasis[e]||{};for(var" a="i[n];!t.emphasis[e].hasOwnProperty(a)&&t[e].hasOwnProperty(a)&&(t.emphasis[e][a]=t[e][a])}}}function" li(t){return!ub(t)||xb(t)||t date?t:t.value}function ki(t){return ub(t)&&!(t array)}function pi(t,e){e="(e||[]).slice();var" zb(e,function(t,n){if(ub(t)){for(o="0;o<i.length;o++)if(!i[o].option&&null!=t.id&&i[o].exist.id===t.id+" ")return" i[o].option="t,void(e[n]=null);for(var" o="0;o<i.length;o++){var">=i.length&&i.push({option:t})}}),i}function Ni(t){var e=R();Zb(t,function(t,i){var n=t.exist;n&&e.set(n.id,t)}),Zb(t,function(t,i){var n=t.option;k(!n||null==n.id||!e.get(n.id)||e.get(n.id)===t,"id duplicates: "+(n&&n.id)),n&&null!=n.id&&e.set(n.id,t),!t.keyInfo&&(t.keyInfo={})}),Zb(t,function(t,i){var n=t.exist,o=t.option,a=t.keyInfo;if(Ub(o)){if(a.name=null!=o.name?o.name+"":n?n.name:jb+i,n)a.id=n.id;else if(null!=o.id)a.id=o.id+"";else{var r=0;do{a.id="\0"+a.name+"\0"+r++}while(e.get(a.id))}e.set(a.id,t)}})}function Oi(t){var e=t.name;return!(!e||!e.indexOf(jb))}function Ei(t){return Ub(t)&&t.id&&0===(t.id+"").indexOf("\0_ec_\0")}function Ri(t,e){function i(t,e,i){for(var n=0,o=t.length;n<o;n++)for(var a="t[n].seriesId,r=Di(t[n].dataIndex),s=i&&i[a],l=0,u=r.length;l<u;l++){var" h="r[l];s&&s[h]?s[h]=null:(e[a]||(e[a]={}))[h]=1}}function" n(t,e){var i="[];for(var" o in t)if(t.hasownproperty(o)&&null!="t[o])if(e)i.push(+o);else{var" i}var i(t||[],o),i(e||[],a,o),[n(o),n(a)]}function zi(t,e){return null!="e.dataIndexInside?e.dataIndexInside:null!=e.dataIndex?y(e.dataIndex)?f(e.dataIndex,function(e){return" t.indexofrawindex(e)}):t.indexofrawindex(e.dataindex):null!="e.name?y(e.name)?f(e.name,function(e){return" t.indexofname(e)}):t.indexofname(e.name):void 0}function bi(){var t="__\0ec_inner_" +qb+++"_"+math.random().tofixed(5);return function(e){return e[t]||(e[t]="{})}}function" vi(t,e,i){if(_(e)){var n="{};n[e+" index"]="0,e=n}var" " zb(e,function(n,o){var r="o.match(/^(\w+)(Index|Id|Name)$/)||[],s=r[1],u=(r[2]||" ").tolowercase();if(!(!s||!u||null="=n||" index"="==u&&"none"===n||i&&i.includeMainTypes&&l(i.includeMainTypes,s)<0)){var""" c="t.queryComponents(h);a[s+" models"]="c,a[s+" model"]="c[0]}}else""" a[o]="n}),a}function" gi(t,e){return t&&t.hasownproperty(e)}function fi(t,e,i){t.setattribute?t.setattribute(e,i):t[e]="i}function" wi(t,e){return t.getattribute?t.getattribute(e):t[e]}function hi(t){return"auto"="==t?U_.domSupported?" html":"richtext":t||"html"}function" zi(t){var e="{main:" ",sub:""};return" t&&(t="t.split(Kb),e.main=t[0]||" ",e.sub="t[1]||" "),e}function"" ui(t){k( ^[a-za-z0-9_]+([.][a-za-z0-9_]+)?$ .test(t),'componenttype "'+t+'" illegal')}function xi(t,e){t.$constructor="t,t.extend=function(t){var" a(i.prototype,t),i.extend="this.extend,i.superCall=Yi,i.superApply=qi,u(i,this),i.superClass=e,i}}function" ji(t){var yi(t,e){var this.superclass.prototype[e].apply(t,i)}function qi(t,e,i){return ki(t,e){function i(t){var e&&e[$b]||((e="n[t.main]={})[$b]=!0),e}e=e||{};var" e&&(ui(e),(e="Zi(e)).sub?e.sub!==$b&&(i(e)[e.sub]=t):n[e.main]=t),t},t.getClass=function(t,e,i){var" new error(e?"component "+t+"."+(e||"")+" not exists. load it first.":t+".type should be specified.");return o},t.getclassesbymaintype="function(t){t=Zi(t);var" i&&i[$b]?d(i,function(t,i){i!="=$b&&e.push(t)}):e.push(i),e},t.hasClass=function(t){return" d(n,function(e,i){t.push(i)}),t},t.hassubtypes="function(t){t=Zi(t);var" e&&e[$b]},t.parseclasstype="Zi,e.registerWhenExtend){var" t.registerclass(i,e.type)})}return t}function $i(t){return>-rS&&t<rs}function ji(t){return t>rS||t<-rs}function qi(t,e,i,n,o){var a="1-o;return" a*a*(a*t+3*o*e)+o*o*(o*n+3*a*i)}function tn(t,e,i,n,o){var 3*(((e-t)*a+2*(i-e)*o)*a+(n-i)*o*o)}function en(t,e,i,n,o,a){var r="n+3*(e-i)-t,s=3*(i-2*e+t),l=3*(e-t),u=t-o,h=s*s-3*r*l,c=s*l-9*r*u,d=l*l-3*s*u,f=0;if($i(h)&&$i(c))$i(s)?a[0]=0:(M=-l/s)">=0&&M<=1&&(a[f++]=m);else{var p="c*c-4*h*d;if($i(p)){var" g="c/h,m=-g/2;(M=-s/r+g)">=0&&M<=1&&(a[f++]=m),m>=0&&m<=1&&(a[f++]=m)}else if(p>0){var v=aS(p),y=h*s+1.5*r*(-c+v),x=h*s+1.5*r*(-c-v);(M=(-s-((y=y<0?-os(-y,us):os(y,us))+(x=x<0?-os(-x,us):os(x,us)))) (3*r))>=0&&M<=1&&(a[f++]=m)}else{var _="(2*h*s-3*r*c)/(2*aS(h*h*h)),w=Math.acos(_)/3,b=aS(h),S=Math.cos(w),M=(-s-2*b*S)/(3*r),m=(-s+b*(S+lS*Math.sin(w)))/(3*r),I=(-s+b*(S-lS*Math.sin(w)))/(3*r);M">=0&&M<=1&&(a[f++]=m),m>=0&&m<=1&&(a[f++]=m),i>=0&&I<=1&&(a[f++]=i)}}return f}function nn(t,e,i,n,o){var a="6*i-12*e+6*t,r=9*e+3*n-3*t-9*i,s=3*e-3*t,l=0;if($i(r))Ji(a)&&(c=-s/a)">=0&&c<=1&&(o[l++]=c);else{var u="a*a-4*r*s;if($i(u))o[0]=-a/(2*r);else" if(u>0){var h=aS(u),c=(-a+h)/(2*r),d=(-a-h)/(2*r);c>=0&&c<=1&&(o[l++]=c),d>=0&&d<=1&&(o[l++]=d)}}return l}function on(t,e,i,n,o,a){var r="(e-t)*o+t,s=(i-e)*o+e,l=(n-i)*o+i,u=(s-r)*o+r,h=(l-s)*o+s,c=(h-u)*o+u;a[0]=t,a[1]=r,a[2]=u,a[3]=c,a[4]=c,a[5]=h,a[6]=l,a[7]=n}function" an(t,e,i,n,o,a,r,s,l,u,h){var c,d,f,p,g,m=".005,v=1/0;hS[0]=l,hS[1]=u;for(var" y="0;y<1;y+=.05)cS[0]=Qi(t,i,o,r,y),cS[1]=Qi(e,n,a,s,y),(p=hw(hS,cS))<v&&(c=y,v=p);v=1/0;for(var" x="0;x<32&&!(m<sS);x++)d=c-m,f=c+m,cS[0]=Qi(t,i,o,r,d),cS[1]=Qi(e,n,a,s,d),p=hw(cS,hS),d">=0&&p<v?(c=d,v=p):(ds[0]=qi(t,i,o,r,f),ds[1]=qi(e,n,a,s,f),g=hw(ds,hs),f<=1&&g<v?(c=f,v=g):m*=.5);return h&&(h[0]="Qi(t,i,o,r,c),h[1]=Qi(e,n,a,s,c)),aS(v)}function" rn(t,e,i,n){var o="1-n;return" o*(o*t+2*n*e)+n*n*i}function sn(t,e,i,n){return 2*((1-n)*(e-t)+n*(i-e))}function ln(t,e,i,n,o){var a="t-2*e+i,r=2*(e-t),s=t-n,l=0;if($i(a))Ji(r)&&(c=-s/r)">=0&&c<=1&&(o[l++]=c);else{var u="r*r-4*a*s;if($i(u))(c=-r/(2*a))">=0&&c<=1&&(o[l++]=c);else if(u>0){var h=aS(u),c=(-r+h)/(2*a),d=(-r-h)/(2*a);c>=0&&c<=1&&(o[l++]=c),d>=0&&d<=1&&(o[l++]=d)}}return 0="==n?.5:(t-e)/n}function" l}function un(t,e,i){var n="t+i-2*e;return" hn(t,e,i,n,o){var a="(e-t)*n+t,r=(i-e)*n+e,s=(r-a)*n+a;o[0]=t,o[1]=a,o[2]=s,o[3]=s,o[4]=r,o[5]=i}function" cn(t,e,i,n,o,a,r,s,l){var u,h=".005,c=1/0;hS[0]=r,hS[1]=s;for(var" d="0;d<1;d+=.05)cS[0]=rn(t,i,o,d),cS[1]=rn(e,n,a,d),(m=hw(hS,cS))<c&&(u=d,c=m);c=1/0;for(var" f="0;f<32&&!(h<sS);f++){var" p="u-h,g=u+h;cS[0]=rn(t,i,o,p),cS[1]=rn(e,n,a,p);var" m="hw(cS,hS);if(p">=0&&m<c)u=p,c=m;else{ds[0]=rn(t,i,o,g),ds[1]=rn(e,n,a,g);var v="hw(dS,hS);g<=1&&v<c?(u=g,c=v):h*=.5}}return" l&&(l[0]="rn(t,i,o,u),l[1]=rn(e,n,a,u)),aS(c)}function" dn(t,e,i){if(0!="=t.length){var" n,o="t[0],a=o[0],r=o[0],s=o[1],l=o[1];for(n=1;n<t.length;n++)o=t[n],a=fS(a,o[0]),r=pS(r,o[0]),s=fS(s,o[1]),l=pS(l,o[1]);e[0]=a,e[1]=s,i[0]=r,i[1]=l}}function" fn(t,e,i,n,o,a){o[0]="fS(t,i),o[1]=fS(e,n),a[0]=pS(t,i),a[1]=pS(e,n)}function" pn(t,e,i,n,o,a,r,s,l,u){var h,c="nn,d=Qi,f=c(t,i,o,r,wS);for(l[0]=1/0,l[1]=1/0,u[0]=-1/0,u[1]=-1/0,h=0;h<f;h++){var" p="d(t,i,o,r,wS[h]);l[0]=fS(p,l[0]),u[0]=pS(p,u[0])}for(f=c(e,n,a,s,bS),h=0;h<f;h++){var" g="d(e,n,a,s,bS[h]);l[1]=fS(g,l[1]),u[1]=pS(g,u[1])}l[0]=fS(t,l[0]),u[0]=pS(t,u[0]),l[0]=fS(r,l[0]),u[0]=pS(r,u[0]),l[1]=fS(e,l[1]),u[1]=pS(e,u[1]),l[1]=fS(s,l[1]),u[1]=pS(s,u[1])}function" gn(t,e,i,n,o,a,r,s){var l="un,u=rn,h=pS(fS(l(t,i,o),1),0),c=pS(fS(l(e,n,a),1),0),d=u(t,i,o,h),f=u(e,n,a,c);r[0]=fS(t,o,d),r[1]=fS(e,a,f),s[0]=pS(t,o,d),s[1]=pS(e,a,f)}function" mn(t,e,i,n,o,a,r,s,l){var u="tt,h=et,c=Math.abs(o-a);if(c%vS<1e-4&&c">1e-4)return s[0]=t-i,s[1]=e-n,l[0]=t+i,void(l[1]=e+n);if(yS[0]=mS(o)*i+t,yS[1]=gS(o)*n+e,xS[0]=mS(a)*i+t,xS[1]=gS(a)*n+e,u(s,yS,xS),h(l,yS,xS),(o%=vS)<0&&(o+=vs),(a%=vs)<0&&(a+=vs),o>a&&!r?a+=vS:o<a&&r&&(o+=vs),r){var d="a;a=o,o=d}for(var" f="0;f<a;f+=Math.PI/2)f">o&&(_S[0]=mS(f)*i+t,_S[1]=gS(f)*n+e,u(s,_S,s),h(l,_S,l))}function vn(t,e,i,n,o,a,r){if(0===o)return!1;var s=o,l=0,u=t;if(r>e+s&&r>n+s||r<e-s&&r<n-s||a>t+s&&a>i+s||a<t-s&&a<i-s)return!1;if(t===i)return math.abs(a-t)<="s/2;var" h="(l=(e-n)/(t-i))*a-r+(u=(t*n-i*e)/(t-i));return" h*h (l*l+1)<="s/2*s/2}function" yn(t,e,i,n,o,a,r,s,l,u,h){if(0="==l)return!1;var" c="l;return!(h">e+c&&h>n+c&&h>a+c&&h>s+c||h<e-c&&h<n-c&&h<a-c&&h<s-c||u>t+c&&u>i+c&&u>o+c&&u>r+c||u<t-c&&u<i-c&&u<o-c&&u<r-c)&&an(t,e,i,n,o,a,r,s,u,h,null)<=c 2}function xn(t,e,i,n,o,a,r,s,l){if(0="==r)return!1;var" u="r;return!(l">e+u&&l>n+u&&l>a+u||l<e-u&&l<n-u&&l<a-u||s>t+u&&s>i+u&&s>o+u||s<t-u&&s<i-u&&s<o-u)&&cn(t,e,i,n,o,a,s,l,null)<=u 2}function _n(t){return(t%="RS)<0&&(t+=RS),t}function" wn(t,e,i,n,o,a,r,s,l){if(0="==r)return!1;var" u="r;s-=t,l-=e;var" h="Math.sqrt(s*s+l*l);if(h-u">i||h+u<i)return!1;if(math.abs(n-o)%zs<1e-4)return!0;if(a){var c="n;n=_n(o),o=_n(c)}else" n="_n(n),o=_n(o);n">o&&(o+=zS);var d=Math.atan2(l,s);return d<0&&(d+=zs),d>=n&&d<=o||d+zs>=n&&d+zS<=o}function bn(t,e,i,n,o,a){if(a>e&&a>n||a<e&&a<n)return 0;if(n="==e)return" 0;var r="n<e?1:-1,s=(a-e)/(n-e);1!==s&&0!==s||(r=n<e?.5:-.5);var" l="s*(i-t)+t;return">o?r:0}function Sn(t,e){return Math.abs(t-e)<gs}function mn(){var t="WS[0];WS[0]=WS[1],WS[1]=t}function" in(t,e,i,n,o,a,r,s,l,u){if(u>e&&u>n&&u>a&&u>s||u<e&&u<n&&u<a&&u<s)return 0;var h="en(e,n,a,s,u,FS);if(0===h)return" 0;for(var c,d,f="0,p=-1,g=0;g<h;g++){var" m="FS[g],v=0===m||1===m?.5:1;Qi(t,i,o,r,m)<l||(p<0&&(p=nn(e,n,a,s,WS),WS[1]<WS[0]&&p">1&&Mn(),c=Qi(e,n,a,s,WS[0]),p>1&&(d=Qi(e,n,a,s,WS[1]))),2===p?m<ws[0]?f+=c<e?v:-v:m<ws[1]?f+=d<c?v:-v:f+=s<d?v:-v:m<ws[0]?f+=c<e?v:-v:f+=s<c?v:-v)}return f}function tn(t,e,i,n,o,a,r,s){if(s>e&&s>n&&s>a||s<e&&s<n&&s<a)return 0;var l="ln(e,n,a,s,FS);if(0===l)return" u="un(e,n,a);if(u">=0&&u<=1){for(var h="0,c=rn(e,n,a,u),d=0;d<l;d++){f=0===FS[d]||1===FS[d]?.5:1;(p=rn(t,i,o,FS[d]))<r||(FS[d]<u?h+=c<e?f:-f:h+=a<c?f:-f)}return" h}var f="0===FS[0]||1===FS[0]?.5:1,p=rn(t,i,o,FS[0]);return" p<r?0:a<e?f:-f}function an(t,e,i,n,o,a,r,s){if((s-="e)">i||s<-i)return 0;u="Math.sqrt(i*i-s*s);FS[0]=-u,FS[1]=u;var" l="Math.abs(n-o);if(l<1e-4)return" 0;if(l%vs<1e-4){n="0,o=VS;p=a?1:-1;return" r>=FS[0]+t&&r<=fs[1]+t?p:0}if(a){var u="n;n=_n(o),o=_n(u)}else" n="_n(n),o=_n(o);n">o&&(o+=VS);for(var h=0,c=0;c<2;c++){var d="FS[c];if(d+t">r){var f=Math.atan2(s,d),p=a?1:-1;f<0&&(f=vs+f),(f>=n&&f<=o||f+vs>=n&&f+VS<=o)&&(f>Math.PI/2&&f<1.5*math.pi&&(p=-p),h+=p)}}return h}function dn(t,e,i,n,o){for(var a="0,r=0,s=0,l=0,u=0,h=0;h<t.length;){var" c="t[h++];switch(c===BS.M&&h">1&&(i||(a+=bn(r,s,l,u,n,o))),1===h&&(l=r=t[h],u=s=t[h+1]),c){case BS.M:r=l=t[h++],s=u=t[h++];break;case BS.L:if(i){if(vn(r,s,t[h],t[h+1],e,n,o))return!0}else a+=bn(r,s,t[h],t[h+1],n,o)||0;r=t[h++],s=t[h++];break;case BS.C:if(i){if(yn(r,s,t[h++],t[h++],t[h++],t[h++],t[h],t[h+1],e,n,o))return!0}else a+=In(r,s,t[h++],t[h++],t[h++],t[h++],t[h],t[h+1],n,o)||0;r=t[h++],s=t[h++];break;case BS.Q:if(i){if(xn(r,s,t[h++],t[h++],t[h],t[h+1],e,n,o))return!0}else a+=Tn(r,s,t[h++],t[h++],t[h],t[h+1],n,o)||0;r=t[h++],s=t[h++];break;case BS.A:var d=t[h++],f=t[h++],p=t[h++],g=t[h++],m=t[h++],v=t[h++];h+=1;var y=1-t[h++],x=Math.cos(m)*p+d,_=Math.sin(m)*g+f;h>1?a+=bn(r,s,x,_,n,o):(l=x,u=_);var w=(n-d)*g/p+d;if(i){if(wn(d,f,g,m,m+v,y,e,w,o))return!0}else a+=An(d,f,g,m,m+v,y,w,o);r=Math.cos(m+v)*p+d,s=Math.sin(m+v)*g+f;break;case BS.R:l=r=t[h++],u=s=t[h++];var x=l+t[h++],_=u+t[h++];if(i){if(vn(l,u,x,u,e,n,o)||vn(x,u,x,_,e,n,o)||vn(x,_,l,_,e,n,o)||vn(l,_,l,u,e,n,o))return!0}else a+=bn(x,u,x,_,n,o),a+=bn(l,_,l,u,n,o);break;case BS.Z:if(i){if(vn(r,s,l,u,e,n,o))return!0}else a+=bn(r,s,l,u,n,o);r=l,s=u}}return i||Sn(s,u)||(a+=bn(r,s,l,u,n,o)||0),0!==a}function Cn(t,e,i){return Dn(t,0,!1,e,i)}function Ln(t,e,i,n){return Dn(t,e,!0,i,n)}function kn(t){di.call(this,t),this.path=null}function Pn(t,e,i,n,o,a,r,s,l,u,h){var c=l*(tM/180),d=QS(c)*(t-i)/2+JS(c)*(e-n)/2,f=-1*JS(c)*(t-i)/2+QS(c)*(e-n)/2,p=d*d/(r*r)+f*f/(s*s);p>1&&(r*=$S(p),s*=$S(p));var g=(o===a?-1:1)*$S((r*r*(s*s)-r*r*(f*f)-s*s*(d*d))/(r*r*(f*f)+s*s*(d*d)))||0,m=g*r*f/s,v=g*-s*d/r,y=(t+i)/2+QS(c)*m-JS(c)*v,x=(e+n)/2+JS(c)*m+QS(c)*v,_=nM([1,0],[(d-m)/r,(f-v)/s]),w=[(d-m)/r,(f-v)/s],b=[(-1*d-m)/r,(-1*f-v)/s],S=nM(w,b);iM(w,b)<=-1&&(s=tm),im(w,b)>=1&&(S=0),0===a&&S>0&&(S-=2*tM),1===a&&S<0&&(s+=2*tm),h.adddata(u,y,x,r,s,_,s,c,a)}function nn(t){if(!t)return new es;for(var e,i="0,n=0,o=i,a=n,r=new" es,s="ES.CMD,l=t.match(oM),u=0;u<l.length;u++){for(var" h,c="l[u],d=c.charAt(0),f=c.match(aM)||[],p=f.length,g=0;g<p;g++)f[g]=parseFloat(f[g]);for(var" m="0;m<p;){var" v,y,x,_,w,b,s,m="i,I=n;switch(d){case" l":i+="f[m++],n+=f[m++],h=s.L,r.addData(h,i,n);break;case" l":i="f[m++],n=f[m++],h=s.L,r.addData(h,i,n);break;case"m":i+=f[m++],n+=f[m++],h=s.M,r.addData(h,i,n),o=i,a=n,d="l";break;case"M":i=f[m++],n=f[m++],h=s.M,r.addData(h,i,n),o=i,a=n,d="L";break;case"h":i+=f[m++],h=s.L,r.addData(h,i,n);break;case"H":i=f[m++],h=s.L,r.addData(h,i,n);break;case"v":n+=f[m++],h=s.L,r.addData(h,i,n);break;case"V":n=f[m++],h=s.L,r.addData(h,i,n);break;case"C":h=s.C,r.addData(h,f[m++],f[m++],f[m++],f[m++],f[m++],f[m++]),i=f[m-2],n=f[m-1];break;case"c":h=s.C,r.addData(h,f[m++]+i,f[m++]+n,f[m++]+i,f[m++]+n,f[m++]+i,f[m++]+n),i+=f[m-2],n+=f[m-1];break;case"S":v=i,y=n;var""" t="r.len(),A=r.data;e===s.C&&(v+=i-A[T-4],y+=n-A[T-3]),h=s.C,M=f[m++],I=f[m++],i=f[m++],n=f[m++],r.addData(h,v,y,M,I,i,n);break;case" s":v="i,y=n;var" " r.tostatic(),r}function on(t,e){var i="Nn(t);return" e="e||{},e.buildPath=function(t){if(t.setData)t.setData(i.data),(e=t.getContext())&&t.rebuildPath(e);else{var" en(t,e){return kn(on(t,e))}function rn(t,e){return kn.extend(on(t,e))}function zn(t,e,i,n,o,a,r){var s=".5*(i-t),l=.5*(n-e);return(2*(e-i)+s+l)*r+(-3*(e-i)-2*s-l)*a+s*o+e}function" bn(t,e,i){var n="e.points,o=e.smooth;if(n&&n.length">=2){if(o&&"spline"!==o){var a=fM(n,o,i,e.smoothConstraint);t.moveTo(n[0][0],n[0][1]);for(var r=n.length,s=0;s<(i?r:r-1);s++){var l="a[2*s],u=a[2*s+1],h=n[(s+1)%r];t.bezierCurveTo(l[0],l[1],u[0],u[1],h[0],h[1])}}else{" spline"="==o&&(n=dM(n,i)),t.moveTo(n[0][0],n[0][1]);for(var" " s="1,c=n.length;s<c;s++)t.lineTo(n[s][0],n[s][1])}i&&t.closePath()}}function" vn(t,e,i){var n="i&&i.lineWidth;if(e&&n){var" o="e.x1,a=e.x2,r=e.y1,s=e.y2;mM(2*o)===mM(2*a)?t.x1=t.x2=Fn(o,n,!0):(t.x1=o,t.x2=a),mM(2*r)===mM(2*s)?t.y1=t.y2=Fn(r,n,!0):(t.y1=r,t.y2=s)}}function" gn(t,e,i){var fn(t,e,i){var wn(t,e,i){var null="==n||null===o?[(i?tn:Qi)(t.x1,t.cpx1,t.cpx2,t.x2,e),(i?tn:Qi)(t.y1,t.cpy1,t.cpy2,t.y2,e)]:[(i?sn:rn)(t.x1,t.cpx1,t.x2,e),(i?sn:rn)(t.y1,t.cpy1,t.y2,e)]}function" hn(t){di.call(this,t),this._displayables="[],this._temporaryDisplayables=[],this._cursor=0,this.notClear=!0}function" zn(t){return kn.extend(t)}function un(t,e,i,n){var i&&("center"="==n&&(i=jn(i,o.getBoundingRect())),Yn(o,i)),o}function" xn(t,e,i){var fi({style:{image:t,x:e.x,y:e.y,width:e.width,height:e.height},onload:function(t){if("center"="==i){var" n}function jn(t,e){var i,n="e.width/e.height,o=t.height*n;return" i="o<=t.width?t.height:(o=t.width)/n,{x:t.x+t.width/2-o/2,y:t.y+t.height/2-i/2,width:o,height:i}}function" yn(t,e){if(t.applytransform){var qn(t){var e="t.shape,i=t.style.lineWidth;return" cm(2*e.x1)="==CM(2*e.x2)&&(e.x1=e.x2=$n(e.x1,i,!0)),CM(2*e.y1)===CM(2*e.y2)&&(e.y1=e.y2=$n(e.y1,i,!0)),t}function" kn(t){var e.x="$n(e.x,i,!0),e.y=$n(e.y,i,!0),e.width=Math.max($n(n+a,i,!1)-e.x,0===a?0:1),e.height=Math.max($n(o+r,i,!1)-e.y,0===r?0:1),t}function" $n(t,e,i){var jn(t){return null!="t&&" none"!="=t}function" qn(t){if("string"!="typeof" t)return t;var e||(e="Ht(t,-.1),RM<1e4&&(EM.set(t,e),RM++)),e}function" to(t){if(t.__hoverstldirty){t.__hoverstldirty="!1;var" in e)null!="e[o]&&(i[o]=n[o]);i.fill=n.fill,i.stroke=n.stroke}else" t.__cachednormalstl="t.__cachedNormalZ2=null}}function" eo(t){var io(t,e,i){!jn(e[i])&&jn(t[i])&&(t[i]="Qn(t[i]))}function" no(t){var if(e){var oo(t,e){t.isgroup?t.traverse(function(t){!t.isgroup&&e(t)}):e(t)}function ao(t,e){e="t.__hoverStl=!1!==e&&(e||{}),t.__hoverStlDirty=!0,t.__highlighted&&(t.__cachedNormalStl=null,no(t),eo(t))}function" ro(t){return t&&t.__isemphasisentered}function so(t){this.__hoversilentontouch&&t.zrbytouch||!this.__isemphasisentered&&oo(this,eo)}function lo(t){this.__hoversilentontouch&&t.zrbytouch||!this.__isemphasisentered&&oo(this,no)}function uo(){this.__isemphasisentered="!0,oo(this,eo)}function" ho(){this.__isemphasisentered="!1,oo(this,no)}function" co(t,e,i){t.isgroup?t.traverse(function(t){!t.isgroup&&ao(t,t.hoverstyle||e)}):ao(t,t.hoverstyle||e),fo(t,i)}function fo(t,e){var po(t,e,i,n,o,a,r){var s,l="(o=o||PM).labelFetcher,u=o.labelDataIndex,h=o.labelDimIndex,c=i.getShallow(" show"),d="n.getShallow(" show");(c||d)&&(l&&(s="l.getFormattedLabel(u,"normal",null,h)),null==s&&(s=x(o.defaultText)?o.defaultText(u,o):o.defaultText));var""" f="c?s:null,p=d?A(l?l.getFormattedLabel(u," emphasis",null,h):null,s):null;null="=f&&null==p||(go(t,i,a,o),go(e,n,r,o,!0)),t.text=f,e.text=p}function" go(t,e,i,n,o){return mo(t,e,n,o),i&&a(t,i),t}function mo(t,e,i,n){if((i="i||PM).isRectText){var" a="e.getShallow(" rotate");null!="a&&(a*=Math.PI/180),t.textRotation=a,t.textDistance=A(e.getShallow(" distance"),n?null:5)}var"" r,s="e.ecModel,l=s&&s.option.textStyle,u=vo(e);if(u){r={};for(var" h u)if(u.hasownproperty(h)){var c="e.getModel([" rich",h]);yo(r[h]="{},c,l,i,n)}}return" t.rich="r,yo(t,e,l,i,n,!0),i.forceRich&&!i.textStyle&&(i.textStyle={}),t}function" vo(t){for(var e;t&&t!="=t.ecModel;){var" i)i.hasownproperty(n)&&(e[n]="1)}t=t.parentModel}return" e}function yo(t,e,i,n,o,a){i="!o&&i||PM,t.textFill=xo(e.getShallow(" color"),n)||i.color,t.textstroke="xo(e.getShallow(" textbordercolor"),n)||i.textbordercolor,t.textstrokewidth="A(e.getShallow("textBorderWidth"),i.textBorderWidth),t.insideRawTextPosition=t.textPosition,o||(a&&(t.insideRollbackOpt=n,_o(t)),null==t.textFill&&(t.textFill=n.autoColor)),t.fontStyle=e.getShallow("fontStyle")||i.fontStyle,t.fontWeight=e.getShallow("fontWeight")||i.fontWeight,t.fontSize=e.getShallow("fontSize")||i.fontSize,t.fontFamily=e.getShallow("fontFamily")||i.fontFamily,t.textAlign=e.getShallow("align"),t.textVerticalAlign=e.getShallow("verticalAlign")||e.getShallow("baseline"),t.textLineHeight=e.getShallow("lineHeight"),t.textWidth=e.getShallow("width"),t.textHeight=e.getShallow("height"),t.textTag=e.getShallow("tag"),a&&n.disableBox||(t.textBackgroundColor=xo(e.getShallow("backgroundColor"),n),t.textPadding=e.getShallow("padding"),t.textBorderColor=xo(e.getShallow("borderColor"),n),t.textBorderWidth=e.getShallow("borderWidth"),t.textBorderRadius=e.getShallow("borderRadius"),t.textBoxShadowColor=e.getShallow("shadowColor"),t.textBoxShadowBlur=e.getShallow("shadowBlur"),t.textBoxShadowOffsetX=e.getShallow("shadowOffsetX"),t.textBoxShadowOffsetY=e.getShallow("shadowOffsetY")),t.textShadowColor=e.getShallow("textShadowColor")||i.textShadowColor,t.textShadowBlur=e.getShallow("textShadowBlur")||i.textShadowBlur,t.textShadowOffsetX=e.getShallow("textShadowOffsetX")||i.textShadowOffsetX,t.textShadowOffsetY=e.getShallow("textShadowOffsetY")||i.textShadowOffsetY}function""" xo(t,e){return"auto"!="=t?t:e&&e.autoColor?e.autoColor:null}function" _o(t){var o&&o.indexof("inside")>=0)?(i={textFill:null,textStroke:t.textStroke,textStrokeWidth:t.textStrokeWidth},t.textFill="#fff",null==t.textStroke&&(t.textStroke=a,null==t.textStrokeWidth&&(t.textStrokeWidth=2))):null!=a&&(i={textFill:null},t.textFill=a),i&&(t.insideRollback=i)}}function wo(t){var e=t.insideRollback;e&&(t.textFill=e.textFill,t.textStroke=e.textStroke,t.textStrokeWidth=e.textStrokeWidth,t.insideRollback=null)}function bo(t,e){var i=e||e.getModel("textStyle");return P([t.fontStyle||i&&i.getShallow("fontStyle")||"",t.fontWeight||i&&i.getShallow("fontWeight")||"",(t.fontSize||i&&i.getShallow("fontSize")||12)+"px",t.fontFamily||i&&i.getShallow("fontFamily")||"sans-serif"].join(" "))}function So(t,e,i,n,o,a){if("function"==typeof o&&(a=o,o=null),n&&n.isAnimationEnabled()){var r=t?"Update":"",s=n.getShallow("animationDuration"+r),l=n.getShallow("animationEasing"+r),u=n.getShallow("animationDelay"+r);"function"==typeof u&&(u=u(o,n.getAnimationDelayParams?n.getAnimationDelayParams(e,o):null)),"function"==typeof s&&(s=s(o)),s>0?e.animateTo(i,s,u||0,l,a,!!a):(e.stopAnimation(),e.attr(i),a&&a())}else e.stopAnimation(),e.attr(i),a&&a()}function Mo(t,e,i,n,o){So(!0,t,e,i,n,o)}function Io(t,e,i,n,o){So(!1,t,e,i,n,o)}function To(t,e){for(var i=_t([]);t&&t!==e;)bt(i,t.getLocalTransform(),i),t=t.parent;return i}function Ao(t,e,i){return e&&!c(e)&&(e=Tw.getLocalTransform(e)),i&&(e=Tt([],e)),Q([],t,e)}function Do(t,e,i){var n=0===e[4]||0===e[5]||0===e[0]?1:Math.abs(2*e[4]/e[0]),o=0===e[4]||0===e[5]||0===e[2]?1:Math.abs(2*e[4]/e[2]),a=["left"===t?-n:"right"===t?n:0,"top"===t?-o:"bottom"===t?o:0];return a=Ao(a,e,i),Math.abs(a[0])>Math.abs(a[1])?a[0]>0?"right":"left":a[1]>0?"bottom":"top"}function Co(t,e,i,n){function o(t){var e={position:F(t.position),rotation:t.rotation};return t.shape&&(e.shape=a({},t.shape)),e}if(t&&e){var r=function(t){var e={};return t.traverse(function(t){!t.isGroup&&t.anid&&(e[t.anid]=t)}),e}(t);e.traverse(function(t){if(!t.isGroup&&t.anid){var e=r[t.anid];if(e){var n=o(t);t.attr(o(e)),Mo(t,n,i,t.dataIndex)}}})}}function Lo(t,e){return f(t,function(t){var i=t[0];i=LM(i,e.x),i=kM(i,e.x+e.width);var n=t[1];return n=LM(n,e.y),n=kM(n,e.y+e.height),[i,n]})}function ko(t,e,i){var n=(e=a({rectHover:!0},e)).style={strokeNoScale:!0};if(i=i||{x:-1,y:-1,width:2,height:2},t)return 0===t.indexOf("image://")?(n.image=t.slice(8),r(n,i),new fi(e)):Un(t.replace("path://",""),e,i,"center")}function Po(t,e,i){this.parentModel=e,this.ecModel=i,this.option=t}function No(t,e,i){for(var n=0;n<e.length&&(!e[n]||null!=(t=t&&"object"==typeof 0="==a?i[0]:(i[0]+i[1])/2;if(n)if(o" t?t[e[n]]:null));n++);return null="=t&&i&&(t=i.get(e)),t}function" oo(t,e){var i="HM(t).getParent;return" i?i.call(t,e):t.parentmodel}function eo(t){return[t||"",zm++,math.random().tofixed(5)].join("_")}function ro(t){return t.replace( ^\s+ ,"").replace( \s+$ ,"")}function zo(t,e,i,n){var o="e[1]-e[0],a=i[1]-i[0];if(0===o)return">0){if(t<=e[0])return i[0];if(t>=e[1])return i[1]}else{if(t>=e[0])return i[0];if(t<=e[1])return i[1]}else{if(t="==e[0])return" i[0];if(t="==e[1])return" i[1]}return(t-e[0]) o*a+i[0]}function bo(t,e){switch(t){case"center":case"middle":t="50%" ;break;case"left":case"top":t="0%" ;break;case"right":case"bottom":t="100%" }return"string"="=typeof" t?ro(t).match( %$ )?parsefloat(t) 100*e:parsefloat(t):null="=t?NaN:+t}function" vo(t,e,i){return null="=e&&(e=10),e=Math.min(Math.max(0,e),20),t=(+t).toFixed(e),i?t:+t}function" go(t){return t.sort(function(t,e){return t-e}),t}function fo(t){if(t="+t,isNaN(t))return" 0;for(var e="1,i=0;Math.round(t*e)/e!==t;)e*=10,i++;return" i}function wo(t){var>0){var n=+e.slice(i+1);return n<0?-n:0}var o="e.indexOf(" .");return" o<0?0:e.length-1-o}function ho(t,e){var i="Math.log,n=Math.LN10,o=Math.floor(i(t[1]-t[0])/n),a=Math.round(i(Math.abs(e[1]-e[0]))/n),r=Math.min(Math.max(-o+a,0),20);return" isfinite(r)?r:20}function zo(t,e,i){if(!t[e])return 0;var n="p(t,function(t,e){return" t+(isnan(e)?0:e)},0);if(0="==n)return" 0;for(var math.floor(t)}),l="p(s,function(t,e){return" t+e},0),u="f(a,function(t,e){return" t-s[e]});l<r;){for(var h="Number.NEGATIVE_INFINITY,c=null,d=0,g=u.length;d<g;++d)u[d]">h&&(h=u[d],c=d);++s[c],u[c]=0,++l}return s[e]/o}function Uo(t){var e=2*Math.PI;return(t%e+e)%e}function Xo(t){return t>-UM&&t<um}function jo(t){if(t instanceof date)return t;if("string"="=typeof" t){var e="jM.exec(t);if(!e)return" new date(nan);if(e[8]){var i="+e[4]||0;return" z"!="=e[8].toUpperCase()&&(i-=e[8].slice(0,3)),new" " date(date.utc(+e[1],+(e[2]||1)-1,+e[3]||1,i,+(e[5]||0),+e[6]||0,+e[7]||0))}return date(+e[1],+(e[2]||1)-1,+e[3]||1,+e[4]||0,+(e[5]||0),+e[6]||0,+e[7]||0)}return null="=t?new" date(nan):new date(math.round(t))}function yo(t){return math.pow(10,qo(t))}function qo(t){return math.floor(math.log(t) math.ln10)}function ko(t,e){var i,n="qo(t),o=Math.pow(10,n),a=t/o;return">=-20?+t.toFixed(n<0?-n:0):t}function $o(t){function e(t,i,n){return t.interval[n]<i.interval[n]||t.interval[n]="==i.interval[n]&&(t.close[n]-i.close[n]==(n?-1:1)||!n&&e(t,i,1))}t.sort(function(t,i){return" e(t,i,0)?-1:1});for(var i="-1/0,n=1,o=0;o<t.length;){for(var" a="t[o].interval,r=t[o].close,s=0;s<2;s++)a[s]<=i&&(a[s]=i,r[s]=s?1:1-n),i=a[s],n=r[s];a[0]===a[1]&&r[0]*r[1]!=1?t.splice(o,1):o++}return" t}function jo(t){return t-parsefloat(t)>=0}function Qo(t){return isNaN(t)?"-":(t=(t+"").split("."))[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g,"$1,")+(t.length>1?"."+t[1]:"")}function ta(t,e){return t=(t||"").toLowerCase().replace(/-(.)/g,function(t,e){return e.toUpperCase()}),e&&t&&(t=t.charAt(0).toUpperCase()+t.slice(1)),t}function ea(t){return null==t?"":(t+"").replace(KM,function(t,e){return $M[e]})}function ia(t,e,i){y(e)||(e=[e]);var n=e.length;if(!n)return"";for(var o=e[0].$vars||[],a=0;a<o.length;a++){var r="JM[a];t=t.replace(QM(r),QM(r,0))}for(var" s="0;s<n;s++)for(var" l="0;l<o.length;l++){var" u="e[s][o[l]];t=t.replace(QM(JM[l],s),i?ea(u):u)}return" t}function na(t,e,i){return d(e,function(e,n){t="t.replace(" {"+n+"}",i?ea(e):e)}),t}function" oa(t,e){var i="(t=_(t)?{color:t,extraCssText:e}:t||{}).color,n=t.type,e=t.extraCssText,o=t.renderMode||" html",a="t.markerId||" x";return"" i?"html"="==o?" subitem"="==n?'<span" " style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:'+ea(i)+" ;"+(e||"")+'">':'<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:'+ea(i)+" ;"+(e||"")+'"></span>':{renderMode:o,content:"{marker"+a+"|}  ",style:{color:i}}:""}function aa(t,e){return t+="","0000".substr(0,e-t.length)+t}function ra(t,e,i){"week"!==t&&"month"!==t&&"quarter"!==t&&"half-year"!==t&&"year"!==t||(t="MM-dd\nyyyy");var n=jo(e),o=i?"UTC":"",a=n["get"+o+"FullYear"](),r=n["get"+o+"Month"]()+1,s=n["get"+o+"Date"](),l=n["get"+o+"Hours"](),u=n["get"+o+"Minutes"](),h=n["get"+o+"Seconds"](),c=n["get"+o+"Milliseconds"]();return t=t.replace("MM",aa(r,2)).replace("M",r).replace("yyyy",a).replace("yy",a%100).replace("dd",aa(s,2)).replace("d",s).replace("hh",aa(l,2)).replace("h",l).replace("mm",aa(u,2)).replace("m",u).replace("ss",aa(h,2)).replace("s",h).replace("SSS",aa(c,3))}function sa(t){return t?t.charAt(0).toUpperCase()+t.substr(1):t}function la(t,e,i,n,o){var a=0,r=0;null==n&&(n=1/0),null==o&&(o=1/0);var s=0;e.eachChild(function(l,u){var h,c,d=l.position,f=l.getBoundingRect(),p=e.childAt(u+1),g=p&&p.getBoundingRect();if("horizontal"===t){var m=f.width+(g?-g.x+f.x:0);(h=a+m)>n||l.newline?(a=0,h=m,r+=s+i,s=f.height):s=Math.max(s,f.height)}else{var v=f.height+(g?-g.y+f.y:0);(c=r+v)>o||l.newline?(a+=s+i,r=0,c=v,s=f.width):s=Math.max(s,f.width)}l.newline||(d[0]=a,d[1]=r,"horizontal"===t?a=h+i:r=c+i)})}function ua(t,e,i){var n=e.width,o=e.height,a=Bo(t.x,n),r=Bo(t.y,o),s=Bo(t.x2,n),l=Bo(t.y2,o);return(isNaN(a)||isNaN(parseFloat(t.x)))&&(a=0),(isNaN(s)||isNaN(parseFloat(t.x2)))&&(s=n),(isNaN(r)||isNaN(parseFloat(t.y)))&&(r=0),(isNaN(l)||isNaN(parseFloat(t.y2)))&&(l=o),i=qM(i||0),{width:Math.max(s-a-i[1]-i[3],0),height:Math.max(l-r-i[0]-i[2],0)}}function ha(t,e,i){i=qM(i||0);var n=e.width,o=e.height,a=Bo(t.left,n),r=Bo(t.top,o),s=Bo(t.right,n),l=Bo(t.bottom,o),u=Bo(t.width,n),h=Bo(t.height,o),c=i[2]+i[0],d=i[1]+i[3],f=t.aspect;switch(isNaN(u)&&(u=n-s-d-a),isNaN(h)&&(h=o-l-c-r),null!=f&&(isNaN(u)&&isNaN(h)&&(f>n/o?u=.8*n:h=.8*o),isNaN(u)&&(u=f*h),isNaN(h)&&(h=u/f)),isNaN(a)&&(a=n-s-u-d),isNaN(r)&&(r=o-l-h-c),t.left||t.right){case"center":a=n/2-u/2-i[3];break;case"right":a=n-u-d}switch(t.top||t.bottom){case"middle":case"center":r=o/2-h/2-i[0];break;case"bottom":r=o-h-c}a=a||0,r=r||0,isNaN(u)&&(u=n-d-a-(s||0)),isNaN(h)&&(h=o-c-r-(l||0));var p=new de(a+i[3],r+i[0],u,h);return p.margin=i,p}function ca(t,e,i,n,o){var a=!o||!o.hv||o.hv[0],s=!o||!o.hv||o.hv[1],l=o&&o.boundingMode||"all";if(a||s){var u;if("raw"===l)u="group"===t.type?new de(0,0,+e.width||0,+e.height||0):t.getBoundingRect();else if(u=t.getBoundingRect(),t.needLocalTransform()){var h=t.getLocalTransform();(u=u.clone()).applyTransform(h)}e=ha(r({width:u.width,height:u.height},e),i,n);var c=t.position,d=a?e.x-u.x:0,f=s?e.y-u.y:0;t.attr("position","raw"===l?[d,f]:[c[0]+d,c[1]+f])}}function da(t,e){return null!=t[aI[e][0]]||null!=t[aI[e][1]]&&null!=t[aI[e][2]]}function fa(t,e,i){function n(i,n){var r={},l=0,u={},h=0;if(nI(i,function(e){u[e]=t[e]}),nI(i,function(t){o(e,t)&&(r[t]=u[t]=e[t]),a(r,t)&&l++,a(u,t)&&h++}),s[n])return a(e,i[1])?u[i[2]]=null:a(e,i[2])&&(u[i[1]]=null),u;if(2!==h&&l){if(l>=2)return r;for(var c=0;c<i.length;c++){var d="i[c];if(!o(r,d)&&o(t,d)){r[d]=t[d];break}}return" r}return u}function o(t,e){return t.hasownproperty(e)}function a(t,e){return null!="t[e]&&" auto"!="=t[e]}function" " r(t,e,i){ni(t,function(t){e[t]="i[t]})}!w(i)&&(i={});var" s="i.ignoreSize;!y(s)&&(s=[s,s]);var" l="n(aI[0],0),u=n(aI[1],1);r(aI[0],t,l),r(aI[1],t,u)}function" pa(t){return ga({},t)}function ga(t,e){return e&&t&&ni(oi,function(i){e.hasownproperty(i)&&(t[i]="e[i])}),t}function" ma(t,e){for(var i="t.length,n=0;n<i;n++)if(t[n].length">e)return t[n];return t[i-1]}function va(t){var e=t.get("coordinateSystem"),i={coordSysName:e,coordSysDims:[],axisMap:R(),categoryAxisMap:R()},n=pI[e];if(n)return n(t,i,i.axisMap,i.categoryAxisMap),i}function ya(t){return"category"===t.get("type")}function xa(t){this.fromDataset=t.fromDataset,this.data=t.data||(t.sourceFormat===yI?{}:[]),this.sourceFormat=t.sourceFormat||xI,this.seriesLayoutBy=t.seriesLayoutBy||wI,this.dimensionsDefine=t.dimensionsDefine,this.encodeDefine=t.encodeDefine&&R(t.encodeDefine),this.startIndex=t.startIndex||0,this.dimensionsDetectCount=t.dimensionsDetectCount}function _a(t){var e=t.option.source,i=xI;if(S(e))i=_I;else if(y(e)){0===e.length&&(i=mI);for(var n=0,o=e.length;n<o;n++){var a="e[n];if(null!=a){if(y(a)){i=mI;break}if(w(a)){i=vI;break}}}}else" if(w(e)){for(var r in e)if(e.hasownproperty(r)&&c(e[r])){i="yI;break}}else" if(null!="e)throw" new error("invalid data");si(t).sourceformat="i}function" wa(t){return si(t).source}function ba(t){si(t).datasetmap="R()}function" sa(t){var e="t.option,i=e.data,n=S(i)?_I:gI,o=!1,a=e.seriesLayoutBy,r=e.sourceHeader,s=e.dimensions,l=Ca(t);if(l){var" u="l.option;i=u.source,n=SI(l).sourceFormat,o=!0,a=a||u.seriesLayoutBy,null==r&&(r=u.sourceHeader),s=s||u.dimensions}var" h="Ma(i,n,a,r,s),c=e.encode;!c&&l&&(c=Da(t,l,i,n,a,h)),SI(t).source=new" xa({data:i,fromdataset:o,serieslayoutby:a,sourceformat:n,dimensionsdefine:h.dimensionsdefine,startindex:h.startindex,dimensionsdetectcount:h.dimensionsdetectcount,encodedefine:c})}function ma(t,e,i,n,o){if(!t)return{dimensionsdefine:ia(o)};var a,r,s;if(e="==mI)" auto"="==n||null==n?Ta(function(t){null!=t&&" -"!="=t&&(_(t)?null==r&&(r=1):r=0)},i,t,10):r=n?1:0,o||1!==r||(o=[],Ta(function(t,e){o[e]=null!=t?t:""},i,t)),a=o?o.length:i===bI?t.length:t[0]?t[0].length:null;else""" if(e="==vI)o||(o=Aa(t),s=!0);else" l="Li(t[0]);a=y(l)&&l.length||1}var" u;return s&&d(o,function(t,e){"name"="==(w(t)?t.name:t)&&(u=e)}),{startIndex:r,dimensionsDefine:Ia(o),dimensionsDetectCount:a,potentialNameDimIndex:u}}function" ia(t){if(t){var f(t,function(t,i){if(null="=(t=a({},w(t)?t:{name:t})).name)return" t;t.name+ ,null="=t.displayName&&(t.displayName=t.name);var" n="e.get(t.name);return" n?t.name+="-" +n.count++:e.set(t.name,{count:1}),t})}}function ta(t,e,i,n){if(null="=n&&(n=1/0),e===bI)for(a=0;a<i.length&&a<n;a++)t(i[a]?i[a][0]:null,a);else" for(var o="i[0]||[],a=0;a<o.length&&a<n;a++)t(o[a],a)}function" aa(t){for(var e,i="0;i<t.length&&!(e=t[i++]););if(e){var" d(e,function(t,e){n.push(e)}),n}}function da(t,e,i,n,o,a){var p="t.ecModel,g=SI(p).datasetMap,m=e.uid+" _"+o,v="g.get(m)||g.set(m,{categoryWayDim:1,valueWayDim:0});d(r.coordSysDims,function(t){if(null==r.firstCategoryDimIndex){e=v.valueWayDim++;s[t]=e,u.push(e)}else" " if(r.categoryaxismap.get(t))s[t]="0,l.push(0);else{var" y,x="0;x<5&&null==y;x++)ka(i,n,o,a.dimensionsDefine,a.startIndex,x)||(y=x);if(null!=y){s.value=y;var" _="a.potentialNameDimIndex||Math.max(y-1,0);u.push(_),l.push(_)}}return" l.length&&(s.itemname="l),u.length&&(s.seriesName=u),s}function" ca(t){var t.ecmodel.getcomponent("dataset",e.datasetindex||0)}function la(t,e){return ka(t.data,t.sourceformat,t.serieslayoutby,t.dimensionsdefine,t.startindex,e)}function ka(t,e,i,n,o,a){function r(t){return(null="=t||!isFinite(t)||" -"="==t)||void""" 0)}var s;if(s(t))return!1;var l;if(n&&(l="w(l=n[a])?l.name:l),e===mI)if(i===bI){for(var" s}else for(h="0;h<t.length&&h<5;h++){var" c="t[o+h];if(c&&null!=(s=r(c[a])))return" d="t[h],f=Li(d);if(!y(f))return!1;if(null!=(s=r(f[a])))return" s}return!1}function pa(t,e){if(e){var i="e.seiresIndex,n=e.seriesId,o=e.seriesName;return" null!="i&&t.componentIndex!==i||null!=n&&t.id!==n||null!=o&&t.name!==o}}function" na(t,e){var e?t[a]="t[a]?n(t[a],e,!1):i(e):null==t[a]&&(t[a]=e))})}function" oa(t){t="t,this.option={},this.option[MI]=1,this._componentsMap=R({series:[]}),this._seriesIndices,this._seriesIndicesMap,Na(t,this._theme.option),n(t,cI,!1),this.mergeOption(t)}function" ea(t,e){y(e)||(e="e?[e]:[]);var" d(e,function(e){i[e]="(t.get(e)||[]).slice()}),i}function" ra(t,e,i){return e.type?e.type:i?i.subtype:ui.determinesubtype(t,e)}function za(t,e){t._seriesindicesmap="R(t._seriesIndices=f(e,function(t){return" t.componentindex})||[])}function ba(t,e){return e.hasownproperty("subtype")?g(t,function(t){return t.subtype="==e.subType}):t}function" va(t){d(ti,function(e){this[e]="m(t[e],t)},this)}function" ga(){this._coordinatesystems="[]}function" fa(t){this._api="t,this._timelineOptions=[],this._mediaList=[],this._mediaDefault,this._currentMediaIndices=[],this._optionBackup,this._newBaseOption}function" wa(t,e,i){var n,o,a="[],r=[],s=t.timeline;if(t.baseOption&&(o=t.baseOption),(s||t.options)&&(o=o||{},a=(t.options||[]).slice()),t.media){o=o||{};var" o||(o="t),o.timeline||(o.timeline=s),DI([o].concat(a).concat(f(r,function(t){return" t.option})),function(t){di(e,function(e){e(t,i)})}),{baseoption:o,timelineoptions:a,mediadefault:n,medialist:r}}function ha(t,e,i){var d(t,function(t,e){var za(t,e,i){return"min"="==i?t">=e:"max"===i?t<=e:t===e}function ua(t,e){return t.join(",")="==e.join(" ,")}function" xa(t,e){di(e="e||{},function(e,i){if(null!=e){var" n="t[i];if(uI.hasClass(i)){e=Di(e);var" o="Pi(n=Di(n),e);t[i]=LI(o,function(t){return" t.option&&t.exist?ki(t.exist,t.option,!0):t.exist||t.option})}else t[i]="kI(n,e,!0)}})}function" ja(t){var e="t&&t.itemStyle;if(e)for(var" i="0,o=EI.length;i<o;i++){var" a="EI[i],r=e.normal,s=e.emphasis;r&&r[a]&&(t[a]=t[a]||{},t[a].normal?n(t[a].normal,r[a]):t[a].normal=r[a],r[a]=null),s&&s[a]&&(t[a]=t[a]||{},t[a].emphasis?n(t[a].emphasis,s[a]):t[a].emphasis=s[a],s[a]=null)}}function" ya(t,e,i){if(t&&t[e]&&(t[e].normal||t[e].emphasis)){var qa(t){ya(t,"itemstyle"),ya(t,"linestyle"),ya(t,"areastyle"),ya(t,"label"),ya(t,"labelline"),ya(t,"upperlabel"),ya(t,"edgelabel")}function ka(t,e){var $a(t){t&&(qa(t),ka(t,"label"),t.emphasis&&ka(t.emphasis,"label"))}function ja(t){if(oi(t)){ja(t),qa(t),ka(t,"label"),ka(t,"upperlabel"),ka(t,"edgelabel"),t.emphasis&&(ka(t.emphasis,"label"),ka(t.emphasis,"upperlabel"),ka(t.emphasis,"edgelabel"));var r="e.data,s=0;s<r.length;s++)$a(r[s]);if((i=t.markLine)&&i.data)for(var" l="i.data,s=0;s<l.length;s++)y(l[s])?($a(l[s][0]),$a(l[s][1])):$a(l[s]);" gauge"="==t.type?(Ka(t," axislabel"),ka(t,"title"),ka(t,"detail")):"treemap"="==t.type?(Ya(t.breadcrumb,"itemStyle"),d(t.levels,function(t){qa(t)})):"tree"===t.type&&qa(t.leaves)}}function""" qa(t){return y(t)?t:t?[t]:[]}function tr(t){return(y(t)?t[0]:t)||{}}function er(t,e){e="e.split(" ,");for(var" i}function ir(t,e,i,n){e="e.split(" o,a="t,r=0;r<e.length-1;r++)null==a[o=e[r]]&&(a[o]={}),a=a[o];(n||null==a[e[r]])&&(a[e[r]]=i)}function" nr(t){d(zi,function(e){e[0]in t&&!(e[1]in t)&&(t[e[1]]="t[e[0]])})}function" or(t){d(t,function(e,i){var h="r.get(e.stackedDimension,u);if(isNaN(h))return" o;var c,d;s?d="r.getRawIndex(u):c=r.get(e.stackedByDimension,u);for(var" f="NaN,p=i-1;p">=0;p--){var g=t[p];if(s||(d=g.data.rawIndexOf(g.stackedByDimension,c)),d>=0){var m=g.data.getByRawIndex(g.stackResultDimension,d);if(h>=0&&m>0||h<=0&&m<0){h+=m,f=m;break}}}return n[0]="h,n[1]=f,n});r.hostModel.setData(l),e.data=l})}function" ar(t,e){xa.isinstance(t)||(t="xa.seriesDataToSource(t)),this._source=t;var" i="this._data=t.data,n=t.sourceFormat;n===_I&&(this._offset=0,this._dimSize=e,this._data=i),a(this,FI[n===mI?n+" _"+t.serieslayoutby:n])}function" rr(){return this._data.length}function sr(t){return this._data[t]}function lr(t){for(var e="0;e<t.length;e++)this._data.push(t[e])}function" ur(t,e,i,n){return null!="i?t[i]:t}function" hr(t,e,i,n){return cr(t[n],this._dimensioninfos[e])}function cr(t,e){var n="e&&e.ordinalMeta;return" n?n.parseandcollect(t):t}return"time"="==i&&" number"!="typeof" " t&&null!="t&&" -"!="=t&&(t=+jo(t)),null==t||" dr(t,e,i){if(t){var o,a,r="t.getProvider().getSource().sourceFormat,s=t.getDimensionInfo(i);return" s&&(o="s.name,a=s.index),WI[r](n,e,a,o)}}}function" fr(t,e,i){if(t){var o="t.getRawDataItem(e);return" n!="=gI||w(o)||(o=null),o?o[i]:void" 0}}}function pr(t){return new gr(t)}function gr(t){t="t||{},this._reset=t.reset,this._plan=t.plan,this._count=t.count,this._onDirty=t.onDirty,this._dirty=!0,this.context}function" mr(t,e,i,n,o,a){ji.reset(i,n,o,a),t._callingprogress="e,t._callingProgress({start:i,end:n,count:n-i,next:jI.next},t.context)}function" vr(t,e){t._dueindex="t._outputDueEnd=t._dueEnd=0,t._settedOutputEnd=null;var" i,n;!e&&t._reset&&((i="t._reset(t.context))&&i.progress&&(n=i.forceFirstProgress,i=i.progress),y(i)&&!i.length&&(i=null)),t._progress=i,t._modBy=t._modDataCount=null;var" o&&o.dirty(),n}function yr(t){var xr(t){var d(e.mapdimension("seriesname",!0),function(t){var ")}function _r(t){return t.model.getrawdata().count()}function wr(t){var e.setdata(e.getrawdata().cloneshallow()),br}function br(t,e){t.end>e.outputData.count()&&e.model.getRawData().cloneShallow(e.outputData)}function Sr(t,e){d(t.CHANGABLE_METHODS,function(i){t.wrapMethod(i,v(Mr,e))})}function Mr(t){var e=Ir(t);e&&e.setOutputEnd(this.count())}function Ir(t){var e=(t.ecModel||{}).scheduler,i=e&&e.getPipeline(t.uid);if(i){var n=i.currentTask;if(n){var o=n.agentStubMap;o&&(n=o.get(t.uid))}return n}}function Tr(){this.group=new tb,this.uid=Eo("viewChart"),this.renderTask=pr({plan:Cr,reset:Lr}),this.renderTask.context={view:this}}function Ar(t,e){if(t&&(t.trigger(e),"group"===t.type))for(var i=0;i<t.childcount();i++)ar(t.childat(i),e)}function dr(t,e,i){var n="zi(t,e);null!=n?d(Di(n),function(e){Ar(t.getItemGraphicEl(e),i)}):t.eachItemGraphicEl(function(t){Ar(t,i)})}function" cr(t){return tt(t.model)}function lr(t){var e="t.model,i=t.ecModel,n=t.api,o=t.payload,a=e.pipelineContext.progressiveRender,r=t.view,s=o&&QI(o).updateMethod,l=a?" incrementalpreparerender":s&&r[s]?s:"render";return"render"!="=l&&r[l](e,i,n,o),iT[l]}function" " kr(t,e,i){function n(){h="(new" date).gettime(),c="null,t.apply(r,s||[])}var" o,a,r,s,l,u="0,h=0,c=null;e=e||0;var" d="function(){o=(new" date).gettime(),r="this,s=arguments;var" t="l||e,d=l||i;l=null,a=o-(d?u:h)-t,clearTimeout(c),d?c=setTimeout(n,t):a">=0?n():c=setTimeout(n,-a),u=o};return d.clear=function(){c&&(clearTimeout(c),c=null)},d.debounceNextCall=function(t){l=t},d}function Pr(t,e,i,n){var o=t[e];if(o){var a=o[nT]||o,r=o[aT];if(o[oT]!==i||r!==n){if(null==i||!n)return t[e]=a;(o=t[e]=kr(a,i,"debounce"===n))[nT]=a,o[aT]=n,o[oT]=i}return o}}function Nr(t,e){var i=t[e];i&&i[nT]&&(t[e]=i[nT])}function Or(t,e,i,n){this.ecInstance=t,this.api=e,this.unfinished;var i=this._dataProcessorHandlers=i.slice(),n=this._visualHandlers=n.slice();this._allHandlers=i.concat(n),this._stageTaskMap=R()}function Er(t,e,i,n,o){function a(t,e){return t.setDirty&&(!t.dirtyMap||t.dirtyMap.get(e.__pipeline.id))}o=o||{};var r;d(e,function(e,s){if(!o.visualType||o.visualType===e.visualType){var l=t._stageTaskMap.get(e.uid),u=l.seriesTaskMap,h=l.overallTask;if(h){var c,d=h.agentStubMap;d.each(function(t){a(o,t)&&(t.dirty(),c=!0)}),c&&h.dirty(),cT(h,n);var f=t.getPerformArgs(h,o.block);d.each(function(t){t.perform(f)}),r|=h.perform(f)}else u&&u.each(function(s,l){a(o,s)&&s.dirty();var u=t.getPerformArgs(s,o.block);u.skip=!e.performRawSeries&&i.isSeriesFiltered(s.context.model),cT(s,n),r|=s.perform(u)})}}),t.unfinished|=r}function Rr(t,e,i,n,o){function a(i){var a=i.uid,s=r.get(a)||r.set(a,pr({plan:Wr,reset:Hr,count:Ur}));s.context={model:i,ecModel:n,api:o,useClearVisual:e.isVisual&&!e.isLayout,plan:e.plan,reset:e.reset,scheduler:t},Xr(t,i,s)}var r=i.seriesTaskMap||(i.seriesTaskMap=R()),s=e.seriesType,l=e.getTargetSeries;e.createOnAllSeries?n.eachRawSeries(a):s?n.eachRawSeriesByType(s,a):l&&l(n,o).each(a);var u=t._pipelineMap;r.each(function(t,e){u.get(e)||(t.dispose(),r.removeKey(e))})}function zr(t,e,i,n,o){function a(e){var i=e.uid,n=s.get(i);n||(n=s.set(i,pr({reset:Vr,onDirty:Fr})),r.dirty()),n.context={model:e,overallProgress:h,modifyOutputEnd:c},n.agent=r,n.__block=h,Xr(t,e,n)}var r=i.overallTask=i.overallTask||pr({reset:Br});r.context={ecModel:n,api:o,overallReset:e.overallReset,scheduler:t};var s=r.agentStubMap=r.agentStubMap||R(),l=e.seriesType,u=e.getTargetSeries,h=!0,c=e.modifyOutputEnd;l?n.eachRawSeriesByType(l,a):u?u(n,o).each(a):(h=!1,d(n.getSeries(),a));var f=t._pipelineMap;s.each(function(t,e){f.get(e)||(t.dispose(),r.dirty(),s.removeKey(e))})}function Br(t){t.overallReset(t.ecModel,t.api,t.payload)}function Vr(t,e){return t.overallProgress&&Gr}function Gr(){this.agent.dirty(),this.getDownstream().dirty()}function Fr(){this.agent&&this.agent.dirty()}function Wr(t){return t.plan&&t.plan(t.model,t.ecModel,t.api,t.payload)}function Hr(t){t.useClearVisual&&t.data.clearAllVisual();var e=t.resetDefines=Di(t.reset(t.model,t.ecModel,t.api,t.payload));return e.length>1?f(e,function(t,e){return Zr(e)}):dT}function Zr(t){return function(e,i){var n=i.data,o=i.resetDefines[t];if(o&&o.dataEach)for(var a=e.start;a<e.end;a++)o.dataeach(n,a);else o&&o.progress&&o.progress(e,n)}}function ur(t){return t.data.count()}function xr(t,e,i){var n="e.uid,o=t._pipelineMap.get(n);!o.head&&(o.head=i),o.tail&&o.tail.pipe(i),o.tail=i,i.__idxInPipeline=o.count++,i.__pipeline=o}function" jr(t){ft="null;try{t(pT,gT)}catch(t){}return" ft}function yr(t,e){for(var i in e.prototype)t[i]="B}function" qr(t){for(_(t)&&(t="(new" domparser).parsefromstring(t,"text xml")),9="==t.nodeType&&(t=t.firstChild);" svg"!="=t.nodeName.toLowerCase()||1!==t.nodeType;)t=t.nextSibling;return" " t}function kr(){this._defs="{},this._root=null,this._isDefine=!1,this._isText=!1}function" $r(t,e){for(var>0?parseInt(n,10)/100:n?parseFloat(n):0;var o=i.getAttribute("stop-color")||"#000000";e.addColorStop(n,o)}i=i.nextSibling}}function Jr(t,e){t&&t.__inheritedStyle&&(e.__inheritedStyle||(e.__inheritedStyle={}),r(e.__inheritedStyle,t.__inheritedStyle))}function Qr(t){for(var e=P(t).split(wT),i=[],n=0;n<e.length;n+=2){var o="parseFloat(e[n]),a=parseFloat(e[n+1]);i.push([o,a])}return" i}function ts(t,e,i,n){var s in mt)if(mt.hasownproperty(s)){var l="t.getAttribute(s);null!=l&&(o[MT[s]]=l)}var" u="r?" textfill":"fill",h="r?" textstroke":"stroke";e.style="e.style||new""" ub;var c="e.style;null!=o.fill&&c.set(u,es(o.fill,i)),null!=o.stroke&&c.set(h,es(o.stroke,i)),d([" linewidth","opacity","fillopacity","strokeopacity","miterlimit","fontsize"],function(t){var" e="lineWidth" =="=t&&r?" textstrokewidth":t;null!="o[t]&&c.set(e,parseFloat(o[t]))}),o.textBaseline&&" auto"!="=o.textBaseline||(o.textBaseline="alphabetic"),"alphabetic"===o.textBaseline&&(o.textBaseline="bottom"),"start"===o.textAlign&&(o.textAlign="left"),"end"===o.textAlign&&(o.textAlign="right"),d(["lineDashOffset","lineCap","lineJoin","fontWeight","fontFamily","fontStyle","textAlign","textBaseline"],function(t){null!=o[t]&&c.set(t,o[t])}),o.lineDash&&(e.style.lineDash=P(o.lineDash).split(wT)),c[h]&&"none"!==c[h]&&(e[h]=!0),e.__inheritedStyle=o}function""" es(t,e){var i="e&&t&&t.match(IT);return" i?e[p(i[1])]:t}function is(t,e){var n="null,o=[];(i=i.replace(/,/g," " ")).replace(tt,function(t,e,i){o.push(e,i)});for(var a="o.length-1;a">0;a-=2){var r=o[a],s=o[a-1];switch(n=n||xt(),s){case"translate":r=P(r).split(wT),St(n,n,[parseFloat(r[0]),parseFloat(r[1]||0)]);break;case"scale":r=P(r).split(wT),It(n,n,[parseFloat(r[0]),parseFloat(r[1]||r[0])]);break;case"rotate":r=P(r).split(wT),Mt(n,n,parseFloat(r[0]));break;case"skew":r=P(r).split(wT),console.warn("Skew transform is not supported yet");break;case"matrix":r=P(r).split(wT);n[0]=parseFloat(r[0]),n[1]=parseFloat(r[1]),n[2]=parseFloat(r[2]),n[3]=parseFloat(r[3]),n[4]=parseFloat(r[4]),n[5]=parseFloat(r[5])}}e.setLocalTransform(n)}}function ns(t){var e=t.getAttribute("style"),i={};if(!e)return i;var n={};AT.lastIndex=0;for(var o;null!=(o=AT.exec(e));)n[o[1]]=o[2];for(var a in MT)MT.hasOwnProperty(a)&&null!=n[a]&&(i[MT[a]]=n[a]);return i}function os(t,e,i){var n=e/t.width,o=i/t.height,a=Math.min(n,o);return{scale:[a,a],position:[-(t.x+t.width/2)*a+e/2,-(t.y+t.height/2)*a+i/2]}}function as(t,e){return(new Kr).parse(t,e)}function rs(t){return function(e,i,n){e=e&&e.toLowerCase(),fw.prototype[t].call(this,e,i,n)}}function ss(){fw.call(this)}function ls(t,e,n){function o(t,e){return t.__prio-e.__prio}n=n||{},"string"==typeof e&&(e=QT[e]),this.id,this.group,this._dom=t;var a=this._zr=Ii(t,{renderer:n.renderer||"canvas",devicePixelRatio:n.devicePixelRatio,width:n.width,height:n.height});this._throttledZrFlush=kr(m(a.flush,a),17),(e=i(e))&&VI(e,!0),this._theme=e,this._chartsViews=[],this._chartsMap={},this._componentsViews=[],this._componentsMap={},this._coordSysMgr=new Ga;var r=this._api=Ts(this);_e(JT,o),_e(qT,o),this._scheduler=new Or(this,r,qT,JT),fw.call(this,this._ecEventProcessor=new As),this._messageCenter=new ss,this._initEvents(),this.resize=m(this.resize,this),this._pendingActions=[],a.animation.on("frame",this._onframe,this),ms(a,this),N(this)}function us(t,e,i){var n,o=this._model,a=this._coordSysMgr.getCoordinateSystems();e=Vi(o,e);for(var r=0;r<a.length;r++){var s="a[r];if(s[t]&&null!=(n=s[t](o,e,i)))return" n}}function hs(t){var e="t._model,i=t._scheduler;i.restorePipelines(e),i.prepareStageTasks(),vs(t," component",e,i),vs(t,"chart",e,i),i.plan()}function" cs(t,e,i,n,o){function a(n){n&&n.__alive&&n[e]&&n[e](n.__model,r,t._api,i)}var r="t._model;if(n){var" l="{mainType:n,query:s};o&&(l.subType=o);var" u="i.excludeSeriesId;null!=u&&(u=R(Di(u))),r&&r.eachComponent(l,function(e){u&&null!=u.get(e.id)||a(t[" series"="==n?" _chartsmap":"_componentsmap"][e.__viewid])},t)}else"" pt(t._componentsviews.concat(t._chartsviews),a)}function ds(t,e){var i="t._chartsMap,n=t._scheduler;e.eachSeries(function(t){n.updateStreamModes(t,i[t.__viewId])})}function" fs(t,e){var h="[t],c=!1;t.batch&&(c=!0,h=f(t.batch,function(e){return" d,p="[],g=" highlight"="==i||" downplay"="==i;PT(h,function(t){d=o.action(t,this._model,this._api),(d=d||a({},t)).type=s.event||d.type,p.push(d),g?cs(this,u,t,"series"):l&&cs(this,u,t,l.main,l.sub)},this),"none"===u||g||l||(this[WT]?(hs(this),UT.update.call(this,t),this[WT]=!1):UT[u].call(this,t)),d=c?{type:s.event||i,escapeConnect:n,batch:p}:p[0],this[FT]=!1,!e&&this._messageCenter.trigger(d.type,d)}function""" ps(t){for(var gs(t){!t&&this.trigger("updated")}function ms(t,e){t.on("rendered",function(){e.trigger("rendered"),!t.animation.isfinished()||e[wt]||e._scheduler.unfinished||e._pendingactions.length||e.trigger("finished")})}function vs(t,e,i,n){function o(t){var +t.id+"_"+t.type,o="s[e];if(!o){var" a="component" =="=e,r=a?t._componentsViews:t._chartsViews,s=a?t._componentsMap:t._chartsMap,l=t._zr,u=t._api,h=0;h<r.length;h++)r[h].__alive=!1;a?i.eachComponent(function(t,e){" series"!="=t&&o(e)}):i.eachSeries(o);for(h=0;h<r.length;){var" " c="r[h];c.__alive?h++:(!a&&c.renderTask.dispose(),l.remove(c.group),c.dispose(i,u),r.splice(h,1),delete" s[c.__id],c.__id="c.group.__ecComponentInfo=null)}}function" ys(t){t.clearcolorpalette(),t.eachseries(function(t){t.clearcolorpalette()})}function xs(t,e,i,n){_s(t,e,i,n),pt(t._chartsviews,function(t){t.__alive="!1}),ws(t,e,i,n),PT(t._chartsViews,function(t){t.__alive||t.remove(e,i)})}function" _s(t,e,i,n,o){pt(o||t._componentsviews,function(t){var o="t.__model;t.render(o,e,i,n),Is(o,t)})}function" ws(t,e,i,n,o){var a,r="t._scheduler;e.eachSeries(function(e){var" bs(t,e){pt($t,function(i){i(t,e)})}function ss(t,e){var>e.get("hoverLayerThreshold")&&!U_.node&&i.traverse(function(t){t.isGroup||(t.useHoverLayer=!0)})}function Ms(t,e){var i=t.get("blendMode")||null;e.group.traverse(function(t){t.isGroup||t.style.blend!==i&&t.setStyle("blend",i),t.eachPendingDisplayable&&t.eachPendingDisplayable(function(t){t.setStyle("blend",i)})})}function Is(t,e){var i=t.get("z"),n=t.get("zlevel");e.group.traverse(function(t){"group"!==t.type&&(null!=i&&(t.z=i),null!=n&&(t.zlevel=n))})}function Ts(t){var e=t._coordSysMgr;return a(new Va(t),{getCoordinateSystems:m(e.getCoordinateSystems,e),getComponentByElement:function(e){for(;e;){var i=e.__ecComponentInfo;if(null!=i)return t._model.getComponent(i.mainType,i.index);e=e.parent}}})}function As(){this.eventInfo}function Ds(t){function e(t,e){for(var n=0;n<t.length;n++)t[n][i]=e}var i="__connectUpdateStatus" ;pt(yt,function(n,o){t._messagecenter.on(o,function(n){if(ia[t.group]&&0!="=t[i]){if(n&&n.escapeConnect)return;var" o="t.makeActionFromEvent(n),a=[];PT(eA,function(e){e!==t&&e.group===t.group&&a.push(e)}),e(a,0),PT(a,function(t){1!==t[i]&&t.dispatchAction(o)}),e(a,2)}})})}function" cs(t){ia[t]="!1}function" ls(t){return ea[wi(t,aa)]}function ks(t,e){qt[t]="e}function" ps(t){kt.push(t)}function ns(t,e){bs(qt,t,e,zt)}function os(t,e,i){"function"="=typeof" e&&(i="e,e=" ");var" n="OT(t)?t.type:[t,t={event:e}][0];t.event=(t.event||n).toLowerCase(),e=t.event,kT(HT.test(n)&&HT.test(e)),jT[n]||(jT[n]={action:i,actionInfo:t}),YT[e]=n}function" es(t,e){ga.register(t,e)}function rs(t,e){bs(jt,t,e,bt,"layout")}function zs(t,e){bs(jt,t,e,vt,"visual")}function bs(t,e,i,n,o){(nt(e)||ot(e))&&(i="e,e=n);var" a="Or.wrapStageHandler(i,o);return" a.__prio="e,a.__raw=i,t.push(a),a}function" vs(t,e){ta[t]="e}function" gs(t){return ui.extend(t)}function fs(t){return ki.extend(t)}function ws(t){return qi.extend(t)}function hs(t){return tr.extend(t)}function zs(t){return t}function us(t,e,i,n,o){this._old="t,this._new=e,this._oldKeyGetter=i||Zs,this._newKeyGetter=n||Zs,this.context=o}function" xs(t,e,i,n,o){for(var r="_ec_" +o[n](t[a],a),s="e[r];null==s?(i.push(r),e[r]=a):(s.length||(e[r]=s=[s]),s.push(a))}}function" js(t){var e="{},i=e.encode={},n=R(),o=[],a=[];d(t.dimensions,function(e){var" l="i[s];i.hasOwnProperty(s)||(l=i[s]=[]),l[r.coordDimIndex]=e,r.isExtraCoord||(n.set(s,1),qs(r.type)&&(o[0]=e)),r.defaultTooltip&&a.push(e)}lA.each(function(t,e){var" u="i.tooltip;return" u&&u.length?a="u.slice():a.length||(a=o.slice()),i.defaultedLabel=o,i.defaultedTooltip=a,e}function" ys(t){return"category"="==t?" ordinal":"time"="==t?" time":"float"}function"" qs(t){return!("ordinal"="==t||" time"="==t)}function" " ks(t){return t._rawcount>65535?fA:gA}function $s(t){var e=t.constructor;return e===Array?t.slice():new e(t)}function Js(t,e){d(mA.concat(e.__wrappedMethods||[]),function(i){e.hasOwnProperty(i)&&(t[i]=e[i])}),t.__wrappedMethods=e.__wrappedMethods,d(vA,function(n){t[n]=i(e[n])}),t._calculationInfo=a(e._calculationInfo)}function Qs(t,e,i,n,o){var a=dA[e.type],r=n-1,s=e.name,l=t[s][r];if(l&&l.length<i){for(var u="new" a(math.min(o-r*i,i)),h="0;h<l.length;h++)u[h]=l[h];t[s][r]=u}for(var" c="n*i;c<o;c+=i)t[s].push(new" a(math.min(o-c,i)))}function tl(t){var e="t._invertedIndicesMap;d(e,function(i,n){var" o="t._dimensionInfos[n].ordinalMeta;if(o){i=e[n]=new" pa(o.categories.length);for(a="0;a<i.length;a++)i[a]=hA;for(var" a="0;a<t._count;a++)i[t.get(n,a)]=a}})}function" el(t,e,i){var n;if(null!="e){var" n}function il(t){return t}function nl(t){return t<this._count&&t>=0?this._indices[t]:-1}function ol(t,e){var i=t._idList[e];return null==i&&(i=el(t,t._idDimIdx,e)),null==i&&(i=cA+e),i}function al(t){return y(t)||(t=[t]),t}function rl(t,e){var i=t.dimensions,n=new yA(f(i,t.getDimensionInfo,t),t.hostModel);Js(n,t);for(var o=n._storage={},a=t._storage,r=0;r<i.length;r++){var s="i[r];a[s]&&(l(e,s)">=0?(o[s]=sl(a[s]),n._rawExtent[s]=ll(),n._extent[s]=null):o[s]=a[s])}return n}function sl(t){for(var e=new Array(t.length),i=0;i<t.length;i++)e[i]=$s(t[i]);return e}function ll(){return[1 0,-1 0]}function ul(t,e,n){function o(t,e,i){null!="lA.get(e)?t.otherDims[e]=i:(t.coordDim=e,t.coordDimIndex=i,h.set(e,!0))}xa.isInstance(e)||(e=xa.seriesDataToSource(e)),n=n||{},t=(t||[]).slice();for(var" s="(n.dimsDef||[]).slice(),l=R(n.encodeDef),u=R(),h=R(),c=[],f=hl(e,t,s,n.dimCount),p=0;p<f;p++){var" g="s[p]=a({},w(s[p])?s[p]:{name:s[p]}),m=g.name,v=c[p]={otherDims:{}};null!=m&&null==u.get(m)&&(v.name=v.displayName=m,u.set(m,p)),null!=g.type&&(v.type=g.type),null!=g.displayName&&(v.displayName=g.displayName)}l.each(function(t,e){if(1===(t=Di(t).slice()).length&&t[0]<0)l.set(e,!1);else{var" i="l.set(e,[]);d(t,function(t,n){_(t)&&(t=u.get(t)),null!=t&&t<f&&(i[n]=t,o(c[t],e,n))})}});var" y="0;d(t,function(t,e){var" n,t,a,s;if(_(t))n="t,t={};else{n=t.name;var" u="t.ordinalMeta;t.ordinalMeta=null,(t=i(t)).ordinalMeta=u,a=t.dimsDef,s=t.otherDims,t.name=t.coordDim=t.coordDimIndex=t.dimsDef=t.otherDims=null}var" h="l.get(n);if(!1!==h){if(!(h=Di(h)).length)for(var" f="0;f<(a&&a.length||1);f++){for(;y<c.length&&null!=c[y].coordDim;)y++;y<c.length&&h.push(y++)}d(h,function(e,i){var" l="c[e];if(o(r(l,t),n,i),null==l.name&&a){var" x="n.generateCoord,b=n.generateCoordCount,S=null!=b;b=x?b||1:0;for(var" m="x||" value",i="0;I<f;I++)null==(v=c[I]=c[I]||{}).coordDim&&(v.coordDim=cl(M,h,S),v.coordDimIndex=0,(!x||b<=0)&&(v.isExtraCoord=!0),b--),null==v.name&&(v.name=cl(v.coordDim,u)),null==v.type&&La(e,I,v.name)&&(v.type=" ordinal");return"" c}function hl(t,e,i,n){var o="Math.max(t.dimensionsDetectCount||1,e.length,i.length,n||0);return" d(e,function(t){var e="t.dimsDef;e&&(o=Math.max(o,e.length))}),o}function" cl(t,e,i){if(i||null!="e.get(t)){for(var" n="0;null!=e.get(t+n);)n++;t+=n}return" e.set(t,!0),t}function dl(t,e,i){var n,o,a,r,s="(i=i||{}).byIndex,l=i.stackedCoordDimension,u=!(!t||!t.get(" stack"));if(d(e,function(t,i){_(t)&&(e[i]="t={name:t}),u&&!t.isExtraCoord&&(s||n||!t.ordinalMeta||(n=t),o||" ordinal"="==t.type||"time"===t.type||l&&l!==t.coordDim||(o=t))}),!o||s||n||(s=!0),o){a="__\0ecstackresult",r="__\0ecstackedover",n&&(n.createInvertedIndices=!0);var""" fl(t,e){return!!e&&e="==t.getCalculationInfo(" stackeddimension")}function" pl(t,e){return fl(t,e)?t.getcalculationinfo("stackresultdimension"):e}function gl(t,e,i){i="i||{},xa.isInstance(t)||(t=xa.seriesDataToSource(t));var" n,o="e.get(" coordinatesystem"),a="Ga.get(o),r=va(e);r&&(n=f(r.coordSysDims,function(t){var" " e})),n||(n="a&&(a.getDimensionsInfo?a.getDimensionsInfo():a.dimensions.slice())||[" x","y"]);var" s,l,u="wA(t,{coordDimensions:n,generateCoord:i.generateCoord});r&&d(u,function(t,e){var" ya(u,e);c.setcalculationinfo(h);var p="null!=s&&ml(t)?function(t,e,i,n){return" c.hasitemoption="!1,c.initData(t,null,p),c}function" ml(t){if(t.sourceformat="==gI){var" null!="e&&!y(Li(e))}}function" vl(t){for(var t[e]}function yl(t){this._setting="t||{},this._extent=[1/0,-1/0],this._interval=0,this.init&&this.init.apply(this,arguments)}function" xl(t){this.categories="t.categories||[],this._needCollect=t.needCollect,this._deduplication=t.deduplication,this._map}function" _l(t){return t._map||(t._map="R(t.categories))}function" wl(t){return w(t)&&null!="t.value?t.value:t+" "}function" bl(t,e,i,n){var>n&&(r=o.interval=n);var s=o.intervalPrecision=Sl(r);return Il(o.niceTickExtent=[IA(Math.ceil(t[0]/r)*r,s),IA(Math.floor(t[1]/r)*r,s)],t),o}function Sl(t){return Wo(t)+2}function Ml(t,e,i){t[e]=Math.max(Math.min(t[e],i[1]),i[0])}function Il(t,e){!isFinite(t[0])&&(t[0]=e[0]),!isFinite(t[1])&&(t[1]=e[1]),Ml(t,0,e),Ml(t,1,e),t[0]>t[1]&&(t[0]=t[1])}function Tl(t,e,i,n){var o=[];if(!t)return o;e[0]<i[0]&&o.push(e[0]);for(var a="i[0];a<=i[1]&&(o.push(a),(a=IA(a+t,n))!==o[o.length-1]);)if(o.length">1e4)return[];return e[1]>(o.length?o[o.length-1]:i[1])&&o.push(e[1]),o}function Al(t){return t.get("stack")||DA+t.seriesIndex}function Dl(t){return t.dim+t.index}function Cl(t){var e=[],i=t.axis;if("category"===i.type){for(var n=i.getBandWidth(),o=0;o<t.count;o++)e.push(r({bandwidth:n,axiskey:"axis0",stackid:da+o},t));for(var a="Pl(e),s=[],o=0;o<t.count;o++){var" l="a.axis0[DA+o];l.offsetCenter=l.offset+l.width/2,s.push(l)}return" s}}function ll(t,e){var i="[];return" e.eachseriesbytype(t,function(t){el(t)&&!rl(t)&&i.push(t)}),i}function kl(t){var e="[];return" d(t,function(t){var pl(t){var n="t.axisKey,o=t.bandWidth,a=e[n]||{bandWidth:o,remainedWidth:o,autoWidthCount:0,categoryGap:" 20%",gap:"30%",stacks:{}},r="a.stacks;e[n]=a;var" " s="t.stackId;r[s]||a.autoWidthCount++,r[s]=r[s]||{width:0,maxWidth:0};var" u="t.barMaxWidth;u&&(r[s].maxWidth=u);var" h="t.barGap;null!=h&&(a.gap=h);var" c="t.barCategoryGap;null!=c&&(a.categoryGap=c)});var" d(e,function(t,e){i[e]="{};var" h,c="0;d(n,function(t,e){t.width||(t.width=u),h=t,c+=t.width*(1+r)}),h&&(c-=h.width*r);var" f="-c/2;d(n,function(t,n){i[e][n]=i[e][n]||{offset:f,width:t.width},f+=t.width*(1+r)})}),i}function" nl(t,e,i){if(t&&e){var null!="n&&null!=i&&(n=n[Al(i)]),n}}function" ol(t,e){var d="e.mapDimension(h.dim),f=e.mapDimension(a.dim),p=fl(e,d),g=h.isHorizontal(),m=zl(a,h,p),v=0,y=e.count();v<y;v++){var" x="e.get(d,v),_=e.get(f,v);if(!isNaN(x)){var" w="x">=0?"p":"n",b=m;p&&(o[r][_]||(o[r][_]={p:m,n:m}),b=o[r][_][w]);var S,M,I,T;if(g)S=b,M=(A=i.dataToPoint([x,_]))[1]+l,I=A[0]-m,T=u,Math.abs(I)<c&&(i=(i<0?-1:1)*c),p&&(o[r][_][w]+=i);else{var a="i.dataToPoint([_,x]);S=A[0]+l,M=b,I=u,T=A[1]-m,Math.abs(T)<c&&(T=(T<=0?-1:1)*c),p&&(o[r][_][w]+=T)}e.setItemLayout(v,{x:S,y:M,width:I,height:T})}}},this)}function" el(t){return t.coordinatesystem&&"cartesian2d"="==t.coordinateSystem.type}function" rl(t){return t.pipelinecontext&&t.pipelinecontext.large}function zl(t,e,i){var n,o,a="e.getGlobalExtent();a[0]">a[1]?(n=a[1],o=a[0]):(n=a[0],o=a[1]);var r=e.toGlobalCoord(e.dataToCoord(0));return r<n&&(r=n),r>o&&(r=o),r}function Bl(t,e){return GA(t,VA(e))}function Vl(t,e){var i,n,o,a=t.type,r=e.getMin(),s=e.getMax(),l=null!=r,u=null!=s,h=t.getExtent();"ordinal"===a?i=e.getCategories().length:(y(n=e.get("boundaryGap"))||(n=[n||0,n||0]),"boolean"==typeof n[0]&&(n=[0,0]),n[0]=Bo(n[0],1),n[1]=Bo(n[1],1),o=h[1]-h[0]||Math.abs(h[0])),null==r&&(r="ordinal"===a?i?0:NaN:h[0]-n[0]*o),null==s&&(s="ordinal"===a?i?i-1:NaN:h[1]+n[1]*o),"dataMin"===r?r=h[0]:"function"==typeof r&&(r=r({min:h[0],max:h[1]})),"dataMax"===s?s=h[1]:"function"==typeof s&&(s=s({min:h[0],max:h[1]})),(null==r||!isFinite(r))&&(r=NaN),(null==s||!isFinite(s))&&(s=NaN),t.setBlank(I(r)||I(s)||"ordinal"===a&&!t.getOrdinalMeta().categories.length),e.getNeedCrossZero()&&(r>0&&s>0&&!l&&(r=0),r<0&&s<0&&!u&&(s=0));var 0="==r)return{min:t,max:e};var" c="e.ecModel;if(c&&" time"="==a){var" " f,p="Ll(" bar",c);if(d(p,function(t){f|="t.getBaseAxis()===e.axis}),f){var" g="kl(p),m=Gl(r,s,e,g);r=m.min,s=m.max}}return[r,s]}function" gl(t,e,i,n){var o="i.axis.getExtent(),a=o[1]-o[0],r=Nl(n,i.axis);if(void" s="1/0;d(r,function(t){s=Math.min(t.offset,s)});var" l="-1/0;d(r,function(t){l=Math.max(t.offset+t.width,l)}),s=Math.abs(s),l=Math.abs(l);var" u="s+l,h=e-t,c=h/(1-(s+l)/a)-h;return" e+="c*(l/u),t-=c*(s/u),{min:t,max:e}}function" fl(t,e){var i="Vl(t,e),n=null!=e.getMin(),o=null!=e.getMax(),a=e.get(" splitnumber");"log"="==t.type&&(t.base=e.get(" logbase"));var"" r="t.type;t.setExtent(i[0],i[1]),t.niceExtent({splitNumber:a,fixMin:n,fixMax:o,minInterval:" interval"="==r||" wl(t,e){if(e="e||t.get(" type"))switch(e){case"category":return" new ma(t.getordinalmeta?t.getordinalmeta():t.getcategories(),[1 0,-1 0]);case"value":return aa;default:return(yl.getclass(e)||aa).create(t)}}function hl(t){var e="t.scale.getExtent(),i=e[0],n=e[1];return!(i">0&&n>0||i<0&&n<0)}function zl(t){var e="t.getLabelModel().get(" formatter"),i="category" =="=t.type?t.scale.getExtent()[0]:null;return" string"="=typeof""" e?e="function(e){return" function(i){return i="t.scale.getLabel(i),e.replace(" {value}",null!="i?i:" ")}}(e):"function"="=typeof""" e?function(n,o){return null!="i&&(o=n-i),e(Ul(t,n),o)}:function(e){return" t.scale.getlabel(e)}}function ul(t,e){return"category"="==t.type?t.scale.getLabel(e):e}function" xl(t){var n,o,a="category" s,l="t.getLabelModel(),u=Zl(t),h=1;o">40&&(h=Math.ceil(o/40));for(var c=0;c<o;c+=h){var d="u(n?n[c]:r[0]+c),f=jl(l.getTextRect(d),l.get(" rotate")||0);s?s.union(f):s="f}return" " s}}function jl(t,e){var i="e*Math.PI/180,n=t.plain(),o=n.width,a=n.height,r=o*Math.cos(i)+a*Math.sin(i),s=o*Math.sin(i)+a*Math.cos(i);return" new de(n.x,n.y,r,s)}function yl(t){var e="t.get(" interval");return" null="=e?" auto":e}function" ql(t){return"category"="==t.type&&0===Yl(t.getLabelModel())}function" kl(t,e){if("image"!="=this.type){var" $l(t,e,i,n,o,a,r){var s="0===t.indexOf(" empty");s&&(t="t.substr(5,1).toLowerCase()+t.substr(6));var" l;return l="0===t.indexOf(" image: ")?xn(t.slice(8),new" de(e,i,n,o),r?"center":"cover"):0="==t.indexOf(" path: ")?un(t.slice(7),{},new" de(e,i,n,o),r?"center":"cover"):new qa({shape:{symboltype:t,x:e,y:i,width:n,height:o}}),l.__isemptybrush="s,l.setColor=Kl,l.setColor(a),l}function" jl(t,e){return math.abs(t-e)<id}function ql(t,e,i){var n="0,o=t[0];if(!o)return!1;for(var" a="1;a<t.length;a++){var" r="t[a];n+=bn(o[0],o[1],r[0],r[1],e,i),o=r}var" jl(o[0],s[0])&&jl(o[1],s[1])||(n+="bn(o[0],o[1],s[0],s[1],e,i)),0!==n}function" tu(t,e,i){if(this.name="t,this.geometries=e,i)i=[i[0],i[1]];else{var" eu(t){if(!t.utf8encoding)return t;var o="i[n].geometry,a=o.coordinates,r=o.encodeOffsets,s=0;s<a.length;s++){var" if("multipolygon"="==o.type)for(var" u="0;u<l.length;u++){var" h="l[u];l[u]=iu(h,r[s][u],e)}}return" t.utf8encoding="!1,t}function" iu(t,e,i){for(var>>1^-(1&s),l=l>>1^-(1&l),o=s+=o,a=l+=a,n.push([s/i,l/i])}return n}function nu(t){return"category"===t.type?au(t):lu(t)}function ou(t,e){return"category"===t.type?su(t,e):{ticks:t.scale.getTicks()}}function au(t){var e=t.getLabelModel(),i=ru(t,e);return!e.get("show")||t.scale.isBlank()?{labels:[],labelCategoryInterval:i.labelCategoryInterval}:i}function ru(t,e){var i=uu(t,"labels"),n=Yl(e),o=hu(i,n);if(o)return o;var a,r;return a=x(n)?mu(t,n):gu(t,r="auto"===n?du(t):n),cu(i,n,{labels:a,labelCategoryInterval:r})}function su(t,e){var i=uu(t,"ticks"),n=Yl(e),o=hu(i,n);if(o)return o;var a,r;if(e.get("show")&&!t.scale.isBlank()||(a=[]),x(n))a=mu(t,n,!0);else if("auto"===n){var s=ru(t,t.getLabelModel());r=s.labelCategoryInterval,a=f(s.labels,function(t){return t.tickValue})}else a=gu(t,r=n,!0);return cu(i,n,{ticks:a,tickCategoryInterval:r})}function lu(t){var e=t.scale.getTicks(),i=Zl(t);return{labels:f(e,function(e,n){return{formattedLabel:i(e,n),rawLabel:t.scale.getLabel(e),tickValue:e}})}}function uu(t,e){return oD(t)[e]||(oD(t)[e]=[])}function hu(t,e){for(var i=0;i<t.length;i++)if(t[i].key===e)return t[i].value}function cu(t,e,i){return t.push({key:e,value:i}),i}function du(t){var e="oD(t).autoInterval;return" null!="e?e:oD(t).autoInterval=t.calculateCategoryInterval()}function" fu(t){var 0;var s="1;r">40&&(s=Math.max(1,Math.floor(r/40)));for(var l=a[0],u=t.dataToCoord(l+1)-t.dataToCoord(l),h=Math.abs(u*Math.cos(n)),c=Math.abs(u*Math.sin(n)),d=0,f=0;l<=a[1];l+=s){var p="0,g=0,m=ke(i(l),e.font," center","top");p="1.3*m.width,g=1.3*m.height,d=Math.max(d,p,7),f=Math.max(f,g,7)}var" " v="d/h,y=f/c;isNaN(v)&&(v=1/0),isNaN(y)&&(y=1/0);var" x="Math.max(0,Math.floor(Math.min(v,y))),_=oD(t.model),w=_.lastAutoInterval,b=_.lastTickCount;return" null!="w&&null!=b&&Math.abs(w-x)<=1&&Math.abs(b-r)<=1&&w">x?x=w:(_.lastTickCount=r,_.lastAutoInterval=x),x}function pu(t){var e=t.getLabelModel();return{axisRotate:t.getRotate?t.getRotate():t.isHorizontal&&!t.isHorizontal()?90:0,labelRotate:e.get("rotate")||0,font:e.getFont()}}function gu(t,e,i){function n(t){l.push(i?t:{formattedLabel:o(t),rawLabel:a.getLabel(t),tickValue:t})}var o=Zl(t),a=t.scale,r=a.getExtent(),s=t.getLabelModel(),l=[],u=Math.max((e||0)+1,1),h=r[0],c=a.count();0!==h&&u>1&&c/u>2&&(h=Math.round(Math.ceil(h/u)*u));var d=ql(t),f=s.get("showMinLabel")||d,p=s.get("showMaxLabel")||d;f&&h!==r[0]&&n(r[0]);for(var g=h;g<=r[1];g+=u)n(g);return p&&g!="=r[1]&&n(r[1]),l}function" mu(t,e,i){var n="t.scale,o=Zl(t),a=[];return" d(n.getticks(),function(t){var r="n.getLabel(t);e(t,r)&&a.push(i?t:{formattedLabel:o(t),rawLabel:r,tickValue:t})}),a}function" vu(t,e){var i="(t[1]-t[0])/e/2;t[0]+=i,t[1]-=i}function" yu(t,e,i,n,o){function a(t,e){return h?t>e:t<e}var r="e.length;if(t.onBand&&!n&&r){var" s,l="t.getExtent();if(1===r)e[0].coord=l[0],s=e[1]={coord:l[0]};else{var" u="e[1].coord-e[0].coord;d(e,function(t){t.coord-=u/2;var" e="e||0;e%2">0&&(t.coord-=u/(2*(e+1)))}),s={coord:e[r-1].coord+u},e.push(s)}var h=l[0]>l[1];a(e[0].coord,l[0])&&(o?e[0].coord=l[0]:e.shift()),o&&a(l[0],e[0].coord)&&e.unshift({coord:l[0]}),a(l[1],s.coord)&&(o?s.coord=l[1]:e.pop()),o&&a(s.coord,l[1])&&e.push({coord:l[1]})}}function xu(t,e){var i=t.mapDimension("defaultedLabel",!0),n=i.length;if(1===n)return dr(t,e,i[0]);if(n){for(var o=[],a=0;a<i.length;a++){var r="dr(t,e,i[a]);o.push(r)}return" o.join(" ")}}function _u(t,e,i){tb.call(this),this.updatedata(t,e,i)}function wu(t){return[t[0] 2,t[1] 2]}function bu(t,e){this.parent.drift(t,e)}function su(){!ro(this)&&iu.call(this)}function mu(){!ro(this)&&tu.call(this)}function iu(){if(!this.incremental&&!this.usehoverlayer){var t="this.__symbolOriginalScale,e=t[1]/t[0];this.animateTo({scale:[Math.max(1.1*t[0],t[0]+3),Math.max(1.1*t[1],t[1]+3*e)]},400," elasticout")}}function" tu(){this.incremental||this.usehoverlayer||this.animateto({scale:this.__symboloriginalscale},400,"elasticout")}function au(t){this.group="new" tb,this._symbolctor="t||_u}function" du(t,e,i,n){return e&&!isnan(e[0])&&!isnan(e[1])&&!(n.isignore&&n.isignore(i))&&!(n.clipshape&&!n.clipshape.contain(e[0],e[1]))&&"none"!="=t.getItemVisual(i," symbol")}function" cu(t){return null="=t||w(t)||(t={isIgnore:t}),t||{}}function" lu(t){var e="t.hostModel;return{itemStyle:e.getModel(" itemstyle").getitemstyle(["color"]),hoveritemstyle:e.getmodel("emphasis.itemstyle").getitemstyle(),symbolrotate:e.get("symbolrotate"),symboloffset:e.get("symboloffset"),hoveranimation:e.get("hoveranimation"),labelmodel:e.getmodel("label"),hoverlabelmodel:e.getmodel("emphasis.label"),cursorstyle:e.get("cursor")}}function" ku(t,e,i){var n,o="t.getBaseAxis(),a=t.getOtherAxis(o),r=Pu(a,i),s=o.dim,l=a.dim,u=e.mapDimension(l),h=e.mapDimension(s),c=" x"="==l||" radius"="==l?1:0,d=f(t.dimensions,function(t){return""" e.mapdimension(t)}),p="e.getCalculationInfo(" stackresultdimension");return(n|="fl(e,d[0]))&&(d[0]=p),(n|=fl(e,d[1]))&&(d[1]=p),{dataDimsForPoint:d,valueStart:r,valueAxisDim:l,baseAxisDim:s,stacked:!!n,valueDim:u,baseDim:h,baseDataOffset:c,stackedOverDimension:e.getCalculationInfo(" stackedoverdimension")}}function"" pu(t,e){var i="0,n=t.scale.getExtent();return" start"="==e?i=n[0]:" end"="==e?i=n[1]:n[0]""">0?i=n[0]:n[1]<0&&(i=n[1]),i}function nu(t,e,i,n){var o="NaN;t.stacked&&(o=i.get(i.getCalculationInfo(" stackedoverdimension"),n)),isnan(o)&&(o="t.valueStart);var" " a="t.baseDataOffset,r=[];return" r[a]="i.get(t.baseDim,n),r[1-a]=o,e.dataToPoint(r)}function" ou(t,e){var i="[];return" e.diff(t).add(function(t){i.push({cmd:"+",idx:t})}).update(function(t,e){i.push({cmd:"=",idx:e,idx1:t})}).remove(function(t){i.push({cmd:" -",idx:t})}).execute(),i}function eu(t){return isnan(t[0])||isnan(t[1])}function ru(t,e,i,n,o,a,r,s,l,u,h){return"none"!="=u&&u?zu.apply(this,arguments):Bu.apply(this,arguments)}function" zu(t,e,i,n,o,a,r,s,l,u,h){for(var c="0,d=i,f=0;f<n;f++){var" p="e[d];if(d">=o||d<0)break;if(eu(p)){if(h){d+=a;continue}break}if(d===i)t[a>0?"moveTo":"lineTo"](p[0],p[1]);else if(l>0){var g=e[c],m="y"===u?1:0,v=(p[m]-g[m])*l;wD(SD,g),SD[m]=g[m]+v,wD(MD,p),MD[m]=p[m]-v,t.bezierCurveTo(SD[0],SD[1],MD[0],MD[1],p[0],p[1])}else t.lineTo(p[0],p[1]);c=d,d+=a}return f}function Bu(t,e,i,n,o,a,r,s,l,u,h){for(var c=0,d=i,f=0;f<n;f++){var p="e[d];if(d">=o||d<0)break;if(eu(p)){if(h){d+=a;continue}break}if(d===i)t[a>0?"moveTo":"lineTo"](p[0],p[1]),wD(SD,p);else if(l>0){var g=d+a,m=e[g];if(h)for(;m&&Eu(e[g]);)m=e[g+=a];var v=.5,y=e[c];if(!(m=e[g])||Eu(m))wD(MD,p);else{Eu(m)&&!h&&(m=p),U(bD,m,y);var x,_;if("x"===u||"y"===u){var w="x"===u?0:1;x=Math.abs(p[w]-y[w]),_=Math.abs(p[w]-m[w])}else x=uw(p,y),_=uw(p,m);_D(MD,p,bD,-l*(1-(v=_/(_+x))))}yD(SD,SD,s),xD(SD,SD,r),yD(MD,MD,s),xD(MD,MD,r),t.bezierCurveTo(SD[0],SD[1],MD[0],MD[1],p[0],p[1]),_D(SD,p,bD,l*v)}else t.lineTo(p[0],p[1]);c=d,d+=a}return f}function Vu(t,e){var i=[1/0,1/0],n=[-1/0,-1/0];if(e)for(var o=0;o<t.length;o++){var a="t[o];a[0]<i[0]&&(i[0]=a[0]),a[1]<i[1]&&(i[1]=a[1]),a[0]">n[0]&&(n[0]=a[0]),a[1]>n[1]&&(n[1]=a[1])}return{min:e?i:n,max:e?n:i}}function Gu(t,e){if(t.length===e.length){for(var i=0;i<t.length;i++){var n="t[i],o=e[i];if(n[0]!==o[0]||n[1]!==o[1])return}return!0}}function" fu(t){return"number"="=typeof" t?t:t?.5:0}function wu(t){var e="t.getGlobalExtent();if(t.onBand){var" i="t.getBandWidth()/2-1,n=e[1]">e[0]?1:-1;e[0]+=n*i,e[1]-=n*i}return e}function Hu(t,e,i){if(!i.valueDim)return[];for(var n=[],o=0,a=e.count();o<a;o++)n.push(nu(i,t,e,o));return n}function zu(t,e,i,n){var o="Wu(t.getAxis(" x")),a="Wu(t.getAxis(" y")),r="t.getBaseAxis().isHorizontal(),s=Math.min(o[0],o[1]),l=Math.min(a[0],a[1]),u=Math.max(o[0],o[1])-s,h=Math.max(a[0],a[1])-l;if(i)s-=.5,u+=.5,l-=.5,h+=.5;else{var""" c="n.get(" linestyle.width")||2,d="n.get(" clipoverflow")?c 2:math.max(u,h);r?(l-="d,h+=2*d):(s-=d,u+=2*d)}var""" f="new" ym({shape:{x:s,y:l,width:u,height:h}});return e&&(f.shape[r?"width":"height"]="0,Io(f,{shape:{width:u,height:h}},n)),f}function" uu(t,e,i,n){var>a[1]&&a.reverse();var r=o.getExtent(),s=Math.PI/180;i&&(a[0]-=.5,a[1]+=.5);var l=new hM({shape:{cx:Vo(t.cx,1),cy:Vo(t.cy,1),r0:Vo(a[0],1),r:Vo(a[1],1),startAngle:-r[0]*s,endAngle:-r[1]*s,clockwise:o.inverse}});return e&&(l.shape.endAngle=-r[0]*s,Io(l,{shape:{endAngle:-r[1]*s}},n)),l}function Xu(t,e,i,n){return"polar"===t.type?Uu(t,e,i,n):Zu(t,e,i,n)}function ju(t,e,i){for(var n=e.getBaseAxis(),o="x"===n.dim||"radius"===n.dim?0:1,a=[],r=0;r<t.length-1;r++){var s="t[r+1],l=t[r];a.push(l);var" u="[];switch(i){case" end":u[o]="s[o],u[1-o]=l[1-o],a.push(u);break;case" middle":var"" h="(l[o]+s[o])/2,c=[];u[o]=c[o]=h,u[1-o]=l[1-o],c[1-o]=s[1-o],a.push(u),a.push(c);break;default:u[o]=l[o],u[1-o]=s[1-o],a.push(u)}}return" t[r]&&a.push(t[r]),a}function yu(t,e){var i="t.getVisual(" visualmeta");if(i&&i.length&&t.count()&&"cartesian2d"="==e.type){for(var" " n,o,a="i.length-1;a">=0;a--){var r=i[a].dimension,s=t.dimensions[r],l=t.getDimensionInfo(s);if("x"===(n=l&&l.coordDim)||"y"===n){o=i[a];break}}if(o){var u=e.getAxis(n),h=f(o.stops,function(t){return{coord:u.toGlobalCoord(u.dataToCoord(t.value)),color:t.color}}),c=h.length,p=o.outerColors.slice();c&&h[0].coord>h[c-1].coord&&(h.reverse(),p.reverse());var g=h[0].coord-10,m=h[c-1].coord+10,v=m-g;if(v<.001)return"transparent";d(h,function(t){t.offset=(t.coord-g) v}),h.push({offset:c?h[c-1].offset:.5,color:p[1]||"transparent"}),h.unshift({offset:c?h[0].offset:.5,color:p[0]||"transparent"});var y="new" tm(0,0,0,0,h,!0);return y[n]="g,y[n+" 2"]="m,y}}}function" " qu(t,e,i){var n="t.get(" showallsymbol"),o="auto" =="=n;if(!n||o){var" a="i.getAxesByScale(" ordinal")[0];if(a&&(!o||!ku(a,e))){var" r="e.mapDimension(a.dim),s={};return" d(a.getviewlabels(),function(t){s[t.tickvalue]="1}),function(t){return!s.hasOwnProperty(e.get(r,t))}}}}function" ku(t,e){var i="t.getExtent(),n=Math.abs(i[1]-i[0])/t.scale.count();isNaN(n)&&(n=0);for(var" o="e.count(),a=Math.max(1,Math.round(o/5)),r=0;r<o;r+=a)if(1.5*_u.getSymbolSize(e,r)[t.isHorizontal()?1:0]">n)return!1;return!0}function $u(t){return this._axes[t]}function Ju(t){kD.call(this,t)}function Qu(t,e){return e.type||(e.data?"category":"value")}function th(t,e,i){return t.getCoordSysModel()===e}function eh(t,e,i){this._coordsMap={},this._coordsList=[],this._axesMap={},this._axesList=[],this._initCartesian(t,e,i),this.model=t}function ih(t,e,i,n){function o(t){return t.dim+"_"+t.index}i.getAxesOnZeroOf=function(){return a?[a]:[]};var a,r=t[e],s=i.model,l=s.get("axisLine.onZero"),u=s.get("axisLine.onZeroAxisIndex");if(l){if(null!=u)nh(r[u])&&(a=r[u]);else for(var h in r)if(r.hasOwnProperty(h)&&nh(r[h])&&!n[o(r[h])]){a=r[h];break}a&&(n[o(a)]=!0)}}function nh(t){return t&&"category"!==t.type&&"time"!==t.type&&Hl(t)}function oh(t,e){var i=t.getExtent(),n=i[0]+i[1];t.toGlobalCoord="x"===t.dim?function(t){return t+e}:function(t){return n-t+e},t.toLocalCoord="x"===t.dim?function(t){return t-e}:function(t){return n-t+e}}function ah(t,e){return f(GD,function(e){return t.getReferringComponents(e)[0]})}function rh(t){return"cartesian2d"===t.get("coordinateSystem")}function sh(t){var e={componentType:t.mainType,componentIndex:t.componentIndex};return e[t.mainType+"Index"]=t.componentIndex,e}function lh(t,e,i,n){var o,a,r=Uo(i-t.rotation),s=n[0]>n[1],l="start"===e&&!s||"start"!==e&&s;return Xo(r-FD/2)?(a=l?"bottom":"top",o="center"):Xo(r-1.5*FD)?(a=l?"top":"bottom",o="center"):(a="middle",o=r<1.5*fd&&r>FD/2?l?"left":"right":l?"right":"left"),{rotation:r,textAlign:o,textVerticalAlign:a}}function uh(t){var e=t.get("tooltip");return t.get("silent")||!(t.get("triggerEvent")||e&&e.show)}function hh(t,e,i){if(!ql(t.axis)){var n=t.get("axisLabel.showMinLabel"),o=t.get("axisLabel.showMaxLabel");e=e||[],i=i||[];var a=e[0],r=e[1],s=e[e.length-1],l=e[e.length-2],u=i[0],h=i[1],c=i[i.length-1],d=i[i.length-2];!1===n?(ch(a),ch(u)):dh(a,r)&&(n?(ch(r),ch(h)):(ch(a),ch(u))),!1===o?(ch(s),ch(c)):dh(l,s)&&(o?(ch(l),ch(d)):(ch(s),ch(c)))}}function ch(t){t&&(t.ignore=!0)}function dh(t,e,i){var n=t&&t.getBoundingRect().clone(),o=e&&e.getBoundingRect().clone();if(n&&o){var a=_t([]);return Mt(a,a,-t.rotation),n.applyTransform(bt([],a,t.getLocalTransform())),o.applyTransform(bt([],a,e.getLocalTransform())),n.intersect(o)}}function fh(t){return"middle"===t||"center"===t}function ph(t,e,i){var n=e.axis;if(e.get("axisTick.show")&&!n.scale.isBlank()){for(var o=e.getModel("axisTick"),a=o.getModel("lineStyle"),s=o.get("length"),l=n.getTicksCoords(),u=[],h=[],c=t._transform,d=[],f=0;f<l.length;f++){var p="l[f].coord;u[0]=p,u[1]=0,h[0]=p,h[1]=i.tickDirection*s,c&&(Q(u,u,c),Q(h,h,c));var" g="new" _m(qn({anid:"tick_"+l[f].tickvalue,shape:{x1:u[0],y1:u[1],x2:h[0],y2:h[1]},style:r(a.getlinestyle(),{stroke:e.get("axisline.linestyle.color")}),z2:2,silent:!0}));t.group.add(g),d.push(g)}return d}}function gh(t,e,i){var n="e.axis;if(T(i.axisLabelShow,e.get(" axislabel.show"))&&!n.scale.isblank()){var" o="e.getModel(" axislabel"),a="o.get(" margin"),r="n.getViewLabels(),s=(T(i.labelRotate,o.get("rotate"))||0)*FD/180,l=ZD(i.rotation,s,i.labelDirection),u=e.getCategories(!0),h=[],c=uh(e),f=e.get("triggerEvent");return""" d(r,function(r,s){var d="r.tickValue,p=r.formattedLabel,g=r.rawLabel,m=o;u&&u[d]&&u[d].textStyle&&(m=new" po(u[d].textstyle,o,e.ecmodel));var v="m.getTextColor()||e.get(" axisline.linestyle.color"),y="[n.dataToCoord(d),i.labelOffset+i.labelDirection*a],x=new" " rm({anid:"label_"+d,position:y,rotation:l.rotation,silent:c,z2:10});go(x.style,m,{text:p,textalign:m.getshallow("align",!0)||l.textalign,textverticalalign:m.getshallow("verticalalign",!0)||m.getshallow("baseline",!0)||l.textverticalalign,textfill:"function"="=typeof" v?v("category"="==n.type?g:" value"="==n.type?d+" ":d,s):v}),f&&(x.eventdata="sh(e),x.eventData.targetType="axisLabel",x.eventData.value=g),t._dumbGroup.add(x),x.updateTransform(),h.push(x),t.group.add(x),x.decomposeTransform()}),h}}function""" mh(t,e){var i="{axesInfo:{},seriesInvolved:!1,coordSysAxesInfo:{},coordSysMap:{}};return" vh(i,t,e),i.seriesinvolved&&xh(i,t),i}function vh(t,e,i){var s(n,s,l){var c="l.model.getModel(" axispointer",o),d="c.get(" show");if(d&&("auto"!="=d||n||Ih(c))){null==s&&(s=c.get("triggerTooltip"));var""" f="(c=n?yh(l,h,o,e,n,s):c).get(" snap"),p="Th(l.model),g=s||f||" category"="==l.type,m=t.axesInfo[p]={key:p,axis:l,coordSys:i,axisPointerModel:c,triggerTooltip:s,involveSeries:g,snap:f,useHandle:Ih(c),seriesModels:[]};u[p]=m,t.seriesInvolved|=g;var""" y="r[v]||(r[v]={axesInfo:{}});y.axesInfo[p]=m,y.mapper=a[v].mapper,m.linkGroup=y}}}if(i.axisPointerEnabled){var" l="Th(i.model),u=t.coordSysAxesInfo[l]={};t.coordSysMap[l]=i;var" h="i.model.getModel(" tooltip",n);if(ud(i.getaxes(),xd(s,!1,null)),i.gettooltipaxes&&n&&h.get("show")){var"="=" =h.get("trigger"),d="cross" =="=h.get("axisPointer.type"),f=i.getTooltipAxes(h.get("axisPointer.axis"));(c||d)&&UD(f.baseAxes,XD(s,!d||"cross",c)),d&&UD(f.otherAxes,XD(s,"cross",!1))}}})}function""" yh(t,e,n,o,a,s){var t.model.getmodel("axispointer",new po(u,n,o))}function xh(t,e){e.eachseries(function(e){var _h(t,e){for(var a="t[o]||{};if(wh(a[n+" axisid"],i.id)||wh(a[n+"axisindex"],i.componentindex)||wh(a[n+"axisname"],i.name))return" o}}function wh(t,e){return"all"="==t||y(t)&&l(t,e)">=0||t===e}function bh(t){var e=Sh(t);if(e){var i=e.axisPointerModel,n=e.axis.scale,o=i.option,a=i.get("status"),r=i.get("value");null!=r&&(r=n.parse(r));var s=Ih(i);null==a&&(o.status=s?"show":"hide");var l=n.getExtent().slice();l[0]>l[1]&&l.reverse(),(null==r||r>l[1])&&(r=l[1]),r<l[0]&&(r=l[0]),o.value=r,s&&(o.status=e.axis.scale.isblank()?"hide":"show")}}function sh(t){var e="(t.ecModel.getComponent(" axispointer")||{}).coordsysaxesinfo;return" e&&e.axesinfo[th(t)]}function mh(t){var e&&e.axispointermodel}function ih(t){return!!t.get("handle.show")}function th(t){return t.type+"||"+t.id}function ah(t,e,i,n,o,a){var r="jD.getAxisPointerClass(t.axisPointerClass);if(r){var" s="Mh(e);s?(t._axisPointer||(t._axisPointer=new" r)).render(e,s,n,a):dh(t,n)}}function dh(t,e,i){var n="t._axisPointer;n&&n.dispose(e,i),t._axisPointer=null}function" ch(t,e,i){i="i||{};var" g="r.toGlobalCoord(r.dataToCoord(0));p[d.onZero]=Math.max(Math.min(g,p[1]),p[0])}a.position=[" y"="==u?p[d[l]]:c[0]," x"="==u?p[d[l]]:c[3]],a.rotation=Math.PI/2*("x"===u?0:1);var""" m="{top:-1,bottom:1,left:-1,right:1};a.labelDirection=a.tickDirection=a.nameDirection=m[s],a.labelOffset=r?p[d[s]]-p[d.onZero]:0,e.get(" axistick.inside")&&(a.tickdirection="-a.tickDirection),T(i.labelInside,e.get(" axislabel.inside"))&&(a.labeldirection="-a.labelDirection);var""" v="e.get(" axislabel.rotate");return" a.labelrotate="top" =="=l?-v:v,a.z2=1,a}function" lh(t,e,i,n,o,a,r){po(t,e,i.getmodel("label"),i.getmodel("emphasis.label"),{labelfetcher:o,labeldataindex:a,defaulttext:xu(o.getdata(),a),isrecttext:!0,autocolor:n}),kh(t),kh(e)}function kh(t,e){"outside"="==t.textPosition&&(t.textPosition=e)}function" ph(t,e,i){i.style.text="null,Mo(i,{shape:{width:0}},e,t,function(){i.parent&&i.parent.remove(i)})}function" nh(t,e,i){i.style.text="null,Mo(i,{shape:{r:i.shape.r0}},e,t,function(){i.parent&&i.parent.remove(i)})}function" oh(t,e,i,n,o,a,s,l){var u="e.getItemVisual(i," color"),h="e.getItemVisual(i," opacity"),c="n.getModel("itemStyle"),d=n.getModel("emphasis.itemStyle").getBarItemStyle();l||t.setShape("r",c.get("barBorderRadius")||0),t.useStyle(r({fill:u,opacity:h},c.getBarItemStyle()));var""" f="n.getShallow(" cursor");f&&t.attr("cursor",f);var" p="s?o.height">0?"bottom":"top":o.width>0?"left":"right";l||Lh(t.style,d,n,u,a,i,p),co(t,d)}function Eh(t,e){var i=t.get(eC)||0;return Math.min(i,Math.abs(e.width),Math.abs(e.height))}function Rh(t,e,i){var n=t.getData(),o=[],a=n.getLayout("valueAxisHorizontal")?1:0;o[1-a]=n.getLayout("valueAxisStart");var r=new oC({shape:{points:n.getLayout("largePoints")},incremental:!!i,__startPoint:o,__valueIdx:a});e.add(r),zh(r,t,n)}function zh(t,e,i){var n=i.getVisual("borderColor")||i.getVisual("color"),o=e.getModel("itemStyle").getItemStyle(["color","borderColor"]);t.useStyle(o),t.style.fill=null,t.style.stroke=n,t.style.lineWidth=i.getLayout("barWidth")}function Bh(t,e,i,n){var o=e.getData(),a=this.dataIndex,r=o.getName(a),s=e.get("selectedOffset");n.dispatchAction({type:"pieToggleSelect",from:t,name:r,seriesId:e.id}),o.each(function(t){Vh(o.getItemGraphicEl(t),o.getItemLayout(t),e.isSelected(o.getName(t)),s,i)})}function Vh(t,e,i,n,o){var a=(e.startAngle+e.endAngle)/2,r=Math.cos(a),s=Math.sin(a),l=i?n:0,u=[r*l,s*l];o?t.animate().when(200,{position:u}).start("bounceOut"):t.attr("position",u)}function Gh(t,e){function i(){a.ignore=a.hoverIgnore,r.ignore=r.hoverIgnore}function n(){a.ignore=a.normalIgnore,r.ignore=r.normalIgnore}tb.call(this);var o=new hM({z2:2}),a=new gM,r=new rM;this.add(o),this.add(a),this.add(r),this.updateData(t,e,!0),this.on("emphasis",i).on("normal",n).on("mouseover",i).on("mouseout",n)}function Fh(t,e,i,n,o,a,r){function s(e,i){for(var n=e;n>=0&&(t[n].y-=i,!(n>0&&t[n].y>t[n-1].y+t[n-1].height));n--);}function l(t,e,i,n,o,a){for(var r=e?Number.MAX_VALUE:0,s=0,l=t.length;s<l;s++){var u="Math.abs(t[s].y-n),h=t[s].len,c=t[s].len2,d=u<o+h?Math.sqrt((o+h+c)*(o+h+c)-u*u):Math.abs(t[s].x-i);e&&d">=r&&(d=r-10),!e&&d<=r&&(d=r+10),t[s].x=i+d*a,r=d}}t.sort(function(t,e){return t.y-e.y});for(var u,h="0,c=t.length,d=[],f=[],p=0;p<c;p++)(u=t[p].y-h)<0&&function(e,i,n,o){for(var" a="e;a<i;a++)if(t[a].y+=n,a">e&&a+1<i&&t[a+1].y>t[a].y+t[a].height)return void s(a,n/2);s(i-1,n/2)}(p,c,-u),h=t[p].y+t[p].height;r-h<0&&s(c-1,h-r);for(p=0;p<c;p++)t[p].y>=i?f.push(t[p]):d.push(t[p]);l(d,!1,e,i,n,o),l(f,!0,e,i,n,o)}function Wh(t,e,i,n,o,a){for(var r=[],s=[],l=0;l<t.length;l++)hh(t[l])||(t[l].x<e?r.push(t[l]):s.push(t[l]));fh(s,e,i,n,1,o,a),fh(r,e,i,n,-1,o,a);for(l=0;l<t.length;l++)if(!hh(t[l])){var u="t[l].linePoints;if(u){var" h="u[1][0]-u[2][0];t[l].x<e?u[2][0]=t[l].x+3:u[2][0]=t[l].x-3,u[1][1]=u[2][1]=t[l].y,u[1][0]=u[2][0]+h}}}function" hh(t){return"center"="==t.position}function" zh(){this.group="new" tb}function uh(t,e,i){rd.call(this,t,e,i),this.type="value" ,this.angle="0,this.name=" ",this.model}function" xh(t,e,i){this._model="t,this.dimensions=[],this._indicatorAxes=f(t.getIndicatorModels(),function(t,e){var" i="indicator_" +e,n="new" uh(i,new aa);return n.name="t.get(" name"),n.model="t,t.axis=n,this.dimensions.push(i),n},this),this.resize(t,i),this.cx,this.cy,this.r,this.r0,this.startAngle}function" " jh(t,e){return r({show:e},t)}function yh(t){return y(t)||(t="[+t,+t]),t}function" qh(t){for(var e,i="0;i<t.length;i++){var" n="t[i].getBoundingRect();(e=e||n.clone()).union(n)}return" e}function kh(t,e){var i,n,o="t.svgXML;try{k(null!=(n=(i=o&&as(o,{ignoreViewBox:!0,ignoreRootClip:!0})||{}).root))}catch(t){throw" new error("invalid svg format\n"+t.message)}var a="i.width,r=i.height,s=i.viewBoxRect;if(e||(e=null==a||null==r?n.getBoundingRect():new" de(0,0,0,0),null!="a&&(e.width=a),null!=r&&(e.height=r)),s){var" l="os(s,e.width,e.height),u=n;(n=new" tb).add(u),u.scale="l.scale,u.position=l.position}return" n.setclippath(new ym({shape:e.plain()})),{root:n,boundingrect:e}}function $h(t){return function(e,i){var d(jh(e),function(o){var jh(t){return ct.retrievemap(t)||[]}function qh(t,e,i){ic(t)[e]="i}function" tc(t,e,i){var ec(t,e){return!!ic(t)[e]}function ic(t){return t[rc]||(t[rc]="{})}function" nc(t){this.pointerchecker,this._zr="t,this._opt={};var" e="m,n=e(oc,this),o=e(ac,this),a=e(rc,this),s=e(sc,this),l=e(lc,this);fw.call(this),this.setPointerChecker=function(t){this.pointerChecker=t},this.enable=function(e,u){this.disable(),this._opt=r(i(u)||{},{zoomOnMouseWheel:!0,moveOnMouseMove:!0,moveOnMouseWheel:!1,preventDefaultMouseMove:!0}),null==e&&(e=!0),!0!==e&&" move"!="=e&&" pan"!="=e||(t.on("mousedown",n),t.on("mousemove",o),t.on("mouseup",a)),!0!==e&&"scale"!==e&&"zoom"!==e||(t.on("mousewheel",s),t.on("pinch",l))},this.disable=function(){t.off("mousedown",n),t.off("mousemove",o),t.off("mouseup",a),t.off("mousewheel",s),t.off("pinch",l)},this.dispose=this.disable,this.isDragging=function(){return""" this._dragging},this.ispinching="function(){return" this._pinching}}function oc(t){if(!(dt(t)||t.target&&t.target.draggable)){var ac(t){if(this._dragging&&cc("moveonmousemove",t,this._opt)&&"pinch"!="=t.gestureEvent&&!ec(this._zr," globalpan")){var" rc(t){dt(t)||(this._dragging="!1)}function" sc(t){var s="o">3?1.4:o>1?1.2:1.1;uc(this,"zoom","zoomOnMouseWheel",t,{scale:n>0?s:1/s,originX:a,originY:r})}if(i){var l=Math.abs(n);uc(this,"scrollMove","moveOnMouseWheel",t,{scrollDelta:(n>0?1:-1)*(l>3?.4:l>1?.15:.05),originX:a,originY:r})}}}function lc(t){ec(this._zr,"globalPan")||uc(this,"zoom",null,t,{scale:t.pinchScale>1?1.1:1/1.1,originX:t.pinchX,originY:t.pinchY})}function uc(t,e,i,n,o){t.pointerChecker&&t.pointerChecker(n,o.originX,o.originY)&&(mw(n.event),hc(t,e,i,n,o))}function hc(t,e,i,n,o){o.isAvailableBehavior=m(cc,null,i,n),t.trigger(e,o)}function cc(t,e,i){var n=i[t];return!t||n&&(!_(n)||e.event[n+"Key"])}function dc(t,e,i){var n=t.target,o=n.position;o[0]+=e,o[1]+=i,n.dirty()}function fc(t,e,i,n){var o=t.target,a=t.zoomLimit,r=o.position,s=o.scale,l=t.zoom=t.zoom||1;if(l*=e,a){var u=a.min||0,h=a.max||1/0;l=Math.max(Math.min(h,l),u)}var c=l/t.zoom;t.zoom=l,r[0]-=(i-r[0])*(c-1),r[1]-=(n-r[1])*(c-1),s[0]*=c,s[1]*=c,o.dirty()}function pc(t,e,i){var n=e.getComponentByElement(t.topTarget),o=n&&n.coordinateSystem;return n&&n!==i&&!zC[n.mainType]&&o&&o.model!==i}function gc(t,e){var i=t.getItemStyle(),n=t.get("areaColor");return null!=n&&(i.fill=n),i}function mc(t,e,i,n,o){i.off("click"),i.off("mousedown"),e.get("selectedMode")&&(i.on("mousedown",function(){t._mouseDownFlag=!0}),i.on("click",function(a){if(t._mouseDownFlag){t._mouseDownFlag=!1;for(var r=a.target;!r.__regions;)r=r.parent;if(r){var s={type:("geo"===e.mainType?"geo":"map")+"ToggleSelect",batch:f(r.__regions,function(t){return{name:t.name,from:o.uid}})};s[e.mainType+"Id"]=e.id,n.dispatchAction(s),vc(e,i)}}}))}function vc(t,e){e.eachChild(function(e){d(e.__regions,function(i){e.trigger(t.isSelected(i.name)?"emphasis":"normal")})})}function yc(t,e){var i=new tb;this.uid=Eo("ec_map_draw"),this._controller=new nc(t.getZr()),this._controllerHost={target:e?i:null},this.group=i,this._updateGroup=e,this._mouseDownFlag,this._mapName,this._initialized,i.add(this._regionsGroup=new tb),i.add(this._backgroundGroup=new tb)}function xc(t){var e=this[BC];e&&e.recordVersion===this[VC]&&_c(e,t)}function _c(t,e){var i=t.circle,n=t.labelModel,o=t.hoverLabelModel,a=t.emphasisText,r=t.normalText;e?(i.style.extendFrom(go({},o,{text:o.get("show")?a:null},{isRectText:!0,useInsideStyle:!1},!0)),i.__mapOriginalZ2=i.z2,i.z2+=NM):(go(i.style,n,{text:n.get("show")?r:null,textPosition:n.getShallow("position")||"bottom"},{isRectText:!0,useInsideStyle:!1}),i.dirty(!1),null!=i.__mapOriginalZ2&&(i.z2=i.__mapOriginalZ2,i.__mapOriginalZ2=null))}function wc(t,e,i){var n=t.getZoom(),o=t.getCenter(),a=e.zoom,r=t.dataToPoint(o);if(null!=e.dx&&null!=e.dy){r[0]-=e.dx,r[1]-=e.dy;o=t.pointToData(r);t.setCenter(o)}if(null!=a){if(i){var s=i.min||0,l=i.max||1/0;a=Math.max(Math.min(n*a,l),s)/n}t.scale[0]*=a,t.scale[1]*=a;var u=t.position,h=(e.originX-u[0])*(a-1),c=(e.originY-u[1])*(a-1);u[0]-=h,u[1]-=c,t.updateTransform();o=t.pointToData(r);t.setCenter(o),t.setZoom(a*n)}return{center:t.getCenter(),zoom:t.getZoom()}}function bc(){Tw.call(this)}function Sc(t){this.name=t,this.zoomLimit,Tw.call(this),this._roamTransformable=new bc,this._rawTransformable=new bc,this._center,this._zoom}function Mc(t,e,i,n){var o=i.seriesModel,a=o?o.coordinateSystem:null;return a===this?a[t](n):null}function Ic(t,e,i,n){Sc.call(this,t),this.map=e;var o=EC.load(e,i);this._nameCoordMap=o.nameCoordMap,this._regionsMap=o.regionsMap,this._invertLongitute=null==n||n,this.regions=o.regions,this._rect=o.boundingRect}function Tc(t,e,i,n){var o=i.geoModel,a=i.seriesModel,r=o?o.coordinateSystem:a?a.coordinateSystem||(a.getReferringComponents("geo")[0]||{}).coordinateSystem:null;return r===this?r[t](n):null}function Ac(t,e){var i=t.get("boundingCoords");if(null!=i){var n=i[0],o=i[1];isNaN(n[0])||isNaN(n[1])||isNaN(o[0])||isNaN(o[1])||this.setBoundingRect(n[0],n[1],o[0]-n[0],o[1]-n[1])}var a,r=this.getBoundingRect(),s=t.get("layoutCenter"),l=t.get("layoutSize"),u=e.getWidth(),h=e.getHeight(),c=r.width/r.height*this.aspectScale,d=!1;s&&l&&(s=[Bo(s[0],u),Bo(s[1],h)],l=Bo(l,Math.min(u,h)),isNaN(s[0])||isNaN(s[1])||isNaN(l)||(d=!0));if(d){var f={};c>1?(f.width=l,f.height=l/c):(f.height=l,f.width=l*c),f.y=s[1]-f.height/2,f.x=s[0]-f.width/2}else(a=t.getBoxLayoutParams()).aspect=c,f=ha(a,{width:u,height:h});this.setViewRect(f.x,f.y,f.width,f.height),this.setCenter(t.get("center")),this.setZoom(t.get("zoom"))}function Dc(t,e){d(e.get("geoCoord"),function(e,i){t.addGeoCoord(i,e)})}function Cc(t,e){var i={};return d(t,function(t){t.each(t.mapDimension("value"),function(e,n){var o="ec-"+t.getName(n);i[o]=i[o]||[],isNaN(e)||i[o].push(e)})}),t[0].map(t[0].mapDimension("value"),function(n,o){for(var a="ec-"+t[0].getName(o),r=0,s=1/0,l=-1/0,u=i[a].length,h=0;h<u;h++)s=math.min(s,i[a][h]),l=math.max(l,i[a][h]),r+=i[a][h];var c;return c="min" =="=e?s:" max"="==e?l:" average"="==e?r/u:r,0===u?NaN:c})}function""" lc(t){var e="t.mainData,i=t.datas;i||(i={main:e},t.datasAttr={main:" data"}),t.datas="t.mainData=null,Rc(e,i,t),WC(i,function(i){WC(e.TRANSFERABLE_METHODS,function(e){i.wrapMethod(e,v(kc,t))})}),e.wrapMethod(" cloneshallow",v(nc,t)),wc(e.changable_methods,function(i){e.wrapmethod(i,v(pc,t))}),k(i[e.datatype]="==e)}function""" kc(t,e){if(ec(this)){var i="a({},this[HC]);i[this.dataType]=e,Rc(e,i,t)}else" zc(e,this.datatype,this[zc],t);return e}function pc(t,e){return t.struct&&t.struct.update(this),e}function nc(t,e){return wc(e[hc],function(i,n){i!="=e&&zc(i.cloneShallow(),n,e,t)}),e}function" oc(t){var null="=t||null==e?e:e[HC][t]}function" ec(t){return t[zc]="==t}function" rc(t,e,i){t[hc]="{},WC(e,function(e,n){zc(e,n,t,i)})}function" zc(t,e,i,n){i[hc][e]="t,t[ZC]=i,t.dataType=e,n.struct&&(t[n.structAttr]=n.struct,n.struct[n.datasAttr[e]]=t),t.getLinkedData=Oc}function" bc(t,e,i){this.root,this.data,this._nodes="[],this.hostModel=t,this.levelModels=f(e||[],function(e){return" new po(e,t,t.ecmodel)}),this.leavesmodel="new" po(i||{},t,t.ecmodel)}function vc(t,e){var gc(t){t.hiernode="{defaultAncestor:null,ancestor:t,prelim:0,modifier:0,change:0,shift:0,i:0,thread:null};for(var" e,i,n="[t];e=n.pop();)if(i=e.children,e.isExpand&&i.length)for(var" o="i.length-1;o">=0;o--){var a=i[o];a.hierNode={defaultAncestor:null,ancestor:a,prelim:0,modifier:0,change:0,shift:0,i:o,thread:null},n.push(a)}}function Fc(t,e){var i=t.isExpand?t.children:[],n=t.parentNode.children,o=t.hierNode.i?n[t.hierNode.i-1]:null;if(i.length){Xc(t);var a=(i[0].hierNode.prelim+i[i.length-1].hierNode.prelim)/2;o?(t.hierNode.prelim=o.hierNode.prelim+e(t,o),t.hierNode.modifier=t.hierNode.prelim-a):t.hierNode.prelim=a}else o&&(t.hierNode.prelim=o.hierNode.prelim+e(t,o));t.parentNode.hierNode.defaultAncestor=jc(t,o,t.parentNode.hierNode.defaultAncestor||n[0],e)}function Wc(t){var e=t.hierNode.prelim+t.parentNode.hierNode.modifier;t.setLayout({x:e},!0),t.hierNode.modifier+=t.parentNode.hierNode.modifier}function Hc(t){return arguments.length?t:Jc}function Zc(t,e){var i={};return t-=Math.PI/2,i.x=e*Math.cos(t),i.y=e*Math.sin(t),i}function Uc(t,e){return ha(t.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()})}function Xc(t){for(var e=t.children,i=e.length,n=0,o=0;--i>=0;){var a=e[i];a.hierNode.prelim+=n,a.hierNode.modifier+=n,o+=a.hierNode.change,n+=a.hierNode.shift+o}}function jc(t,e,i,n){if(e){for(var o=t,a=t,r=a.parentNode.children[0],s=e,l=o.hierNode.modifier,u=a.hierNode.modifier,h=r.hierNode.modifier,c=s.hierNode.modifier;s=Yc(s),a=qc(a),s&&a;){o=Yc(o),r=qc(r),o.hierNode.ancestor=t;var d=s.hierNode.prelim+c-a.hierNode.prelim-u+n(s,a);d>0&&($c(Kc(s,t,i),t,d),u+=d,l+=d),c+=s.hierNode.modifier,u+=a.hierNode.modifier,l+=o.hierNode.modifier,h+=r.hierNode.modifier}s&&!Yc(o)&&(o.hierNode.thread=s,o.hierNode.modifier+=c-l),a&&!qc(r)&&(r.hierNode.thread=a,r.hierNode.modifier+=u-h,i=t)}return i}function Yc(t){var e=t.children;return e.length&&t.isExpand?e[e.length-1]:t.hierNode.thread}function qc(t){var e=t.children;return e.length&&t.isExpand?e[0]:t.hierNode.thread}function Kc(t,e,i){return t.hierNode.ancestor.parentNode===e.parentNode?t.hierNode.ancestor:i}function $c(t,e,i){var n=i/(e.hierNode.i-t.hierNode.i);e.hierNode.change-=n,e.hierNode.shift+=i,e.hierNode.modifier+=i,e.hierNode.prelim+=i,t.hierNode.change+=n}function Jc(t,e){return t.parentNode===e.parentNode?1:2}function Qc(t,e){var i=t.getItemLayout(e);return i&&!isNaN(i.x)&&!isNaN(i.y)&&"none"!==t.getItemVisual(e,"symbol")}function td(t,e,i){return i.itemModel=e,i.itemStyle=e.getModel("itemStyle").getItemStyle(),i.hoverItemStyle=e.getModel("emphasis.itemStyle").getItemStyle(),i.lineStyle=e.getModel("lineStyle").getLineStyle(),i.labelModel=e.getModel("label"),i.hoverLabelModel=e.getModel("emphasis.label"),!1===t.isExpand&&0!==t.children.length?i.symbolInnerColor=i.itemStyle.fill:i.symbolInnerColor="#fff",i}function ed(t,e,i,n,o,a){var s=!i,l=t.tree.getNodeByDataIndex(e),a=td(l,l.getModel(),a),u=t.tree.root,h=l.parentNode===u?l:l.parentNode||l,c=t.getItemGraphicEl(h.dataIndex),d=h.getLayout(),f=c?{x:c.position[0],y:c.position[1],rawX:c.__radialOldRawX,rawY:c.__radialOldRawY}:d,p=l.getLayout();s?(i=new _u(t,e,a)).attr("position",[f.x,f.y]):i.updateData(t,e,a),i.__radialOldRawX=i.__radialRawX,i.__radialOldRawY=i.__radialRawY,i.__radialRawX=p.rawX,i.__radialRawY=p.rawY,n.add(i),t.setItemGraphicEl(e,i),Mo(i,{position:[p.x,p.y]},o);var g=i.getSymbolPath();if("radial"===a.layout){var m,v,y=u.children[0],x=y.getLayout(),_=y.children.length;if(p.x===x.x&&!0===l.isExpand){var w={};w.x=(y.children[0].getLayout().x+y.children[_-1].getLayout().x)/2,w.y=(y.children[0].getLayout().y+y.children[_-1].getLayout().y)/2,(m=Math.atan2(w.y-x.y,w.x-x.x))<0&&(m=2*math.pi+m),(v=w.x<x.x)&&(m-=math.pi)}else(m=math.atan2(p.y-x.y,p.x-x.x))<0&&(m=2*math.pi+m),0===l.children.length||0!==l.children.length&&!1===l.isexpand?(v=p.x<x.x)&&(m-=math.pi):(v=p.x>x.x)||(m-=Math.PI);var b=v?"left":"right";g.setStyle({textPosition:b,textRotation:-m,textOrigin:"center",verticalAlign:"middle"})}if(l.parentNode&&l.parentNode!==u){var S=i.__edge;S||(S=i.__edge=new bM({shape:nd(a,f,f),style:r({opacity:0,strokeNoScale:!0},a.lineStyle)})),Mo(S,{shape:nd(a,d,p),style:{opacity:1}},o),n.add(S)}}function id(t,e,i,n,o,a){for(var r,s=t.tree.getNodeByDataIndex(e),l=t.tree.root,a=td(s,s.getModel(),a),u=s.parentNode===l?s:s.parentNode||s;null==(r=u.getLayout());)u=u.parentNode===l?u:u.parentNode||u;Mo(i,{position:[r.x+1,r.y+1]},o,function(){n.remove(i),t.setItemGraphicEl(e,null)}),i.fadeOut(null,{keepLabel:!0});var h=i.__edge;h&&Mo(h,{shape:nd(a,r,r),style:{opacity:0}},o,function(){n.remove(h)})}function nd(t,e,i){var n,o,a,r,s,l,u,h,c=t.orient;if("radial"===t.layout){s=e.rawX,u=e.rawY,l=i.rawX,h=i.rawY;var d=Zc(s,u),f=Zc(s,u+(h-u)*t.curvature),p=Zc(l,h+(u-h)*t.curvature),g=Zc(l,h);return{x1:d.x,y1:d.y,x2:g.x,y2:g.y,cpx1:f.x,cpy1:f.y,cpx2:p.x,cpy2:p.y}}return s=e.x,u=e.y,l=i.x,h=i.y,"LR"!==c&&"RL"!==c||(n=s+(l-s)*t.curvature,o=u,a=l+(s-l)*t.curvature,r=h),"TB"!==c&&"BT"!==c||(n=s,o=u+(h-u)*t.curvature,a=l,r=h+(u-h)*t.curvature),{x1:s,y1:u,x2:l,y2:h,cpx1:n,cpy1:o,cpx2:a,cpy2:r}}function od(t,e,i){for(var n,o=[t],a=[];n=o.pop();)if(a.push(n),n.isExpand){var r=n.children;if(r.length)for(var s=0;s<r.length;s++)o.push(r[s])}for(;n=a.pop();)e(n,i)}function ad(t,e){for(var i,n="[t];i=n.pop();)if(e(i),i.isExpand){var" o="i.children;if(o.length)for(var" a="o.length-1;a">=0;a--)n.push(o[a])}}function rd(t,e){var i=Uc(t,e);t.layoutInfo=i;var n=t.get("layout"),o=0,a=0,r=null;"radial"===n?(o=2*Math.PI,a=Math.min(i.height,i.width)/2,r=Hc(function(t,e){return(t.parentNode===e.parentNode?1:2)/t.depth})):(o=i.width,a=i.height,r=Hc());var s=t.getData().tree.root,l=s.children[0];if(l){Gc(s),od(l,Fc,r),s.hierNode.modifier=-l.hierNode.prelim,ad(l,Wc);var u=l,h=l,c=l;ad(l,function(t){var e=t.getLayout().x;e<u.getlayout().x&&(u=t),e>h.getLayout().x&&(h=t),t.depth>c.depth&&(c=t)});var d=u===h?1:r(u,h)/2,f=d-u.getLayout().x,p=0,g=0,m=0,v=0;if("radial"===n)p=o/(h.getLayout().x+d+f),g=a/(c.depth-1||1),ad(l,function(t){m=(t.getLayout().x+f)*p,v=(t.depth-1)*g;var e=Zc(m,v);t.setLayout({x:e.x,y:e.y,rawX:m,rawY:v},!0)});else{var y=t.getOrient();"RL"===y||"LR"===y?(g=a/(h.getLayout().x+d+f),p=o/(c.depth-1||1),ad(l,function(t){v=(t.getLayout().x+f)*g,m="LR"===y?(t.depth-1)*p:o-(t.depth-1)*p,t.setLayout({x:m,y:v},!0)})):"TB"!==y&&"BT"!==y||(p=o/(h.getLayout().x+d+f),g=a/(c.depth-1||1),ad(l,function(t){m=(t.getLayout().x+f)*p,v="TB"===y?(t.depth-1)*g:a-(t.depth-1)*g,t.setLayout({x:m,y:v},!0)}))}}}function sd(t,e,i){if(t&&l(e,t.type)>=0){var n=i.getData().tree.root,o=t.targetNode;if("string"==typeof o&&(o=n.getNodeById(o)),o&&n.contains(o))return{node:o};var a=t.targetNodeId;if(null!=a&&(o=n.getNodeById(a)))return{node:o}}}function ld(t){for(var e=[];t;)(t=t.parentNode)&&e.push(t);return e.reverse()}function ud(t,e){return l(ld(t),e)>=0}function hd(t,e){for(var i=[];t;){var n=t.dataIndex;i.push({name:t.name,dataIndex:n,value:e.getRawValue(n)}),t=t.parentNode}return i.reverse(),i}function cd(t){var e=0;d(t.children,function(t){cd(t);var i=t.value;y(i)&&(i=i[0]),e+=i});var i=t.value;y(i)&&(i=i[0]),(null==i||isNaN(i))&&(i=e),i<0&&(i=0),y(t.value)?t.value[0]=i:t.value=i}function dd(t,e){var i="e.get(" color");if(i){var" n;return d(t="t||[],function(t){var" e="new" po(t),i="e.get(" color");(e.get("itemstyle.color")||i&&"none"!="=i)&&(n=!0)}),n||((t[0]||(t[0]={})).color=i.slice()),t}}function" " fd(t){this.group="new" tb,t.add(this.group)}function pd(t,e,i,n,o,a){var r="[[o?t:t-XC,e],[t+i,e],[t+i,e+n],[o?t:t-XC,e+n]];return!a&&r.splice(2,0,[t+i+XC,e+n/2]),!o&&r.push([t,e+n/2]),r}function" gd(t,e,i){t.eventdata="{componentType:" series",componentsubtype:"treemap",componentindex:e.componentindex,seriesindex:e.componentindex,seriesname:e.name,seriestype:"treemap",selftype:"breadcrumb",nodedata:{dataindex:i&&i.dataindex,name:i&&i.name},treepathinfo:i&&hd(i,e)}}function" md(){var t,e="[],i={};return{add:function(t,n,o,a,r){return" _(a)&&(r="a,a=0),!i[t.id]&&(i[t.id]=1,e.push({el:t,target:n,time:o,delay:a,easing:r}),!0)},done:function(e){return" t="e,this},start:function(){for(var" n="e.length,o=0,a=e.length;o<a;o++){var" this}}}function vd(t,e,n,o,r,s,l,u,h,c){function d(t,e){w?!t.invisible&&s.push(t):(e(),t.__tmwillvisible||(t.invisible="!1))}function" f(e,n,o,a,r,s){var u="l.getModel(),h=T(t.getFormattedLabel(l.dataIndex," normal",null,null,s?"upperlabel":"label"),u.get("name"));if(!s&&v.isleafroot){var" c="t.get(" drilldownicon",!0);h="c?c+" "" "+h:h}var d="u.getModel(s?QC:$C),f=u.getModel(s?tL:JC),p=d.getShallow(" show");po(e,n,d,f,{defaulttext:p?h:null,autocolor:o,isrecttext:!0}),s&&(e.textrect="i(s)),e.truncate=p&&d.get(" ellipsis")?{outerwidth:a,outerheight:r,minchar:2}:null}function"" p(t,i,o,a){var s="null!=S&&n[t][S],l=r[t];return" s?(n[t][s]="null,g(l,s,t)):w||((s=new" i({z:yd(o,a)})).__tmdepth="o,s.__tmStorageName=t,m(l,s,t)),e[t][b]=s}function" g(t,e,i){(t[b]="{}).old=" nodegroup"="==i?e.position.slice():a({},e.shape)}function" m(t,e,i){var v="l.getLayout();if(v&&v.isInView){var" y="v.width,x=v.height,_=v.borderWidth,w=v.invisible,b=l.getRawIndex(),S=u&&u.getRawIndex(),M=l.viewChildren,I=v.upperHeight,A=M&&M.length,D=l.getModel(" itemstyle"),c="l.getModel(" emphasis.itemstyle"),l="p("nodeGroup",YC);if(L){if(h.add(L),L.attr("position",[v.x||0,v.y||0]),L.__tmNodeWidth=y,L.__tmNodeHeight=x,v.isAboveViewRoot)return""" l;var k="p(" background",qc,c,il);if(k&&function(e,i,n){i.dataindex="l.dataIndex,i.seriesIndex=t.seriesIndex,i.setShape({x:0,y:0,width:y,height:x});var" o="l.getVisual(" bordercolor",!0),a="C.get(" bordercolor");d(i,function(){var"" t.text="e.text=null;i.setStyle(t),co(i,e)}),e.add(i)}(L,k,A&&v.upperHeight),!A){var" p="p(" content",qc,c,nl);p&&function(e,i){i.dataindex="l.dataIndex,i.seriesIndex=t.seriesIndex;var" a="l.getVisual(" color",!0);d(i,function(){var" l}}}}function yd(t,e){var xd(t){var _d(t){var>=0;a--)null==i[a]&&(delete n[e[a]],e.pop())}function wd(t,e){var i=t.visual,n=[];w(i)?lL(i,function(t){n.push(t)}):null!=i&&n.push(i);var o={color:1,symbol:1};e||1!==n.length||o.hasOwnProperty(t.type)||(n[1]=n[0]),Cd(t,n)}function bd(t){return{applyVisual:function(e,i,n){e=this.mapValueToVisual(e),n("color",t(i("color"),e))},_doMap:Ad([0,1])}}function Sd(t){var e=this.option.visual;return e[Math.round(zo(t,[0,1],[0,e.length-1],!0))]||{}}function Md(t){return function(e,i,n){n(t,this.mapValueToVisual(e))}}function Id(t){var e=this.option.visual;return e[this.option.loop&&t!==hL?t%e.length:t]}function Td(){return this.option.visual[0]}function Ad(t){return{linear:function(e){return zo(e,t,this.option.visual,!0)},category:Id,piecewise:function(e,i){var n=Dd.call(this,i);return null==n&&(n=zo(e,t,this.option.visual,!0)),n},fixed:Td}}function Dd(t){var e=this.option,i=e.pieceList;if(e.hasSpecialVisual){var n=i[cL.findPieceIndex(t,i)];if(n&&n.visual)return n.visual[this.type]}}function Cd(t,e){return t.visual=e,"color"===t.type&&(t.parsedVisual=f(e,function(t){return Gt(t)})),e}function Ld(t,e,i){return t?e<=i:e<i}function kd(t,e,i,n,o,a){var r="t.getModel(),s=t.getLayout();if(s&&!s.invisible&&s.isInView){var" l,u="t.getModel(gL),h=Pd(u,e,i[t.depth],n),c=u.get(" bordercolor"),f="u.get(" bordercolorsaturation");null!="f&&(c=Od(f,l=Nd(h))),t.setVisual("borderColor",c);var""" p="t.viewChildren;if(p&&p.length){var" g="Rd(t,r,s,u,h,p);d(p,function(t,e){(t.depth">=o.length||t===o[t.depth])&&kd(t,Bd(r,h,t,e,g,a),i,n,o,a)})}else l=Nd(h),t.setVisual("color",l)}}function Pd(t,e,i,n){var o=a({},e);return d(["color","colorAlpha","colorSaturation"],function(a){var r=t.get(a,!0);null==r&&i&&(r=i[a]),null==r&&(r=e[a]),null==r&&(r=n.get(a)),null!=r&&(o[a]=r)}),o}function Nd(t){var e=Ed(t,"color");if(e){var i=Ed(t,"colorAlpha"),n=Ed(t,"colorSaturation");return n&&(e=jt(e,null,null,n)),i&&(e=Yt(e,i)),e}}function Od(t,e){return null!=e?jt(e,null,null,t):null}function Ed(t,e){var i=t[e];if(null!=i&&"none"!==i)return i}function Rd(t,e,i,n,o,a){if(a&&a.length){var r=zd(e,"color")||null!=o.color&&"none"!==o.color&&(zd(e,"colorAlpha")||zd(e,"colorSaturation"));if(r){var s=e.get("visualMin"),l=e.get("visualMax"),u=i.dataExtent.slice();null!=s&&s<u[0]&&(u[0]=s),null!=l&&l>u[1]&&(u[1]=l);var h=e.get("colorMappingBy"),c={type:r.name,dataExtent:u,visual:r.range};"color"!==c.type||"index"!==h&&"id"!==h?c.mappingMethod="linear":(c.mappingMethod="category",c.loop=!0);var d=new cL(c);return d.__drColorMappingBy=h,d}}}function zd(t,e){var i=t.get(e);return pL(i)&&i.length?{name:e,range:i}:null}function Bd(t,e,i,n,o,r){var s=a({},e);if(o){var l=o.type,u="color"===l&&o.__drColorMappingBy,h="index"===u?n:"id"===u?r.mapIdToIndex(i.getId()):i.getValue(t.get("visualDimension"));s[l]=o.mapValueToVisual(h)}return s}function Vd(t,e,i,n){var o,a;if(!t.isRemoved()){var r=t.getLayout();o=r.width,a=r.height;var s=(f=t.getModel()).get(wL),l=f.get(bL)/2,u=qd(f),h=Math.max(s,u),c=s-l,d=h-l,f=t.getModel();t.setLayout({borderWidth:s,upperHeight:h,upperLabelHeight:u},!0);var p=(o=vL(o-2*c,0))*(a=vL(a-c-d,0)),g=Gd(t,f,p,e,i,n);if(g.length){var m={x:c,y:d,width:o,height:a},v=yL(o,a),y=1/0,x=[];x.area=0;for(var _=0,w=g.length;_<w;){var b="g[_];x.push(b),x.area+=b.getLayout().area;var" s="Zd(x,v,e.squareRatio);S<=y?(_++,y=S):(x.area-=x.pop().getLayout().area,Ud(x,v,m,l,!1),v=yL(m.width,m.height),x.length=x.area=0,y=1/0)}if(x.length&&Ud(x,v,m,l,!0),!i){var" m="f.get(" childrenvisiblemin");null!="M&&p<M&&(i=!0)}for(var" " _="0,w=g.length;_<w;_++)Vd(g[_],e,i,n+1)}}}function" gd(t,e,i,n,o,a){var r="t.children||[],s=n.sort;" asc"!="=s&&" desc"!="=s&&(s=null);var""" l="null!=n.leafDepth&&n.leafDepth<=a;if(o&&!l)return" t.viewchildren="[];Wd(r=g(r,function(t){return!t.isRemoved()}),s);var" u="Hd(e,r,s);if(0===u.sum)return" h="0,c=r.length;h<c;h++){var" d="r[h].getValue()/u.sum*i;r[h].setLayout({area:d})}return" l&&(r.length&&t.setlayout({isleafroot:!0},!0),r.length="0),t.viewChildren=r,t.setLayout({dataExtent:u.dataExtent},!0),r}function" fd(t,e,i,n,o){if(!n)return i;for(var a="t.get(" visiblemin"),r="o.length,s=r,l=r-1;l">=0;l--){var u=o["asc"===n?r-l-1:l].getValue();u/i*e<a&&(s=l,i-=u)}return"asc"===n?o.splice(0,r-s):o.splice(s,r-s),i}function 0="==n?" asc"="==e?t.dataIndex-i.dataIndex:i.dataIndex-t.dataIndex:n}),t}function" " wd(t,e){return e&&t.sort(function(t,i){var n="asc" =="=e?t.getValue()-i.getValue():i.getValue()-t.getValue();return" hd(t,e,i){for(var r="t.get(" visualdimension");if(e&&e.length)if("value"="==r&&i)s=[e[e.length-1].getValue(),e[0].getValue()]," s="[1/0,-1/0];_L(e,function(t){var" e="t.getValue(r);e<s[0]&&(s[0]=e),e">s[1]&&(s[1]=e)})}else s=[NaN,NaN];return{sum:n,dataExtent:s}}function Zd(t,e,i){for(var n,o=0,a=1/0,r=0,s=t.length;r<s;r++)(n=t[r].getlayout().area)&&(n<a&&(a=n),n>o&&(o=n));var l=t.area*t.area,u=e*e*i;return l?vL(u*o/l,l/(u*a)):1/0}function Ud(t,e,i,n,o){var a=e===i.width?0:1,r=1-a,s=["x","y"],l=["width","height"],u=i[s[a]],h=e?t.area/e:0;(o||h>i[l[r]])&&(h=i[l[r]]);for(var c=0,d=t.length;c<d;c++){var f="t[c],p={},g=h?f.getLayout().area/h:0,m=p[l[r]]=vL(h-2*n,0),v=i[s[a]]+i[l[a]]-u,y=c===d-1||v<g?v:g,x=p[l[a]]=vL(y-2*n,0);p[s[r]]=i[s[r]]+yL(n,m/2),p[s[a]]=u+yL(n,x/2),u+=y,f.setLayout(p,!0)}i[s[r]]+=h,i[l[r]]-=h}function" xd(t,e,i,n,o){var a="(e||{}).node,r=[n,o];if(!a||a===i)return" r;for(var s,l="n*o,u=l*t.option.zoomToNodeRatio;s=a.parentNode;){for(var" h="0,c=s.children,d=0,f=c.length;d<f;d++)h+=c[d].getValue();var" p="a.getValue();if(0===p)return" r;u*="h/p;var" g="s.getModel(),m=g.get(wL);(u+=4*m*m+(3*m+Math.max(m,qd(g)))*Math.pow(u,.5))">XM&&(u=XM),a=s}u<l&&(u=l);var v="Math.pow(u/l,.5);return[n*v,o*v]}function" jd(t,e,i){if(e)return{x:e.x,y:e.y};var n="{x:0,y:0};if(!i)return" n;var o="i.node,a=o.getLayout();if(!a)return" n;for(var r="[a.width/2,a.height/2],s=o;s;){var" l="s.getLayout();r[0]+=l.x,r[1]+=l.y,s=s.parentNode}return{x:t.width/2-r[0],y:t.height/2-r[1]}}function" yd(t,e,i,n,o){var a="t.getLayout(),r=i[o],s=r&&r===t;if(!(r&&!s||o===i.length&&t!==n)){t.setLayout({isInView:!0,invisible:!s&&!e.intersect(a),isAboveViewRoot:s},!0);var" de(e.x-a.x,e.y-a.y,e.width,e.height);_l(t.viewchildren||[],function(t){yd(t,l,i,n,o+1)})}}function qd(t){return t.get(sl)?t.get(ml):0}function kd(t){return"_ec_"+t}function $d(t,e){this.id="null==t?" ":t,this.inedges="[],this.outEdges=[],this.edges=[],this.hostGraph,this.dataIndex=null==e?-1:e}function" " jd(t,e,i){this.node1="t,this.node2=e,this.dataIndex=null==i?-1:i}function" isnan(+t.cpx1)||isnan(+t.cpy1)}function tf(t){return"_"+t+"type"}function ef(t,e,i){var r.name="t,r}}function" nf(t){var e="new" nl({name:"line"});return of(e.shape,t),e}function of(t,e){var i="e[0],n=e[1],o=e[2];t.x1=i[0],t.y1=i[1],t.x2=n[0],t.y2=n[1],t.percent=1,o?(t.cpx1=o[0],t.cpy1=o[1]):(t.cpx1=NaN,t.cpy1=NaN)}function" af(t,e,i){tb.call(this),this._createline(t,e,i)}function rf(t){this._ctor="t||af,this.group=new" tb}function sf(t,e,i,n){if(cf(e.getitemlayout(i))){var t._ctor(e,i,n);e.setitemgraphicel(i,o),t.group.add(o)}}function lf(t,e,i,n,o,a){var t._ctor(i,o,a),i.setitemgraphicel(o,r),t.group.add(r)):t.group.remove(r)}function uf(t){var hf(t){return isnan(t[0])||isnan(t[1])}function cf(t){return!hf(t[0])&&!hf(t[1])}function df(t,e,i){for(var n,o="t[0],a=t[1],r=t[2],s=1/0,l=i*i,u=.1,h=.1;h<=.9;h+=.1)zL[0]=GL(o[0],a[0],r[0],h),zL[1]=GL(o[1],a[1],r[1],h),(f=WL(FL(zL,e)-l))<s&&(s=f,n=h);for(var" c="0;c<32;c++){var" d="n+u;BL[0]=GL(o[0],a[0],r[0],n),BL[1]=GL(o[1],a[1],r[1],n),VL[0]=GL(o[0],a[0],r[0],d),VL[1]=GL(o[1],a[1],r[1],d);var" f="FL(BL,e)-l;if(WL(f)<.01)break;var" p="FL(VL,e)-l;u/=2,f<0?p">=0?n+=u:n-=u:p>=0?n-=u:n+=u}return n}function ff(t,e){return t.getVisual("opacity")||t.getModel().get(e)}function pf(t,e,i){var n=t.getGraphicEl(),o=ff(t,e);null!=i&&(null==o&&(o=1),o*=i),n.downplay&&n.downplay(),n.traverse(function(t){if("group"!==t.type){var e=t.lineLabelOriginalOpacity;null!=e&&null==i||(e=o),t.setStyle("opacity",e)}})}function gf(t,e){var i=ff(t,e),n=t.getGraphicEl();n.highlight&&n.highlight(),n.traverse(function(t){"group"!==t.type&&t.setStyle("opacity",i)})}function mf(t){return t instanceof Array||(t=[t,t]),t}function vf(t){var e=t.coordinateSystem;if(!e||"view"===e.type){var i=t.getGraph();i.eachNode(function(t){var e=t.getModel();t.setLayout([+e.get("x"),+e.get("y")])}),yf(i)}}function yf(t){t.eachEdge(function(t){var e=t.getModel().get("lineStyle.curveness")||0,i=F(t.node1.getLayout()),n=F(t.node2.getLayout()),o=[i,n];+e&&o.push([(i[0]+n[0])/2-(i[1]-n[1])*e,(i[1]+n[1])/2-(n[0]-i[0])*e]),t.setLayout(o)})}function xf(t){var e=t.coordinateSystem;if(!e||"view"===e.type){var i=e.getBoundingRect(),n=t.getData(),o=n.graph,a=0,r=n.getSum("value"),s=2*Math.PI/(r||n.count()),l=i.width/2+i.x,u=i.height/2+i.y,h=Math.min(i.width,i.height)/2;o.eachNode(function(t){var e=t.getValue("value");a+=s*(r?e:1)/2,t.setLayout([h*Math.cos(a)+l,h*Math.sin(a)+u]),a+=s*(r?e:1)/2}),n.setLayout({cx:l,cy:u}),o.eachEdge(function(t){var e,i=t.getModel().get("lineStyle.curveness")||0,n=F(t.node1.getLayout()),o=F(t.node2.getLayout()),a=(n[0]+o[0])/2,r=(n[1]+o[1])/2;+i&&(e=[l*(i*=3)+a*(1-i),u*i+r*(1-i)]),t.setLayout([n,o,e])})}}function _f(t,e,i){for(var n=i.rect,o=n.width,a=n.height,r=[n.x+o/2,n.y+a/2],s=null==i.gravity?.1:i.gravity,l=0;l<t.length;l++){var u="t[l];u.p||(u.p=V(o*(Math.random()-.5)+r[0],a*(Math.random()-.5)+r[1])),u.pp=F(u.p),u.edges=null}var" h=".6;return{warmUp:function(){h=.5},setFixed:function(e){t[e].fixed=!0},setUnfixed:function(e){t[e].fixed=!1},step:function(i){for(var" n="[],o=t.length,a=0;a<e.length;a++){var" l="e[a],u=l.n1;U(n,(p=l.n2).p,u.p);var" c="X(n)-l.d,d=p.w/(u.w+p.w);isNaN(d)&&(d=0),q(n,n),!u.fixed&&jL(u.p,u.p,n,d*c*h),!p.fixed&&jL(p.p,p.p,n,-(1-d)*c*h)}for(a=0;a<o;a++)(v=t[a]).fixed||(U(n,r,v.p),jL(v.p,v.p,n,s*h));for(a=0;a<o;a++)for(var" p="t[f];U(n,p.p,u.p),0===(c=X(n))&&(W(n,Math.random()-.5,Math.random()-.5),c=1);var" g="(u.rep+p.rep)/c/c;!u.fixed&&jL(u.pp,u.pp,n,g),!p.fixed&&jL(p.pp,p.pp,n,-g)}for(var" m="[],a=0;a<o;a++){var" v="t[a];v.fixed||(U(m,v.p,v.pp),jL(v.p,v.p,m,h),G(v.pp,v.p))}h*=.992,i&&i(t,e,h<.01)}}}function" wf(t,e,i){var n.aspect="i,ha(n,{width:e.getWidth(),height:e.getHeight()})}function" bf(t,e){var i="t.get(" center"),n="e.getWidth(),o=e.getHeight(),a=Math.min(n,o);return{cx:Bo(i[0],e.getWidth()),cy:Bo(i[1],e.getHeight()),r:Bo(t.get(" radius"),a 2)}}function"" sf(t,e){return e&&("string"="=typeof" e?t="e.replace(" {value}",null!="t?t:" "):"function"="=typeof""" e&&(t="e(t))),t}function" mf(t,e){function i(){a.ignore="a.hoverIgnore,r.ignore=r.hoverIgnore}function" n(){a.ignore="a.normalIgnore,r.ignore=r.normalIgnore}tb.call(this);var" o="new" pm,a="new" gm,r="new" rm;this.add(o),this.add(a),this.add(r),this.updatedata(t,e,!0),this.on("emphasis",i).on("normal",n).on("mouseover",i).on("mouseout",n)}function if(t,e){return ha(t.getboxlayoutparams(),{width:e.getwidth(),height:e.getheight()})}function tf(t,e){for(var t}),o="[],a=" ascending"="==e,r=0,s=t.count();r<s;r++)o[r]=r;return" function"="=typeof""" e?o.sort(e):"none"!="=e&&o.sort(function(t,e){return" a?n[t]-n[e]:n[e]-n[t]}),o}function af(t){t.each(function(e){var i,n,o,a,r="t.getItemModel(e),s=r.getModel(" label").get("position"),l="r.getModel(" labelline"),u="t.getItemLayout(e),h=u.points,c="inner"===s||"inside"===s||"center"===s;if(c)i="center",a=[[n=(h[0][0]+h[1][0]+h[2][0]+h[3][0])/4,o=(h[0][1]+h[1][1]+h[2][1]+h[3][1])/4],[n,o]];else{var""" d,f,p,g="l.get(" length");"left"="==s?(d=(h[3][0]+h[0][0])/2,f=(h[3][1]+h[0][1])/2,n=(p=d-g)-5,i=" right"):(d="(h[1][0]+h[2][0])/2,f=(h[1][1]+h[2][1])/2,n=(p=d+g)+5,i="left");var""" df(t){if(!t.parallel){var e="!1;d(t.series,function(t){t&&" parallel"="==t.type&&(e=!0)}),e&&(t.parallel=[{}])}}function" " cf(t){d(di(t.parallelaxis),function(e){if(w(e)){var lf(t,e){var>0?-1:i<0?1:e?-1:1}}function kf(t,e){return math.min(e[1],math.max(e[0],t))}function pf(t,e,i){this._axesmap="R(),this._axesLayout={},this.dimensions=t.dimensions,this._rect,this._model=t,this._init(t,e,i)}function" nf(t,e){return ik(nk(t,e[0]),e[1])}function of(t,e){var i="e.layoutLength/(e.axisCount-1);return{position:i*t,axisNameAvailableWidth:i,axisLabelShow:!0}}function" ef(t,e){var i,n,o="e.layoutLength,a=e.axisExpandWidth,r=e.axisCount,s=e.axisCollapseWidth,l=e.winInnerIndices,u=s,h=!1;return" t<l[0]?(i="t*s,n=s):t<=l[1]?(i=e.axisExpandWindow0Pos+t*a-e.axisExpandWindow[0],u=a,h=!0):(i=o-(r-1-t)*s,n=s),{position:i,axisNameAvailableWidth:u,axisLabelShow:h,nameTruncateMaxWidth:n}}function" rf(t){fw.call(this),this._zr="t,this.group=new" tb,this._brushtype,this._brushoption,this._panels,this._track="[],this._dragging,this._covers=[],this._creatingCover,this._creatingPanel,this._enableGlobalPan,this._uid=" brushcontroller_"+sk++,this._handlers="{},ck(Mk,function(t,e){this._handlers[e]=m(t,this)},this)}function" " zf(t,e){var o="t._zr;t._enableGlobalPan||Qh(o,xk,t._uid),ck(t._handlers,function(t,e){o.on(e,t)}),t._brushType=e.brushType,t._brushOption=n(i(bk),e,!0)}function" bf(t){var e="t._zr;tc(e,xk,t._uid),ck(t._handlers,function(t,i){e.off(i,t)}),t._brushType=t._brushOption=null}function" vf(t,e){var i.__brushoption="e,Wf(i,e),t.group.add(i),i}function" gf(t,e){var i.endcreating&&(i.endcreating(t,e),wf(e,e.__brushoption)),e}function ff(t,e){var wf(t,e){var hf(t,e){zf(e).updatecommon(t,e),ff(t,e)}function zf(t){return ik[t.__brushoption.brushtype]}function uf(t,e,i){var n="t._panels;if(!n)return!0;var" o,a="t._transform;return" ck(n,function(t){t.istargetbycursor(e,i,a)&&(o="t)}),o}function" xf(t,e){var null="=n||i[n]}function" jf(t){var ck(e,function(e){t.group.remove(e)},t),e.length="0,!!i}function" yf(t,e){var qf(t){var gk(o*o+a*a,.5)>vk}function Kf(t){var e=t.length-1;return e<0&&(e=0),[t[0],t[e]]}function $f(t,e,i,n){var o="new" tb;return o.add(new ym({name:"main",style:ep(i),silent:!0,draggable:!0,cursor:"move",drift:hk(t,e,o,"nswe"),ondragend:hk(yf,e,{isend:!0})})),ck(n,function(i){o.add(new ym({name:i,style:{opacity:0},draggable:!0,silent:!0,invisible:!0,drift:hk(t,e,o,i),ondragend:hk(yf,e,{isend:!0})}))}),o}function jf(t,e,i,n){var qf(t,e){var i="e.__brushOption,n=i.transformable,o=e.childAt(0);o.useStyle(ep(i)),o.attr({silent:!n,cursor:n?" move":"default"}),ck(["w","e","n","s","se","sw","ne","nw"],function(i){var" tp(t,e,i,n,o,a,r){var s="e.childOfName(i);s&&s.setShape(up(lp(t,e,[[n,o],[n+a,o+r]])))}function" ep(t){return r({strokenoscale:!0},t.brushstyle)}function ip(t,e,i,n){var np(t){return to(t.group)}function op(t,e){if(e.length>1)return("e"===(n=[op(t,(e=e.split(""))[0]),op(t,e[1])])[0]||"w"===n[0])&&n.reverse(),n.join("");var i={left:"w",right:"e",top:"n",bottom:"s"},n=Do({w:"left",e:"right",n:"top",s:"bottom"}[e],np(t));return i[n]}function ap(t,e,i,n,o,a,r,s){var l=n.__brushOption,u=t(l.range),h=sp(i,a,r);ck(o.split(""),function(t){var e=_k[t];u[e[0]][e[1]]+=h[e[0]]}),l.range=e(ip(u[0][0],u[1][0],u[0][1],u[1][1])),Hf(i,n),Yf(i,{isEnd:!1})}function rp(t,e,i,n,o){var a=e.__brushOption.range,r=sp(t,i,n);ck(a,function(t){t[0]+=r[0],t[1]+=r[1]}),Hf(t,e),Yf(t,{isEnd:!1})}function sp(t,e,i){var n=t.group,o=n.transformCoordToLocal(e,i),a=n.transformCoordToLocal(0,0);return[o[0]-a[0],o[1]-a[1]]}function lp(t,e,n){var o=Xf(t,e);return o&&!0!==o?o.clipPath(n,t._transform):i(n)}function up(t){var e=fk(t[0][0],t[1][0]),i=fk(t[0][1],t[1][1]);return{x:e,y:i,width:pk(t[0][0],t[1][0])-e,height:pk(t[0][1],t[1][1])-i}}function hp(t,e,i){if(t._brushType){var n=t._zr,o=t._covers,a=Uf(t,e,i);if(!t._dragging)for(var r=0;r<o.length;r++){var s="o[r].__brushOption;if(a&&(!0===a||s.panelId===a.panelId)&&Ik[s.brushType].contain(o[r],i[0],i[1]))return}a&&n.setCursorStyle(" crosshair")}}function" cp(t){var e="t.event;e.preventDefault&&e.preventDefault()}function" dp(t,e,i){return t.childofname("main").contain(e,i)}function fp(t,e,n,o){var a,r="t._creatingCover,s=t._creatingPanel,l=t._brushOption;if(t._track.push(n.slice()),qf(t)||r){if(s&&!r){" single"="==l.brushMode&&jf(t);var" " u="i(l);u.brushType=pp(u.brushType,s),u.panelId=!0===s?null:s.panelId,r=t._creatingCover=Vf(t,u),t._covers.push(r)}if(r){var" h="Ik[pp(t._brushType,s)];r.__brushOption.range=h.getCreatingRange(lp(t,r,t._track)),o&&(Gf(t,r),h.updateCommon(t,r)),Ff(t,r),a={isEnd:o}}}else" o&&"single"="==l.brushMode&&l.removeOnClick&&Uf(t,e,n)&&jf(t)&&(a={isEnd:o,removeOnClick:!0});return" a}function pp(t,e){return"auto"="==t?e.defaultBrushType:t}function" gp(t){if(this._dragging){cp(t);var mp(t){return{createcover:function(e,i){return $f(hk(ap,function(e){var i="[e,[0,100]];return" t&&i.reverse(),i},function(e){return e[t]}),e,i,[["w","e"],["n","s"]][t])},getcreatingrange:function(e){var l="[n,a];t&&l.reverse(),Jf(e,i,l,o)},updateCommon:Qf,contain:dp}}function" vp(t){return t="_p(t),function(e,i){return" lo(e,t)}}function yp(t,e){return n="null!=e?e:i,o=n?t.width:t.height,a=n?t.x:t.y;return[a,a+(o||0)]}}function" xp(t,e,i){return t.contain(o[0],o[1])&&!pc(n,e,i)}}function _p(t){return de.create(t)}function wp(t,e,i){return i&&"axisareaselect"="==i.type&&e.findComponents({mainType:" parallelaxis",query:i})[0]="==t}function" bp(t){var f(t.activeintervals,function(t){return{brushtype:"linex",panelid:"pl",range:[e.datatocoord(t[0],!0),e.datatocoord(t[1],!0)]}})}function sp(t,e){return e.getcomponent("parallel",t.get("parallelindex"))}function mp(t,e){var i.get("axisexpandable")&&i.get("axisexpandtriggeron")="==e}function" ip(t,e){if(!t.encodedefine){var tp(t){return+t.replace("dim","")}function ap(t,e,i){var ym({shape:{x:o.x,y:o.y,width:o.width,height:o.height}}),r="horizontal" =="=n.get(" layout")?"width":"height";return" a.setshape(r,0),io(a,{shape:{width:o.width,height:o.height}},e,i),a}function dp(t,e,i,n){for(var o="[],a=0;a<i.length;a++){var" r="i[a],s=t.get(t.mapDimension(r),e);Pp(s,n.getAxis(r).type)||o.push(n.dataToPoint(s,r))}return" o}function cp(t,e,i,n,o){var a="Dp(t,i,n,o),r=new" gm({shape:{points:a},silent:!0,z2:10});return e.add(r),t.setitemgraphicel(i,r),r}function lp(t){var kp(t,e,i,n){var pp(t,e){return"category"="==e?null==t:null==t||isNaN(t)}function" np(t,e){return t.getvisual("opacity")||t.getmodel().get(e)}function op(t,e,i){var ep(t,e){var rp(t,e,i){var ym({shape:{x:t.x-10,y:t.y-10,width:0,height:t.height+20}});return io(n,{shape:{width:t.width+20,height:t.height+20}},e,i),n}function zp(){function t(e,n){if(n>=i.length)return e;for(var o=-1,a=e.length,r=i[n++],s={},l={};++o<a;){var u="r(e[o]),h=l[u];h?h.push(e[o]):l[u]=[e[o]]}return" d(l,function(e,i){s[i]="t(e,n)}),s}function" e(t,o){if(o>=i.length)return t;var a=[],r=n[o++];return d(t,function(t,i){a.push({key:i,values:e(t,o)})}),r?a.sort(function(t,e){return r(t.key,e.key)}):a}var i=[],n=[];return{key:function(t){return i.push(t),this},sortKeys:function(t){return n[i.length-1]=t,this},entries:function(i){return e(t(i,0),0)}}}function Bp(t,e){return ha(t.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()})}function Vp(t,e,i,n,o,a,r,s){Fp(t,e,i,o,a,s),Zp(t,e,a,o,n,r,s),eg(t,s)}function Gp(t){d(t,function(t){var e=Qp(t.outEdges,Jp),i=Qp(t.inEdges,Jp),n=Math.max(e,i);t.setLayout({value:n},!0)})}function Fp(t,e,i,n,o,a){for(var r=[],s=[],l=[],u=[],h=0,c=0;c<e.length;c++)r[c]=1;for(c=0;c<t.length;c++)s[c]=t[c].inedges.length,0===s[c]&&l.push(t[c]);for(;l.length;){for(var d="0;d<l.length;d++){var" f="l[d];" vertical"="==a?(f.setLayout({y:h},!0),f.setLayout({dy:i},!0)):(f.setLayout({x:h},!0),f.setLayout({dx:i},!0));for(var" " p="0;p<f.outEdges.length;p++){var" g="f.outEdges[p];r[e.indexOf(g)]=0;var" m="g.node2;0==--s[t.indexOf(m)]&&u.push(m)}}++h,l=u,u=[]}for(c=0;c<r.length;c++);Wp(t,h,a),Hp(t," wp(t,e,i){d(t,function(t){t.outedges.length||("vertical"="==i?t.setLayout({y:e-1},!0):t.setLayout({x:e-1},!0))})}function" hp(t,e,i){d(t,function(t){if("vertical"="==i){var" n="t.getLayout().y*e;t.setLayout({y:n},!0)}else{var" o="t.getLayout().x*e;t.setLayout({x:o},!0)}})}function" zp(t,e,i,n,o,a,r){var s="zp().key(Up(r)).sortKeys(function(t,e){return" t-e}).entries(t).map(function(t){return t.values});xp(t,s,e,i,n,o,r),jp(s,o,i,n,r);for(var l="1;a">0;a--)Yp(s,l*=.99,r),jp(s,o,i,n,r),tg(s,l,r),jp(s,o,i,n,r)}function Up(t){return"vertical"===t?function(t){return t.getLayout().y}:function(t){return t.getLayout().x}}function Xp(t,e,i,n,o,a,r){var s=[];d(e,function(t){var e=t.length,i=0,l=0;d(t,function(t){i+=t.getLayout().value}),l="vertical"===r?(o-(e-1)*a)/i:(n-(e-1)*a)/i,s.push(l)}),s.sort(function(t,e){return t-e});var l=s[0];d(e,function(t){d(t,function(t,e){var i=t.getLayout().value*l;"vertical"===r?(t.setLayout({x:e},!0),t.setLayout({dx:i},!0)):(t.setLayout({y:e},!0),t.setLayout({dy:i},!0))})}),d(i,function(t){var e=+t.getValue()*l;t.setLayout({dy:e},!0)})}function jp(t,e,i,n,o){d(t,function(t){var a,r,s,l=0,u=t.length;if("vertical"===o){var h;for(t.sort(function(t,e){return t.getLayout().x-e.getLayout().x}),s=0;s<u;s++)(r=l-(a=t[s]).getlayout().x)>0&&(h=a.getLayout().x+r,a.setLayout({x:h},!0)),l=a.getLayout().x+a.getLayout().dx+e;if((r=l-e-n)>0)for(h=a.getLayout().x-r,a.setLayout({x:h},!0),l=h,s=u-2;s>=0;--s)(r=(a=t[s]).getLayout().x+a.getLayout().dx+e-l)>0&&(h=a.getLayout().x-r,a.setLayout({x:h},!0)),l=a.getLayout().x}else{var c;for(t.sort(function(t,e){return t.getLayout().y-e.getLayout().y}),s=0;s<u;s++)(r=l-(a=t[s]).getlayout().y)>0&&(c=a.getLayout().y+r,a.setLayout({y:c},!0)),l=a.getLayout().y+a.getLayout().dy+e;if((r=l-e-i)>0)for(c=a.getLayout().y-r,a.setLayout({y:c},!0),l=c,s=u-2;s>=0;--s)(r=(a=t[s]).getLayout().y+a.getLayout().dy+e-l)>0&&(c=a.getLayout().y-r,a.setLayout({y:c},!0)),l=a.getLayout().y}})}function Yp(t,e,i){d(t.slice().reverse(),function(t){d(t,function(t){if(t.outEdges.length){var n=Qp(t.outEdges,qp,i)/Qp(t.outEdges,Jp,i);if("vertical"===i){var o=t.getLayout().x+(n-$p(t,i))*e;t.setLayout({x:o},!0)}else{var a=t.getLayout().y+(n-$p(t,i))*e;t.setLayout({y:a},!0)}}})})}function qp(t,e){return $p(t.node2,e)*t.getValue()}function Kp(t,e){return $p(t.node1,e)*t.getValue()}function $p(t,e){return"vertical"===e?t.getLayout().x+t.getLayout().dx/2:t.getLayout().y+t.getLayout().dy/2}function Jp(t){return t.getValue()}function Qp(t,e,i){for(var n=0,o=t.length,a=-1;++a<o;){var r="+e.call(t,t[a],i);isNaN(r)||(n+=r)}return" n}function tg(t,e,i){d(t,function(t){d(t,function(t){if(t.inedges.length){var n="Qp(t.inEdges,Kp,i)/Qp(t.inEdges,Jp,i);if(" vertical"="==i){var" " o="t.getLayout().x+(n-$p(t,i))*e;t.setLayout({x:o},!0)}else{var" a="t.getLayout().y+(n-$p(t,i))*e;t.setLayout({y:a},!0)}}})})}function" eg(t,e){d(t,function(t){"vertical"="==e?(t.outEdges.sort(function(t,e){return" t.node2.getlayout().x-e.node2.getlayout().x}),t.inedges.sort(function(t,e){return t.node1.getlayout().x-e.node1.getlayout().x})):(t.outedges.sort(function(t,e){return t.node2.getlayout().y-e.node2.getlayout().y}),t.inedges.sort(function(t,e){return t.node1.getlayout().y-e.node1.getlayout().y}))}),d(t,function(t){var e="0,i=0;d(t.outEdges,function(t){t.setLayout({sy:e},!0),e+=t.getLayout().dy}),d(t.inEdges,function(t){t.setLayout({ty:i},!0),i+=t.getLayout().dy})})}function" ig(t,e,i,n,o){var bk({shape:{points:o?og(a,n,t):a}});return ng(t,r,e,i,o),r}function ng(t,e,i,n,o){var og(t,e,i){return f(t,function(t){return t="t.slice(),t[e]=i.initBaseline,t})}function" ag(t){var t.eachseriesbytype("boxplot",function(t){var rg(t){var e,i,n="t.axis,o=t.seriesModels,a=o.length,r=t.boxWidthList=[],s=t.boxOffsetList=[],l=[];if(" category"="==n.type)i=n.getBandWidth();else{var" u="0;Gk(o,function(t){u=Math.max(u,t.getData().count())}),e=n.getExtent(),Math.abs(e[1]-e[0])}Gk(o,function(t){var" h=".8*i-2,c=h/a*.3,d=(h-c*(a-1))/a,f=d/2-h/2;Gk(o,function(t,e){s.push(f),f+=c+d,r.push(Math.min(Math.max(d,l[e][0]),l[e][1]))})}function" sg(t,e,i){function n(t,i,n){var l;return isnan(t)||isnan(o)?l="[NaN,NaN]:(l=r.dataToPoint(a))[u]+=e,l}function" o(t,e,i){var a(t,e){var i="e.slice(),n=e.slice();i[u]-=l,n[u]+=l,t.push(i,n)}var" p="0;p<s.count();p++){var" g="s.get(d,p),m=n(g,f[2],p),v=n(g,f[0],p),y=n(g,f[1],p),x=n(g,f[3],p),_=n(g,f[4],p),w=[];o(w,y,0),o(w,x,1),w.push(v,y,_,x),a(w,v),a(w,_),a(w,m),s.setItemLayout(p,{initBaseline:m[h],ends:w})}}function" lg(t,e,i){var new zk({shape:{points:i?hg(n,t):n},z2:100})}function ug(t,e,i,n){var hg(t,e){return cg(t,e,i){var uk({shape:{points:o},__sign:1});e.add(a);var uk({shape:{points:o},__sign:-1});e.add(r),dg(1,a,t,n),dg(-1,r,t,n),i&&(a.incremental="!0,r.incremental=!0)}function" dg(t,e,i,n){var>0?"P":"N",a=n.getVisual("borderColor"+o)||n.getVisual("color"+o),r=i.getModel(Fk).getItemStyle(Hk);e.useStyle(r),e.style.fill=null,e.style.stroke=a}function fg(t,e,i,n,o){return i>n?-1:i<n?1:e>0?t.get(o,e-1)<=n?1:-1:1}function pg(t,e){var i,n="t.getBaseAxis(),o=" category"="==n.type?n.getBandWidth():(i=n.getExtent(),Math.abs(i[1]-i[0])/e.count()),a=Bo(A(t.get(" barmaxwidth"),o),o),r="Bo(A(t.get("barMinWidth"),1),o),s=t.get("barWidth");return""" null!="s?Bo(s,o):Math.max(Math.min(o/2,a),r)}function" gg(t){return y(t)||(t="[+t,+t]),t}function" mg(t,e){t.eachchild(function(t){t.attr({z:e.z,zlevel:e.zlevel,style:{stroke:"stroke"="==e.brushType?e.color:null,fill:" fill"="==e.brushType?e.color:null}})})}function" " vg(t,e){tb.call(this);var i="new" _u(t,e),n="new" tb;this.add(i),this.add(n),n.beforeupdate="function(){this.attr(i.getScale())},this.updateData(t,e)}function" yg(t){var e="t.data;e&&e[0]&&e[0][0]&&e[0][0].coord&&(t.data=f(e,function(t){var" t[0].name&&(e.fromname="t[0].name),t[1].name&&(e.toName=t[1].name),o([e,t[0],t[1]])}))}function" xg(t,e,i){tb.call(this),this.add(this.createline(t,e,i)),this._updateeffectsymbol(t,e)}function _g(t,e,i){tb.call(this),this._createpolyline(t,e,i)}function wg(t,e,i){xg.call(this,t,e,i),this._lastframe="0,this._lastFramePercent=0}function" bg(){this.group="new" tb}function sg(t){return t instanceof array||(t="[t,t]),t}function" mg(){var ig(t,e,i){var n="t[1]-t[0],o=(e=f(e,function(e){return{interval:[(e.interval[0]-t[0])/n,(e.interval[1]-t[0])/n]}})).length,a=0;return" function(t){for(n="a;n<o;n++)if((r=e[n].interval)[0]<=t&&t<=r[1]){a=n;break}if(n===o)for(var">=0;n--){var r=e[n].interval;if(r[0]<=t&&t<=r[1]){a=n;break}}return n>=0&&n<o&&i[n]}}function tg(t,e){var i="t[1]-t[0];return" e="[(e[0]-t[0])/i,(e[1]-t[0])/i],function(t){return" t>=e[0]&&t<=e[1]}}function ag(t){var e="t.dimensions;return" lng"="==e[0]&&" lat"="==e[1]}function""" dg(t,e,i,n){var o="t.getItemLayout(e),a=i.get(" symbolrepeat"),r="i.get(" symbolclip"),s="i.get("symbolPosition")||"start",l=(i.get("symbolRotate")||0)*Math.PI/180||0,u=i.get("symbolPatternSize")||2,h=i.isAnimationEnabled(),c={dataIndex:e,layout:o,itemModel:i,symbolType:t.getItemVisual(e,"symbol")||"circle",color:t.getItemVisual(e,"color"),symbolClip:r,symbolRepeat:a,symbolRepeatDirection:i.get("symbolRepeatDirection"),symbolPatternSize:u,rotation:l,animationModel:h?i:null,hoverAnimation:h&&i.get("hoverAnimation"),z2:i.getShallow("z",!0)||0};Cg(i,a,o,n,c),kg(t,e,o,a,r,c.boundingLength,c.pxSign,u,n,c),Pg(i,c.symbolScale,l,n,c);var""" d="c.symbolSize,f=i.get(" symboloffset");return" y(f)&&(f="[Bo(f[0],d[0]),Bo(f[1],d[1])]),Ng(i,d,o,a,r,f,s,c.valueLineWidth,c.boundingLength,c.repeatCutLength,n,c),c}function" cg(t,e,i,n,o){var a,r="n.valueDim,s=t.get(" symbolboundingdata"),l="n.coordSys.getOtherAxis(n.coordSys.getBaseAxis()),u=l.toGlobalCoord(l.dataToCoord(0)),h=1-+(i[r.wh]<=0);if(y(s)){var" " c="[Lg(l,s[0])-u,Lg(l,s[1])-u];c[1]<c[0]&&c.reverse(),a=c[h]}else" a="null!=s?Lg(l,s)-u:e?n.coordSysExtent[r.index][h]-u:i[r.wh];o.boundingLength=a,e&&(o.repeatCutLength=i[r.wh]),o.pxSign=a">0?1:a<0?-1:0}function lg(t,e){return t.toglobalcoord(t.datatocoord(t.scale.parse(e)))}function kg(t,e,i,n,o,a,r,s,l,u){var h="l.valueDim,c=l.categoryDim,d=Math.abs(i[c.wh]),f=t.getItemVisual(e," symbolsize");y(f)?f="f.slice():(null==f&&(f=" 100%"),f="[f,f]),f[c.index]=Bo(f[c.index],d),f[h.index]=Bo(f[h.index],n?d:Math.abs(a)),u.symbolSize=f,(u.symbolScale=[f[0]/s,f[1]/s])[h.index]*=(l.isHorizontal?-1:1)*r}function""" pg(t,e,i,n,o){var a="t.get(dP)||0;a&&(pP.attr({scale:e.slice(),rotation:i}),pP.updateTransform(),a/=pP.getLineScale(),a*=e[n.valueDim.index]),o.valueLineWidth=a}function" ng(t,e,i,n,o,r,s,l,u,h,c,d){var f="c.categoryDim,p=c.valueDim,g=d.pxSign,m=Math.max(e[p.index]+l,0),v=m;if(n){var" y="Math.abs(u),x=T(t.get(" symbolmargin"),"15%")+"",_="!1;x.lastIndexOf(" !")="==x.length-1&&(_=!0,x=x.slice(0,x.length-1)),x=Bo(x,e[p.index]);var""" w="Math.max(m+2*x,0),b=_?0:2*x,S=Jo(n),M=S?n:Kg((y+b)/w);w=m+2*(x=(y-M*m)/2/(_?M:M-1)),b=_?0:2*x,S||" fixed"="==n||(M=h?Kg((Math.abs(h)+b)/w):0),v=M*w-b,d.repeatTimes=M,d.symbolMargin=x}var" " i="g*(v/2),A=d.pathPosition=[];A[f.index]=i[f.wh]/2,A[p.index]=" start"="==s?I:" end"="==s?u-I:u/2,r&&(A[0]+=r[0],A[1]+=r[1]);var""" d="d.bundlePosition=[];D[f.index]=i[f.xy],D[p.index]=i[p.xy];var" c="d.barRectShape=a({},i);C[p.wh]=g*Math.max(Math.abs(i[p.wh]),Math.abs(A[p.index]+I)),C[f.wh]=i[f.wh];var" l="d.clipShape={};L[f.xy]=-i[f.xy],L[f.wh]=c.ecSize[f.wh],L[p.xy]=0,L[p.wh]=i[p.wh]}function" og(t){var e="t.symbolPatternSize,i=$l(t.symbolType,-e/2,-e/2,e,e,t.color);return" i.attr({culling:!0}),"image"!="=i.type&&i.setStyle({strokeNoScale:!0}),i}function" eg(t,e,i,n){function o(t){var>0:n<0)&&(o=h-1-t),e[u.index]=d*(o-h 2+.5)+l[u.index],{position:e,scale:i.symbolscale.slice(),rotation:i.rotation}}var a="t.__pictorialBundle,r=i.symbolSize,s=i.valueLineWidth,l=i.pathPosition,u=e.valueDim,h=i.repeatTimes||0,c=0,d=r[e.valueDim.index]+s+2*i.symbolMargin;for(jg(t,function(t){t.__pictorialAnimationIndex=c,t.__pictorialRepeatTimes=h,c<h?Yg(t,null,o(c),i,n):Yg(t,null,{scale:[0,0]},i,n,function(){a.remove(t)}),Wg(t,i),c++});c<h;c++){var" f="Og(i);f.__pictorialAnimationIndex=c,f.__pictorialRepeatTimes=h,a.add(f);var" p="o(c);Yg(f,{position:p.position,scale:[0,0]},{scale:p.scale,rotation:p.rotation},i,n),f.on(" mouseover",function(){jg(t,function(t){t.trigger("emphasis")})}).on("mouseout",function(){jg(t,function(t){t.trigger("normal")})}),wg(f,i)}}function" rg(t,e,i,n){var o="t.__pictorialBundle,a=t.__pictorialMainPath;a?Yg(a,null,{position:i.pathPosition.slice(),scale:i.symbolScale.slice(),rotation:i.rotation},i,n):(a=t.__pictorialMainPath=Og(i),o.add(a),Yg(a,{position:i.pathPosition.slice(),scale:[0,0],rotation:i.rotation},{scale:i.symbolScale.slice()},i,n),a.on(" mouseover",function(){this.trigger("emphasis")}).on("mouseout",function(){this.trigger("normal")})),wg(a,i)}function" zg(t,e,i){var n="a({},e.barRectShape),o=t.__pictorialBarRect;o?Yg(o,null,{shape:n},e,i):(o=t.__pictorialBarRect=new" ym({z2:2,shape:n,silent:!0,style:{stroke:"transparent",fill:"transparent",linewidth:0}}),t.add(o))}function bg(t,e,i,n){if(i.symbolclip){var ym({shape:r}),t.__pictorialbundle.setclippath(o),t.__pictorialclippath="o;var" h="{};h[s.wh]=i.clipShape[s.wh],zM[n?" updateprops":"initprops"](o,{shape:h},l,u)}}}function" vg(t,e){var i="t.getItemModel(e);return" i.getanimationdelayparams="Gg,i.isAnimationEnabled=Fg,i}function" gg(t){return{index:t.__pictorialanimationindex,count:t.__pictorialrepeattimes}}function fg(){return this.parentmodel.isanimationenabled()&&!!this.getshallow("animation")}function wg(t,e){t.off("emphasis").off("normal");var hg(t,e,i,n){var tb,a="new" tb;return o.add(a),o.__pictorialbundle="a,a.attr(" position",i.bundleposition.slice()),i.symbolrepeat?eg(o,e,i):rg(o,e,i),zg(o,i,n),bg(o,e,i,n),o.__pictorialshapestr="Xg(t,i),o.__pictorialSymbolMeta=i,o}function" " ug(t,e,i,n){var xg(t,e){return[t.getitemvisual(e.dataindex,"symbol")||"none",!!e.symbolrepeat,!!e.symbolclip].join(":")}function jg(t,e,i){d(t.__pictorialbundle.children(),function(n){n!="=t.__pictorialBarRect&&e.call(i,n)})}function" yg(t,e,i,n,o,a){e&&t.attr(e),n.symbolclip&&!o?i&&t.attr(i):i&&zm[o?"updateprops":"initprops"](t,i,n.animationmodel,n.dataindex,a)}function qg(t,e,i){var>0)],d=t.__pictorialBarRect;Lh(d.style,h,a,n,e.seriesModel,o,c),co(d,h)}function Kg(t){var e=Math.round(t);return Math.abs(t-e)<1e-4?e:math.ceil(t)}function $g(t,e,i){this.dimension="single" ,this.dimensions="[" single"],this._axis="null,this._rect,this._init(t,e,i),this.model=t}function" " jg(t,e){e="e||{};var" i="t.coordinateSystem,n=t.axis,o={},a=n.position,r=n.orient,s=i.getRect(),l=[s.x,s.x+s.width,s.y,s.y+s.height],u={horizontal:{top:l[2],bottom:l[3]},vertical:{left:l[0],right:l[1]}};o.position=[" vertical"="==r?u.vertical[a]:l[0]," horizontal"="==r?u.horizontal[a]:l[3]];var""" h="{horizontal:0,vertical:1};o.rotation=Math.PI/2*h[r];var" c="{top:-1,bottom:1,right:1,left:-1};o.labelDirection=o.tickDirection=o.nameDirection=c[a],t.get(" axistick.inside")&&(o.tickdirection="-o.tickDirection),T(e.labelInside,t.get(" axislabel.inside"))&&(o.labeldirection="-o.labelDirection);var""" d="e.rotate;return" null="=d&&(d=t.get(" axislabel.rotate")),o.labelrotation="top" =="=a?-d:d,o.z2=1,o}function" qg(t,e,i,n,o){var r="t.axis;if(!r.scale.isBlank()&&r.containData(e))if(t.involveSeries){var" s="tm(e,t),l=s.payloadBatch,u=s.snapToValue;l[0]&&null==o.seriesIndex&&a(o,l[0]),!n&&t.snap&&r.containData(u)&&null!=u&&(e=u),i.showPointer(t,e,l,o),i.showTooltip(t,s,u)}else" i.showpointer(t,e)}function tm(t,e){var wp(e.seriesmodels,function(e,l){var u,h,c="e.getData().mapDimension(n,!0);if(e.getAxisTooltipData){var" f="t-u,p=Math.abs(f);p<=r&&((p<r||f">=0&&s<0)&&(r=p,s=f,o=u,a.length=0),wp(h,function(t){a.push({seriesindex:e.seriesindex,dataindexinside:t,dataindex:e.getdata().getrawindex(t)})}))}}),{payloadbatch:a,snaptovalue:o}}function em(t,e,i,n){t[e.key]="{value:i,payloadBatch:n}}function" im(t,e,i,n){var o="i.payloadBatch,a=e.axis,r=a.model,s=e.axisPointerModel;if(e.triggerTooltip&&o.length){var" l="e.coordSys.model,u=Th(l),h=t.map[u];h||(h=t.map[u]={coordSysId:l.id,coordSysIndex:l.componentIndex,coordSysType:l.type,coordSysMainType:l.mainType,dataByAxis:[]},t.list.push(h)),h.dataByAxis.push({axisDim:a.dim,axisIndex:r.componentIndex,axisType:r.type,axisId:r.id,value:n,valueLabelOpt:{precision:s.get(" label.precision"),formatter:s.get("label.formatter")},seriesdataindices:o.slice()})}}function" nm(t,e,i){var n="i.axesInfo=[];wP(e,function(e,i){var" om(t,e,i,n){if(!lm(e)&&t.list.length){var n({type:"hidetip"})}function am(t,e,i){var i="t.axisPointerModel.option;" show"="==i.status&&wP(i.seriesDataIndices,function(t){var" " e="t.seriesIndex+" | "+t.dataindex;a[e]="t})});var" r="[],s=[];d(o,function(t,e){!a[e]&&s.push(t)}),d(a,function(t,e){!o[e]&&r.push(t)}),s.length&&i.dispatchAction({type:" downplay",escapeconnect:!0,batch:s}),r.length&&i.dispatchaction({type:"highlight",escapeconnect:!0,batch:r})}function" rm(t,e){for(var n}}function sm(t){var i.axisindex="i[n+" axisindex"]="e.componentIndex,i.axisName=i[n+" axisname"]="e.name,i.axisId=i[n+"AxisId"]=e.id,i}function""" lm(t){return!t||null="=t[0]||isNaN(t[0])||null==t[1]||isNaN(t[1])}function" um(t,e,i){if(!u_.node){var hm(t,e){function i(i,n){t.on(i,function(i){var cm(t,e){var i,n="t.showTip.length,o=t.hideTip.length;n?i=t.showTip[n-1]:o&&(i=t.hideTip[o-1]),i&&(i.dispatchAction=null,e.dispatchAction(i))}function" dm(t,e,i){t.handler("leave",null,i)}function fm(t,e,i,n){e.handler(t,i,n)}function pm(t){var gm(t,e){if(!u_.node){var mm(){}function vm(t,e,i,n){ym(ap(i).lastprop,n)||(ap(i).lastprop="n,e?Mo(i,n,t):(i.stopAnimation(),i.attr(n)))}function" ym(t,e){if(w(t)&&w(e)){var d(e,function(e,n){i="i&&ym(t[n],e)}),!!i}return" t="==e}function" xm(t,e){t[e.get("label.show")?"show":"hide"]()}function _m(t){return{position:t.position.slice(),rotation:t.rotation||0}}function wm(t,e,i){var bm(t){var e,i="t.get(" type"),n="t.getModel(i+" style");return"line"="==i?(e=n.getLineStyle()).fill=null:"shadow"===i&&((e=n.getAreaStyle()).stroke=null),e}function""" sm(t,e,i,n,o){var a="Im(i.get(" value"),e.axis,e.ecmodel,i.get("seriesdataindices"),{precision:i.get("label.precision"),formatter:i.get("label.formatter")}),r="i.getModel(" label"),s="qM(r.get("padding")||0),l=r.getFont(),u=ke(a,l),h=o.position,c=u.width+s[1]+s[3],d=u.height+s[0]+s[2],f=o.align;"right"===f&&(h[0]-=c),"center"===f&&(h[0]-=c/2);var""" p="o.verticalAlign;" bottom"="==p&&(h[1]-=d)," middle"="==p&&(h[1]-=d/2),Mm(h,c,d,n);var""" g="r.get(" backgroundcolor");g&&"auto"!="=g||(g=e.get(" axisline.linestyle.color")),t.label="{shape:{x:0,y:0,width:c,height:d,r:r.get("borderRadius")},position:h.slice(),style:{text:a,textFont:l,textFill:r.getTextColor(),textPosition:"inside",fill:g,stroke:r.get("borderColor")||"transparent",lineWidth:r.get("borderWidth")||0,shadowBlur:r.get("shadowBlur"),shadowColor:r.get("shadowColor"),shadowOffsetX:r.get("shadowOffsetX"),shadowOffsetY:r.get("shadowOffsetY")},z2:10}}function""" mm(t,e,i,n){var im(t,e,i,n,o){t="e.scale.parse(t);var" s="{value:Ul(e,t),seriesData:[]};d(n,function(t){var" a}function tm(t,e,i){var mt(n,n,i.rotation),st(n,n,i.position),ao([t.datatocoord(e),(i.labeloffset||0)+(i.labeldirection||1)*(i.labelmargin||0)],n)}function am(t,e,i,n,o,a){var dm(t,e,i){return cm(t,e,i){return lm(t,e,i,n,o,a){return{cx:t,cy:e,r0:i,r:n,startangle:o,endangle:a,clockwise:!0}}function km(t,e){var i[e.dim+"axisindex"]="e.index,t.getCartesian(i)}function" pm(t){return"x"="==t.dim?0:1}function" nm(t){return t.ishorizontal()?0:1}function om(t,e){var em(t,e,i){var ym({shape:{x:t.x-10,y:t.y-10,width:0,height:t.height+20}});return io(n,{shape:{width:t.width+20,height:t.height+20}},e,i),n}function rm(t,e,i){if(t.count())for(var n,o="e.coordinateSystem,a=e.getLayerSeries(),r=t.mapDimension(" single"),s="t.mapDimension(" value"),l="f(a,function(e){return""" f(e.indices,function(e){var i[1]="t.get(s,e),i})}),u=zm(l),h=u.y0,c=i/u.max,d=a.length,p=a[0].indices.length,g=0;g<p;++g){n=h[g]*c,t.setItemLayout(a[0].indices[g],{layerIndex:0,x:l[0][g][0],y0:n,y:l[0][g][1]*c});for(var" m="1;m<d;++m)n+=l[m-1][g][1]*c,t.setItemLayout(a[m].indices[g],{layerIndex:m,x:l[m][g][0],y0:n,y:l[m][g][1]*c})}}function" zm(t){for(var>a&&(a=u),n.push(u)}for(var h=0;h<i;++h)o[h]=(a-n[h]) 2;a="0;for(var" c="0;c<i;++c){var" d="n[c]+o[c];d">a&&(a=d)}return r.y0=o,r.max=a,r}function Bm(t){var e=0;d(t.children,function(t){Bm(t);var i=t.value;y(i)&&(i=i[0]),e+=i});var i=t.value;y(i)&&(i=i[0]),(null==i||isNaN(i))&&(i=e),i<0&&(i=0),y(t.value)?t.value[0]=i:t.value=i}function vm(t,e,i){function n(){r.ignore="r.hoverIgnore}function" o(){r.ignore="r.normalIgnore}tb.call(this);var" a="new" hm({z2:bp});a.seriesindex="e.seriesIndex;var" r="new" rm({z2:vp,silent:t.getmodel("label").get("silent")});this.add(a),this.add(r),this.updatedata(!0,t,"normal",e,i),this.on("emphasis",n).on("normal",o).on("mouseover",n).on("mouseout",o)}function gm(t,e,i){var n="t.getVisual(" color"),o="t.getVisual(" visualmeta");o&&0!="=o.length||(n=null);var""" a;if(n)return n;if(0="==t.depth)return" i.option.color[0];var fm(t){for(var e="t;e.depth">1;)e=e.parentNode;return l(t.getAncestors()[0].children,e)}function Wm(t,e,i){return i!==zP.NONE&&(i===zP.SELF?t===e:i===zP.ANCESTOR?t===e||t.isAncestorOf(e):t===e||t.isDescendantOf(e))}function Hm(t,e,i){e.getData().setItemVisual(t.dataIndex,"color",i)}function Zm(t,e){var i=t.children||[];t.children=Um(i,e),i.length&&d(t.children,function(t){Zm(t,e)})}function Um(t,e){if("function"==typeof e)return t.sort(e);var i="asc"===e;return t.sort(function(t,e){var n=(t.getValue()-e.getValue())*(i?1:-1);return 0===n?(t.dataIndex-e.dataIndex)*(i?-1:1):n})}function Xm(t,e){return e=e||[0,0],f(["x","y"],function(i,n){var o=this.getAxis(i),a=e[n],r=t[n]/2;return"category"===o.type?o.getBandWidth():Math.abs(o.dataToCoord(a-r)-o.dataToCoord(a+r))},this)}function jm(t,e){return e=e||[0,0],f([0,1],function(i){var n=e[i],o=t[i]/2,a=[],r=[];return a[i]=n-o,r[i]=n+o,a[1-i]=r[1-i]=e[1-i],Math.abs(this.dataToPoint(a)[i]-this.dataToPoint(r)[i])},this)}function Ym(t,e){var i=this.getAxis(),n=e instanceof Array?e[0]:e,o=(t instanceof Array?t[0]:t)/2;return"category"===i.type?i.getBandWidth():Math.abs(i.dataToCoord(n-o)-i.dataToCoord(n+o))}function qm(t,e){return f(["Radius","Angle"],function(i,n){var o=this["get"+i+"Axis"](),a=e[n],r=t[n]/2,s="dataTo"+i,l="category"===o.type?o.getBandWidth():Math.abs(o[s](a-r)-o[s](a+r));return"Angle"===i&&(l=l*Math.PI/180),l},this)}function Km(t){var e,i=t.type;if("path"===i){var n=t.shape,o=null!=n.width&&null!=n.height?{x:n.x||0,y:n.y||0,width:n.width,height:n.height}:null,a=lv(n);(e=Un(a,null,o,n.layout||"center")).__customPathData=a}else"image"===i?(e=new fi({})).__customImagePath=t.style.image:"text"===i?(e=new rM({})).__customText=t.style.text:e=new(0,zM[i.charAt(0).toUpperCase()+i.slice(1)]);return e.__customGraphicType=i,e.name=t.name,e}function $m(t,e,n,o,a,r,s){var l={},u=n.style||{};if(n.shape&&(l.shape=i(n.shape)),n.position&&(l.position=n.position.slice()),n.scale&&(l.scale=n.scale.slice()),n.origin&&(l.origin=n.origin.slice()),n.rotation&&(l.rotation=n.rotation),"image"===t.type&&n.style){h=l.style={};d(["x","y","width","height"],function(e){Jm(e,h,u,t.style,r)})}if("text"===t.type&&n.style){var h=l.style={};d(["x","y"],function(e){Jm(e,h,u,t.style,r)}),!u.hasOwnProperty("textFill")&&u.fill&&(u.textFill=u.fill),!u.hasOwnProperty("textStroke")&&u.stroke&&(u.textStroke=u.stroke)}if("group"!==t.type&&(t.useStyle(u),r)){t.style.opacity=0;var c=u.opacity;null==c&&(c=1),Io(t,{style:{opacity:c}},o,e)}r?t.attr(l):Mo(t,l,o,e),n.hasOwnProperty("z2")&&t.attr("z2",n.z2||0),n.hasOwnProperty("silent")&&t.attr("silent",n.silent),n.hasOwnProperty("invisible")&&t.attr("invisible",n.invisible),n.hasOwnProperty("ignore")&&t.attr("ignore",n.ignore),n.hasOwnProperty("info")&&t.attr("info",n.info);var f=n.styleEmphasis,p=!1===f;t.__cusHasEmphStl&&null==f||!t.__cusHasEmphStl&&p||(ao(t,f),t.__cusHasEmphStl=!p),s&&fo(t,!p)}function Jm(t,e,i,n,o){null==i[t]||o||(e[t]=i[t],i[t]=n[t])}function Qm(t,e,i,n){function o(t){null==t&&(t=h),v&&(c=e.getItemModel(t),d=c.getModel(XP),f=c.getModel(jP),p=e.getItemVisual(t,"color"),v=!1)}var s=t.get("renderItem"),l=t.coordinateSystem,u={};l&&(u=l.prepareCustoms?l.prepareCustoms():qP[l.type](l));var h,c,d,f,p,g=r({getWidth:n.getWidth,getHeight:n.getHeight,getZr:n.getZr,getDevicePixelRatio:n.getDevicePixelRatio,value:function(t,i){return null==i&&(i=h),e.get(e.getDimension(t||0),i)},style:function(i,n){null==n&&(n=h),o(n);var r=c.getModel(ZP).getItemStyle();null!=p&&(r.fill=p);var s=e.getItemVisual(n,"opacity");return null!=s&&(r.opacity=s),go(r,d,null,{autoColor:p,isRectText:!0}),r.text=d.getShallow("show")?A(t.getFormattedLabel(n,"normal"),xu(e,n)):null,i&&a(r,i),r},styleEmphasis:function(i,n){null==n&&(n=h),o(n);var r=c.getModel(UP).getItemStyle();return go(r,f,null,{isRectText:!0},!0),r.text=f.getShallow("show")?D(t.getFormattedLabel(n,"emphasis"),t.getFormattedLabel(n,"normal"),xu(e,n)):null,i&&a(r,i),r},visual:function(t,i){return null==i&&(i=h),e.getItemVisual(i,t)},barLayout:function(t){if(l.getBaseAxis)return Cl(r({axis:l.getBaseAxis()},t),n)},currentSeriesIndices:function(){return i.getCurrentSeriesIndices()},font:function(t){return bo(t,i)}},u.api||{}),m={context:{},seriesId:t.id,seriesName:t.name,seriesIndex:t.seriesIndex,coordSys:u.coordSys,dataInsideLength:e.count(),encode:tv(t.getData())},v=!0;return function(t,i){return h=t,v=!0,s&&s(r({dataIndexInside:t,dataIndex:e.getRawIndex(t),actionType:i?i.type:null},m),g)}}function tv(t){var e={};return d(t.dimensions,function(i,n){var o=t.getDimensionInfo(i);if(!o.isExtraCoord){var a=o.coordDim;(e[a]=e[a]||[])[o.coordDimIndex]=n}}),e}function ev(t,e,i,n,o,a){return(t=iv(t,e,i,n,o,a,!0))&&a.setItemGraphicEl(e,t),t}function iv(t,e,i,n,o,a,r){var s=!i,l=(i=i||{}).type,u=i.shape,h=i.style;if(t&&(s||null!=l&&l!==t.__customGraphicType||"path"===l&&uv(u)&&lv(u)!==t.__customPathData||"image"===l&&hv(h,"image")&&h.image!==t.__customImagePath||"text"===l&&hv(u,"text")&&h.text!==t.__customText)&&(o.remove(t),t=null),!s){var c=!t;return!t&&(t=Km(i)),$m(t,e,i,n,a,c,r),"group"===l&&nv(t,e,i,n,a),o.add(t),t}}function nv(t,e,i,n,o){var a=i.children,r=a?a.length:0,s=i.$mergeChildren,l="byName"===s||i.diffChildrenByName,u=!1===s;if(r||l||u)if(l)ov({oldChildren:t.children()||[],newChildren:a||[],dataIndex:e,animatableModel:n,group:t,data:o});else{u&&t.removeAll();for(var h=0;h<r;h++)a[h]&&iv(t.childat(h),e,a[h],n,t,o)}}function ov(t){new us(t.oldchildren,t.newchildren,av,av,t).add(rv).update(rv).remove(sv).execute()}function av(t,e){var i="t&&t.name;return" null!="i?i:YP+e}function" rv(t,e){var sv(t){var e="this.context,i=e.oldChildren[t];i&&e.group.remove(i)}function" lv(t){return t&&(t.pathdata||t.d)}function uv(t){return t&&(t.hasownproperty("pathdata")||t.hasownproperty("d"))}function hv(t,e){return t&&t.hasownproperty(e)}function cv(t,e,i,n){var o="i.type,a=new(0,zM[o.charAt(0).toUpperCase()+o.slice(1)])(i);e.add(a),n.set(t,a),a.__ecGraphicId=t}function" dv(t,e){var fv(t){return t="a({},t),d([" id","parentid","$action","hv","bounding"].concat(oi),function(e){delete" t[e]}),t}function pv(t,e){var i;return d(e,function(e){null!="t[e]&&" auto"!="=t[e]&&(i=!0)}),i}function" " gv(t,e){var n="e.parentOption;n?e.parentId=n.id:i&&(e.parentId=i.parentId)}e.parentOption=null}function" mv(t,e,i){var vv(t,e){t&&(t.hv="e.hv=[pv(e,[" left","right"]),pv(e,["top","bottom"])],"group"="==t.type&&(null==t.width&&(t.width=e.width=0),null==t.height&&(t.height=e.height=0)))}function" yv(t,e,i){var xv(t,e,i){var n,o="{},a=" toggleselected"="==t;return" i.eachcomponent("legend",function(i){a&&null!="n?i[n?" select":"unselect"](e.name):(i[t](e.name),n="i.isSelected(e.name)),d(i.getData(),function(t){var" _v(t,e,i){var wv(t,e){var n.fill="e.get(" backgroundcolor"),t="new" ym({shape:{x:t.x-i[3],y:t.y-i[0],width:t.width+i[1]+i[3],height:t.height+i[0]+i[2],r:e.get("borderradius")},style:n,silent:!0,z2:-1})}function bv(t,e){e.dispatchaction({type:"legendtoggleselect",name:t})}function sv(t,e,i,n){var mv(t,e,i,n){var iv(t,e,i){var tv(t){var +t+"s cubic-bezier(0.23, 1, 0.32, 1),top "+t+"s 1)";return f(un,function(t){return t+"transition:"+e}).join(";")}function av(t){var n&&e.push("color:"+n),e.push("font:"+t.getfont()),i&&e.push("line-height:"+math.round(3*i 2)+"px"),sn(["decoration","align"],function(i){var dv(t){var i&&e.push(tv(i)),n&&(u_.canvassupported?e.push("background-color:"+n):(e.push("background-color:#"+zt(n)),e.push("filter:alpha(opacity="70)" ))),sn(["width","color","radius"],function(i){var" +i,o="lN(n),a=t.get(o);null!=a&&e.push(n+" :"+a+("color"="==i?" ":"px"))}),e.push(av(o)),null!="a&&e.push("padding:"+qM(a).join("px""" ")+"px"),e.join(";")+";"}function cv(t,e){if(u_.wxa)return null;var lv(t){this._zr="t.getZr(),this._show=!1,this._hideTimeout}function" kv(t){for(var i&&(i="{formatter:i}),e=new" po(i,e,e.ecmodel))}return e}function pv(t,e){return t.dispatchaction||m(e.dispatchaction,e)}function nv(t,e,i,n,o,a,r){var s="i.getOuterSize(),l=s.width,u=s.height;return">n?t-=l+a:t+=a),null!=r&&(e+u+r>o?e-=u+r:e+=r),[t,e]}function Ov(t,e,i,n,o){var a=i.getOuterSize(),r=a.width,s=a.height;return t=Math.min(t+r,n)-r,e=Math.min(e+s,o)-s,t=Math.max(t,0),e=Math.max(e,0),[t,e]}function Ev(t,e,i){var n=i[0],o=i[1],a=0,r=0,s=e.width,l=e.height;switch(t){case"inside":a=e.x+s/2-n/2,r=e.y+l/2-o/2;break;case"top":a=e.x+s/2-n/2,r=e.y-o-5;break;case"bottom":a=e.x+s/2-n/2,r=e.y+l+5;break;case"left":a=e.x-n-5,r=e.y+l/2-o/2;break;case"right":a=e.x+s+5,r=e.y+l/2-o/2}return[a,r]}function Rv(t){return"center"===t||"middle"===t}function zv(t){return t.get("stack")||"__ec_stack_"+t.seriesIndex}function Bv(t){return t.dim}function Vv(t,e){var i={};d(t,function(t,e){var n=t.getData(),o=t.coordinateSystem.getBaseAxis(),a=o.getExtent(),r="category"===o.type?o.getBandWidth():Math.abs(a[1]-a[0])/n.count(),s=i[Bv(o)]||{bandWidth:r,remainedWidth:r,autoWidthCount:0,categoryGap:"20%",gap:"30%",stacks:{}},l=s.stacks;i[Bv(o)]=s;var u=zv(t);l[u]||s.autoWidthCount++,l[u]=l[u]||{width:0,maxWidth:0};var h=Bo(t.get("barWidth"),r),c=Bo(t.get("barMaxWidth"),r),d=t.get("barGap"),f=t.get("barCategoryGap");h&&!l[u].width&&(h=Math.min(s.remainedWidth,h),l[u].width=h,s.remainedWidth-=h),c&&(l[u].maxWidth=c),null!=d&&(s.gap=d),null!=f&&(s.categoryGap=f)});var n={};return d(i,function(t,e){n[e]={};var i=t.stacks,o=t.bandWidth,a=Bo(t.categoryGap,o),r=Bo(t.gap,1),s=t.remainedWidth,l=t.autoWidthCount,u=(s-a)/(l+(l-1)*r);u=Math.max(u,0),d(i,function(t,e){var i=t.maxWidth;i&&i<u&&(i=math.min(i,s),t.width&&(i=math.min(i,t.width)),s-=i,t.width=i,l--)}),u=(s-a) (l+(l-1)*r),u="Math.max(u,0);var" h,c="0;d(i,function(t,e){t.width||(t.width=u),h=t,c+=t.width*(1+r)}),h&&(c-=h.width*r);var" f="-c/2;d(i,function(t,i){n[e][i]=n[e][i]||{offset:f,width:t.width},f+=t.width*(1+r)})}),n}function" gv(t,e){rd.call(this,"radius",t,e),this.type="category" }function fv(t,e){e="e||[0,360],rD.call(this," angle",t,e),this.type="category" }function" wv(t,e){return e.type||(e.data?"category":"value")}function hv(t,e,i){var n="e.get(" center"),o="i.getWidth(),a=i.getHeight();t.cx=Bo(n[0],o),t.cy=Bo(n[1],a);var" " r="t.getRadiusAxis(),s=Math.min(o,a)/2,l=Bo(e.get(" radius"),s);r.inverse?r.setextent(l,0):r.setextent(0,l)}function" zv(t,e){var i="this,n=i.getAngleAxis(),o=i.getRadiusAxis();if(n.scale.setExtent(1/0,-1/0),o.scale.setExtent(1/0,-1/0),t.eachSeries(function(t){if(t.coordinateSystem===i){var" e="t.getData();d(e.mapDimension(" radius",!0),function(t){o.scale.unionextentfromdata(e,pl(e,t))}),d(e.mapdimension("angle",!0),function(t){n.scale.unionextentfromdata(e,pl(e,t))})}}),fl(n.scale,n.model),fl(o.scale,o.model),"category"="==n.type&&!n.onBand){var" a="n.getExtent(),r=360/n.scale.count();n.inverse?a[1]+=r:a[1]-=r,n.setExtent(a[0],a[1])}}function" uv(t,e){if(t.type="e.get(" type"),t.scale="Wl(e),t.onBand=e.get(" boundarygap")&&"category"="==t.type,t.inverse=e.get("inverse"),"angleAxis"===e.mainType){t.inverse^=e.get("clockwise");var""" xv(t,e,i){e[1]>e[0]&&(e=e.slice().reverse());var n=t.coordToPoint([e[0],i]),o=t.coordToPoint([e[1],i]);return{x1:n[0],y1:n[1],x2:o[0],y2:o[1]}}function jv(t){return t.getRadiusAxis().inverse?0:1}function Yv(t){var e=t[0],i=t[t.length-1];e&&i&&Math.abs(Math.abs(e.coord-i.coord)-360)<1e-4&&t.pop()}function qv(t,e,i){return{position:[t.cx,t.cy],rotation:i 180*math.pi,labeldirection:-1,tickdirection:-1,namedirection:1,labelrotate:e.getmodel("axislabel").get("rotate"),z2:1}}function kv(t,e,i,n,o){var a="e.axis,r=a.dataToCoord(t),s=n.getAngleAxis().getExtent()[0];s=s/180*Math.PI;var" l,u,h,c="n.getRadiusAxis().getExtent();if(" radius"="==a.dim){var" " d="xt();Mt(d,d,s),St(d,d,[n.cx,n.cy]),l=Ao([r,-o],d);var" f="e.getModel(" axislabel").get("rotate")||0,p="WD.innerTextLayout(s,f*Math.PI/180,-1);u=p.textAlign,h=p.textVerticalAlign}else{var" g="c[1];l=n.coordToPoint([g+o,r]);var" m="n.cx,v=n.cy;u=Math.abs(l[0]-m)/g<.3?" center":l[0]">m?"left":"right",h=Math.abs(l[1]-v)/g<.3?"middle":l[1]>v?"top":"bottom"}return{position:l,align:u,verticalAlign:h}}function $v(t,e){e.update="updateView",Os(e,function(e,i){var n={};return i.eachComponent({mainType:"geo",query:e},function(i){i[t](e.name),d(i.coordinateSystem.regions,function(t){n[t.name]=i.isSelected(t.name)||!1})}),{selected:n,name:e.name}})}function Jv(t){var e={};d(t,function(t){e[t]=1}),t.length=0,d(e,function(e,i){t.push(i)})}function Qv(t){if(t)for(var e in t)if(t.hasOwnProperty(e))return!0}function ty(t,e,n){function o(){var t=function(){};return t.prototype.__hidden=t.prototype,new t}var a={};return IN(e,function(e){var r=a[e]=o();IN(t[e],function(t,o){if(cL.isValidType(o)){var a={type:o,visual:t};n&&n(a,e),r[o]=new cL(a),"opacity"===o&&((a=i(a)).type="colorAlpha",r.__hidden.__alphaForOpacity=new cL(a))}})}),a}function ey(t,e,n){var o;d(n,function(t){e.hasOwnProperty(t)&&Qv(e[t])&&(o=!0)}),o&&d(n,function(n){e.hasOwnProperty(n)&&Qv(e[n])?t[n]=i(e[n]):delete t[n]})}function iy(t,e,i,n,o,a){function r(t){return i.getItemVisual(h,t)}function s(t,e){i.setItemVisual(h,t,e)}function l(t,l){h=null==a?t:l;var c=i.getRawDataItem(h);if(!c||!1!==c.visualMap)for(var d=n.call(o,t),f=e[d],p=u[d],g=0,m=p.length;g<m;g++){var v="p[g];f[v]&&f[v].applyVisual(t,r,s)}}var" u="{};d(t,function(t){var" i="cL.prepareVisualTypes(e[t]);u[t]=i});var" h;null="=a?i.each(l):i.each([a],l)}function" ny(t,e,i,n){var o="{};return" d(t,function(t){var r;null!="(r=t.next());){var" s="a.getRawDataItem(r);if(!s||!1!==s.visualMap)for(var" l="null!=n?a.get(n,r,!0):r,u=i(l),h=e[u],c=o[u],d=0,f=c.length;d<f;d++){var" p="c[d];h[p]&&h[p].applyVisual(l,function(t){return" a.getitemvisual(r,t)},function(t,e){a.setitemvisual(r,t,e)})}}}}}function oy(t){var e="[" x","y"],i="[" width","height"];return{point:function(e,i,n){if(e){var"" ay(e[t],o)}},rect:function(n,o,a){if(n){var r="a.range,s=[n[e[t]],n[e[t]]+n[i[t]]];return" s[1]<s[0]&&s.reverse(),ay(s[0],r)||ay(s[1],r)||ay(r[0],s)||ay(r[1],s)}}}}function ay(t,e){return e[0]<="t&&t<=e[1]}function" ry(t,e,i,n,o){for(var a="0,r=o[o.length-1];a<o.length;a++){var" sy(t,e,i,n,o,a,r,s){var>1)return!1;var h=uy(i-t,o-t,n-e,a-e)/l;return!(h<0||h>1)}function ly(t){return t<=1e-6&&t>=-1e-6}function uy(t,e,i,n){return t*n-e*i}function hy(t,e,i){var n=this._targetInfoList=[],o={},a=dy(e,t);AN(NN,function(t,e){(!i||!i.include||DN(i.include,e)>=0)&&t(a,n,o)})}function cy(t){return t[0]>t[1]&&t.reverse(),t}function dy(t,e){return Vi(t,e,{includeMainTypes:kN})}function fy(t,e,i,n){var o=i.getAxis(["x","y"][t]),a=cy(f([0,1],function(t){return e?o.coordToData(o.toLocalCoord(n[t])):o.toGlobalCoord(o.dataToCoord(n[t]))})),r=[];return r[t]=a,r[1-t]=[NaN,NaN],{values:a,xyMinMax:r}}function py(t,e,i,n){return[e[0]-n[t]*i[0],e[1]-n[t]*i[1]]}function gy(t,e){var i=my(t),n=my(e),o=[i[0]/n[0],i[1]/n[1]];return isNaN(o[0])&&(o[0]=1),isNaN(o[1])&&(o[1]=1),o}function my(t){return t?[t[0][1]-t[0][0],t[1][1]-t[1][0]]:[NaN,NaN]}function vy(t,e,i,n,o){if(o){var a=t.getZr();a[GN]||(a[VN]||(a[VN]=yy),Pr(a,VN,i,e)(t,n))}}function yy(t,e){if(!t.isDisposed()){var i=t.getZr();i[GN]=!0,t.dispatchAction({type:"brushSelect",batch:e}),i[GN]=!1}}function xy(t,e,i,n){for(var o=0,a=e.length;o<a;o++){var r="e[o];if(t[r.brushType](n,i,r.selectors,r))return!0}}function" _y(t){var e="t.brushSelector;if(_(e)){var" i="[];return" d(tn,function(t,n){i[n]="function(i,n,o,a){var" t[e](r,o,a)}}),i}if(x(e)){var n="{};return" d(tn,function(t,i){n[i]="e}),n}return" e}function wy(t,e){var null!="i&&" all"!="=i&&(y(i)?l(i,e)<0:e!==i)}function" " by(t){var d(tn[t.brushtype],function(i,n){e[n]="function(n){return" i(n,e,t)}}),t}function sy(t){return new de(t[0][0],t[1][0],t[0][1]-t[0][0],t[1][1]-t[1][0])}function my(t,e){return n({brushtype:t.brushtype,brushmode:t.brushmode,transformable:t.transformable,brushstyle:new po(t.brushstyle).getitemstyle(),removeonclick:t.removeonclick,z:t.z},e,!0)}function iy(t,e,i,n){(!n||n.$from!="=t.id)&&this._brushController.setPanels(t.brushTargetManager.makePanelOpts(i)).enableBrush(t.brushOption).updateCovers(t.areas.slice())}function" ty(t,e){zn[t]="e}function" ay(t){return zn[t]}function dy(t,e,i){this.model="t,this.ecModel=e,this.api=i,this._brushType,this._brushMode}function" cy(t,e,i){this._model="t}function" ly(t,e,i,n){var o="i.calendarModel,a=i.seriesModel,r=o?o.coordinateSystem:a?a.coordinateSystem:null;return" ky(t,e){var da(e,t)&&(i[t]="auto" ),null!="i[t]&&" auto"!="=i[t]});fa(t,e,{type:" box",ignoresize:n})}function"" py(t){return l(kn,t)>=0}function Ny(t,e,i){function n(t,e){return l(e.nodes,t)>=0}function o(t,n){var o=!1;return e(function(e){d(i(t,e)||[],function(t){n.records[e.name][t]&&(o=!0)})}),o}function a(t,n){n.nodes.push(t),e(function(e){d(i(t,e)||[],function(t){n.records[e.name][t]=!0})})}return function(i){var r={nodes:[],records:{}};if(e(function(t){r.records[t.name]={}}),!i)return r;a(i,r);var s;do{s=!1,t(function(t){!n(t,r)&&o(t,r)&&(a(t,r),s=!0)})}while(s);return r}}function Oy(t,e,i){var n=[1/0,-1/0];return JN(i,function(t){var i=t.getData();i&&JN(i.mapDimension(e,!0),function(t){var e=i.getApproximateExtent(t);e[0]<n[0]&&(n[0]=e[0]),e[1]>n[1]&&(n[1]=e[1])})}),n[1]<n[0]&&(n=[nan,nan]),ey(t,n),n}function ey(t,e){var i="t.getAxisModel(),n=i.getMin(!0),o=" category"="==i.get(" type"),a="o&&i.getCategories().length;null!=n&&"dataMin"!==n&&"function"!=typeof""" n?e[0]="n:o&&(e[0]=a">0?0:NaN);var r=i.getMax(!0);return null!=r&&"dataMax"!==r&&"function"!=typeof r?e[1]=r:o&&(e[1]=a>0?a-1:NaN),i.get("scale",!0)||(e[0]>0&&(e[0]=0),e[1]<0&&(e[1]=0)),e}function ry(t,e){var i="t.getAxisModel(),n=t._percentWindow,o=t._valueWindow;if(n){var" a="Ho(o,[0,500]);a=Math.min(a,20);var" r="e||0===n[0]&&100===n[1];i.setRange(r?null:+o[0].toFixed(a),r?null:+o[1].toFixed(a))}}function" zy(t){var e="t._minMaxSpan={},i=t._dataZoomModel;JN([" min","max"],function(n){e[n+"span"]="i.get(n+" span");var"" o="i.get(n+" valuespan");if(null!="o&&(e[n+" valuespan"]="o,null!=(o=t.getAxisModel().axis.scale.parse(o)))){var""" by(t){var eo(["start","end","startvalue","endvalue","throttle"],function(i){t.hasownproperty(i)&&(e[i]="t[i])}),e}function" vy(t,e){var gy(t){return{x:"y",y:"x",radius:"angle",angle:"radius"}[t]}function fy(t){return"vertical"="==t?" ns-resize":"ew-resize"}function" wy(t,e){var a[n],t.count--)}),jy(i);var hy(t,e){var i[e],t.count--)}),jy(i)}function zy(t){return t.type+"\0_"+t.id}function uy(t){var e[po]||(e[po]="{})}function" xy(t,e){var nc(t.getzr());return d(["pan","zoom","scrollmove"],function(t){i.on(t,function(i){var n="[];d(e.dataZoomInfos,function(o){if(i.isAvailableBehavior(o.dataZoomModel.option)){var" jy(t){d(t,function(e,i){e.count||(e.controller.dispose(),delete t[i])})}function yy(t,e){t.dispatchaction({type:"datazoom",batch:e})}function qy(t){var e,i="{type_true:2,type_move:1,type_false:0,type_undefined:-1},n=!0;return" d(t,function(t){var>i["type_"+e]&&(e=a),n&=o.get("preventDefaultMouseMove",!0)}),{controlType:e,opt:{zoomOnMouseWheel:!0,moveOnMouseMove:!0,moveOnMouseWheel:!0,preventDefaultMouseMove:!!n}}}function Ky(t){return function(e,i,n,o){var a=this._range,r=a.slice(),s=e.axisModels[0];if(s){var l=t(r,s,e,i,n,o);return tk(l,r,[0,100],"all"),this._range=r,a[0]!==r[0]||a[1]!==r[1]?r:void 0}}}function $y(t,e){return t&&t.hasOwnProperty&&t.hasOwnProperty(e)}function Jy(t,e,i,n){for(var o=e.targetVisuals[n],a=cL.prepareVisualTypes(o),r={color:t.getData().getVisual("color")},s=0,l=a.length;s<l;s++){var 0="==t?[[0,0],[e,0],[e,-e]]:[[0,0],[e,0],[e,e]]}function" u="a[s],h=o[" opacity"="==u?" __alphaforopacity":u];h&&h.applyvisual(i,function(t){return"" r[t]},function(t,e){r[t]="e})}return" r.color}function qy(t,e,i){if(i[0]="==i[1])return" i.slice();for(var n="(i[1]-i[0])/200,o=i[0],a=[],r=0;r<=200&&o<i[1];r++)a.push(o),o+=n;return" a.push(i[1]),a}function tx(t,e,i){var o;for(var a="{width:e.getWidth(),height:e.getHeight()},r=" horizontal"="==n.orient?1:0,s=[[" left","right","width"],["top","bottom","height"]],l="s[r],u=[0,null,10],h={},c=0;c<3;c++)h[s[1-r][c]]=u[c],h[l[c]]=2===c?i[0]:n[l[c]];var""" d="[[" x","width",3],["y","height",0]][r],f="ha(h,a,n.padding);return" " l[(f.margin[d[2]]||0)+f[d[0]]+.5*f[d[1]]<.5*a[d[1]]?0:1]}function ex(t){return d(t||[],function(e){null!="t.dataIndex&&(t.dataIndexInside=t.dataIndex,t.dataIndex=null)}),t}function" ix(t,e,i,n){return new pm({shape:{points:t},draggable:!!i,cursor:e,drift:i,onmousemove:function(t){mw(t.event)},ondragend:n})}function nx(t,e){return ox(t,e,i,n){return t?[[0,-zo(e,bo(i,0))],[go,0],[0,zo(e,bo(n-i,0))]]:[[0,0],[5,-5],[5,5]]}function ax(t,e,i){var o&&(n="EO(o,e,i,!0)/2),n}function" rx(t){var e="t.get(" hoverlinkonhandle");return!!(null="=e?t.get(" realtime"):e)}function"" sx(t){return"vertical"="==t?" ns-resize":"ew-resize"}function" lx(t,e){var i="t.inverse;(" vertical"="==t.orient?!i:i)&&e.reverse()}function" ux(t){ci(t,"label",["show"])}function hx(t){return!(isnan(parsefloat(t.x))&&isnan(parsefloat(t.y)))}function cx(t){return!isnan(parsefloat(t.x))&&!isnan(parsefloat(t.y))}function dx(t,e,i,n,o,a){var r="[],s=fl(e,n)?e.getCalculationInfo(" stackresultdimension"):n,l="yx(e,s,t),u=e.indicesOfNearest(s,l)[0];r[o]=e.get(i,u),r[a]=e.get(n,u);var" h="Fo(e.get(n,u));return(h=Math.min(h,20))">=0&&(r[a]=+r[a].toFixed(h)),r}function fx(t,e){var n=t.getData(),o=t.coordinateSystem;if(e&&!cx(e)&&!y(e.coord)&&o){var a=o.dimensions,r=px(e,n,o,t);if((e=i(e)).type&&qO[e.type]&&r.baseAxis&&r.valueAxis){var s=jO(a,r.baseAxis.dim),l=jO(a,r.valueAxis.dim);e.coord=qO[e.type](n,r.baseDataDim,r.valueDataDim,s,l),e.value=e.coord[l]}else{for(var u=[null!=e.xAxis?e.xAxis:e.radiusAxis,null!=e.yAxis?e.yAxis:e.angleAxis],h=0;h<2;h++)qo[u[h]]&&(u[h]=yx(n,n.mapdimension(a[h]),u[h]));e.coord=u}}return 0="==t.indexOf(" my")}function" e}function px(t,e,i,n){var o="{};return" null!="t.valueIndex||null!=t.valueDim?(o.valueDataDim=null!=t.valueIndex?e.getDimension(t.valueIndex):t.valueDim,o.valueAxis=i.getAxis(gx(n,o.valueDataDim)),o.baseAxis=i.getOtherAxis(o.valueAxis),o.baseDataDim=e.mapDimension(o.baseAxis.dim)):(o.baseAxis=n.getBaseAxis(),o.valueAxis=i.getOtherAxis(o.baseAxis),o.baseDataDim=e.mapDimension(o.baseAxis.dim),o.valueDataDim=e.mapDimension(o.valueAxis.dim)),o}function" gx(t,e){var i="t.getData(),n=i.dimensions;e=i.getDimension(e);for(var" a="i.getDimensionInfo(n[o]);if(a.name===e)return" a.coorddim}}function mx(t,e){return!(t&&t.containdata&&e.coord&&!hx(e))||t.containdata(e.coord)}function vx(t,e,i,n){return n<2?t.coord&&t.coord[n]:t.value}function yx(t,e,i){if("average"="==i){var" n="0,o=0;return" t.each(e,function(t,e){isnan(t)||(n+="t,o++)}),n/o}return" median"="==i?t.getMedian(e):t.getDataExtent(e,!0)[" max"="==i?1:0]}function""" xx(t,e,i){var a,r="t.getItemModel(o),s=Bo(r.get(" x"),i.getwidth()),l="Bo(r.get(" y"),i.getheight());if(isnan(s)||isnan(l)){if(e.getmarkerposition)a="e.getMarkerPosition(t.getValues(t.dimensions,o));else""" if(n){var u="t.get(n.dimensions[0],o),h=t.get(n.dimensions[1],o);a=n.dataToPoint([u,h])}}else" _x(t,e,i){var n;n="t?f(t&&t.dimensions,function(t){return" r({name:t},e.getdata().getdimensioninfo(e.getdata().mapdimension(t))||{})}):[{name:"value",type:"float"}];var ya(n,i),a="f(i.get(" data"),v(fx,e));return" t&&(a="g(a,v(mx,t))),o.initData(a,null,t?vx:function(t){return" t.value}),o}function bx(t){return!isnan(t)&&!isfinite(t)}function sx(t,e,i,n){var bx(e[o])&&bx(i[o])&&e[t]="==i[t]&&n.getAxis(a).containData(e[t])}function" mx(t,e){if("cartesian2d"="==t.type){var" mx(t,e[0])&&mx(t,e[1])}function ix(t,e,i,n,o){var h="r.dimensions,c=t.get(h[0],e),d=t.get(h[1],e);a=r.dataToPoint([c,d])}if(" cartesian2d"="==r.type){var" " f="r.getAxis(" x"),p="r.getAxis(" y"),h="r.dimensions;bx(t.get(h[0],e))?a[0]=f.toGlobalCoord(f.getExtent()[i?0:1]):bx(t.get(h[1],e))&&(a[1]=p.toGlobalCoord(p.getExtent()[i?0:1]))}isNaN(l)||(a[0]=l),isNaN(u)||(a[1]=u)}else""" tx(t,e,i){var ya(n,i),s="new" ya([],i),l="f(i.get(" data"),v($o,e,t,i));t&&(l="g(l,v(Mx,t)));var" t.value};return o.initdata(f(l,function(t){return t[0]}),null,u),a.initdata(f(l,function(t){return t[1]}),null,u),s.initdata(f(l,function(t){return t[2]})),s.hasitemoption="!0,{from:o,to:a,line:s}}function" ax(t){return!isnan(t)&&!isfinite(t)}function dx(t,e,i,n){var ax(e[o])&&ax(i[o])}function cx(t,e){var lx(t,e,i,n,o){var c="r.getAxis(" x"),d="r.getAxis(" y"),f="t.get(i[0],e),p=t.get(i[1],e);Ax(f)?a[0]=c.toGlobalCoord(c.getExtent()["x0"===i[0]?0:1]):Ax(p)&&(a[1]=d.toGlobalCoord(d.getExtent()["y0"===i[1]?0:1]))}isNaN(l)||(a[0]=l),isNaN(u)||(a[1]=u)}else""" a}function kx(t,e,i){var n,o,a="[" x0","y0","x1","y1"];t?(n="f(t&&t.dimensions,function(t){var" r({name:t},i.getdimensioninfo(i.mapdimension(t))||{})}),o="new" ya(f(a,function(t,e){return{name:t,type:n[e%2].type}}),i)):o="new" ya(n="[{name:" value",type:"float"}],i);var" s="f(i.get(" data"),v(jo,e,t,i));t&&(s="g(s,v(Cx,t)));var" l="t?function(t,e,i,n){return" t.coord[math.floor(n 2)][n%2]}:function(t){return o.initdata(s,null,l),o.hasitemoption="!0,o}function" px(t){var e="t.type,i={number:" value",time:"time"};if(i[e]&&(t.axistype="i[e],delete" t.type),nx(t),ox(t,"controlposition")){var n.position),delete t.controlposition}d(t.data||[],function(t){w(t)&&!y(t)&&(!ox(t,"value")&&ox(t,"name")&&(t.value="t.name),Nx(t))})}function" nx(t){var i.label)}function ox(t,e){return t.hasownproperty(e)}function ex(t,e){return ha(t.getboxlayoutparams(),{width:e.getwidth(),height:e.getheight()},t.get("padding"))}function rx(t,e,n,o){return un(t.get(e).replace( ^path:\ \ ,""),i(o||{}),new de(n[0],n[1],n[2],n[3]),"center")}function zx(t,e,i,o,a,r){var instanceof array?u.slice():[+u,+u])[0]="2,u[1]" =2,o.scale="u;var" d="t.get(" symbolrotate");return" o.rotation="(d||0)*Math.PI/180||0,a.attr(o),a.updateTransform(),a}function" bx(t,e,i,n,o){if(!t.dragging){var vx(t){return gx(t){this.model="t}function" fx(t){this.model="t}function" wx(t){var t.eachrawseries(function(t){var r="a.dim+" _"+a.index;e[r]||(e[r]="{categoryAxis:a,valueAxis:o.getOtherAxis(a),series:[]},n.push({axisDim:a.dim,axisIndex:a.index})),e[r].series.push(t)}else" i.push(t)}}),{seriesgroupbycategoryaxis:e,other:i,meta:n}}function hx(t){var d(t,function(t,i){var "].concat(f(t.series,function(t){return t.name})),r="[n.model.getCategories()];d(t.series,function(t){r.push(t.getRawData().mapArray(o,function(t){return" t}))});for(var zx(t){return f(t,function(t){var e.each(e.dimensions,function(){for(var t="arguments.length,o=arguments[t-1],a=e.getName(o),r=0;r<t-1;r++)n[r]=arguments[r];i.push((a?a+pE:" ")+n.join(pe))}),i.join("\n")}).join("\n\n"+fe+"\n\n")}function" ux(t){var t.replace( [\n\t\s] g,"")}).join("\n\n"+fe+"\n\n"),meta:e.meta}}function xx(t){return ^\s\s* ,"").replace( \s\s*$ ,"")}function jx(t){if(t.slice(0,t.indexof("\n")).indexof(pe)>=0)return!0}function Yx(t){for(var e=t.split(/\n+/g),i=[],n=f(Xx(e.shift()).split(gE),function(t){return{name:t,data:[]}}),o=0;o<e.length;o++){var a="Xx(e[o]).split(gE);i.push(a.shift());for(var" r="0;r<a.length;r++)n[r]&&(n[r].data[o]=a[r])}return{series:n,categories:i}}function" qx(t){for(var e="t.split(/\n+/g),i=Xx(e.shift()),n=[],o=0;o<e.length;o++){var" a,r="Xx(e[o]).split(gE),s=" ",l="!1;isNaN(r[0])?(l=!0,s=r[0],r=r.slice(1),n[o]={name:s,value:[]},a=n[o].value):a=n[o]=[];for(var" " u="0;u<r.length;u++)a.push(+r[u]);1===a.length&&(l?n[o].value=a[0]:n[o]=a[0])}return{name:i,data:n}}function" kx(t,e){var i="{series:[]};return" d(t.split(new regexp("\n*"+fe+"\n*","g")),function(t,n){if(jx(t)){var o="Yx(t),a=e[n],r=a.axisDim+" axis";a&&(i[r]="i[r]||[],i[r][a.axisIndex]={data:o.categories},i.series=i.series.concat(o.series))}else{o=qx(t);i.series.push(o)}}),i}function" $x(t){this._dom="null,this.model=t}function" jx(t,e){return f(t,function(t,i){var n="e&&e[i];return" w(n)&&!y(n)?(w(t)&&!y(t)&&(t="t.value),r({value:t},n)):t})}function" qx(t,e){var>=0&&!i[o][n];o--);if(o<0){var a="t.queryComponents({mainType:" datazoom",subtype:"select",id:n})[0];if(a){var" r="a.getPercentRange();i[0][n]={dataZoomId:n,start:r[0],end:r[1]}}}}),i.push(e)}function" t_(t){var e="n_(t),i=e[e.length-1];e.length">1&&e.pop();var n={};return mE(i,function(t,i){for(var o=e.length-1;o>=0;o--)if(t=e[o][i]){n[i]=t;break}}),n}function e_(t){t[vE]=null}function i_(t){return n_(t).length}function n_(t){var e=t[vE];return e||(e=t[vE]=[{}]),e}function o_(t,e,i){(this._brushController=new Rf(i.getZr())).on("brush",m(this._onBrush,this)).mount(),this._isZoomActive}function a_(t){var e={};return d(["xAxisIndex","yAxisIndex"],function(i){e[i]=t[i],null==e[i]&&(e[i]="all"),(!1===e[i]||"none"===e[i])&&(e[i]=[])}),e}function r_(t,e){t.setIconStatus("back",i_(e)>1?"emphasis":"normal")}function s_(t,e,i,n,o){var a=i._isZoomActive;n&&"takeGlobalCursor"===n.type&&(a="dataZoomSelect"===n.key&&n.dataZoomSelectActive),i._isZoomActive=a,t.setIconStatus("zoom",a?"emphasis":"normal");var r=new hy(a_(t.option),e,{include:["grid"]});i._brushController.setPanels(r.makePanelOpts(o,function(t){return t.xAxisDeclared&&!t.yAxisDeclared?"lineX":!t.xAxisDeclared&&t.yAxisDeclared?"lineY":"rect"})).enableBrush(!!a&&{brushType:"auto",brushStyle:{lineWidth:0,fill:"rgba(0,0,0,0.2)"}})}function l_(t){this.model=t}function u_(t){return ME(t)}function h_(){if(!AE&&DE){AE=!0;var t=DE.styleSheets;t.length<31?de.createstylesheet().addrule(".zrvml","behavior:url(#default#vml)"):t[0].addrule(".zrvml","behavior:url(#default#vml)")}}function c_(t){return parseint(t,10)}function d_(t,e){h_(),this.root="t,this.storage=e;var" i="document.createElement(" div"),n="document.createElement(" div");i.style.csstext="display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;" ,n.style.csstext="position:absolute;left:0;top:0;" ,t.appendchild(i),this._vmlroot="n,this._vmlViewport=i,this.resize();var""" o="e.delFromStorage,a=e.addToStorage;e.delFromStorage=function(t){o.call(e,t),t&&t.onRemove&&t.onRemove(n)},e.addToStorage=function(t){t.onAdd&&t.onAdd(n),a.call(e,t)},this._firstPaint=!0}function" f_(t){return function(){yw('in ie8.0 vml mode painter not support method "'+t+'"')}}function p_(t){return document.createelementns(lr,t)}function g_(t){return dr(1e4*t) 1e4}function m_(t){return t<yr&&t>-yR}function v_(t,e){var i=e?t.textFill:t.fill;return null!=i&&i!==cR}function y_(t,e){var i=e?t.textStroke:t.stroke;return null!=i&&i!==cR}function x_(t,e){e&&__(t,"transform","matrix("+hR.call(e,",")+")")}function __(t,e,i){(!i||"linear"!==i.type&&"radial"!==i.type)&&t.setAttribute(e,i)}function w_(t,e,i){t.setAttributeNS("http://www.w3.org/1999/xlink",e,i)}function b_(t,e,i,n){if(v_(e,i)){var o=i?e.textFill:e.fill;o="transparent"===o?cR:o,"none"!==t.getAttribute("clip-path")&&o===cR&&(o="rgba(0, 0, 0, 0.002)"),__(t,"fill",o),__(t,"fill-opacity",null!=e.fillOpacity?e.fillOpacity*e.opacity:e.opacity)}else __(t,"fill",cR);if(y_(e,i)){var a=i?e.textStroke:e.stroke;__(t,"stroke",a="transparent"===a?cR:a),__(t,"stroke-width",(i?e.textStrokeWidth:e.lineWidth)/(!i&&e.strokeNoScale?n.getLineScale():1)),__(t,"paint-order",i?"stroke":"fill"),__(t,"stroke-opacity",null!=e.strokeOpacity?e.strokeOpacity:e.opacity),e.lineDash?(__(t,"stroke-dasharray",e.lineDash.join(",")),__(t,"stroke-dashoffset",dR(e.lineDashOffset||0))):__(t,"stroke-dasharray",""),e.lineCap&&__(t,"stroke-linecap",e.lineCap),e.lineJoin&&__(t,"stroke-linejoin",e.lineJoin),e.miterLimit&&__(t,"stroke-miterlimit",e.miterLimit)}else __(t,"stroke",cR)}function S_(t){for(var e=[],i=t.data,n=t.len(),o=0;o<n;){var a ,r="0;switch(i[o++]){case" ur.m:a="M" ur.l:a="L" ur.q:a="Q" ur.c:a="C" ur.a:var s="i[o++],l=i[o++],u=i[o++],h=i[o++],c=i[o++],d=i[o++],f=i[o++],p=i[o++],g=Math.abs(d),m=m_(g-mR)&&!m_(g),v=!1;v=g">=mR||!m_(g)&&(d>-gR&&d<0||d>gR)==!!p;var y=g_(s+u*pR(c)),x=g_(l+h*fR(c));m&&(d=p?mR-1e-4:1e-4-mR,v=!0,9===o&&e.push("M",y,x));var _=g_(s+u*pR(c+d)),w=g_(l+h*fR(c+d));e.push("A",g_(u),g_(h),dR(f*vR),+v,+p,_,w);break;case uR.Z:a="Z";break;case uR.R:var _=g_(i[o++]),w=g_(i[o++]),b=g_(i[o++]),S=g_(i[o++]);e.push("M",_,w,"L",_+b,w,"L",_+b,w+S,"L",_,w+S,"L",_,w)}a&&e.push(a);for(var M=0;M<r;m++)e.push(g_(i[o++]))}return e.join(" ")}function m_(t){return"middle"="==t?" middle":"bottom"="==t?" after-edge":"hanging"}function"" i_(){}function t_(t,e,i,n){for(var o="0,a=e.length,r=0,s=0;o<a;o++){var" l="e[o];if(l.removed){for(var" u="[],h=s;h<s+l.count;h++)u.push(h);l.indices=u,s+=l.count}else{for(var" e}function a_(t){return{newpos:t.newpos,components:t.components.slice(0)}}function d_(t,e,i,n,o){this._zrid="t,this._svgRoot=e,this._tagNames=" string"="=typeof" " i?[i]:i,this._marklabel="n,this._domName=o||" _dom",this.nextid="0}function" c_(t,e){d_.call(this,t,e,["lineargradient","radialgradient"],"__gradient_in_use__")}function l_(t,e){d_.call(this,t,e,"clippath","__clippath_in_use__")}function k_(t,e){d_.call(this,t,e,["filter"],"__filter_in_use__","_shadowdom")}function p_(t){return t&&(t.shadowblur||t.shadowoffsetx||t.shadowoffsety||t.textshadowblur||t.textshadowoffsetx||t.textshadowoffsety)}function n_(t){return parseint(t,10)}function o_(t){return t instanceof kn?xr:t fi?_r:t rm?wr:xr}function e_(t,e){return e&&t&&e.parentnode!="=t}function" r_(t,e,i){if(e_(t,e)&&i){var n="i.nextSibling;n?t.insertBefore(e,n):t.appendChild(e)}}function" z_(t,e){if(e_(t,e)){var i="t.firstChild;i?t.insertBefore(e,i):t.appendChild(e)}}function" b_(t,e){e&&t&&e.parentnode="==t&&t.removeChild(e)}function" v_(t){return t.__textsvgel}function g_(t){return t.__svgel}function f_(t){return function(){yw('in svg mode painter not support method "'+t+'"')}}var w_="2311,H_=function(){return" w_++},z_="{},U_=Z_=" object"="=typeof" wx&&"function"="=typeof" wx.getsysteminfosync?{browser:{},os:{},node:!1,wxa:!0,canvassupported:!0,svgsupported:!1,toucheventssupported:!0,domsupported:!1}:"undefined"="=typeof" document&&"undefined"!="typeof" self?{browser:{},os:{},node:!1,worker:!0,canvassupported:!0,domsupported:!1}:"undefined"="=typeof" navigator?{browser:{},os:{},node:!0,worker:!1,canvassupported:!0,svgsupported:!0,domsupported:!1}:function(t){var e="{},i={},n=t.match(/Firefox\/([\d.]+)/),o=t.match(/MSIE\s([\d.]+)/)||t.match(/Trident\/.+?rv:(([\d.]+))/),a=t.match(/Edge\/([\d.]+)/),r=/micromessenger/i.test(t);return" n&&(i.firefox="!0,i.version=n[1]),o&&(i.ie=!0,i.version=o[1]),a&&(i.edge=!0,i.version=a[1]),r&&(i.weChat=!0),{browser:i,os:e,node:!1,canvasSupported:!!document.createElement(" canvas").getcontext,svgsupported:"undefined"!="typeof" svgrect,toucheventssupported:"ontouchstart"in window&&!i.ie&&!i.edge,pointereventssupported:"onpointerdown"in window&&(i.edge||i.ie&&i.version>=11),domSupported:"undefined"!=typeof document}}(navigator.userAgent),X_={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},j_={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},Y_=Object.prototype.toString,q_=Array.prototype,K_=q_.forEach,$_=q_.filter,J_=q_.slice,Q_=q_.map,tw=q_.reduce,ew={},iw=function(){return ew.createCanvas()};ew.createCanvas=function(){return document.createElement("canvas")};var nw,ow="__ec_primitive__";E.prototype={constructor:E,get:function(t){return this.data.hasOwnProperty(t)?this.data[t]:null},set:function(t,e){return this.data[t]=e},each:function(t,e){void 0!==e&&(t=m(t,e));for(var i in this.data)this.data.hasOwnProperty(i)&&t(this.data[i],i)},removeKey:function(t){delete this.data[t]}};var aw=(Object.freeze||Object)({$override:e,clone:i,merge:n,mergeAll:o,extend:a,defaults:r,createCanvas:iw,getContext:s,indexOf:l,inherits:u,mixin:h,isArrayLike:c,each:d,map:f,reduce:p,filter:g,find:function(t,e,i){if(t&&e)for(var n=0,o=t.length;n<o;n++)if(e.call(i,t[n],n,t))return t[n]},bind:m,curry:v,isarray:y,isfunction:x,isstring:_,isobject:w,isbuiltinobject:b,istypedarray:s,isdom:m,eqnan:i,retrieve:t,retrieve2:a,retrieve3:d,slice:c,normalizecssarray:l,assert:k,trim:p,setasprimitive:n,isprimitive:o,createhashmap:r,concatarray:z,noop:b}),rw="undefined" =="typeof" float32array?array:float32array,sw="X,lw=j,uw=K,hw=$,cw=(Object.freeze||Object)({create:V,copy:G,clone:F,set:W,add:H,scaleAndAdd:Z,sub:U,len:X,length:sw,lenSquare:j,lengthSquare:lw,mul:function(t,e,i){return" t[0]="e[0]*i[0],t[1]=e[1]*i[1],t},div:function(t,e,i){return" t[0]*e[0]+t[1]*e[1]},scale:y,normalize:q,distance:k,dist:uw,distancesquare:$,distsquare:hw,negate:function(t,e){return e="t.target;e&&e.draggable&&(this._draggingTarget=e,e.dragging=!0,this._x=t.offsetX,this._y=t.offsetY,this.dispatchToElement(nt(e,t)," dragstart",t.event))},_drag:function(t){var" i="t.offsetX,n=t.offsetY,o=i-this._x,a=n-this._y;this._x=i,this._y=n,e.drift(o,a,t),this.dispatchToElement(nt(e,t)," drag",t.event);var" r="this.findHover(i,n,e).target,s=this._dropTarget;this._dropTarget=r,e!==r&&(s&&r!==s&&this.dispatchToElement(nt(s,t)," dragleave",t.event),r&&r!="=s&&this.dispatchToElement(nt(r,t)," dragenter",t.event))}},_dragend:function(t){var"" dw="Array.prototype.slice,fw=function(t){this._$handlers={},this._$eventProcessor=t};fw.prototype={constructor:fw,one:function(t,e,i,n){return" at(this,t,e,i,n,!0)},on:function(t,e,i,n){return at(this,t,e,i,n,!1)},issilent:function(t){var this._$handlers="{},this;if(e){if(i[t]){for(var" n="[],o=0,a=i[t].length;o<a;o++)i[t][o].h!==e&&n.push(i[t][o]);i[t]=n}i[t]&&0===i[t].length&&delete" i[t]}else delete i[t];return this},trigger:function(t){var>3&&(n=dw.call(n,1));for(var a=e.length,r=0;r<a;){var s="e[r];if(i&&i.filter&&null!=s.query&&!i.filter(t,s.query))r++;else{switch(o){case" 1:s.h.call(s.ctx);break;case 2:s.h.call(s.ctx,n[1]);break;case 3:s.h.call(s.ctx,n[1],n[2]);break;default:s.h.apply(s.ctx,n)}s.one?(e.splice(r,1),a--):r++}}}return i&&i.aftertrigger&&i.aftertrigger(t),this},triggerwithcontext:function(t){var e="this._$handlers[t],i=this._$eventProcessor;if(e){var" n="arguments,o=n.length;o">4&&(n=dw.call(n,1,n.length-1));for(var a=n[n.length-1],r=e.length,s=0;s<r;){var l="e[s];if(i&&i.filter&&null!=l.query&&!i.filter(t,l.query))s++;else{switch(o){case" 1:l.h.call(a);break;case 2:l.h.call(a,n[1]);break;case 3:l.h.call(a,n[1],n[2]);break;default:l.h.apply(a,n)}l.one?(e.splice(s,1),r--):s++}}}return i&&i.aftertrigger&&i.aftertrigger(t),this}};var pw="undefined" !="typeof" window&&!!window.addeventlistener,gw="/^(?:mouse|pointer|contextmenu|drag|drop)|click/,mw=pw?function(t){t.preventDefault(),t.stopPropagation(),t.cancelBubble=!0}:function(t){t.returnValue=!1,t.cancelBubble=!0},vw=function(){this._track=[]};vw.prototype={constructor:vw,recognize:function(t,e,i){return" this._dotrack(t,e,i),this._recognize(t)},clear:function(){return this._track.length="0,this},_doTrack:function(t,e,i){var" n="t.touches;if(n){for(var" o="{points:[],touches:[],target:e,event:t},a=0,r=n.length;a<r;a++){var" s="n[a],l=st(i,s,{});o.points.push([l.zrX,l.zrY]),o.touches.push(s)}this._track.push(o)}},_recognize:function(t){for(var" e in yw)if(yw.hasownproperty(e)){var i="yw[e](this._track,t);if(i)return" i}}};var yw="{pinch:function(t,e){var">1&&n&&n.length>1){var a=ft(n)/ft(o);!isFinite(a)&&(a=1),e.pinchScale=a;var r=pt(n);return e.pinchX=r[0],e.pinchY=r[1],{type:"pinch",target:t[0].target,event:e}}}}},xw="silent";vt.prototype.dispose=function(){};var _w=["click","dblclick","mousewheel","mouseout","mouseup","mousedown","mousemove","contextmenu"],ww=function(t,e,i,n){fw.call(this),this.storage=t,this.painter=e,this.painterRoot=n,i=i||new vt,this.proxy=null,this._hovered={},this._lastTouchMoment,this._lastX,this._lastY,this._gestureMgr,it.call(this),this.setHandlerProxy(i)};ww.prototype={constructor:ww,setHandlerProxy:function(t){this.proxy&&this.proxy.dispose(),t&&(d(_w,function(e){t.on&&t.on(e,this[e],this)},this),t.handler=this),this.proxy=t},mousemove:function(t){var e=t.zrX,i=t.zrY,n=this._hovered,o=n.target;o&&!o.__zr&&(o=(n=this.findHover(n.x,n.y)).target);var a=this._hovered=this.findHover(e,i),r=a.target,s=this.proxy;s.setCursor&&s.setCursor(r?r.cursor:"default"),o&&r!==o&&this.dispatchToElement(n,"mouseout",t),this.dispatchToElement(a,"mousemove",t),r&&r!==o&&this.dispatchToElement(a,"mouseover",t)},mouseout:function(t){this.dispatchToElement(this._hovered,"mouseout",t);var e,i=t.toElement||t.relatedTarget;do{i=i&&i.parentNode}while(i&&9!==i.nodeType&&!(e=i===this.painterRoot));!e&&this.trigger("globalout",{event:t})},resize:function(t){this._hovered={}},dispatch:function(t,e){var i=this[t];i&&i.call(this,e)},dispose:function(){this.proxy.dispose(),this.storage=this.proxy=this.painter=null},setCursorStyle:function(t){var e=this.proxy;e.setCursor&&e.setCursor(t)},dispatchToElement:function(t,e,i){var n=(t=t||{}).target;if(!n||!n.silent){for(var o="on"+e,a=gt(e,t,i);n&&(n[o]&&(a.cancelBubble=n[o].call(n,a)),n.trigger(e,a),n=n.parent,!a.cancelBubble););a.cancelBubble||(this.trigger(e,a),this.painter&&this.painter.eachOtherLayer(function(t){"function"==typeof t[o]&&t[o].call(t,a),t.trigger&&t.trigger(e,a)}))}},findHover:function(t,e,i){for(var n=this.storage.getDisplayList(),o={x:t,y:e},a=n.length-1;a>=0;a--){var r;if(n[a]!==i&&!n[a].ignore&&(r=yt(n[a],t,e))&&(!o.topTarget&&(o.topTarget=n[a]),r!==xw)){o.target=n[a];break}}return o},processGesture:function(t,e){this._gestureMgr||(this._gestureMgr=new vw);var i=this._gestureMgr;"start"===e&&i.clear();var n=i.recognize(t,this.findHover(t.zrX,t.zrY,null).target,this.proxy.dom);if("end"===e&&i.clear(),n){var o=n.type;t.gestureEvent=o,this.dispatchToElement({target:n.target},o,n.event)}}},d(["click","mousedown","mouseup","mousewheel","dblclick","contextmenu"],function(t){ww.prototype[t]=function(e){var i=this.findHover(e.zrX,e.zrY),n=i.target;if("mousedown"===t)this._downEl=n,this._downPoint=[e.zrX,e.zrY],this._upEl=n;else if("mouseup"===t)this._upEl=n;else if("click"===t){if(this._downEl!==this._upEl||!this._downPoint||uw(this._downPoint,[e.zrX,e.zrY])>4)return;this._downPoint=null}this.dispatchToElement(i,t,e)}}),h(ww,fw),h(ww,it);var bw="undefined"==typeof Float32Array?Array:Float32Array,Sw=(Object.freeze||Object)({create:xt,identity:_t,copy:wt,mul:bt,translate:St,rotate:Mt,scale:It,invert:Tt,clone:At}),Mw=_t,Iw=5e-5,Tw=function(t){(t=t||{}).position||(this.position=[0,0]),null==t.rotation&&(this.rotation=0),t.scale||(this.scale=[1,1]),this.origin=this.origin||null},Aw=Tw.prototype;Aw.transform=null,Aw.needLocalTransform=function(){return Dt(this.rotation)||Dt(this.position[0])||Dt(this.position[1])||Dt(this.scale[0]-1)||Dt(this.scale[1]-1)};var Dw=[];Aw.updateTransform=function(){var t=this.parent,e=t&&t.transform,i=this.needLocalTransform(),n=this.transform;if(i||e){n=n||xt(),i?this.getLocalTransform(n):Mw(n),e&&(i?bt(n,t.transform,n):wt(n,t.transform)),this.transform=n;var o=this.globalScaleRatio;if(null!=o&&1!==o){this.getGlobalScale(Dw);var a=Dw[0]<0?-1:1,r=dw[1]<0?-1:1,s=((dw[0]-a)*o+a) 0="==t?0:Math.pow(1024,t-1)},exponentialOut:function(t){return" 1="==t?1:1-Math.pow(2,-10*t)},exponentialInOut:function(t){return" dw[0]||0,l="((Dw[1]-r)*o+r)/Dw[1]||0;n[0]*=s,n[1]*=s,n[2]*=l,n[3]*=l}this.invTransform=this.invTransform||xt(),Tt(this.invTransform,n)}else" n&&mw(n)},aw.getlocaltransform="function(t){return" tw.getlocaltransform(this,t)},aw.settransform="function(t){var" e="this.transform,i=t.dpr||1;e?t.setTransform(i*e[0],i*e[1],i*e[2],i*e[3],i*e[4],i*e[5]):t.setTransform(i,0,0,i,0,0)},Aw.restoreTransform=function(t){var" cw="[],Lw=xt();Aw.setLocalTransform=function(t){if(t){var" t="this.parent,e=this.transform;t&&t.transform&&(bt(Cw,t.invTransform,e),e=Cw);var" i="this.origin;i&&(i[0]||i[1])&&(Lw[4]=i[0],Lw[5]=i[1],bt(Cw,e,Lw),Cw[4]-=i[0],Cw[5]-=i[1],e=Cw),this.setLocalTransform(e)}},Aw.getGlobalScale=function(t){var" n&&q(i,i,n),i},aw.transformcoordtoglobal="function(t,e){var" n&&q(i,i,n),i},tw.getlocaltransform="function(t,e){Mw(e=e||[]);var" i&&(e[4]-="i[0],e[5]-=i[1]),It(e,e,n),o&&Mt(e,e,o),i&&(e[4]+=i[0],e[5]+=i[1]),e[4]+=a[0],e[5]+=a[1],e};var" kw="{linear:function(t){return" t},quadraticin:function(t){return t*t},quadraticout:function(t){return t*(2-t)},quadraticinout:function(t){return(t*="2)<1?.5*t*t:-.5*(--t*(t-2)-1)},cubicIn:function(t){return" t*t*t},cubicout:function(t){return--t*t*t+1},cubicinout:function(t){return(t*="2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},quarticIn:function(t){return" t*t*t*t},quarticout:function(t){return 1- --t*t*t*t},quarticinout:function(t){return(t*="2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},quinticIn:function(t){return" t*t*t*t*t},quinticout:function(t){return--t*t*t*t*t+1},quinticinout:function(t){return(t*="2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},sinusoidalIn:function(t){return" 1-math.cos(t*math.pi 2)},sinusoidalout:function(t){return math.sin(t*math.pi 2)},sinusoidalinout:function(t){return.5*(1-math.cos(math.pi*t))},exponentialin:function(t){return 1-math.sqrt(1-t*t)},circularout:function(t){return math.sqrt(1- --t*t)},circularinout:function(t){return(t*="2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},elasticIn:function(t){var" e,i=".1;return" t*t*((e+1)*t-e)},backout:function(t){var 1-kw.bounceout(1-t)},bounceout:function(t){return t<1 2.75?7.5625*t*t:t<2 2.75?7.5625*(t-="1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},bounceInOut:function(t){return" t<.5?.5*kw.bouncein(2*t):.5*kw.bounceout(2*t-1)+.5}};ct.prototype="{constructor:Ct,step:function(t,e){if(this._initialized||(this._startTime=t+this._delay,this._initialized=!0),this._paused)this._pausedTime+=e;else{var" n="this.easing,o=" string"="=typeof" " n?kw[n]:n,a="function" =="typeof" o?o(i):i;return this.fire("frame",a),1="==i?this.loop?(this.restart(t)," restart"):(this._needsremove="!0," destroy"):null}}},restart:function(t){var"" pw="function(){this.head=null,this.tail=null,this._len=0},Nw=Pw.prototype;Nw.insert=function(t){var" ow(t);return this.insertentry(e),e},nw.insertentry="function(t){this.head?(this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t):this.head=this.tail=t,this._len++},Nw.remove=function(t){var" this._len},nw.clear="function(){this.head=this.tail=null,this._len=0};var" ow="function(t){this.value=t,this.next,this.prev},Ew=function(t){this._list=new" pw,this._map="{},this._maxSize=t||10,this._lastRemovedEntry=null},Rw=Ew.prototype;Rw.put=function(t,e){var" a="i.len(),r=this._lastRemovedEntry;if(a">=this._maxSize&&a>0){var s=i.head;i.remove(s),delete n[s.key],o=s.value,this._lastRemovedEntry=s}r?r.value=e:r=new Ow(e),r.key=t,i.insertEntry(r),n[t]=r}return o},Rw.get=function(t){var e=this._map[t],i=this._list;if(null!=e)return e!==i.tail&&(i.remove(e),i.insertEntry(e)),e.value},Rw.clear=function(){this._list.clear(),this._map={}};var zw={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},Bw=new Ew(20),Vw=null,Gw=Ut,Fw=Xt,Ww=(Object.freeze||Object)({parse:Gt,lift:Ht,toHex:Zt,fastLerp:Ut,fastMapToColor:Gw,lerp:Xt,mapToColor:Fw,modifyHSL:jt,modifyAlpha:Yt,stringify:qt}),Hw=Array.prototype.slice,Zw=function(t,e,i,n){this._tracks={},this._target=t,this._loop=e||!1,this._getter=i||Kt,this._setter=n||$t,this._clipCount=0,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]};Zw.prototype={when:function(t,e){var i=this._tracks;for(var n in e)if(e.hasOwnProperty(n)){if(!i[n]){i[n]=[];var o=this._getter(this._target,n);if(null==o)continue;0!==t&&i[n].push({time:0,value:ae(o)})}i[n].push({time:t,value:e[n]})}return this},during:function(t){return this._onframeList.push(t),this},pause:function(){for(var t=0;t<this._cliplist.length;t++)this._cliplist[t].pause();this._paused=!0},resume:function(){for(var t="0;t<this._clipList.length;t++)this._clipList[t].resume();this._paused=!1},isPaused:function(){return!!this._paused},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var" i,n="this,o=0;for(var" a in this._tracks)if(this._tracks.hasownproperty(a)){var r="le(this,t,function(){--o||n._doneCallback()},this._tracks[a],a,e);r&&(this._clipList.push(r),o++,this.animation&&this.animation.addClip(r),i=r)}if(i){var" s="i.onframe;i.onframe=function(t,e){s(t,e);for(var" i="0;i<n._onframeList.length;i++)n._onframeList[i](t,e)}}return" o||this._donecallback(),this},stop:function(t){for(var e="this._clipList,i=this.animation,n=0;n<e.length;n++){var" o="e[n];t&&o.onframe(this._target,1),i&&i.removeClip(o)}e.length=0},delay:function(t){return" this._delay="t,this},done:function(t){return" t&&this._donelist.push(t),this},getclips:function(){return this._cliplist}};var uw="1;" undefined"!="typeof" " window&&(uw="Math.max(window.devicePixelRatio||1,1));var" xw="Uw,jw=function(){},Yw=jw,qw=function(){this.animators=[]};qw.prototype={constructor:qw,animate:function(t,e){var" u="0,h=r.length;u<h;u++)s&&(s=s[r[u]]);s&&(i=s)}else" c="o.animators,d=new" zw(i,e);return d.during(function(t){o.dirty(n)}).done(function(){c.splice(l(c,d),1)}),c.push(d),a&&a.animation.addanimator(d),d}yw('property "'+t+'" is not existed element '+o.id)},stopanimation:function(t){for(var e.length="0,this},animateTo:function(t,e,i,n,o,a){ue(this,t,e,i,n,o,a)},animateFrom:function(t,e,i,n,o,a){ue(this,t,e,i,n,o,a,!0)}};var" kw="function(t){Tw.call(this,t),fw.call(this,t),qw.call(this,t),this.id=t.id||H_()};Kw.prototype={type:" element",name:"",__zr:null,ignore:!1,clippath:null,isgroup:!1,drift:function(t,e){switch(this.draggable){case"horizontal":e="0;break;case" vertical":t="0}var""" this[t]="e},hide:function(){this.ignore=!0,this.__zr&&this.__zr.refresh()},show:function(){this.ignore=!1,this.__zr&&this.__zr.refresh()},attr:function(t,e){if(" string"="=typeof" t)this.attrkv(t,e);else if(w(t))for(var t)t.hasownproperty(i)&&this.attrkv(i,t[i]);return this.dirty(!1),this},setclippath:function(t){var $w="Q,Jw=Math.min,Qw=Math.max;de.prototype={constructor:de,union:function(t){var" function(o){if(o){t[0]="i[0]=this.x,t[1]=n[1]=this.y,e[0]=n[0]=this.x+this.width,e[1]=i[1]=this.y+this.height,$w(t,t,o),$w(e,e,o),$w(i,i,o),$w(n,n,o),this.x=Jw(t[0],e[0],i[0],n[0]),this.y=Jw(t[1],e[1],i[1],n[1]);var" st(o,o,[-e.x,-e.y]),it(o,o,[i,n]),st(o,o,[t.x,t.y]),o},intersect:function(t){if(!t)return!1;t instanceof de||(t="de.create(t));var">=i.x&&t<=i.x+i.width&&e>=i.y&&e<=i.y+i.height},clone:function(){return new de(this.x,this.y,this.width,this.height)},copy:function(t){this.x="t.x,this.y=t.y,this.width=t.width,this.height=t.height},plain:function(){return{x:this.x,y:this.y,width:this.width,height:this.height}}},de.create=function(t){return" de(t.x,t.y,t.width,t.height)};var tb="function(t){t=t||{},Kw.call(this,t);for(var" e in t)t.hasownproperty(e)&&(this[e]="t[e]);this._children=[],this.__storage=null,this.__dirty=!0};tb.prototype={constructor:tb,isGroup:!0,type:" group",silent:!1,children:function(){return" this._children.slice()},childat:function(t){return this._children[t]},childofname:function(t){for(var e[i]},childcount:function(){return this._children.length},add:function(t){return t&&t!="=this&&t.parent!==this&&(this._children.push(t),this._doAdd(t)),this},addBefore:function(t,e){if(t&&t!==this&&t.parent!==this&&e&&e.parent===this){var" i="this._children,n=i.indexOf(e);n">=0&&(i.splice(n,0,t),this._doAdd(t))}return this},_doAdd:function(t){t.parent&&t.parent.remove(t),t.parent=this;var e=this.__storage,i=this.__zr;e&&e!==t.__storage&&(e.addToStorage(t),t instanceof tb&&t.addChildrenToStorage(e)),i&&i.refresh()},remove:function(t){var e=this.__zr,i=this.__storage,n=this._children,o=l(n,t);return o<0?this:(n.splice(o,1),t.parent=null,i&&(i.delfromstorage(t),t instanceof tb&&t.delchildrenfromstorage(i)),e&&e.refresh(),this)},removeall:function(){var t,e,i="this._children,n=this.__storage;for(e=0;e<i.length;e++)t=i[e],n&&(n.delFromStorage(t),t" tb&&t.delchildrenfromstorage(n)),t.parent="null;return" i.length="0,this},eachChild:function(t,e){for(var" i="this._children,n=0;n<i.length;n++){var" o="i[n];t.call(e,o,n)}return" this},traverse:function(t,e){for(var n="this._children[i];t.call(e,n)," group"="==n.type&&n.traverse(t,e)}return" " this},addchildrentostorage:function(t){for(var e="0;e<this._children.length;e++){var" tb&&i.addchildrentostorage(t)}},delchildrenfromstorage:function(t){for(var tb&&i.delchildrenfromstorage(t)}},dirty:function(){return this.__dirty="!0,this.__zr&&this.__zr.refresh(),this},getBoundingRect:function(t){for(var" de(0,0,0,0),n="t||this._children,o=[],a=0;a<n.length;a++){var" r="n[a];if(!r.ignore&&!r.invisible){var" s="r.getBoundingRect(),l=r.getLocalTransform(o);l?(i.copy(s),i.applyTransform(l),(e=e||i.clone()).union(i)):(e=e||s.clone()).union(s)}}return" e||i}},u(tb,kw);var eb="32,ib=7,nb=function(){this._roots=[],this._displayList=[],this._displayListLen=0};nb.prototype={constructor:nb,traverse:function(t,e){for(var" l="r[s];t.__dirty&&(l.__dirty=!0),this._updateAndAddDisplayable(l,e,i)}t.__dirty=!1}else" t.__clippaths="e,this._displayList[this._displayListLen++]=t}},addRoot:function(t){t.__storage!==this&&(t" tb&&t.addchildrentostorage(this),this.addtostorage(t),this._roots.push(t))},delroot:function(t){if(null="=t){for(i=0;i<this._roots.length;i++){var" tb&&e.delchildrenfromstorage(this)}return this._roots="[],this._displayList=[],void(this._displayListLen=0)}if(t" array)for(var>=0&&(this.delFromStorage(t),this._roots.splice(o,1),t instanceof tb&&t.delChildrenFromStorage(this))}},addToStorage:function(t){return t&&(t.__storage=this,t.dirty(!1)),this},delFromStorage:function(t){return t&&(t.__storage=null),this},dispose:function(){this._renderList=this._roots=null},displayableSortFunc:we};var ob={shadowBlur:1,shadowOffsetX:1,shadowOffsetY:1,textShadowBlur:1,textShadowOffsetX:1,textShadowOffsetY:1,textBoxShadowBlur:1,textBoxShadowOffsetX:1,textBoxShadowOffsetY:1},ab=function(t,e,i){return ob.hasOwnProperty(e)?i*=t.dpr:i},rb={NONE:0,STYLE_BIND:1,PLAIN_TEXT:2},sb=9,lb=[["shadowBlur",0],["shadowOffsetX",0],["shadowOffsetY",0],["shadowColor","#000"],["lineCap","butt"],["lineJoin","miter"],["miterLimit",10]],ub=function(t){this.extendFrom(t,!1)};ub.prototype={constructor:ub,fill:"#000",stroke:null,opacity:1,fillOpacity:null,strokeOpacity:null,lineDash:null,lineDashOffset:0,shadowBlur:0,shadowOffsetX:0,shadowOffsetY:0,lineWidth:1,strokeNoScale:!1,text:null,font:null,textFont:null,fontStyle:null,fontWeight:null,fontSize:null,fontFamily:null,textTag:null,textFill:"#000",textStroke:null,textWidth:null,textHeight:null,textStrokeWidth:0,textLineHeight:null,textPosition:"inside",textRect:null,textOffset:null,textAlign:null,textVerticalAlign:null,textDistance:5,textShadowColor:"transparent",textShadowBlur:0,textShadowOffsetX:0,textShadowOffsetY:0,textBoxShadowColor:"transparent",textBoxShadowBlur:0,textBoxShadowOffsetX:0,textBoxShadowOffsetY:0,transformText:!1,textRotation:0,textOrigin:null,textBackgroundColor:null,textBorderColor:null,textBorderWidth:0,textBorderRadius:0,textPadding:null,rich:null,truncate:null,blend:null,bind:function(t,e,i){var n=this,o=i&&i.style,a=!o||t.__attrCachedBy!==rb.STYLE_BIND;t.__attrCachedBy=rb.STYLE_BIND;for(var r=0;r<lb.length;r++){var s="lb[r],l=s[0];(a||n[l]!==o[l])&&(t[l]=ab(t,l,n[l]||s[1]))}if((a||n.fill!==o.fill)&&(t.fillStyle=n.fill),(a||n.stroke!==o.stroke)&&(t.strokeStyle=n.stroke),(a||n.opacity!==o.opacity)&&(t.globalAlpha=null==n.opacity?1:n.opacity),(a||n.blend!==o.blend)&&(t.globalCompositeOperation=n.blend||" source-over"),this.hasstroke()){var" u="n.lineWidth;t.lineWidth=u/(this.strokeNoScale&&e&&e.getLineScale?e.getLineScale():1)}},hasFill:function(){var" t="this.fill;return" null!="t&&" none"!="=t},hasStroke:function(){var" ">0},extendFrom:function(t,e){if(t)for(var i in t)!t.hasOwnProperty(i)||!0!==e&&(!1===e?this.hasOwnProperty(i):null==t[i])||(this[i]=t[i])},set:function(t,e){"string"==typeof t?this[t]=e:this.extendFrom(t,!0)},clone:function(){var t=new this.constructor;return t.extendFrom(this,!0),t},getGradient:function(t,e,i){for(var n=("radial"===e.type?Se:be)(t,e,i),o=e.colorStops,a=0;a<o.length;a++)n.addcolorstop(o[a].offset,o[a].color);return n}};for(var hb="ub.prototype,cb=0;cb<lb.length;cb++){var" db="lb[cb];db[0]in" hb||(hb[db[0]]="db[1])}ub.getGradient=hb.getGradient;var" fb="function(t,e){this.image=t,this.repeat=e,this.type=" pattern"};fb.prototype.getcanvaspattern="function(t){return" " t.createpattern(this.image,this.repeat||"repeat")};var pb="function(t,e,i){var" n;i="i||Xw," string"="=typeof" t?n="Ie(t,e,i):w(t)&&(t=(n=t).id),this.id=t,this.dom=n;var" o="n.style;o&&(n.onselectstart=Me,o[" -webkit-user-select"]="none" ,o["user-select"]="none" ,o["-webkit-touch-callout"]="none" ,o["-webkit-tap-highlight-color"]="rgba(0,0,0,0)" ,o.padding="0,o.margin=0,o[" border-width"]="0),this.domBack=null,this.ctxBack=null,this.painter=e,this.config=null,this.clearColor=0,this.motionBlur=!1,this.lastFrameAlpha=.7,this.dpr=i};pb.prototype={constructor:pb,__dirty:!0,__used:!1,__drawIndex:0,__startIndex:0,__endIndex:0,incremental:!1,getElementCount:function(){return""" this.__endindex-this.__startindex},initcontext:function(){this.ctx="this.dom.getContext(" 2d"),this.ctx.dpr="this.dpr},createBackBuffer:function(){var" t="this.dpr;this.domBack=Ie(" back-"+this.id,this.painter,t),this.ctxback="this.domBack.getContext(" 2d"),1!="=t&&this.ctxBack.scale(t,t)},resize:function(t,e){var""" i="this.dpr,n=this.dom,o=n.style,a=this.domBack;o&&(o.width=t+" px",o.height="e+" px"),n.width="t*i,n.height=e*i,a&&(a.width=t*i,a.height=e*i,1!==i&&this.ctxBack.scale(i,i))},clear:function(t,e){var""" u;e.colorstops?(u="e.__canvasGradient||ub.getGradient(n,e,{x:0,y:0,width:o,height:a}),e.__canvasGradient=u):e.image&&(u=fb.prototype.getCanvasPattern.call(e,n)),n.save(),n.fillStyle=u||e,n.fillRect(0,0,o,a),n.restore()}if(r){var" h="this.domBack;n.save(),n.globalAlpha=s,n.drawImage(h,0,0,o,a),n.restore()}}};var" gb="undefined" !="typeof" window&&(window.requestanimationframe&&window.requestanimationframe.bind(window)||window.msrequestanimationframe&&window.msrequestanimationframe.bind(window)||window.mozrequestanimationframe||window.webkitrequestanimationframe)||function(t){settimeout(t,16)},mb="new" ew(50),vb="{},yb=0,xb=5e3,_b=/\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,wb=" 12px" sans-serif",bb="{};bb.measureText=function(t,e){var" i.font="e||wb,i.measureText(t)};var" sb="wb,Mb={left:1,right:1,center:1},Ib={top:1,bottom:1,middle:1},Tb=[[" textshadowblur","shadowblur",0],["textshadowoffsetx","shadowoffsetx",0],["textshadowoffsety","shadowoffsety",0],["textshadowcolor","shadowcolor","transparent"]],ab="new" de,db="function(){};Db.prototype={constructor:Db,drawRectText:function(t,e){var" n="i.text;if(null!=n&&(n+=" "),ci(n,i)){t.save();var" this.rectcontain(t,e)},traverse:function(t,e){t.call(e,this)},rectcontain:function(t,e){var this.getboundingrect().contain(i[0],i[1])},dirty:function(){this.__dirty="this.__dirtyText=!0,this._rect=null,this.__zr&&this.__zr.refresh()},animateStyle:function(t){return" this.animate("style",t)},attrkv:function(t,e){"style"!="=t?Kw.prototype.attrKV.call(this,t,e):this.style.set(e)},setStyle:function(t,e){return" this.style.set(t,e),this.dirty(!1),this},usestyle:function(t){return this.style="new" ub(t,this),this.dirty(!1),this}},u(di,kw),h(di,db),fi.prototype="{constructor:fi,type:" image",brush:function(t,e){var" a="i.x||0,r=i.y||0,s=i.width,l=i.height,u=o.width/o.height;if(null==s&&null!=l?s=l*u:null==l&&null!=s?l=s/u:null==s&&null==l&&(s=o.width,l=o.height),this.setTransform(t),i.sWidth&&i.sHeight){var" if(i.sx&&i.sy){var d="s-(h=i.sx),f=l-(c=i.sy);t.drawImage(o,h,c,d,f,a,r,s,l)}else" t.drawimage(o,a,r,s,l);null!="i.text&&(this.restoreTransform(t),this.drawRectText(t,this.getBoundingRect()))}},getBoundingRect:function(){var" this._rect||(this._rect="new" de(t.x||0,t.y||0,t.width||0,t.height||0)),this._rect}},u(fi,di);var cb="new" de(0,0,0,0),lb="new" de(0,0,0,0),kb="function(t,e,i){this.type=" canvas";var" r="this._zlevelList=[],s=this._layers={};if(this._layerConfig={},this._needsManuallyCompositing=!1,n){var" l="t.width,u=t.height;null!=i.width&&(l=i.width),null!=i.height&&(u=i.height),this.dpr=i.devicePixelRatio||1,t.width=l*this.dpr,t.height=u*this.dpr,this._width=l,this._height=u;var" pb(t,this,this.dpr);h.__builtin__="!0,h.initContext(),s[314159]=h,h.zlevel=314159,r.push(314159),this._domRoot=t}else{this._width=this._getSize(0),this._height=this._getSize(1);var" c="this._domRoot=xi(this._width,this._height);t.appendChild(c)}this._hoverlayer=null,this._hoverElements=[]};kb.prototype={constructor:kb,getType:function(){return" canvas"},issinglecanvas:function(){return" this._singlecanvas},getviewportroot:function(){return this._domroot},getviewportrootoffset:function(){var e="this.storage.getDisplayList(!0),i=this._zlevelList;this._redrawId=Math.random(),this._paintList(e,t,this._redrawId);for(var" this.refreshhover(),this},addhover:function(t,e){if(!t.__hovermir){var t.constructor({style:t.style,shape:t.shape,z:t.z,z2:t.z2,silent:t.silent});return i.__from="t,t.__hoverMir=i,e&&i.setStyle(e),this._hoverElements.push(i),i}},removeHover:function(t){var">=0&&i.splice(n,1),t.__hoverMir=null},clearHover:function(t){for(var e=this._hoverElements,i=0;i<e.length;i++){var n="e[i].__from;n&&(n.__hoverMir=null)}e.length=0},refreshHover:function(){var" t="this._hoverElements,e=t.length,i=this._hoverlayer;if(i&&i.clear(),e){_e(t,this.storage.displayableSortFunc),i||(i=this._hoverlayer=this.getLayer(1e5));var" o="0;o<e;){var" a="t[o],r=a.__from;r&&r.__zr?(o++,r.invisible||(a.transform=r.transform,a.invTransform=r.invTransform,a.__clipPaths=r.__clipPaths,this._doPaintEl(a,i,!0,n))):(t.splice(o,1),r.__hoverMir=null,e--)}i.ctx.restore()}},getHoverLayer:function(){return" this.getlayer(1e5)},_paintlist:function(t,e,i){if(this._redrawid="==i){e=e||!1,this._updateLayerStatus(t);var" i="[],n=0;n<this._zlevelList.length;n++){var" s="i[r],l=s.ctx,u={};l.save();var" h="e?s.__startIndex:s.__drawIndex,c=!e&&s.incremental&&Date.now,f=c&&Date.now(),p=s.zlevel===this._zlevelList[0]?this._backgroundColor:null;if(s.__startIndex===s.__endIndex)s.clear(!1,p);else" if(h="==s.__startIndex){var" g="t[h];g.incremental&&g.notClear&&!e||s.clear(!1,p)}-1===h&&(console.error(" for" some unknown reason. drawindex is -1"),h="s.__startIndex);for(var" m="h;m<s.__endIndex;m++){var" v="t[m];if(this._doPaintEl(v,s,e,u),v.__dirty=v.__dirtyText=!1,c&&Date.now()-f">15)break}s.__drawIndex=m,s.__drawIndex<s.__endindex&&(a=!1),u.prevelclippaths&&l.restore(),l.restore()}return u_.wxa&&d(this._layers,function(t){t&&t.ctx&&t.ctx.draw&&t.ctx.draw()}),a},_dopaintel:function(t,e,i,n){var o="e.ctx,a=t.transform;if((e.__dirty||i)&&!t.invisible&&0!==t.style.opacity&&(!a||a[0]||a[3])&&(!t.culling||!mi(t,this._width,this._height))){var" r="t.__clipPaths;n.prevElClipPaths&&!vi(r,n.prevElClipPaths)||(n.prevElClipPaths&&(e.ctx.restore(),n.prevElClipPaths=null,n.prevEl=null),r&&(o.save(),yi(r,o),n.prevElClipPaths=r)),t.beforeBrush&&t.beforeBrush(o),t.brush(o,n.prevEl||null),n.prevEl=t,t.afterBrush&&t.afterBrush(o)}},getLayer:function(t,e){this._singleCanvas&&!this._needsManuallyCompositing&&(t=314159);var" i="this._layers[t];return" i||((i="new" pb("zr_"+t,this,this.dpr)).zlevel="t,i.__builtin__=!0,this._layerConfig[t]&&n(i,this._layerConfig[t],!0),e&&(i.virtual=e),this.insertLayer(t,i),i.initContext()),i},insertLayer:function(t,e){var" "+t+" has been used already");else if(gi(e)){if(o>0&&t>n[0]){for(r=0;r<o-1&&!(n[r]<t&&n[r+1]>t);r++);a=i[n[r]]}if(n.splice(r+1,0,t),i[t]=e,!e.virtual)if(a){var l=a.dom;l.nextSibling?s.insertBefore(e.dom,l.nextSibling):s.appendChild(e.dom)}else s.firstChild?s.insertBefore(e.dom,s.firstChild):s.appendChild(e.dom)}else Yw("Layer of zlevel "+t+" is not valid")},eachLayer:function(t,e){var i,n,o=this._zlevelList;for(n=0;n<o.length;n++)i=o[n],t.call(e,this._layers[i],i)},eachbuiltinlayer:function(t,e){var i,n,o,a="this._zlevelList;for(o=0;o<a.length;o++)n=a[o],(i=this._layers[n]).__builtin__&&t.call(e,i,n)},eachOtherLayer:function(t,e){var" this._layers},_updatelayerstatus:function(t){function e(t){i&&(i.__endindex!="=t&&(i.__dirty=!0),i.__endIndex=t)}if(this.eachBuiltinLayer(function(t,e){t.__dirty=t.__used=!1}),this._singleCanvas)for(o=1;o<t.length;o++)if((r=t[o]).zlevel!==t[o-1].zlevel||r.incremental){this._needsManuallyCompositing=!0;break}for(var" i="null,n=0,o=0;o<t.length;o++){var" a,r="t[o],s=r.zlevel;r.incremental?((a=this.getLayer(s+.001,this._needsManuallyCompositing)).incremental=!0,n=1):a=this.getLayer(s+(n">0?.01:0),this._needsManuallyCompositing),a.__builtin__||Yw("ZLevel "+s+" has been used by unkown layer "+a.id),a!==i&&(a.__used=!0,a.__startIndex!==o&&(a.__dirty=!0),a.__startIndex=o,a.incremental?a.__drawIndex=-1:a.__drawIndex=o,e(o),i=a),r.__dirty&&(a.__dirty=!0,a.incremental&&a.__drawIndex<0&&(a.__drawindex=o))}e(o),this.eachbuiltinlayer(function(t,e){!t.__used&&t.getelementcount()>0&&(t.__dirty=!0,t.__startIndex=t.__endIndex=t.__drawIndex=0),t.__dirty&&t.__drawIndex<0&&(t.__drawindex=t.__startindex)})},clear:function(){return this.eachbuiltinlayer(this._clearlayer),this},_clearlayer:function(t){t.clear()},setbackgroundcolor:function(t){this._backgroundcolor="t},configLayer:function(t,e){if(e){var" i="this._layerConfig;i[t]?n(i[t],e,!0):i[t]=e;for(var" o="0;o<this._zlevelList.length;o++){var" a="this._zlevelList[o];a!==t&&a!==t+.01||n(this._layers[a],i[t],!0)}}},delLayer:function(t){var" e="this._layers,i=this._zlevelList,n=e[t];n&&(n.dom.parentNode.removeChild(n.dom),delete" e[t],i.splice(l(i,t),1))},resize:function(t,e){if(this._domroot.style){var n="this._opts;if(null!=t&&(n.width=t),null!=e&&(n.height=e),t=this._getSize(0),e=this._getSize(1),i.style.display=" ",this._width!="=t||e!==this._height){i.style.width=t+" px",i.style.height="e+"px";for(var""" in this._layers)this._layers.hasownproperty(o)&&this._layers[o].resize(t,e);d(this._progressivelayers,function(i){i.resize(t,e)}),this.refresh(!0)}this._width="t,this._height=e}else{if(null==t||null==e)return;this._width=t,this._height=e,this.getLayer(314159).resize(t,e)}return" this},clearlayer:function(t){var this._layers[314159].dom;var pb("image",this,t.pixelratio||this.dpr);if(e.initcontext(),e.clear(!1,t.backgroundcolor||this._backgroundcolor),t.pixelratio<="this.dpr){this.refresh();var" for(var l="r[s];this._doPaintEl(l,e,!0,a)}return" e.dom},getwidth:function(){return this._width},getheight:function(){return this._height},_getsize:function(t){var parsefloat(e[i]);var r="this.root,s=document.defaultView.getComputedStyle(r);return(r[n]||pi(s[i])||pi(r.style[i]))-(pi(s[o])||0)-(pi(s[a])||0)|0},pathToImage:function(t,e){e=e||this.dpr;var" m="{position:t.position,rotation:t.rotation,scale:t.scale};t.position=[h-o.x,d-o.y],t.rotation=0,t.scale=[1,1],t.updateTransform(),t&&t.brush(n);var" v="new" fi({style:{x:0,y:0,image:i}});return null!="m.position&&(v.position=t.position=m.position),null!=m.rotation&&(v.rotation=t.rotation=m.rotation),null!=m.scale&&(v.scale=t.scale=m.scale),v}};var" pb="function(t){t=t||{},this.stage=t.stage||{},this.onframe=t.onframe||function(){},this._clips=[],this._running=!1,this._time,this._pausedTime,this._pauseStart,this._paused=!1,fw.call(this)};Pb.prototype={constructor:Pb,addClip:function(t){this._clips.push(t)},addAnimator:function(t){t.animation=this;for(var">=0&&this._clips.splice(e,1)},removeAnimator:function(t){for(var e=t.getClips(),i=0;i<e.length;i++)this.removeclip(e[i]);t.animation=null},_update:function(){for(var t="(new" date).gettime()-this._pausedtime,e="t-this._time,i=this._clips,n=i.length,o=[],a=[],r=0;r<n;r++){var" s="i[r],l=s.step(t,e);l&&(o.push(l),a.push(s))}for(r=0;r<n;)i[r]._needsRemove?(i[r]=i[n-1],i.pop(),n--):r++;n=o.length;for(r=0;r<n;r++)a[r].fire(o[r]);this._time=t,this.onframe(e),this.trigger(" frame",e),this.stage.update&&this.stage.update()},_startloop:function(){function" t(){e._running&&(gb(t),!e._paused&&e._update())}var e="this;this._running=!0,gb(t)},start:function(){this._time=(new" date).gettime(),this._pausedtime="0,this._startLoop()},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=(new" date).gettime(),this._paused="!0)},resume:function(){this._paused&&(this._pausedTime+=(new" date).gettime()-this._pausestart,this._paused="!1)},clear:function(){this._clips=[]},isFinished:function(){return!this._clips.length},animate:function(t,e){var" i="new" zw(t,(e="e||{}).loop,e.getter,e.setter);return" this.addanimator(i),i}},h(pb,fw);var nb="[" click","dblclick","mousewheel","mouseout","mouseup","mousedown","mousemove","contextmenu"],ob="[" touchstart","touchend","touchmove"],eb="{pointerdown:1,pointerup:1,pointermove:1,pointerout:1},Rb=f(Nb,function(t){var""" eb[e]?e:t}),zb="{mousemove:function(t){t=ut(this.dom,t),this.trigger(" mousemove",t)},mouseout:function(t){var" date,this.handler.processgesture(this,t,"start"),zb.mousemove.call(this,t),zb.mousedown.call(this,t),wi(this)},touchmove:function(t){(t="ut(this.dom,t)).zrByTouch=!0,this.handler.processGesture(this,t," change"),zb.mousemove.call(this,t),wi(this)},touchend:function(t){(t="ut(this.dom,t)).zrByTouch=!0,this.handler.processGesture(this,t," end"),zb.mouseup.call(this,t),+new"" date-this._lasttouchmoment<300&&zb.click.call(this,t),wi(this)},pointerdown:function(t){zb.mousedown.call(this,t)},pointermove:function(t){bi(t)||zb.mousemove.call(this,t)},pointerup:function(t){zb.mouseup.call(this,t)},pointerout:function(t){bi(t)||zb.mouseout.call(this,t)}};d(["click","mousedown","mouseup","mousewheel","dblclick","contextmenu"],function(t){zb[t]="function(e){e=ut(this.dom,e),this.trigger(t,e)}});var" bb="Mi.prototype;Bb.dispose=function(){for(var" vb="!U_.canvasSupported,Gb={canvas:kb},Fb={},Wb=function(t,e,i){i=i||{},this.dom=e,this.id=t;var" n="this,o=new" nb,a="i.renderer;if(Vb){if(!Gb.vml)throw" new error("you need to require 'zrender vml vml' support ie8");a="vml" }else a&&gb[a]||(a="canvas" );var r="new" gb[a](e,o,i,t);this.storage="o,this.painter=r;var" mi(r.getviewportroot());this.handler="new" ww(o,r,s,r.root),this.animation="new" pb({stage:{update:m(this.flush,this)}}),this.animation.start(),this._needsrefresh;var l="o.delFromStorage,u=o.addToStorage;o.delFromStorage=function(t){l.call(o,t),t&&t.removeSelfFromZr(n)},o.addToStorage=function(t){u.call(o,t),t.addSelfToZr(n)}};Wb.prototype={constructor:Wb,getId:function(){return" this.id},add:function(t){this.storage.addroot(t),this._needsrefresh="!0},remove:function(t){this.storage.delRoot(t),this._needsRefresh=!0},configLayer:function(t,e){this.painter.configLayer&&this.painter.configLayer(t,e),this._needsRefresh=!0},setBackgroundColor:function(t){this.painter.setBackgroundColor&&this.painter.setBackgroundColor(t),this._needsRefresh=!0},refreshImmediately:function(){this._needsRefresh=!1,this.painter.refresh(),this._needsRefresh=!1},refresh:function(){this._needsRefresh=!0},flush:function(){var" t;this._needsrefresh&&(t="!0,this.refreshImmediately()),this._needsRefreshHover&&(t=!0,this.refreshHoverImmediately()),t&&this.trigger(" rendered")},addhover:function(t,e){if(this.painter.addhover){var" this.refreshhover(),i}},removehover:function(t){this.painter.removehover&&(this.painter.removehover(t),this.refreshhover())},clearhover:function(){this.painter.clearhover&&(this.painter.clearhover(),this.refreshhover())},refreshhover:function(){this._needsrefreshhover="!0},refreshHoverImmediately:function(){this._needsRefreshHover=!1,this.painter.refreshHover&&this.painter.refreshHover()},resize:function(t){t=t||{},this.painter.resize(t.width,t.height),this.handler.resize()},clearAnimation:function(){this.animation.clear()},getWidth:function(){return" this.painter.getwidth()},getheight:function(){return this.painter.getheight()},pathtoimage:function(t,e){return this.painter.pathtoimage(t,e)},setcursorstyle:function(t){this.handler.setcursorstyle(t)},findhover:function(t,e){return this.handler.findhover(t,e)},on:function(t,e,i){this.handler.on(t,e,i)},off:function(t,e){this.handler.off(t,e)},trigger:function(t,e){this.handler.trigger(t,e)},clear:function(){this.storage.delroot(),this.painter.clear()},dispose:function(){this.animation.stop(),this.clear(),this.storage.dispose(),this.painter.dispose(),this.handler.dispose(),this.animation="this.storage=this.painter=this.handler=null,Ai(this.id)}};var" hb="(Object.freeze||Object)({version:" 4.0.6",init:ii,dispose:function(t){if(t)t.dispose();else{for(var" in fb)fb.hasownproperty(e)&&fb[e].dispose();fb="{}}return" this},getinstance:function(t){return fb[t]},registerpainter:ti}),zb="d,Ub=w,Xb=y,jb=" series\0",yb="[" fontstyle","fontweight","fontsize","fontfamily","rich","tag","color","textbordercolor","textborderwidth","width","height","lineheight","align","verticalalign","baseline","shadowcolor","shadowblur","shadowoffsetx","shadowoffsety","textshadowcolor","textshadowblur","textshadowoffsetx","textshadowoffsety","backgroundcolor","bordercolor","borderwidth","borderradius","padding"],qb="0,Kb=".",$b="___EC__COMPONENT__CONTAINER___",Jb=0,Qb=function(t){for(var""" function(e,i,n){for(var o="{},a=0;a<t.length;a++){var">=0||n&&l(n,r)<0)){var s="e.getShallow(r);null!=s&&(o[t[a][0]]=s)}}return" o}},ts="Qb([[" linewidth","width"],["stroke","color"],["opacity"],["shadowblur"],["shadowoffsetx"],["shadowoffsety"],["shadowcolor"]]),es="{getLineStyle:function(t){var" " e="tS(this,t),i=this.getLineDash(e.lineWidth);return" i&&(e.linedash="i),e},getLineDash:function(t){null==t&&(t=1);var" is(this,t,e)}},os="Math.pow,aS=Math.sqrt,rS=1e-8,sS=1e-4,lS=aS(3),uS=1/3,hS=V(),cS=V(),dS=V(),fS=Math.min,pS=Math.max,gS=Math.sin,mS=Math.cos,vS=2*Math.PI,yS=V(),xS=V(),_S=V(),wS=[],bS=[],SS={M:1,L:2,C:3,Q:4,A:5,Z:6,R:7},MS=[],IS=[],TS=[],AS=[],DS=Math.min,CS=Math.max,LS=Math.cos,kS=Math.sin,PS=Math.sqrt,NS=Math.abs,OS=" undefined"!="typeof" float32array,es="function(t){this._saveData=!t,this._saveData&&(this.data=[]),this._ctx=null};ES.prototype={constructor:ES,_xi:0,_yi:0,_x0:0,_y0:0,_ux:0,_uy:0,_len:0,_lineDash:null,_dashOffset:0,_dashIdx:0,_dashSum:0,setScale:function(t,e){this._ux=NS(1/Xw/t)||0,this._uy=NS(1/Xw/e)||0},getContext:function(){return" this._ctx},beginpath:function(t){return this._ctx="t,t&&t.beginPath(),t&&(this.dpr=t.dpr),this._saveData&&(this._len=0),this._lineDash&&(this._lineDash=null,this._dashOffset=0),this},moveTo:function(t,e){return" this.adddata(ss.m,t,e),this._ctx&&this._ctx.moveto(t,e),this._x0="t,this._y0=e,this._xi=t,this._yi=e,this},lineTo:function(t,e){var" i="NS(t-this._xi)">this._ux||NS(e-this._yi)>this._uy||this._len<5;return this.adddata(ss.l,t,e),this._ctx&&i&&(this._needsdash()?this._dashedlineto(t,e):this._ctx.lineto(t,e)),i&&(this._xi="t,this._yi=e),this},bezierCurveTo:function(t,e,i,n,o,a){return" this.adddata(ss.c,t,e,i,n,o,a),this._ctx&&(this._needsdash()?this._dashedbezierto(t,e,i,n,o,a):this._ctx.beziercurveto(t,e,i,n,o,a)),this._xi="o,this._yi=a,this},quadraticCurveTo:function(t,e,i,n){return" this.adddata(ss.q,t,e,i,n),this._ctx&&(this._needsdash()?this._dashedquadraticto(t,e,i,n):this._ctx.quadraticcurveto(t,e,i,n)),this._xi="i,this._yi=n,this},arc:function(t,e,i,n,o,a){return" this.adddata(ss.a,t,e,i,i,n,o-n,0,a?0:1),this._ctx&&this._ctx.arc(t,e,i,n,o,a),this._xi="LS(o)*i+t,this._yi=kS(o)*i+e,this},arcTo:function(t,e,i,n,o){return" this._ctx&&this._ctx.arcto(t,e,i,n,o),this},rect:function(t,e,i,n){return this._ctx&&this._ctx.rect(t,e,i,n),this.adddata(ss.r,t,e,i,n),this},closepath:function(){this.adddata(ss.z);var t="this._ctx,e=this._x0,i=this._y0;return" t&&(this._needsdash()&&this._dashedlineto(e,i),t.closepath()),this._xi="e,this._yi=i,this},fill:function(t){t&&t.fill(),this.toStatic()},stroke:function(t){t&&t.stroke(),this.toStatic()},setLineDash:function(t){if(t" instanceof array){this._linedash="t,this._dashIdx=0;for(var" e="0,i=0;i<t.length;i++)e+=t[i];this._dashSum=e}return" this},setlinedashoffset:function(t){return this._dashoffset="t,this},len:function(){return" this._len},setdata:function(t){var float32array(e));for(var i="0;i<e;i++)this.data[i]=t[i];this._len=e},appendPath:function(t){t" array||(t="[t]);for(var" float32array&&(this.data="new" float32array(n+i));for(o="0;o<e;o++)for(var" a="t[o].data,r=0;r<a.length;r++)this.data[n++]=a[r];this._len=n},addData:function(t){if(this._saveData){var">e.length&&(this._expandData(),e=this.data);for(var i=0;i<arguments.length;i++)e[this._len++]=arguments[i];this._prevcmd=t}},_expanddata:function(){if(!(this.data instanceof array)){for(var t="[],e=0;e<this._len;e++)t[e]=this.data[e];this.data=t}},_needsDash:function(){return" this._linedash},_dashedlineto:function(t,e){var i,n,o="this._dashSum,a=this._dashOffset,r=this._lineDash,s=this._ctx,l=this._xi,u=this._yi,h=t-l,c=e-u,d=PS(h*h+c*c),f=l,p=u,g=r.length;for(h/=d,c/=d,a<0&&(a=o+a),f-=(a%=o)*h,p-=a*c;h">0&&f<=t||h<0&&f>=t||0===h&&(c>0&&p<=e||c<0&&p>=e);)f+=h*(i=r[n=this._dashIdx]),p+=c*i,this._dashIdx=(n+1)%g,h>0&&f<l||h<0&&f>l||c>0&&p<u||c<0&&p>u||s[n%2?"moveTo":"lineTo"](h>=0?DS(f,t):CS(f,t),c>=0?DS(p,e):CS(p,e));h=f-t,c=p-e,this._dashOffset=-PS(h*h+c*c)},_dashedBezierTo:function(t,e,i,n,o,a){var r,s,l,u,h,c=this._dashSum,d=this._dashOffset,f=this._lineDash,p=this._ctx,g=this._xi,m=this._yi,v=Qi,y=0,x=this._dashIdx,_=f.length,w=0;for(d<0&&(d=c+d),d%=c,r=0;r<1;r+=.1)s=v(g,t,i,o,r+.1)-v(g,t,i,o,r),l=v(m,e,n,a,r+.1)-v(m,e,n,a,r),y+=ps(s*s+l*l);for(;x<_&&!((w+=f[x])>d);x++);for(r=(w-d)/y;r<=1;)u=v(g,t,i,o,r),h=v(m,e,n,a,r),x%2?p.moveto(u,h):p.lineto(u,h),r+=f[x] 0="==a&&(MS[0]=MS[1]=IS[0]=IS[1]=0),new" y,x="(x+1)%_;x%2!=0&&p.lineTo(o,a),s=o-u,l=a-h,this._dashOffset=-PS(s*s+l*l)},_dashedQuadraticTo:function(t,e,i,n){var" o="i,a=n;i=(i+2*t)/3,n=(n+2*e)/3,t=(this._xi+2*t)/3,e=(this._yi+2*e)/3,this._dashedBezierTo(t,e,i,n,o,a)},toStatic:function(){var" t="this.data;t" instanceof array&&(t.length="this._len,OS&&(this.data=new" float32array(t)))},getboundingrect:function(){ms[0]="MS[1]=TS[0]=TS[1]=Number.MAX_VALUE,IS[0]=IS[1]=AS[0]=AS[1]=-Number.MAX_VALUE;for(var" r="t[a++];switch(1===a&&(n=e=t[a],o=i=t[a+1]),r){case" ss.m:e="n=t[a++],i=o=t[a++],TS[0]=n,TS[1]=o,AS[0]=n,AS[1]=o;break;case" ss.l:fn(e,i,t[a],t[a+1],ts,as),e="t[a++],i=t[a++];break;case" ss.c:pn(e,i,t[a++],t[a++],t[a++],t[a++],t[a],t[a+1],ts,as),e="t[a++],i=t[a++];break;case" ss.q:gn(e,i,t[a++],t[a++],t[a],t[a+1],ts,as),e="t[a++],i=t[a++];break;case" ss.a:var s="t[a++],l=t[a++],u=t[a++],h=t[a++],c=t[a++],d=t[a++]+c;a+=1;var" f="1-t[a++];1===a&&(n=LS(c)*u+s,o=kS(c)*h+l),mn(s,l,u,h,c,d,f,TS,AS),e=LS(d)*u+s,i=kS(d)*h+l;break;case" ss.r:fn(n="e=t[a++],o=i=t[a++],n+t[a++],o+t[a++],TS,AS);break;case" ss.z:e="n,i=o}tt(MS,MS,TS),et(IS,IS,AS)}return" de(ms[0],ms[1],is[0]-ms[0],is[1]-ms[1])},rebuildpath:function(t){for(var e,i,n,o,a,r,s="this.data,l=this._ux,u=this._uy,h=this._len,c=0;c<h;){var" d="s[c++];switch(1===c&&(e=n=s[c],i=o=s[c+1]),d){case" ss.l:a="s[c++],r=s[c++],(NS(a-n)">l||NS(r-o)>u||c===h-1)&&(t.lineTo(a,r),n=a,o=r);break;case SS.C:t.bezierCurveTo(s[c++],s[c++],s[c++],s[c++],s[c++],s[c++]),n=s[c-2],o=s[c-1];break;case SS.Q:t.quadraticCurveTo(s[c++],s[c++],s[c++],s[c++]),n=s[c-2],o=s[c-1];break;case SS.A:var f=s[c++],p=s[c++],g=s[c++],m=s[c++],v=s[c++],y=s[c++],x=s[c++],_=s[c++],w=g>m?g:m,b=g>m?1:g/m,S=g>m?m/g:1,M=v+y;Math.abs(g-m)>.001?(t.translate(f,p),t.rotate(x),t.scale(b,S),t.arc(0,0,w,v,M,1-_),t.scale(1/b,1/S),t.rotate(-x),t.translate(-f,-p)):t.arc(f,p,w,v,M,1-_),1===c&&(e=LS(v)*g+f,i=kS(v)*m+p),n=LS(M)*g+f,o=kS(M)*m+p;break;case SS.R:e=n=s[c],i=o=s[c+1],t.rect(s[c++],s[c++],s[c++],s[c++]);break;case SS.Z:t.closePath(),n=e,o=i}}}},ES.CMD=SS;var RS=2*Math.PI,zS=2*Math.PI,BS=ES.CMD,VS=2*Math.PI,GS=1e-4,FS=[-1,-1,-1],WS=[-1,-1],HS=fb.prototype.getCanvasPattern,ZS=Math.abs,US=new ES(!0);kn.prototype={constructor:kn,type:"path",__dirtyPath:!0,strokeContainThreshold:5,subPixelOptimize:!1,brush:function(t,e){var i=this.style,n=this.path||US,o=i.hasStroke(),a=i.hasFill(),r=i.fill,s=i.stroke,l=a&&!!r.colorStops,u=o&&!!s.colorStops,h=a&&!!r.image,c=o&&!!s.image;if(i.bind(t,this,e),this.setTransform(t),this.__dirty){var d;l&&(d=d||this.getBoundingRect(),this._fillGradient=i.getGradient(t,r,d)),u&&(d=d||this.getBoundingRect(),this._strokeGradient=i.getGradient(t,s,d))}l?t.fillStyle=this._fillGradient:h&&(t.fillStyle=HS.call(r,t)),u?t.strokeStyle=this._strokeGradient:c&&(t.strokeStyle=HS.call(s,t));var f=i.lineDash,p=i.lineDashOffset,g=!!t.setLineDash,m=this.getGlobalScale();if(n.setScale(m[0],m[1]),this.__dirtyPath||f&&!g&&o?(n.beginPath(t),f&&!g&&(n.setLineDash(f),n.setLineDashOffset(p)),this.buildPath(n,this.shape,!1),this.path&&(this.__dirtyPath=!1)):(t.beginPath(),this.path.rebuildPath(t)),a)if(null!=i.fillOpacity){v=t.globalAlpha;t.globalAlpha=i.fillOpacity*i.opacity,n.fill(t),t.globalAlpha=v}else n.fill(t);if(f&&g&&(t.setLineDash(f),t.lineDashOffset=p),o)if(null!=i.strokeOpacity){var v=t.globalAlpha;t.globalAlpha=i.strokeOpacity*i.opacity,n.stroke(t),t.globalAlpha=v}else n.stroke(t);f&&g&&t.setLineDash([]),null!=i.text&&(this.restoreTransform(t),this.drawRectText(t,this.getBoundingRect()))},buildPath:function(t,e,i){},createPathProxy:function(){this.path=new ES},getBoundingRect:function(){var t=this._rect,e=this.style,i=!t;if(i){var n=this.path;n||(n=this.path=new ES),this.__dirtyPath&&(n.beginPath(),this.buildPath(n,this.shape,!1)),t=n.getBoundingRect()}if(this._rect=t,e.hasStroke()){var o=this._rectWithStroke||(this._rectWithStroke=t.clone());if(this.__dirty||i){o.copy(t);var a=e.lineWidth,r=e.strokeNoScale?this.getLineScale():1;e.hasFill()||(a=Math.max(a,this.strokeContainThreshold||4)),r>1e-10&&(o.width+=a/r,o.height+=a/r,o.x-=a/r/2,o.y-=a/r/2)}return o}return t},contain:function(t,e){var i=this.transformCoordToLocal(t,e),n=this.getBoundingRect(),o=this.style;if(t=i[0],e=i[1],n.contain(t,e)){var a=this.path.data;if(o.hasStroke()){var r=o.lineWidth,s=o.strokeNoScale?this.getLineScale():1;if(s>1e-10&&(o.hasFill()||(r=Math.max(r,this.strokeContainThreshold)),Ln(a,r/s,t,e)))return!0}if(o.hasFill())return Cn(a,t,e)}return!1},dirty:function(t){null==t&&(t=!0),t&&(this.__dirtyPath=t,this._rect=null),this.__dirty=this.__dirtyText=!0,this.__zr&&this.__zr.refresh(),this.__clipTarget&&this.__clipTarget.dirty()},animateShape:function(t){return this.animate("shape",t)},attrKV:function(t,e){"shape"===t?(this.setShape(e),this.__dirtyPath=!0,this._rect=null):di.prototype.attrKV.call(this,t,e)},setShape:function(t,e){var i=this.shape;if(i){if(w(t))for(var n in t)t.hasOwnProperty(n)&&(i[n]=t[n]);else i[t]=e;this.dirty(!0)}return this},getLineScale:function(){var t=this.transform;return t&&ZS(t[0]-1)>1e-10&&ZS(t[3]-1)>1e-10?Math.sqrt(ZS(t[0]*t[3]-t[2]*t[1])):1}},kn.extend=function(t){var e=function(e){kn.call(this,e),t.style&&this.style.extendFrom(t.style,!1);var i=t.shape;if(i){this.shape=this.shape||{};var n=this.shape;for(var o in i)!n.hasOwnProperty(o)&&i.hasOwnProperty(o)&&(n[o]=i[o])}t.init&&t.init.call(this,e)};u(e,kn);for(var i in t)"style"!==i&&"shape"!==i&&(e.prototype[i]=t[i]);return e},u(kn,di);var XS=ES.CMD,jS=[[],[],[]],YS=Math.sqrt,qS=Math.atan2,KS=function(t,e){var i,n,o,a,r,s,l=t.data,u=XS.M,h=XS.C,c=XS.L,d=XS.R,f=XS.A,p=XS.Q;for(o=0,a=0;o<l.length;){switch(i=l[o++],a=o,n=0,i){case u:case c:n="1;break;case" h:n="3;break;case" p:n="2;break;case" f:var g="e[4],m=e[5],v=YS(e[0]*e[0]+e[1]*e[1]),y=YS(e[2]*e[2]+e[3]*e[3]),x=qS(-e[1]/y,e[0]/v);l[o]*=v,l[o++]+=g,l[o]*=y,l[o++]+=m,l[o++]*=v,l[o++]*=y,l[o++]+=x,l[o++]+=x,a=o+=2;break;case" d:s[0]="l[o++],s[1]=l[o++],Q(s,s,e),l[a++]=s[0],l[a++]=s[1],s[0]+=l[o++],s[1]+=l[o++],Q(s,s,e),l[a++]=s[0],l[a++]=s[1]}for(r=0;r<n;r++)(s=jS[r])[0]=l[o++],s[1]=l[o++],Q(s,s,e),l[a++]=s[0],l[a++]=s[1]}},$S=Math.sqrt,JS=Math.sin,QS=Math.cos,tM=Math.PI,eM=function(t){return" math.sqrt(t[0]*t[0]+t[1]*t[1])},im="function(t,e){return(t[0]*e[0]+t[1]*e[1])/(eM(t)*eM(e))},nM=function(t,e){return(t[0]*e[1]<t[1]*e[0]?-1:1)*Math.acos(iM(t,e))},oM=/([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,aM=/-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g,rM=function(t){di.call(this,t)};rM.prototype={constructor:rM,type:" text",brush:function(t,e){var" i="this.style;this.__dirty&&Ye(i),i.fill=i.stroke=i.shadowBlur=i.shadowColor=i.shadowOffsetX=i.shadowOffsetY=null;var" n="i.text;null!=n&&(n+=" "),ci(n,i)?(this.settransform(t),ke(this,t,n,i,null,e),this.restoretransform(t)):t.__attrcachedby="rb.NONE},getBoundingRect:function(){var" " t="this.style;if(this.__dirty&&Ye(t),!this._rect){var" e="t.text;null!=e?e+=" ":e ;var" this._rect}},u(rm,di);var sm="kn.extend({type:" circle",shape:{cx:0,cy:0,r:0},buildpath:function(t,e,i){i&&t.moveto(e.cx+e.r,e.cy),t.arc(e.cx,e.cy,e.r,0,2*math.pi,!0)}}),lm="[[" shadowblur",0],["shadowcolor","#000"],["shadowoffsetx",0],["shadowoffsety",0]],um="function(t){return""" u_.browser.ie&&u_.browser.version>=11?function(){var e,i=this.__clipPaths,n=this.style;if(i)for(var o=0;o<i.length;o++){var a="i[o],r=a&&a.shape,s=a&&a.type;if(r&&(" sector"="==s&&r.startAngle===r.endAngle||" rect"="==s&&(!r.width||!r.height))){for(l=0;l<lM.length;l++)lM[l][2]=n[lM[l][0]],n[lM[l][0]]=lM[l][1];e=!0;break}}if(t.apply(this,arguments),e)for(var""" l="0;l<lM.length;l++)n[lM[l][0]]=lM[l][2]}:t},hM=kn.extend({type:" sector",shape:{cx:0,cy:0,r0:0,r:0,startangle:0,endangle:2*math.pi,clockwise:!0},brush:um(kn.prototype.brush),buildpath:function(t,e){var" i="e.cx,n=e.cy,o=Math.max(e.r0||0,0),a=Math.max(e.r,0),r=e.startAngle,s=e.endAngle,l=e.clockwise,u=Math.cos(r),h=Math.sin(r);t.moveTo(u*o+i,h*o+n),t.lineTo(u*a+i,h*a+n),t.arc(i,n,a,r,s,!l),t.lineTo(Math.cos(s)*o+i,Math.sin(s)*o+n),0!==o&&t.arc(i,n,o,s,r,l),t.closePath()}}),cM=kn.extend({type:" ring",shape:{cx:0,cy:0,r:0,r0:0},buildpath:function(t,e){var" r="o/2;r=r<i?i:r;for(a=0;a<r;a++){var" s,l,u,h="a/(r-1)*(e?i:i-1),c=Math.floor(h),d=h-c,f=t[c%i];e?(s=t[(c-1+i)%i],l=t[(c+1)%i],u=t[(c+2)%i]):(s=t[0===c?c:c-1],l=t[c">i-2?i-1:c+1],u=t[c>i-3?i-1:c+2]);var p=d*d,g=d*p;n.push([zn(s[0],f[0],l[0],u[0],d,p,g),zn(s[1],f[1],l[1],u[1],d,p,g)])}return n},fM=function(t,e,i,n){var o,a,r,s,l=[],u=[],h=[],c=[];if(n){r=[1/0,1/0],s=[-1/0,-1/0];for(var d=0,f=t.length;d<f;d++)tt(r,r,t[d]),et(s,s,t[d]);tt(r,r,n[0]),et(s,s,n[1])}for(var d="0,f=t.length;d<f;d++){var" p="t[d];if(i)o=t[d?d-1:f-1],a=t[(d+1)%f];else{if(0===d||d===f-1){l.push(F(t[d]));continue}o=t[d-1],a=t[d+1]}U(u,a,o),Y(u,u,e);var" g="K(p,o),m=K(p,a),v=g+m;0!==v&&(g/=v,m/=v),Y(h,u,-g),Y(c,u,m);var" y="H([],p,h),x=H([],p,c);n&&(et(y,y,r),tt(y,y,s),et(x,x,r),tt(x,x,s)),l.push(y),l.push(x)}return" i&&l.push(l.shift()),l},pm="kn.extend({type:" polygon",shape:{points:null,smooth:!1,smoothconstraint:null},buildpath:function(t,e){bn(t,e,!0)}}),gm="kn.extend({type:" polyline",shape:{points:null,smooth:!1,smoothconstraint:null},style:{stroke:"#000",fill:null},buildpath:function(t,e){bn(t,e,!1)}}),mm="Math.round,vM={},yM=kn.extend({type:"rect",shape:{r:0,x:0,y:0,width:0,height:0},buildPath:function(t,e){var""" i,n,o,a;this.subpixeloptimize?(gn(vm,e,this.style),i="vM.x,n=vM.y,o=vM.width,a=vM.height,vM.r=e.r,e=vM):(i=e.x,n=e.y,o=e.width,a=e.height),e.r?je(t,e):t.rect(i,n,o,a),t.closePath()}}),xM={},_M=kn.extend({type:" line",shape:{x1:0,y1:0,x2:0,y2:0,percent:1},style:{stroke:"#000",fill:null},buildpath:function(t,e){var" i,n,o,a;this.subpixeloptimize?(vn(xm,e,this.style),i="xM.x1,n=xM.y1,o=xM.x2,a=xM.y2):(i=e.x1,n=e.y1,o=e.x2,a=e.y2);var" r="e.percent;0!==r&&(t.moveTo(i,n),r<1&&(o=i*(1-r)+o*r,a=n*(1-r)+a*r),t.lineTo(o,a))},pointAt:function(t){var" e="this.shape;return[e.x1*(1-t)+e.x2*t,e.y1*(1-t)+e.y2*t]}}),wM=[],bM=kn.extend({type:" bezier-curve",shape:{x1:0,y1:0,x2:0,y2:0,cpx1:0,cpy1:0,percent:1},style:{stroke:"#000",fill:null},buildpath:function(t,e){var" i="e.x1,n=e.y1,o=e.x2,a=e.y2,r=e.cpx1,s=e.cpy1,l=e.cpx2,u=e.cpy2,h=e.percent;0!==h&&(t.moveTo(i,n),null==l||null==u?(h<1&&(hn(i,r,o,h,wM),r=wM[1],o=wM[2],hn(n,s,a,h,wM),s=wM[1],a=wM[2]),t.quadraticCurveTo(r,s,o,a)):(h<1&&(on(i,r,l,o,h,wM),r=wM[1],l=wM[2],o=wM[3],on(n,s,u,a,h,wM),s=wM[1],u=wM[2],a=wM[3]),t.bezierCurveTo(r,s,l,u,o,a)))},pointAt:function(t){return" wn(this.shape,t,!1)},tangentat:function(t){var q(e,e)}}),sm="kn.extend({type:" arc",shape:{cx:0,cy:0,r:0,startangle:0,endangle:2*math.pi,clockwise:!0},style:{stroke:"#000",fill:null},buildpath:function(t,e){var" t="this.__dirtyPath,e=this.shape.paths,i=0;i<e.length;i++)t=t||e[i].__dirtyPath;this.__dirtyPath=t,this.__dirty=this.__dirty||t},beforeBrush:function(){this._updatePathDirty();for(var" this._updatepathdirty(),kn.prototype.getboundingrect.call(this)}}),im="function(t){this.colorStops=t||[]};IM.prototype={constructor:IM,addColorStop:function(t,e){this.colorStops.push({offset:t,color:e})}};var" tm="function(t,e,i,n,o,a){this.x=null==t?0:t,this.y=null==e?0:e,this.x2=null==i?1:i,this.y2=null==n?0:n,this.type=" linear",this.global="a||!1,IM.call(this,o)};TM.prototype={constructor:TM},u(TM,IM);var" " am="function(t,e,i,n,o){this.x=null==t?.5:t,this.y=null==e?.5:e,this.r=null==i?.5:i,this.type=" radial",this.global="o||!1,IM.call(this,n)};AM.prototype={constructor:AM},u(AM,IM),Hn.prototype.incremental=!0,Hn.prototype.clearDisplaybles=function(){this._displayables=[],this._temporaryDisplayables=[],this._cursor=0,this.dirty(),this.notClear=!1},Hn.prototype.addDisplayable=function(t,e){e?this._temporaryDisplayables.push(t):this._displayables.push(t),this.dirty()},Hn.prototype.addDisplayables=function(t,e){e=e||!1;for(var" n="this._temporaryDisplayables[i];n.beforeBrush&&n.beforeBrush(t),n.brush(t,0===i?null:this._temporaryDisplayables[i-1]),n.afterBrush&&n.afterBrush(t)}this._temporaryDisplayables=[],this.notClear=!0};var" dm="[];Hn.prototype.getBoundingRect=function(){if(!this._rect){for(var" de(1 0,1 0,-1 0),e="0;e<this._displayables.length;e++){var" this._rect},hn.prototype.contain="function(t,e){var" cm="Math.round,LM=Math.max,kM=Math.min,PM={},NM=1,OM=function(t,e){for(var" a="t[o];a.path||a.createPathProxy(),a.__dirtyPath&&a.buildPath(a.path,a.shape,!0),i.push(a.path)}var" kn(e);return r.createpathproxy(),r.buildpath="function(t){t.appendPath(i);var" rn(t,e)},makepath:un,makeimage:xn,mergepath:om,resizepath:yn,subpixeloptimizeline:qn,subpixeloptimizerect:kn,subpixeloptimize:$n,setelementhoverstyle:ao,isinemphasis:ro,sethoverstyle:co,setashoverstyletrigger:fo,setlabelstyle:po,settextstyle:go,settext:function(t,e,i){var n,o="{isRectText:!0};!1===i?n=!0:o.autoColor=i,mo(t,e,o,n)},getFont:bo,updateProps:Mo,initProps:Io,getTransform:To,applyTransform:Ao,transformDirection:Do,groupTransition:Co,clipPointsByRect:Lo,clipRectByRect:function(t,e){var">=i&&a>=o)return{x:i,y:o,width:n-i,height:a-o}},createIcon:ko,Group:tb,Image:fi,Text:rM,Circle:sM,Sector:hM,Ring:cM,Polygon:pM,Polyline:gM,Rect:yM,Line:_M,BezierCurve:bM,Arc:SM,IncrementalDisplayable:Hn,CompoundPath:MM,LinearGradient:TM,RadialGradient:AM,BoundingRect:de}),BM=["textStyle","color"],VM={getTextColor:function(t){var e=this.ecModel;return this.getShallow("color")||(!t&&e?e.get(BM):null)},getFont:function(){return bo({fontStyle:this.getShallow("fontStyle"),fontWeight:this.getShallow("fontWeight"),fontSize:this.getShallow("fontSize"),fontFamily:this.getShallow("fontFamily")},this.ecModel)},getTextRect:function(t){return ke(t,this.getFont(),this.getShallow("align"),this.getShallow("verticalAlign")||this.getShallow("baseline"),this.getShallow("padding"),this.getShallow("rich"),this.getShallow("truncateText"))}},GM=Qb([["fill","color"],["stroke","borderColor"],["lineWidth","borderWidth"],["opacity"],["shadowBlur"],["shadowOffsetX"],["shadowOffsetY"],["shadowColor"],["textPosition"],["textAlign"]]),FM={getItemStyle:function(t,e){var i=GM(this,t,e),n=this.getBorderLineDash();return n&&(i.lineDash=n),i},getBorderLineDash:function(){var t=this.get("borderType");return"solid"===t||null==t?null:"dashed"===t?[5,5]:[1,1]}},WM=h,HM=Bi();Po.prototype={constructor:Po,init:null,mergeOption:function(t){n(this.option,t,!0)},get:function(t,e){return null==t?this.option:No(this.option,this.parsePath(t),!e&&Oo(this,t))},getShallow:function(t,e){var i=this.option,n=null==i?i:i[t],o=!e&&Oo(this,t);return null==n&&o&&(n=o.getShallow(t)),n},getModel:function(t,e){var i,n=null==t?this.option:No(this.option,t=this.parsePath(t));return e=e||(i=Oo(this,t))&&i.getModel(t),new Po(n,e,this.ecModel)},isEmpty:function(){return null==this.option},restoreData:function(){},clone:function(){return new(0,this.constructor)(i(this.option))},setReadOnly:function(t){},parsePath:function(t){return"string"==typeof t&&(t=t.split(".")),t},customizeGetParent:function(t){HM(this).getParent=t},isAnimationEnabled:function(){if(!U_.node){if(null!=this.option.animation)return!!this.option.animation;if(this.parentModel)return this.parentModel.isAnimationEnabled()}}},Xi(Po),ji(Po),WM(Po,eS),WM(Po,nS),WM(Po,VM),WM(Po,FM);var ZM=0,UM=1e-4,XM=9007199254740991,jM=/^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/,YM=(Object.freeze||Object)({linearMap:zo,parsePercent:Bo,round:Vo,asc:Go,getPrecision:Fo,getPrecisionSafe:Wo,getPixelPrecision:Ho,getPercentWithPrecision:Zo,MAX_SAFE_INTEGER:XM,remRadian:Uo,isRadianAroundZero:Xo,parseDate:jo,quantity:Yo,nice:Ko,quantile:function(t,e){var i=(t.length-1)*e+1,n=Math.floor(i),o=+t[n-1],a=i-n;return a?o+a*(t[n]-o):o},reformIntervals:$o,isNumeric:Jo}),qM=L,KM=/([&<>"'])/g,$M={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},JM=["a","b","c","d","e","f","g"],QM=function(t,e){return"{"+t+(null==e?"":e)+"}"},tI=ze,eI=ke,iI=(Object.freeze||Object)({addCommas:Qo,toCamelCase:ta,normalizeCssArray:qM,encodeHTML:ea,formatTpl:ia,formatTplSimple:na,getTooltipMarker:oa,formatTime:ra,capitalFirst:sa,truncateText:tI,getTextRect:eI}),nI=d,oI=["left","right","top","bottom","width","height"],aI=[["width","left","right"],["height","top","bottom"]],rI=la,sI=(v(la,"vertical"),v(la,"horizontal"),{getBoxLayoutParams:function(){return{left:this.get("left"),top:this.get("top"),right:this.get("right"),bottom:this.get("bottom"),width:this.get("width"),height:this.get("height")}}}),lI=Bi(),uI=Po.extend({type:"component",id:"",name:"",mainType:"",subType:"",componentIndex:0,defaultOption:null,ecModel:null,dependentModels:[],uid:null,layoutMode:null,$constructor:function(t,e,i,n){Po.call(this,t,e,i,n),this.uid=Eo("ec_cpt_model")},init:function(t,e,i,n){this.mergeDefaultAndTheme(t,i)},mergeDefaultAndTheme:function(t,e){var i=this.layoutMode,o=i?pa(t):{};n(t,e.getTheme().get(this.mainType)),n(t,this.getDefaultOption()),i&&fa(t,o,i)},mergeOption:function(t,e){n(this.option,t,!0);var i=this.layoutMode;i&&fa(this.option,t,i)},optionUpdated:function(t,e){},getDefaultOption:function(){var t=lI(this);if(!t.defaultOption){for(var e=[],i=this.constructor;i;){var o=i.prototype.defaultOption;o&&e.push(o),i=i.superClass}for(var a={},r=e.length-1;r>=0;r--)a=n(a,e[r],!0);t.defaultOption=a}return t.defaultOption},getReferringComponents:function(t){return this.ecModel.queryComponents({mainType:t,index:this.get(t+"Index",!0),id:this.get(t+"Id",!0)})}});Ki(uI,{registerWhenExtend:!0}),function(t){var e={};t.registerSubTypeDefaulter=function(t,i){t=Zi(t),e[t.main]=i},t.determineSubType=function(i,n){var o=n.type;if(!o){var a=Zi(i).main;t.hasSubTypes(i)&&e[a]&&(o=e[a](n))}return o}}(uI),function(t,e){function i(t){var i={},a=[];return d(t,function(r){var s=n(i,r),u=o(s.originalDeps=e(r),t);s.entryCount=u.length,0===s.entryCount&&a.push(r),d(u,function(t){l(s.predecessor,t)<0&&s.predecessor.push(t);var e="n(i,t);l(e.successor,t)<0&&e.successor.push(r)})}),{graph:i,noEntryList:a}}function" n(t,e){return t[e]||(t[e]="{predecessor:[],successor:[]}),t[e]}function" o(t,e){var i="[];return" d(t,function(t){l(e,t)>=0&&i.push(t)}),i}t.topologicalTravel=function(t,e,n,o){function a(t){s[t].entryCount--,0===s[t].entryCount&&l.push(t)}if(t.length){var r=i(e),s=r.graph,l=r.noEntryList,u={};for(d(t,function(t){u[t]=!0});l.length;){var h=l.pop(),c=s[h],f=!!u[h];f&&(n.call(o,h,c.originalDeps.slice()),delete u[h]),d(c.successor,f?function(t){u[t]=!0,a(t)}:a)}d(u,function(){throw new Error("Circle dependency may exists")})}}}(uI,function(t){var e=[];return d(uI.getClassesByMainType(t),function(t){e=e.concat(t.prototype.dependencies||[])}),e=f(e,function(t){return Zi(t).main}),"dataset"!==t&&l(e,"dataset")<=0&&e.unshift("dataset"),e}),h(ui,si);var hi ;"undefined"!="typeof" navigator&&(hi="navigator.platform||" ");var" ci="{color:[" #c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],gradientcolor:["#f6efa6","#d88273","#bf444c"],textstyle:{fontfamily:hi.match( ^win )?"microsoft" yahei":"sans-serif",fontsize:12,fontstyle:"normal",fontweight:"normal"},blendmode:null,animation:"auto",animationduration:1e3,animationdurationupdate:300,animationeasing:"exponentialout",animationeasingupdate:"cubicout",animationthreshold:2e3,progressivethreshold:3e3,progressive:400,hoverlayerthreshold:3e3,useutc:!1},di="Bi(),fI={clearColorPalette:function(){dI(this).colorIdx=0,dI(this).colorNameMap={}},getColorFromPalette:function(t,e,i){var" n="dI(e=e||this),o=n.colorIdx||0,a=n.colorNameMap=n.colorNameMap||{};if(a.hasOwnProperty(t))return" a[t];var r="Di(this.get(" color",!0)),s="this.get(" colorlayer",!0),l="null!=i&&s?ma(s,i):r;if((l=l||r)&&l.length){var""" u="l[o];return" t&&(a[t]="u),n.colorIdx=(o+1)%l.length,u}}},pI={cartesian2d:function(t,e,i,n){var" o="t.getReferringComponents(" xaxis")[0],a="t.getReferringComponents(" yaxis")[0];e.coordsysdims="["x","y"],i.set("x",o),i.set("y",a),ya(o)&&(n.set("x",o),e.firstCategoryDimIndex=0),ya(a)&&(n.set("y",a),e.firstCategoryDimIndex=1)},singleAxis:function(t,e,i,n){var""" s="o.getComponent(" parallelaxis",t),l="r[a];i.set(l,s),ya(s)&&null==e.firstCategoryDimIndex&&(n.set(l,s),e.firstCategoryDimIndex=a)})}},gI=" original",mi="arrayRows" ,vi="objectRows" ,yi="keyedColumns" ,xi="unknown" ,_i="typedArray" ,wi="column" ,bi="row" ;xa.seriesdatatosource="function(t){return""" new xa({data:t,sourceformat:s(t)?_i:gi,fromdataset:!1})},ji(xa);var si="Bi(),MI=" \0_ec_inner",ii="Po.extend({init:function(t,e,i,n){i=i||{},this.option=null,this._theme=new" " po(i),this._optionmanager="n},setOption:function(t,e){k(!(MI" in t),"please use chart.getoption()"),this._optionmanager.setoption(t,e),this.resetoption(null)},resetoption:function(t){var e="!1,i=this._optionManager;if(!t||" recreate"="==t){var" a="i.getMediaOption(this,this._api);a.length&&d(a,function(t){this.mergeOption(t,e=!0)},this)}return" e},mergeoption:function(t){var l="Ea(o,n);e[i]=[],o.set(i,[]),d(s,function(t,n){var" component definition"),s){var instanceof u)r.name="t.keyInfo.name,r.mergeOption(s,this),r.optionUpdated(s,!1);else{var" h="a({dependentModels:l,componentIndex:n},t.keyInfo);a(r=new" u(s,this,this,h),h),r.init(s,this,this,h),r.optionupdated(null,!0)}}else r.mergeoption({},this),r.optionupdated({},!1);o.get(i)[n]="r,e[i][n]=r.option},this)," series"="==i&&za(this,o.get(" series"))},this),this._seriesindicesmap="R(this._seriesIndices=this._seriesIndices||[])},getOption:function(){var""" t="i(this.option);return" d(t,function(e,i){if(ui.hasclass(i)){for(var>=0;n--)Ei(e[n])&&e.splice(n,1);t[i]=e}}),delete t[MI],t},getTheme:function(){return this._theme},getComponent:function(t,e){var i=this._componentsMap.get(t);if(i)return i[e||0]},queryComponents:function(t){var e=t.mainType;if(!e)return[];var i=t.index,n=t.id,o=t.name,a=this._componentsMap.get(e);if(!a||!a.length)return[];var r;if(null!=i)y(i)||(i=[i]),r=g(f(i,function(t){return a[t]}),function(t){return!!t});else if(null!=n){var s=y(n);r=g(a,function(t){return s&&l(n,t.id)>=0||!s&&t.id===n})}else if(null!=o){var u=y(o);r=g(a,function(t){return u&&l(o,t.name)>=0||!u&&t.name===o})}else r=a.slice();return Ba(r,t)},findComponents:function(t){var e=t.query,i=t.mainType,n=function(t){var e=i+"Index",n=i+"Id",o=i+"Name";return!t||null==t[e]&&null==t[n]&&null==t[o]?null:{mainType:i,index:t[e],id:t[n],name:t[o]}}(e);return function(e){return t.filter?g(e,t.filter):e}(Ba(n?this.queryComponents(n):this._componentsMap.get(i),t))},eachComponent:function(t,e,i){var n=this._componentsMap;"function"==typeof t?(i=e,e=t,n.each(function(t,n){d(t,function(t,o){e.call(i,n,t,o)})})):_(t)?d(n.get(t),e,i):w(t)&&d(this.findComponents(t),e,i)},getSeriesByName:function(t){return g(this._componentsMap.get("series"),function(e){return e.name===t})},getSeriesByIndex:function(t){return this._componentsMap.get("series")[t]},getSeriesByType:function(t){return g(this._componentsMap.get("series"),function(e){return e.subType===t})},getSeries:function(){return this._componentsMap.get("series").slice()},getSeriesCount:function(){return this._componentsMap.get("series").length},eachSeries:function(t,e){d(this._seriesIndices,function(i){var n=this._componentsMap.get("series")[i];t.call(e,n,i)},this)},eachRawSeries:function(t,e){d(this._componentsMap.get("series"),t,e)},eachSeriesByType:function(t,e,i){d(this._seriesIndices,function(n){var o=this._componentsMap.get("series")[n];o.subType===t&&e.call(i,o,n)},this)},eachRawSeriesByType:function(t,e,i){return d(this.getSeriesByType(t),e,i)},isSeriesFiltered:function(t){return null==this._seriesIndicesMap.get(t.componentIndex)},getCurrentSeriesIndices:function(){return(this._seriesIndices||[]).slice()},filterSeries:function(t,e){za(this,g(this._componentsMap.get("series"),t,e))},restoreData:function(t){var e=this._componentsMap;za(this,e.get("series"));var i=[];e.each(function(t,e){i.push(e)}),uI.topologicalTravel(i,uI.getAllClassMainTypes(),function(i,n){d(e.get(i),function(e){("series"!==i||!Pa(e,t))&&e.restoreData()})})}});h(II,fI);var TI=["getDom","getZr","getWidth","getHeight","getDevicePixelRatio","dispatchAction","isDisposed","on","off","getDataURL","getConnectedDataURL","getModel","getOption","getViewOfComponentModel","getViewOfSeriesModel"],AI={};Ga.prototype={constructor:Ga,create:function(t,e){var i=[];d(AI,function(n,o){var a=n.create(t,e);i=i.concat(a||[])}),this._coordinateSystems=i},update:function(t,e){d(this._coordinateSystems,function(i){i.update&&i.update(t,e)})},getCoordinateSystems:function(){return this._coordinateSystems.slice()}},Ga.register=function(t,e){AI[t]=e},Ga.get=function(t){return AI[t]};var DI=d,CI=i,LI=f,kI=n,PI=/^(min|max)?(.+)$/;Fa.prototype={constructor:Fa,setOption:function(t,e){t&&d(Di(t.series),function(t){t&&t.data&&S(t.data)&&N(t.data)}),t=CI(t,!0);var i=this._optionBackup,n=Wa.call(this,t,e,!i);this._newBaseOption=n.baseOption,i?(Xa(i.baseOption,n.baseOption),n.timelineOptions.length&&(i.timelineOptions=n.timelineOptions),n.mediaList.length&&(i.mediaList=n.mediaList),n.mediaDefault&&(i.mediaDefault=n.mediaDefault)):this._optionBackup=n},mountOption:function(t){var e=this._optionBackup;return this._timelineOptions=LI(e.timelineOptions,CI),this._mediaList=LI(e.mediaList,CI),this._mediaDefault=CI(e.mediaDefault),this._currentMediaIndices=[],CI(t?e.baseOption:this._newBaseOption)},getTimelineOption:function(t){var e,i=this._timelineOptions;if(i.length){var n=t.getComponent("timeline");n&&(e=CI(i[n.getCurrentIndex()],!0))}return e},getMediaOption:function(t){var e=this._api.getWidth(),i=this._api.getHeight(),n=this._mediaList,o=this._mediaDefault,a=[],r=[];if(!n.length&&!o)return r;for(var s=0,l=n.length;s<l;s++)ha(n[s].query,e,i)&&a.push(s);return!a.length&&o&&(a=[-1]),a.length&&!ua(a,this._currentmediaindices)&&(r=li(a,function(t){return ci(-1="==t?o.option:n[t].option)})),this._currentMediaIndices=a,r}};var" ni="d,OI=w,EI=[" areastyle","linestyle","nodestyle","linkstyle","chordstyle","label","labelline"],ri="function(t,e){NI(Qa(t.series),function(t){OI(t)&&Ja(t)});var" " i="[" xaxis","yaxis","radiusaxis","angleaxis","singleaxis","parallelaxis","radar"];e&&i.push("valueaxis","categoryaxis","logaxis","timeaxis"),ni(i,function(e){ni(qa(t[e]),function(t){t&&(ka(t,"axislabel"),ka(t.axispointer,"label"))})}),ni(qa(t.parallel),function(t){var" e="t&&t.parallelAxisDefault;Ka(e," axislabel"),ka(e&&e.axispointer,"label")}),ni(qa(t.calendar),function(t){ya(t,"itemstyle"),ka(t,"daylabel"),ka(t,"monthlabel"),ka(t,"yearlabel")}),ni(qa(t.radar),function(t){ka(t,"name")}),ni(qa(t.geo),function(t){oi(t)&&($a(t),ni(qa(t.regions),function(t){$a(t)}))}),ni(qa(t.timeline),function(t){$a(t),ya(t,"label"),ya(t,"itemstyle"),ya(t,"controlstyle",!0);var" this._source};var fi="{arrayRows_column:{pure:!0,count:function(){return" math.max(0,this._data.length-this._source.startindex)},getitem:function(t){return this._data[t+this._source.startindex]},appenddata:lr},arrayrows_row:{pure:!0,count:function(){var t="this._data[0];return" t?math.max(0,t.length-this._source.startindex):0},getitem:function(t){t+="this._source.startIndex;for(var" o="i[n];e.push(o?o[t]:null)}return" e},appenddata:function(){throw new error('do not support appenddata when set serieslayoutby: "row".')}},objectrows:{pure:!0,count:rr,getitem:sr,appenddata:lr},keyedcolumns:{pure:!0,count:function(){var e?e.length:0},getitem:function(t){for(var e},appenddata:function(t){var n="e[i]||(e[i]=[]),o=0;o<(t||[]).length;o++)n.push(t[o])})}},original:{count:rr,getItem:sr,appendData:lr},typedArray:{persistent:!1,pure:!0,count:function(){return" this._data?this._data.length this._dimsize:0},getitem:function(t,e){t-="this._offset,e=e||[];for(var" e},appenddata:function(t){this._data="t},clean:function(){this._offset+=this.count(),this._data=null}}},WI={arrayRows:ur,objectRows:function(t,e,i,n){return" null!="i?t[n]:t},keyedColumns:ur,original:function(t,e,i,n){var" instanceof array?o[i]:o},typedarray:ur},hi="{arrayRows:hr,objectRows:function(t,e,i,n){return" cr(t[e],this._dimensioninfos[e])},keyedcolumns:hr,original:function(t,e,i,n){var array?o[n]:o,this._dimensioninfos[e])},typedarray:function(t,e,i,n){return t[n]}},zi="/\{@(.+?)\}/g,UI={getDataParams:function(t,e){var" a="this.getData(i),r=a.getItemModel(t),s=this.getDataParams(t,i);null!=n&&s.value" array&&(s.value="s.value[n]);var" l="r.get(" normal"="==e?[o||" label","formatter"]:[e,o||"label","formatter"]);return"function"="=typeof""" l?(s.status="e,l(s)):" string"="=typeof" l?ia(l,s).replace(zi,function(e,i){var 0},getrawvalue:function(t,e){return dr(this.getdata(e),t)},formattooltip:function(){}},xi="gr.prototype;XI.perform=function(t){function" e(t){return!(t>=1)&&(t=1),t}var i=this._upstream,n=t&&t.skip;if(this._dirty&&i){var o=this.context;o.data=o.outputData=i.context.outputData}this.__pipeline&&(this.__pipeline.currentTask=this);var a;this._plan&&!n&&(a=this._plan(this.context));var r=e(this._modBy),s=this._modDataCount||0,l=e(t&&t.modBy),u=t&&t.modDataCount||0;r===l&&s===u||(a="reset");var h;(this._dirty||"reset"===a)&&(this._dirty=!1,h=vr(this,n)),this._modBy=l,this._modDataCount=u;var c=t&&t.step;if(this._dueEnd=i?i._outputDueEnd:this._count?this._count(this.context):1/0,this._progress){var d=this._dueIndex,f=Math.min(null!=c?this._dueIndex+c:1/0,this._dueEnd);if(!n&&(h||d<f)){var p="this._progress;if(y(p))for(var" g="0;g<p.length;g++)mr(this,p[g],d,f,l,u);else" mr(this,p,d,f,l,u)}this._dueindex="f;var" m="null!=this._settedOutputEnd?this._settedOutputEnd:f;this._outputDueEnd=m}else" this._dueindex="this._outputDueEnd=null!=this._settedOutputEnd?this._settedOutputEnd:this._dueEnd;return" this.unfinished()};var ji="function(){function" t(){return n<i?n++:null}function e(){var t="n%r*o+Math.ceil(n/r),e=n">=i?null:t<a?t:n;return n++,e}var i,n,o,a,r,s="{reset:function(l,u,h,c){n=l,i=u,o=h,a=c,r=Math.ceil(a/o),s.next=o">1&&a>0?e:t}};return s}();XI.dirty=function(){this._dirty=!0,this._onDirty&&this._onDirty(this.context)},XI.unfinished=function(){return this._progress&&this._dueIndex<this._dueend},xi.pipe=function(t){(this._downstream!==t||this._dirty)&&(this._downstream=t,t._upstream=this,t.dirty())},xi.dispose=function(){this._disposed||(this._upstream&&(this._upstream._downstream=null),this._downstream&&(this._downstream._upstream=null),this._dirty=!1,this._disposed=!0)},xi.getupstream=function(){return this._upstream},xi.getdownstream="function(){return" this._downstream},xi.setoutputend="function(t){this._outputDueEnd=this._settedOutputEnd=t};var" yi="Bi(),qI=uI.extend({type:" series.__base__",seriesindex:0,coordinatesystem:null,defaultoption:null,legenddataprovider:null,visualcoloraccesspath:"itemstyle.color",layoutmode:null,init:function(t,e,i,n){this.seriesindex="this.componentIndex,this.dataTask=pr({count:_r,reset:wr}),this.dataTask.context={model:this},this.mergeDefaultAndTheme(t,i),Sa(this);var" " o="this.getInitialData(t,i);Sr(o,this),this.dataTask.context.data=o,YI(this).dataBeforeProcessed=o,yr(this)},mergeDefaultAndTheme:function(t,e){var" i="this.layoutMode,o=i?pa(t):{},a=this.subType;uI.hasClass(a)&&(a+=" series"),n(t,e.gettheme().get(this.subtype)),n(t,this.getdefaultoption()),ci(t,"label",["show"]),this.filldatatextstyle(t.data),i&&fa(t,o,i)},mergeoption:function(t,e){t="n(this.option,t,!0),this.fillDataTextStyle(t.data);var" e="[" show"],i="0;i<t.length;i++)t[i]&&t[i].label&&Ci(t[i]," label",e)},getinitialdata:function(){},appenddata:function(t){this.getrawdata().appenddata(t.data)},getdata:function(t){var"" null="=t?i:i.getLinkedData(t)}return" yi(this).data},setdata:function(t){var wa(this)},getrawdata:function(){return yi(this).databeforeprocessed},getbaseaxis:function(){var t="this.coordinateSystem;return" t&&t.getbaseaxis&&t.getbaseaxis()},formattooltip:function(t,e,i,n){function o(t){return{rendermode:n,content:ea(qo(t)),style:l}}var a="this,r=" html"="==(n=n||" html")?"<br "">":"\n",s="richText"===n,l={},u=0,h=this.getData(),c=h.mapDimension("defaultedTooltip",!0),f=c.length,g=this.getRawValue(t),m=y(g),v=h.getItemVisual(t,"color");w(v)&&v.colorStops&&(v=(v.colorStops[0]||{}).color),v=v||"transparent";var x=(f>1||m&&!f?function(i){function o(t,i){var o=h.getDimensionInfo(i);if(o&&!1!==o.otherDims.tooltip){var c=o.type,d="sub"+a.seriesIndex+"at"+u,p=oa({color:v,type:"subItem",renderMode:n,markerId:d}),g="string"==typeof p?p:p.content,m=(r?g+ea(o.displayName||"-")+": ":"")+ea("ordinal"===c?t+"":"time"===c?e?"":ra("yyyy/MM/dd hh:mm:ss",t):Qo(t));m&&f.push(m),s&&(l[d]=v,++u)}}var r=p(i,function(t,e,i){var n=h.getDimensionInfo(i);return t|=n&&!1!==n.tooltip&&null!=n.displayName},0),f=[];c.length?d(c,function(e){o(dr(h,t,e),e)}):d(i,o);var g=r?s?"\n":"<br>":"",m=g+f.join(g||", ");return{renderMode:n,content:m,style:l}}(g):o(f?dr(h,t,c[0]):m?g[0]:g)).content,_=a.seriesIndex+"at"+u,b=oa({color:v,type:"item",renderMode:n,markerId:_});l[_]=v,++u;var S=h.getName(t),M=this.name;Oi(this)||(M=""),M=M?ea(M)+(e?": ":r):"";var I="string"==typeof b?b:b.content;return{html:e?I+M+x:M+I+(S?ea(S)+": "+x:x),markers:l}},isAnimationEnabled:function(){if(U_.node)return!1;var t=this.getShallow("animation");return t&&this.getData().count()>this.getShallow("animationThreshold")&&(t=!1),t},restoreData:function(){this.dataTask.dirty()},getColorFromPalette:function(t,e,i){var n=this.ecModel,o=fI.getColorFromPalette.call(this,t,e,i);return o||(o=n.getColorFromPalette(t,e,i)),o},coordDimToDataDim:function(t){return this.getRawData().mapDimension(t,!0)},getProgressive:function(){return this.get("progressive")},getProgressiveThreshold:function(){return this.get("progressiveThreshold")},getAxisTooltipData:null,getTooltipPosition:null,pipeTask:null,preventIncremental:null,pipelineContext:null});h(qI,UI),h(qI,fI);var KI=function(){this.group=new tb,this.uid=Eo("viewComponent")};KI.prototype={constructor:KI,init:function(t,e){},render:function(t,e,i,n){},dispose:function(){},filterForExposedEvent:null};var $I=KI.prototype;$I.updateView=$I.updateLayout=$I.updateVisual=function(t,e,i,n){},Xi(KI),Ki(KI,{registerWhenExtend:!0});var JI=function(){var t=Bi();return function(e){var i=t(e),n=e.pipelineContext,o=i.large,a=i.progressiveRender,r=i.large=n.large,s=i.progressiveRender=n.progressiveRender;return!!(o^r||a^s)&&"reset"}},QI=Bi(),tT=JI();Tr.prototype={type:"chart",init:function(t,e){},render:function(t,e,i,n){},highlight:function(t,e,i,n){Dr(t.getData(),n,"emphasis")},downplay:function(t,e,i,n){Dr(t.getData(),n,"normal")},remove:function(t,e){this.group.removeAll()},dispose:function(){},incrementalPrepareRender:null,incrementalRender:null,updateTransform:null,filterForExposedEvent:null};var eT=Tr.prototype;eT.updateView=eT.updateLayout=eT.updateVisual=function(t,e,i,n){this.render(t,e,i,n)},Xi(Tr),Ki(Tr,{registerWhenExtend:!0}),Tr.markUpdateMethod=function(t,e){QI(t).updateMethod=e};var iT={incrementalPrepareRender:{progress:function(t,e){e.view.incrementalRender(t,e.model,e.ecModel,e.api,e.payload)}},render:{forceFirstProgress:!0,progress:function(t,e){e.view.render(e.model,e.ecModel,e.api,e.payload)}}},nT="\0__throttleOriginMethod",oT="\0__throttleRate",aT="\0__throttleType",rT={createOnAllSeries:!0,performRawSeries:!0,reset:function(t,e){var i=t.getData(),n=(t.visualColorAccessPath||"itemStyle.color").split("."),o=t.get(n)||t.getColorFromPalette(t.name,null,e.getSeriesCount());if(i.setVisual("color",o),!e.isSeriesFiltered(t)){"function"!=typeof o||o instanceof IM||i.each(function(e){i.setItemVisual(e,"color",o(t.getDataParams(e)))});return{dataEach:i.hasItemOption?function(t,e){var i=t.getItemModel(e).get(n,!0);null!=i&&t.setItemVisual(e,"color",i)}:null}}}},sT={toolbox:{brush:{title:{rect:"矩形选择",polygon:"圈选",lineX:"横向选择",lineY:"纵向选择",keep:"保持选择",clear:"清除选择"}},dataView:{title:"数据视图",lang:["数据视图","关闭","刷新"]},dataZoom:{title:{zoom:"区域缩放",back:"区域缩放还原"}},magicType:{title:{line:"切换为折线图",bar:"切换为柱状图",stack:"切换为堆叠",tiled:"切换为平铺"}},restore:{title:"还原"},saveAsImage:{title:"保存为图片",lang:["右键另存为图片"]}},series:{typeNames:{pie:"饼图",bar:"柱状图",line:"折线图",scatter:"散点图",effectScatter:"涟漪散点图",radar:"雷达图",tree:"树图",treemap:"矩形树图",boxplot:"箱型图",candlestick:"K线图",k:"K线图",heatmap:"热力图",map:"地图",parallel:"平行坐标图",lines:"线图",graph:"关系图",sankey:"桑基图",funnel:"漏斗图",gauge:"仪表盘图",pictorialBar:"象形柱图",themeRiver:"主题河流图",sunburst:"旭日图"}},aria:{general:{withTitle:"这是一个关于“{title}”的图表。",withoutTitle:"这是一个图表，"},series:{single:{prefix:"",withName:"图表类型是{seriesType}，表示{seriesName}。",withoutName:"图表类型是{seriesType}。"},multiple:{prefix:"它由{seriesCount}个图表系列组成。",withName:"第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",withoutName:"第{seriesId}个系列是一个{seriesType}，",separator:{middle:"；",end:"。"}}},data:{allData:"其数据是——",partialData:"其中，前{displayCnt}项是——",withName:"{name}的数据是{value}",withoutName:"{value}",separator:{middle:"，",end:""}}}},lT=function(t,e){function i(t,e){if("string"!=typeof t)return t;var i=t;return d(e,function(t,e){i=i.replace(new RegExp("\\{\\s*"+e+"\\s*\\}","g"),t)}),i}function n(t){var e=a.get(t);if(null==e){for(var i=t.split("."),n=sT.aria,o=0;o<i.length;++o)n=n[i[o]];return n}return e}function o(t){return st.series.typenames[t]||"自定义图"}var a="e.getModel(" aria");if(a.get("show"))if(a.get("description"))t.setattribute("aria-label",a.get("description"));else{var" r="0;e.eachSeries(function(t,e){++r},this);var" s,l="a.get(" data.maxcount")||10,u="a.get(" series.maxcount")||10,h="Math.min(r,u);if(!(r<1)){var""" c="function(){var" t="e.getModel(" title").option;return" t&&t.length&&(t="t[0]),t&&t.text}();s=c?i(n(" general.withtitle"),{title:c}):n("general.withouttitle");var" f="[];s+=i(n(r">1?"series.multiple.prefix":"series.single.prefix"),{seriesCount:r}),e.eachSeries(function(t,e){if(e<h){var a,s="t.get(" name"),u="series." +(r">1?"multiple":"single")+".";a=i(a=n(s?u+"withName":u+"withoutName"),{seriesId:t.seriesIndex,seriesName:t.get("name"),seriesType:o(t.subType)});var c=t.getData();window.data=c,c.count()>l?a+=i(n("data.partialData"),{displayCnt:l}):a+=n("data.allData");for(var d=[],p=0;p<c.count();p++)if(p<l){var g="c.getName(p),m=dr(c,p);d.push(i(n(g?" data.withname":"data.withoutname"),{name:g,value:m}))}a+="d.join(n(" data.separator.middle"))+n("data.separator.end"),f.push(a)}}),s+="f.join(n("series.multiple.separator.middle"))+n("series.multiple.separator.end"),t.setAttribute("aria-label",s)}}},uT=Math.PI,hT=Or.prototype;hT.restoreData=function(t,e){t.restoreData(e),this._stageTaskMap.each(function(t){var""" e="t.overallTask;e&&e.dirty()})},hT.getPerformArgs=function(t,e){if(t.__pipeline){var" i="this._pipelineMap.get(t.__pipeline.id),n=i.context,o=!e&&i.progressiveEnabled&&(!n||n.progressiveRender)&&t.__idxInPipeline">i.blockIndex?i.step:null,a=n&&n.modDataCount;return{step:o,modBy:null!=a?Math.ceil(a/o):null,modDataCount:a}}},hT.getPipeline=function(t){return this._pipelineMap.get(t)},hT.updateStreamModes=function(t,e){var i=this._pipelineMap.get(t.uid),n=t.getData().count(),o=i.progressiveEnabled&&e.incrementalPrepareRender&&n>=i.threshold,a=t.get("large")&&n>=t.get("largeThreshold"),r="mod"===t.get("progressiveChunkMode")?n:null;t.pipelineContext=i.context={progressiveRender:o,modDataCount:r,large:a}},hT.restorePipelines=function(t){var e=this,i=e._pipelineMap=R();t.eachSeries(function(t){var n=t.getProgressive(),o=t.uid;i.set(o,{id:o,head:null,tail:null,threshold:t.getProgressiveThreshold(),progressiveEnabled:n&&!(t.preventIncremental&&t.preventIncremental()),blockIndex:-1,step:Math.round(n||700),count:0}),Xr(e,t,t.dataTask)})},hT.prepareStageTasks=function(){var t=this._stageTaskMap,e=this.ecInstance.getModel(),i=this.api;d(this._allHandlers,function(n){var o=t.get(n.uid)||t.set(n.uid,[]);n.reset&&Rr(this,n,o,e,i),n.overallReset&&zr(this,n,o,e,i)},this)},hT.prepareView=function(t,e,i,n){var o=t.renderTask,a=o.context;a.model=e,a.ecModel=i,a.api=n,o.__block=!t.incrementalPrepareRender,Xr(this,e,o)},hT.performDataProcessorTasks=function(t,e){Er(this,this._dataProcessorHandlers,t,e,{block:!0})},hT.performVisualTasks=function(t,e,i){Er(this,this._visualHandlers,t,e,i)},hT.performSeriesTasks=function(t){var e;t.eachSeries(function(t){e|=t.dataTask.perform()}),this.unfinished|=e},hT.plan=function(){this._pipelineMap.each(function(t){var e=t.tail;do{if(e.__block){t.blockIndex=e.__idxInPipeline;break}e=e.getUpstream()}while(e)})};var cT=hT.updatePayload=function(t,e){"remain"!==e&&(t.context.payload=e)},dT=Zr(0);Or.wrapStageHandler=function(t,e){return x(t)&&(t={overallReset:t,seriesType:jr(t)}),t.uid=Eo("stageHandler"),e&&(t.visualType=e),t};var fT,pT={},gT={};Yr(pT,II),Yr(gT,Va),pT.eachSeriesByType=pT.eachRawSeriesByType=function(t){fT=t},pT.eachComponent=function(t){"series"===t.mainType&&t.subType&&(fT=t.subType)};var mT=["#37A2DA","#32C5E9","#67E0E3","#9FE6B8","#FFDB5C","#ff9f7f","#fb7293","#E062AE","#E690D1","#e7bcf3","#9d96f5","#8378EA","#96BFFF"],vT={color:mT,colorLayer:[["#37A2DA","#ffd85c","#fd7b5f"],["#37A2DA","#67E0E3","#FFDB5C","#ff9f7f","#E062AE","#9d96f5"],["#37A2DA","#32C5E9","#9FE6B8","#FFDB5C","#ff9f7f","#fb7293","#e7bcf3","#8378EA","#96BFFF"],mT]},yT=["#dd6b66","#759aa0","#e69d87","#8dc1a9","#ea7e53","#eedd78","#73a373","#73b9bc","#7289ab","#91ca8c","#f49f42"],xT={color:yT,backgroundColor:"#333",tooltip:{axisPointer:{lineStyle:{color:"#eee"},crossStyle:{color:"#eee"}}},legend:{textStyle:{color:"#eee"}},textStyle:{color:"#eee"},title:{textStyle:{color:"#eee"}},toolbox:{iconStyle:{normal:{borderColor:"#eee"}}},dataZoom:{textStyle:{color:"#eee"}},visualMap:{textStyle:{color:"#eee"}},timeline:{lineStyle:{color:"#eee"},itemStyle:{normal:{color:yT[1]}},label:{normal:{textStyle:{color:"#eee"}}},controlStyle:{normal:{color:"#eee",borderColor:"#eee"}}},timeAxis:{axisLine:{lineStyle:{color:"#eee"}},axisTick:{lineStyle:{color:"#eee"}},axisLabel:{textStyle:{color:"#eee"}},splitLine:{lineStyle:{type:"dashed",color:"#aaa"}},splitArea:{areaStyle:{color:"#eee"}}},logAxis:{axisLine:{lineStyle:{color:"#eee"}},axisTick:{lineStyle:{color:"#eee"}},axisLabel:{textStyle:{color:"#eee"}},splitLine:{lineStyle:{type:"dashed",color:"#aaa"}},splitArea:{areaStyle:{color:"#eee"}}},valueAxis:{axisLine:{lineStyle:{color:"#eee"}},axisTick:{lineStyle:{color:"#eee"}},axisLabel:{textStyle:{color:"#eee"}},splitLine:{lineStyle:{type:"dashed",color:"#aaa"}},splitArea:{areaStyle:{color:"#eee"}}},categoryAxis:{axisLine:{lineStyle:{color:"#eee"}},axisTick:{lineStyle:{color:"#eee"}},axisLabel:{textStyle:{color:"#eee"}},splitLine:{lineStyle:{type:"dashed",color:"#aaa"}},splitArea:{areaStyle:{color:"#eee"}}},line:{symbol:"circle"},graph:{color:yT},gauge:{title:{textStyle:{color:"#eee"}}},candlestick:{itemStyle:{normal:{color:"#FD1050",color0:"#0CF49B",borderColor:"#FD1050",borderColor0:"#0CF49B"}}}};xT.categoryAxis.splitLine.show=!1,uI.extend({type:"dataset",defaultOption:{seriesLayoutBy:wI,sourceHeader:null,dimensions:null,source:null},optionUpdated:function(){_a(this)}}),KI.extend({type:"dataset"});var _T=kn.extend({type:"ellipse",shape:{cx:0,cy:0,rx:0,ry:0},buildPath:function(t,e){var i=.5522848,n=e.cx,o=e.cy,a=e.rx,r=e.ry,s=a*i,l=r*i;t.moveTo(n-a,o),t.bezierCurveTo(n-a,o-l,n-s,o-r,n,o-r),t.bezierCurveTo(n+s,o-r,n+a,o-l,n+a,o),t.bezierCurveTo(n+a,o+l,n+s,o+r,n,o+r),t.bezierCurveTo(n-s,o+r,n-a,o+l,n-a,o),t.closePath()}}),wT=/[\s,]+/;Kr.prototype.parse=function(t,e){e=e||{};var i=qr(t);if(!i)throw new Error("Illegal svg");var n=new tb;this._root=n;var o=i.getAttribute("viewBox")||"",a=parseFloat(i.getAttribute("width")||e.width),r=parseFloat(i.getAttribute("height")||e.height);isNaN(a)&&(a=null),isNaN(r)&&(r=null),ts(i,n,null,!0);for(var s=i.firstChild;s;)this._parseNode(s,n),s=s.nextSibling;var l,u;if(o){var h=P(o).split(wT);h.length>=4&&(l={x:parseFloat(h[0]||0),y:parseFloat(h[1]||0),width:parseFloat(h[2]),height:parseFloat(h[3])})}if(l&&null!=a&&null!=r&&(u=os(l,a,r),!e.ignoreViewBox)){var c=n;(n=new tb).add(c),c.scale=u.scale.slice(),c.position=u.position.slice()}return e.ignoreRootClip||null==a||null==r||n.setClipPath(new yM({shape:{x:0,y:0,width:a,height:r}})),{root:n,width:a,height:r,viewBoxRect:l,viewBoxTransform:u}},Kr.prototype._parseNode=function(t,e){var i=t.nodeName.toLowerCase();"defs"===i?this._isDefine=!0:"text"===i&&(this._isText=!0);var n;if(this._isDefine){if(r=ST[i]){var o=r.call(this,t),a=t.getAttribute("id");a&&(this._defs[a]=o)}}else{var r=bT[i];r&&(n=r.call(this,t,e),e.add(n))}for(var s=t.firstChild;s;)1===s.nodeType&&this._parseNode(s,n),3===s.nodeType&&this._isText&&this._parseText(s,n),s=s.nextSibling;"defs"===i?this._isDefine=!1:"text"===i&&(this._isText=!1)},Kr.prototype._parseText=function(t,e){if(1===t.nodeType){var i=t.getAttribute("dx")||0,n=t.getAttribute("dy")||0;this._textX+=parseFloat(i),this._textY+=parseFloat(n)}var o=new rM({style:{text:t.textContent,transformText:!0},position:[this._textX||0,this._textY||0]});Jr(e,o),ts(t,o,this._defs);var a=o.style.fontSize;a&&a<9&&(o.style.fontsize=9,o.scale=o.scale||[1,1],o.scale[0]*=a 9,o.scale[1]*="a/9);var" r="o.getBoundingRect();return" this._textx+="r.width,e.add(o),o};var" bt="{g:function(t,e){var" i="new" tb;return jr(e,i),ts(t,i,this._defs),i},rect:function(t,e){var ym;return jr(e,i),ts(t,i,this._defs),i.setshape({x:parsefloat(t.getattribute("x")||0),y:parsefloat(t.getattribute("y")||0),width:parsefloat(t.getattribute("width")||0),height:parsefloat(t.getattribute("height")||0)}),i},circle:function(t,e){var sm;return jr(e,i),ts(t,i,this._defs),i.setshape({cx:parsefloat(t.getattribute("cx")||0),cy:parsefloat(t.getattribute("cy")||0),r:parsefloat(t.getattribute("r")||0)}),i},line:function(t,e){var _m;return jr(e,i),ts(t,i,this._defs),i.setshape({x1:parsefloat(t.getattribute("x1")||0),y1:parsefloat(t.getattribute("y1")||0),x2:parsefloat(t.getattribute("x2")||0),y2:parsefloat(t.getattribute("y2")||0)}),i},ellipse:function(t,e){var _t;return jr(e,i),ts(t,i,this._defs),i.setshape({cx:parsefloat(t.getattribute("cx")||0),cy:parsefloat(t.getattribute("cy")||0),rx:parsefloat(t.getattribute("rx")||0),ry:parsefloat(t.getattribute("ry")||0)}),i},polygon:function(t,e){var n="new" pm({shape:{points:i||[]}});return jr(e,n),ts(t,n,this._defs),n},polyline:function(t,e){var kn;jr(e,i),ts(t,i,this._defs);var n&&(n="Qr(n)),new" gm({shape:{points:n||[]}})},image:function(t,e){var fi;return jr(e,i),ts(t,i,this._defs),i.setstyle({image:t.getattribute("xlink:href"),x:t.getattribute("x"),y:t.getattribute("y"),width:t.getattribute("width"),height:t.getattribute("height")}),i},text:function(t,e){var jr(e,r),ts(t,r,this._defs),r},tspan:function(t,e){var o="t.getAttribute(" dx")||0,a="t.getAttribute(" dy")||0,r="new""" jr(e,r),ts(t,r,this._defs),this._textx+="o,this._textY+=a,r},path:function(t,e){var" jr(e,i),ts(t,i,this._defs),i}},st="{lineargradient:function(t){var" e="parseInt(t.getAttribute(" x1")||0,10),i="parseInt(t.getAttribute(" y1")||0,10),n="parseInt(t.getAttribute("x2")||10,10),o=parseInt(t.getAttribute("y2")||0,10),a=new""" tm(e,i,n,o);return $r(t,a),a},radialgradient:function(t){}},mt="{fill:" fill",stroke:"stroke","stroke-width":"linewidth",opacity:"opacity","fill-opacity":"fillopacity","stroke-opacity":"strokeopacity","stroke-dasharray":"linedash","stroke-dashoffset":"linedashoffset","stroke-linecap":"linecap","stroke-linejoin":"linejoin","stroke-miterlimit":"miterlimit","font-family":"fontfamily","font-size":"fontsize","font-style":"fontstyle","font-weight":"fontweight","text-align":"textalign","alignment-baseline":"textbaseline"},it="/url\(\s*#(.*?)\)/,TT=/(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.e,]*)\)/g,AT=/([^\s:;]+)\s*:\s*([^:;]+)/g,DT=R(),CT={registerMap:function(t,e,i){var" " n;return y(e)?n="e:e.svg?n=[{type:" svg",source:e.svg,specialareas:e.specialareas}]:(e.geojson&&!e.features&&(i="e.specialAreas,e=e.geoJson),n=[{type:" geojson",source:e,specialareas:i}]),d(n,function(t){var"" dt.get(t)}},lt="{geoJSON:function(t){var" json&&json.parse?json.parse(e):new function("return ("+e+");")():e},svg:function(t){t.svgxml="qr(t.source)}},kT=k,PT=d,NT=x,OT=w,ET=uI.parseClassType,RT={zrender:" 4.0.6"},zt="1e3,BT=1e3,VT=3e3,GT={PROCESSOR:{FILTER:zT,STATISTIC:5e3},VISUAL:{LAYOUT:BT,GLOBAL:2e3,CHART:VT,COMPONENT:4e3,BRUSH:5e3}},FT=" __flaginmainprocess",wt="__optionUpdated" ,ht="/^[a-zA-Z0-9_]+$/;ss.prototype.on=rs("on"),ss.prototype.off=rs("off"),ss.prototype.one=rs("one"),h(ss,fw);var""" zt="ls.prototype;ZT._onframe=function(){if(!this._disposed){var" t="this._scheduler;if(this[WT]){var" if(t.unfinished){var date;t.performseriestasks(n),t.performdataprocessortasks(n),ds(this,n),t.performvisualtasks(n),ws(this,this._model,0,"remain"),i-="+new" date-o}while(i>0&&t.unfinished);t.unfinished||this._zr.flush()}}},ZT.getDom=function(){return this._dom},ZT.getZr=function(){return this._zr},ZT.setOption=function(t,e,i){var n;if(OT(e)&&(i=e.lazyUpdate,n=e.silent,e=e.notMerge),this[FT]=!0,!this._model||e){var o=new Fa(this._api),a=this._theme,r=this._model=new II(null,null,a,o);r.scheduler=this._scheduler,r.init(null,null,a,o)}this._model.setOption(t,KT),i?(this[WT]={silent:n},this[FT]=!1):(hs(this),UT.update.call(this),this._zr.flush(),this[WT]=!1,this[FT]=!1,ps.call(this,n),gs.call(this,n))},ZT.setTheme=function(){console.error("ECharts#setTheme() is DEPRECATED in ECharts 3.0")},ZT.getModel=function(){return this._model},ZT.getOption=function(){return this._model&&this._model.getOption()},ZT.getWidth=function(){return this._zr.getWidth()},ZT.getHeight=function(){return this._zr.getHeight()},ZT.getDevicePixelRatio=function(){return this._zr.painter.dpr||window.devicePixelRatio||1},ZT.getRenderedCanvas=function(t){if(U_.canvasSupported)return(t=t||{}).pixelRatio=t.pixelRatio||1,t.backgroundColor=t.backgroundColor||this._model.get("backgroundColor"),this._zr.painter.getRenderedCanvas(t)},ZT.getSvgDataUrl=function(){if(U_.svgSupported){var t=this._zr;return d(t.storage.getDisplayList(),function(t){t.stopAnimation(!0)}),t.painter.pathToDataUrl()}},ZT.getDataURL=function(t){var e=(t=t||{}).excludeComponents,i=this._model,n=[],o=this;PT(e,function(t){i.eachComponent({mainType:t},function(t){var e=o._componentsMap[t.__viewId];e.group.ignore||(n.push(e),e.group.ignore=!0)})});var a="svg"===this._zr.painter.getType()?this.getSvgDataUrl():this.getRenderedCanvas(t).toDataURL("image/"+(t&&t.type||"png"));return PT(n,function(t){t.group.ignore=!1}),a},ZT.getConnectedDataURL=function(t){if(U_.canvasSupported){var e=this.group,n=Math.min,o=Math.max;if(iA[e]){var a=1/0,r=1/0,s=-1/0,l=-1/0,u=[],h=t&&t.pixelRatio||1;d(eA,function(h,c){if(h.group===e){var d=h.getRenderedCanvas(i(t)),f=h.getDom().getBoundingClientRect();a=n(f.left,a),r=n(f.top,r),s=o(f.right,s),l=o(f.bottom,l),u.push({dom:d,left:f.left,top:f.top})}});var c=(s*=h)-(a*=h),f=(l*=h)-(r*=h),p=iw();p.width=c,p.height=f;var g=Ii(p);return PT(u,function(t){var e=new fi({style:{x:t.left*h-a,y:t.top*h-r,image:t.dom}});g.add(e)}),g.refreshImmediately(),p.toDataURL("image/"+(t&&t.type||"png"))}return this.getDataURL(t)}},ZT.convertToPixel=v(us,"convertToPixel"),ZT.convertFromPixel=v(us,"convertFromPixel"),ZT.containPixel=function(t,e){var i;return t=Vi(this._model,t),d(t,function(t,n){n.indexOf("Models")>=0&&d(t,function(t){var o=t.coordinateSystem;if(o&&o.containPoint)i|=!!o.containPoint(e);else if("seriesModels"===n){var a=this._chartsMap[t.__viewId];a&&a.containPoint&&(i|=a.containPoint(e,t))}},this)},this),!!i},ZT.getVisual=function(t,e){var i=(t=Vi(this._model,t,{defaultMainType:"series"})).seriesModel.getData(),n=t.hasOwnProperty("dataIndexInside")?t.dataIndexInside:t.hasOwnProperty("dataIndex")?i.indexOfRawIndex(t.dataIndex):null;return null!=n?i.getItemVisual(n,e):i.getVisual(e)},ZT.getViewOfComponentModel=function(t){return this._componentsMap[t.__viewId]},ZT.getViewOfSeriesModel=function(t){return this._chartsMap[t.__viewId]};var UT={prepareAndUpdate:function(t){hs(this),UT.update.call(this,t)},update:function(t){var e=this._model,i=this._api,n=this._zr,o=this._coordSysMgr,a=this._scheduler;if(e){a.restoreData(e,t),a.performSeriesTasks(e),o.create(e,i),a.performDataProcessorTasks(e,t),ds(this,e),o.update(e,i),ys(e),a.performVisualTasks(e,t),xs(this,e,i,t);var r=e.get("backgroundColor")||"transparent";if(U_.canvasSupported)n.setBackgroundColor(r);else{var s=Gt(r);r=qt(s,"rgb"),0===s[3]&&(r="transparent")}bs(e,i)}},updateTransform:function(t){var e=this._model,i=this,n=this._api;if(e){var o=[];e.eachComponent(function(a,r){var s=i.getViewOfComponentModel(r);if(s&&s.__alive)if(s.updateTransform){var l=s.updateTransform(r,e,n,t);l&&l.update&&o.push(s)}else o.push(s)});var a=R();e.eachSeries(function(o){var r=i._chartsMap[o.__viewId];if(r.updateTransform){var s=r.updateTransform(o,e,n,t);s&&s.update&&a.set(o.uid,1)}else a.set(o.uid,1)}),ys(e),this._scheduler.performVisualTasks(e,t,{setDirty:!0,dirtyMap:a}),ws(i,e,0,t,a),bs(e,this._api)}},updateView:function(t){var e=this._model;e&&(Tr.markUpdateMethod(t,"updateView"),ys(e),this._scheduler.performVisualTasks(e,t,{setDirty:!0}),xs(this,this._model,this._api,t),bs(e,this._api))},updateVisual:function(t){UT.update.call(this,t)},updateLayout:function(t){UT.update.call(this,t)}};ZT.resize=function(t){this._zr.resize(t);var e=this._model;if(this._loadingFX&&this._loadingFX.resize(),e){var i=e.resetOption("media"),n=t&&t.silent;this[FT]=!0,i&&hs(this),UT.update.call(this),this[FT]=!1,ps.call(this,n),gs.call(this,n)}},ZT.showLoading=function(t,e){if(OT(t)&&(e=t,t=""),t=t||"default",this.hideLoading(),tA[t]){var i=tA[t](this._api,e),n=this._zr;this._loadingFX=i,n.add(i)}},ZT.hideLoading=function(){this._loadingFX&&this._zr.remove(this._loadingFX),this._loadingFX=null},ZT.makeActionFromEvent=function(t){var e=a({},t);return e.type=YT[t.type],e},ZT.dispatchAction=function(t,e){OT(e)||(e={silent:!!e}),jT[t.type]&&this._model&&(this[FT]?this._pendingActions.push(t):(fs.call(this,t,e.silent),e.flush?this._zr.flush(!0):!1!==e.flush&&U_.browser.weChat&&this._throttledZrFlush(),ps.call(this,e.silent),gs.call(this,e.silent)))},ZT.appendData=function(t){var e=t.seriesIndex;this.getModel().getSeriesByIndex(e).appendData(t),this._scheduler.unfinished=!0},ZT.on=rs("on"),ZT.off=rs("off"),ZT.one=rs("one");var XT=["click","dblclick","mouseover","mouseout","mousemove","mousedown","mouseup","globalout","contextmenu"];ZT._initEvents=function(){PT(XT,function(t){var e=function(e){var i,n=this.getModel(),o=e.target;if("globalout"===t)i={};else if(o&&null!=o.dataIndex){var r=o.dataModel||n.getSeriesByIndex(o.seriesIndex);i=r&&r.getDataParams(o.dataIndex,o.dataType,o)||{}}else o&&o.eventData&&(i=a({},o.eventData));if(i){var s=i.componentType,l=i.componentIndex;"markLine"!==s&&"markPoint"!==s&&"markArea"!==s||(s="series",l=i.seriesIndex);var u=s&&null!=l&&n.getComponent(s,l),h=u&&this["series"===u.mainType?"_chartsMap":"_componentsMap"][u.__viewId];i.event=e,i.type=t,this._ecEventProcessor.eventInfo={targetEl:o,packedEvent:i,model:u,view:h},this.trigger(t,i)}};e.zrEventfulCallAtLast=!0,this._zr.on(t,e,this)},this),PT(YT,function(t,e){this._messageCenter.on(e,function(t){this.trigger(e,t)},this)},this)},ZT.isDisposed=function(){return this._disposed},ZT.clear=function(){this.setOption({series:[]},!0)},ZT.dispose=function(){if(!this._disposed){this._disposed=!0,Fi(this.getDom(),aA,"");var t=this._api,e=this._model;PT(this._componentsViews,function(i){i.dispose(e,t)}),PT(this._chartsViews,function(i){i.dispose(e,t)}),this._zr.dispose(),delete eA[this.id]}},h(ls,fw),As.prototype={constructor:As,normalizeQuery:function(t){var e={},i={},n={};if(_(t)){var o=ET(t);e.mainType=o.main||null,e.subType=o.sub||null}else{var a=["Index","Name","Id"],r={name:1,dataIndex:1,dataType:1};d(t,function(t,o){for(var s=!1,l=0;l<a.length;l++){var u="a[l],h=o.lastIndexOf(u);if(h">0&&h===o.length-u.length){var c=o.slice(0,h);"data"!==c&&(e.mainType=c,e[u.toLowerCase()]=t,s=!0)}}r.hasOwnProperty(o)&&(i[o]=t,s=!0),s||(n[o]=t)})}return{cptQuery:e,dataQuery:i,otherQuery:n}},filter:function(t,e,i){function n(t,e,i,n){return null==t[i]||e[n||i]===t[i]}var o=this.eventInfo;if(!o)return!0;var a=o.targetEl,r=o.packedEvent,s=o.model,l=o.view;if(!s||!l)return!0;var u=e.cptQuery,h=e.dataQuery;return n(u,s,"mainType")&&n(u,s,"subType")&&n(u,s,"index","componentIndex")&&n(u,s,"name")&&n(u,s,"id")&&n(h,r,"name")&&n(h,r,"dataIndex")&&n(h,r,"dataType")&&(!l.filterForExposedEvent||l.filterForExposedEvent(t,e.otherQuery,a,r))},afterTrigger:function(){this.eventInfo=null}};var jT={},YT={},qT=[],KT=[],$T=[],JT=[],QT={},tA={},eA={},iA={},nA=new Date-0,oA=new Date-0,aA="_echarts_instance_",rA=Cs;zs(2e3,rT),Ps(VI),Ns(5e3,function(t){var e=R();t.eachSeries(function(t){var i=t.get("stack");if(i){var n=e.get(i)||e.set(i,[]),o=t.getData(),a={stackResultDimension:o.getCalculationInfo("stackResultDimension"),stackedOverDimension:o.getCalculationInfo("stackedOverDimension"),stackedDimension:o.getCalculationInfo("stackedDimension"),stackedByDimension:o.getCalculationInfo("stackedByDimension"),isStackedByIndex:o.getCalculationInfo("isStackedByIndex"),data:o,seriesModel:t};if(!a.stackedDimension||!a.isStackedByIndex&&!a.stackedByDimension)return;n.length&&o.setCalculationInfo("stackedOnSeries",n[n.length-1].seriesModel),n.push(a)}}),e.each(or)}),Vs("default",function(t,e){r(e=e||{},{text:"loading",color:"#c23531",textColor:"#000",maskColor:"rgba(255, 255, 255, 0.8)",zlevel:0});var i=new yM({style:{fill:e.maskColor},zlevel:e.zlevel,z:1e4}),n=new SM({shape:{startAngle:-uT/2,endAngle:-uT/2+.1,r:10},style:{stroke:e.color,lineCap:"round",lineWidth:5},zlevel:e.zlevel,z:10001}),o=new yM({style:{fill:"none",text:e.text,textPosition:"right",textDistance:10,textFill:e.textColor},zlevel:e.zlevel,z:10001});n.animateShape(!0).when(1e3,{endAngle:3*uT/2}).start("circularInOut"),n.animateShape(!0).when(1e3,{startAngle:3*uT/2}).delay(300).start("circularInOut");var a=new tb;return a.add(n),a.add(o),a.add(i),a.resize=function(){var e=t.getWidth()/2,a=t.getHeight()/2;n.setShape({cx:e,cy:a});var r=n.shape.r;o.setShape({x:e-r,y:a-r,width:2*r,height:2*r}),i.setShape({x:0,y:0,width:t.getWidth(),height:t.getHeight()})},a.resize(),a}),Os({type:"highlight",event:"highlight",update:"highlight"},B),Os({type:"downplay",event:"downplay",update:"downplay"},B),ks("light",vT),ks("dark",xT);var sA={};Us.prototype={constructor:Us,add:function(t){return this._add=t,this},update:function(t){return this._update=t,this},remove:function(t){return this._remove=t,this},execute:function(){var t=this._old,e=this._new,i={},n=[],o=[];for(Xs(t,{},n,"_oldKeyGetter",this),Xs(e,i,o,"_newKeyGetter",this),a=0;a<t.length;a++)null!=(s=i[r=n[a]])?((u=s.length)?(1===u&&(i[r]=null),s=s.unshift()):i[r]=null,this._update&&this._update(s,a)):this._remove&&this._remove(a);for(var a="0;a<o.length;a++){var" r="o[a];if(i.hasOwnProperty(r)){var" s="i[r];if(null==s)continue;if(s.length)for(var" l="0,u=s.length;l<u;l++)this._add&&this._add(s[l]);else" this._add&&this._add(s)}}}};var la="R([" tooltip","label","itemname","itemid","seriesname"]),ua="w,hA=-1,cA=" e\0\0",da="{float:"undefined"==typeof""" float64array?array:float64array,int:"undefined"="=typeof" int32array?array:int32array,ordinal:array,number:array,time:array},fa="undefined" =="typeof" uint32array?array:uint32array,pa="undefined" int32array?array:int32array,ga="undefined" uint16array?array:uint16array,ma="[" hasitemoption","_namelist","_idlist","_invertedindicesmap","_rawdata","_chunksize","_chunkcount","_dimvaluegetter","_count","_rawcount","_namedimidx","_iddimidx"],va="[" _extent","_approximateextent","_rawextent"],ya="function(t,e){t=t||["x","y"];for(var""" i="{},n=[],o={},a=0;a<t.length;a++){var" isnan(t)||(t="this.dimensions[t]||t),t},xA.getDimensionInfo=function(t){return" this._dimensioninfos[this.getdimension(t)]},xa.getdimensionsoncoord="function(){return" this._dimensionssummary.datadimsoncoord.slice()},xa.mapdimension="function(t,e){var" i.encodefirstdimnotextra[t];var n="i.encode[t];return!0===e?(n||[]).slice():n&&n[e]},xA.initData=function(t,e,i){(xa.isInstance(t)||c(t))&&(t=new" ar(t,this.dimensions.length)),this._rawdata="t,this._storage={},this._indices=null,this._nameList=e||[],this._idList=[],this._nameRepeatCount={},i||(this.hasItemOption=!1),this.defaultDimValueGetter=HI[this._rawData.getSource().sourceFormat],this._dimValueGetter=i=i||this.defaultDimValueGetter,this._dimValueGetterArrayRows=HI.arrayRows,this._rawExtent={},this._initDataFromProvider(0,t.count()),t.pure&&(this.hasItemOption=!1)},xA.getProvider=function(){return" this._rawdata},xa.appenddata="function(t){var" e="this._rawData,i=this.count();e.appendData(t);var" c="new" array(a),d="s;d<l;d++){for(var" f="d-s,p=Math.floor(d/i),g=d%i,m=0;m<a;m++){var" v="o[m],y=this._dimValueGetterArrayRows(t[f]||c,v,f,m);n[v][p][g]=y;var" x="r[v];y<x[0]&&(x[0]=y),y">x[1]&&(x[1]=y)}e&&(this._nameList[d]=e[f])}this._rawCount=this._count=l,this._extent={},tl(this)},xA._initDataFromProvider=function(t,e){if(!(t>=e)){for(var i,n=this._chunkSize,o=this._rawData,a=this._storage,r=this.dimensions,s=r.length,l=this._dimensionInfos,u=this._nameList,h=this._idList,c=this._rawExtent,d=this._nameRepeatCount={},f=this._chunkCount,p=0;p<s;p++){c[w=r[p]]||(c[w]=[1 0,-1 0]);var g="l[w];0===g.otherDims.itemName&&(i=this._nameDimIdx=p),0===g.otherDims.itemId&&(this._idDimIdx=p),a[w]||(a[w]=[]),Qs(a,g,n,f,e),this._chunkCount=a[w].length}for(var" m="new" array(s),v="t;v<e;v++){m=o.getItem(v,m);for(var" y="Math.floor(v/n),x=v%n,_=0;_<s;_++){var" w="r[_],b=a[w][y],S=this._dimValueGetter(m,w,v,_);b[x]=S;var">M[1]&&(M[1]=S)}if(!o.pure){var I=u[v];if(m&&null==I)if(null!=m.name)u[v]=I=m.name;else if(null!=i){var T=r[i],A=a[T][y];if(A){I=A[x];var D=l[T].ordinalMeta;D&&D.categories.length&&(I=D.categories[I])}}var C=null==m?null:m.id;null==C&&null!=I&&(d[I]=d[I]||0,C=I,d[I]>0&&(C+="__ec__"+d[I]),d[I]++),null!=C&&(h[v]=C)}}!o.persistent&&o.clean&&o.clean(),this._rawCount=this._count=e,this._extent={},tl(this)}},xA.count=function(){return this._count},xA.getIndices=function(){var t=this._indices;if(t){var e=t.constructor,i=this._count;if(e===Array){n=new e(i);for(o=0;o<i;o++)n[o]=t[o]}else n="new" e(t.buffer,0,i)}else for(var n},xa.get="function(t,e){if(!(e">=0&&e<this._count))return nan;var i="this._storage;if(!i[t])return" nan;e="this.getRawIndex(e);var" n="Math.floor(e/this._chunkSize),o=e%this._chunkSize;return" i[t][n][o]},xa.getbyrawindex="function(t,e){if(!(e">=0&&e<this._rawcount))return nan;var i="this._storage[t];if(!i)return" n="Math.floor(e/this._chunkSize),o=e%this._chunkSize;return" i[n][o]},xa._getfast="function(t,e){var" this._storage[t][i][n]},xa.getvalues="function(t,e){var" i},xa.hasvalue="function(t){for(var" e="this._dimensionsSummary.dataDimsOnCoord,i=this._dimensionInfos,n=0,o=e.length;n<o;n++)if(" ordinal"!="=i[e[n]].type&&isNaN(this.get(e[n],t)))return!1;return!0},xA.getDataExtent=function(t){t=this.getDimension(t);var" " e;var i,n="this.count();if(!this._indices)return" this._rawextent[t].slice();if(i="this._extent[t])return" i.slice();for(var o="(i=e)[0],a=i[1],r=0;r<n;r++){var" s="this._getFast(t,this.getRawIndex(r));s<o&&(o=s),s">a&&(a=s)}return i=[o,a],this._extent[t]=i,i},xA.getApproximateExtent=function(t){return t=this.getDimension(t),this._approximateExtent[t]||this.getDataExtent(t)},xA.setApproximateExtent=function(t,e){e=this.getDimension(e),this._approximateExtent[e]=t.slice()},xA.getCalculationInfo=function(t){return this._calculationInfo[t]},xA.setCalculationInfo=function(t,e){uA(t)?a(this._calculationInfo,t):this._calculationInfo[t]=e},xA.getSum=function(t){var e=0;if(this._storage[t])for(var i=0,n=this.count();i<n;i++){var 0="==n?0:n%2==1?i[(n-1)/2]:(i[n/2]+i[n/2-1])/2},xA.rawIndexOf=function(t,e){var" o="this.get(t,i);isNaN(o)||(e+=o)}return" e},xa.getmedian="function(t){var" e="[];this.each(t,function(t,i){isNaN(t)||e.push(t)});var" i="[].concat(e).sort(function(t,e){return" t-e}),n="this.count();return" null="=i||isNaN(i)?hA:i},xA.indexOfName=function(t){for(var" e;return-1},xa.indexofrawindex="function(t){if(!this._indices)return" t;if(t>=this._rawCount||t<0)return-1;var e="this._indices,i=e[t];if(null!=i&&i<this._count&&i===t)return" t;for(var n="0,o=this._count-1;n<=o;){var" a="(n+o)/2|0;if(e[a]<t)n=a+1;else{if(!(e[a]">t))return a;o=a-1}}return-1},xA.indicesOfNearest=function(t,e,i){var n=[];if(!this._storage[t])return n;null==i&&(i=1/0);for(var o=Number.MAX_VALUE,a=-1,r=0,s=this.count();r<s;r++){var l="e-this.get(t,r),u=Math.abs(l);l<=i&&u<=o&&((u<o||l">=0&&a<0)&&(o=u,a=l,n.length=0),n.push(r))}return n},xa.getrawindex="il,xA.getRawDataItem=function(t){if(this._rawData.persistent)return" this._rawdata.getitem(this.getrawindex(t));for(var e="[],i=0;i<this.dimensions.length;i++){var" n="this.dimensions[i];e.push(this.get(n,t))}return" e},xa.getname="function(t){var" this._namelist[e]||el(this,this._namedimidx,e)||""},xa.getid="function(t){return" ol(this,this.getrawindex(t))},xa.each="function(t,e,i,n){if(this._count){" function"="=typeof" " t&&(n="i,i=e,e=t,t=[]),i=i||n||this;for(var" o="(t=f(al(t),this.getDimension,this)).length,a=0;a<this.count();a++)switch(o){case" 0:e.call(i,a);break;case 1:e.call(i,this.get(t[0],a),a);break;case 2:e.call(i,this.get(t[0],a),this.get(t[1],a),a);break;default:for(var r="0,s=[];r<o;r++)s[r]=this.get(t[r],a);s[r]=a,e.apply(i,s)}}},xA.filterSelf=function(t,e,i,n){if(this._count){" c,d="this.getRawIndex(h);if(0===s)c=e.call(i,h);else" if(1="==s){var" p="this._getFast(u,d);c=e.call(i,p,h)}else{for(var" g="0;g<s;g++)r[g]=this._getFast(u,d);r[g]=h,c=e.apply(i,r)}c&&(a[l++]=d)}return" l<o&&(this._indices="a),this._count=l,this._extent={},this.getRawIndex=this._indices?nl:il,this}},xA.selectRange=function(t){if(this._count){var" i in t)t.hasownproperty(i)&&e.push(i);var c="0;if(1===n){for(var" d="this._storage[e[0]],f=0;f<this._chunkCount;f++)for(var">=l&&w<=u||isnan(w))&&(a[r++]=c),c++;h=!0}else if(2="==n){for(var" d="this._storage[s],v=this._storage[e[1]],y=t[e[1]][0],x=t[e[1]][1],f=0;f<this._chunkCount;f++)for(var" p="d[f],_=v[f],g=Math.min(this._count-f*this._chunkSize,this._chunkSize),m=0;m<g;m++){var" w="p[m],b=_[m];(w">=l&&w<=u||isnan(w))&&(b>=y&&b<=x||isnan(b))&&(a[r++]=c),c++}h=!0}}if(!h)if(1===n)for(m=0;m<o;m++){m=this.getrawindex(m);((w=this._getfast(s,m))>=l&&w<=u||isnan(w))&&(a[r++]=m)}else for(m="0;m<o;m++){for(var" s="!0,M=this.getRawIndex(m),f=0;f<n;f++){var" i="e[f];((w=this._getFast(i,M))<t[I][0]||w">t[I][1])&&(S=!1)}S&&(a[r++]=this.getRawIndex(m))}return r<o&&(this._indices=a),this._count=r,this._extent={},this.getrawindex=this._indices?nl:il,this}}},xa.maparray=function(t,e,i,n){"function"==typeof t&&(n="i,i=e,e=t,t=[]),i=i||n||this;var" o="[];return" this.each(t,function(){o.push(e&&e.apply(this,arguments))},i),o},xa.map="function(t,e,i,n){i=i||n||this;var" a="o._storage,r=[],s=this._chunkSize,l=t.length,u=this.count(),h=[],c=o._rawExtent,d=0;d<u;d++){for(var" p="0;p<l;p++)h[p]=this.get(t[p],d);h[l]=d;var" g="e&&e.apply(i,h);if(null!=g){" object"!="typeof" " g&&(r[0]="g,g=r);for(var" m="this.getRawIndex(d),v=Math.floor(m/s),y=m%s,x=0;x<g.length;x++){var" _="t[x],w=g[x],b=c[_],S=a[_];S&&(S[v][y]=w),w<b[0]&&(b[0]=w),w">b[1]&&(b[1]=w)}}}return o},xA.downSample=function(t,e,i,n){for(var o=rl(this,[t]),a=o._storage,r=[],s=Math.floor(1/e),l=a[t],u=this.count(),h=this._chunkSize,c=o._rawExtent[t],d=new(Ks(this))(u),f=0,p=0;p<u;p+=s){s>u-p&&(s=u-p,r.length=s);for(var g=0;g<s;g++){var m="this.getRawIndex(p+g),v=Math.floor(m/h),y=m%h;r[g]=l[v][y]}var" x="i(r),_=this.getRawIndex(Math.min(p+n(r,x)||0,u-1)),w=_%h;l[Math.floor(_/h)][w]=x,x<c[0]&&(c[0]=x),x">c[1]&&(c[1]=x),d[f++]=_}return o._count=f,o._indices=d,o.getRawIndex=nl,o},xA.getItemModel=function(t){var e=this.hostModel;return new Po(this.getRawDataItem(t),e,e&&e.ecModel)},xA.diff=function(t){var e=this;return new Us(t?t.getIndices():[],this.getIndices(),function(e){return ol(t,e)},function(t){return ol(e,t)})},xA.getVisual=function(t){var e=this._visual;return e&&e[t]},xA.setVisual=function(t,e){if(uA(t))for(var i in t)t.hasOwnProperty(i)&&this.setVisual(i,t[i]);else this._visual=this._visual||{},this._visual[t]=e},xA.setLayout=function(t,e){if(uA(t))for(var i in t)t.hasOwnProperty(i)&&this.setLayout(i,t[i]);else this._layout[t]=e},xA.getLayout=function(t){return this._layout[t]},xA.getItemLayout=function(t){return this._itemLayouts[t]},xA.setItemLayout=function(t,e,i){this._itemLayouts[t]=i?a(this._itemLayouts[t]||{},e):e},xA.clearItemLayouts=function(){this._itemLayouts.length=0},xA.getItemVisual=function(t,e,i){var n=this._itemVisuals[t],o=n&&n[e];return null!=o||i?o:this.getVisual(e)},xA.setItemVisual=function(t,e,i){var n=this._itemVisuals[t]||{},o=this.hasItemVisual;if(this._itemVisuals[t]=n,uA(e))for(var a in e)e.hasOwnProperty(a)&&(n[a]=e[a],o[a]=!0);else n[e]=i,o[e]=!0},xA.clearAllVisual=function(){this._visual={},this._itemVisuals=[],this.hasItemVisual={}};var _A=function(t){t.seriesIndex=this.seriesIndex,t.dataIndex=this.dataIndex,t.dataType=this.dataType};xA.setItemGraphicEl=function(t,e){var i=this.hostModel;e&&(e.dataIndex=t,e.dataType=this.dataType,e.seriesIndex=i&&i.seriesIndex,"group"===e.type&&e.traverse(_A,e)),this._graphicEls[t]=e},xA.getItemGraphicEl=function(t){return this._graphicEls[t]},xA.eachItemGraphicEl=function(t,e){d(this._graphicEls,function(i,n){i&&t&&t.call(e,i,n)})},xA.cloneShallow=function(t){if(!t){var e=f(this.dimensions,this.getDimensionInfo,this);t=new yA(e,this.hostModel)}if(t._storage=this._storage,Js(t,this),this._indices){var i=this._indices.constructor;t._indices=new i(this._indices)}else t._indices=null;return t.getRawIndex=t._indices?nl:il,t},xA.wrapMethod=function(t,e){var i=this[t];"function"==typeof i&&(this.__wrappedMethods=this.__wrappedMethods||[],this.__wrappedMethods.push(t),this[t]=function(){var t=i.apply(this,arguments);return e.apply(this,[t].concat(C(arguments)))})},xA.TRANSFERABLE_METHODS=["cloneShallow","downSample","map"],xA.CHANGABLE_METHODS=["filterSelf","selectRange"];var wA=function(t,e){return e=e||{},ul(e.coordDimensions||[],t,{dimsDef:e.dimensionsDefine||t.dimensionsDefine,encodeDef:e.encodeDefine||t.encodeDefine,dimCount:e.dimensionsCount,generateCoord:e.generateCoord,generateCoordCount:e.generateCoordCount})};yl.prototype.parse=function(t){return t},yl.prototype.getSetting=function(t){return this._setting[t]},yl.prototype.contain=function(t){var e=this._extent;return t>=e[0]&&t<=e[1]},yl.prototype.normalize=function(t){var e="this._extent;return" e[1]="==e[0]?.5:(t-e[0])/(e[1]-e[0])},yl.prototype.scale=function(t){var" t*(e[1]-e[0])+e[0]},yl.prototype.unionextent="function(t){var">e[1]&&(e[1]=t[1])},yl.prototype.unionExtentFromData=function(t,e){this.unionExtent(t.getApproximateExtent(e))},yl.prototype.getExtent=function(){return this._extent.slice()},yl.prototype.setExtent=function(t,e){var i=this._extent;isNaN(t)||(i[0]=t),isNaN(e)||(i[1]=e)},yl.prototype.isBlank=function(){return this._isBlank},yl.prototype.setBlank=function(t){this._isBlank=t},yl.prototype.getLabel=null,Xi(yl),Ki(yl,{registerWhenExtend:!0}),xl.createByAxisModel=function(t){var e=t.option,i=e.data,n=i&&f(i,wl);return new xl({categories:n,needCollect:!n,deduplication:!1!==e.dedplication})};var bA=xl.prototype;bA.getOrdinal=function(t){return _l(this).get(t)},bA.parseAndCollect=function(t){var e,i=this._needCollect;if("string"!=typeof t&&!i)return t;if(i&&!this._deduplication)return e=this.categories.length,this.categories[e]=t,e;var n=_l(this);return null==(e=n.get(t))&&(i?(e=this.categories.length,this.categories[e]=t,n.set(t,e)):e=NaN),e};var SA=yl.prototype,MA=yl.extend({type:"ordinal",init:function(t,e){t&&!y(t)||(t=new xl({categories:t})),this._ordinalMeta=t,this._extent=e||[0,t.categories.length-1]},parse:function(t){return"string"==typeof t?this._ordinalMeta.getOrdinal(t):Math.round(t)},contain:function(t){return t=this.parse(t),SA.contain.call(this,t)&&null!=this._ordinalMeta.categories[t]},normalize:function(t){return SA.normalize.call(this,this.parse(t))},scale:function(t){return Math.round(SA.scale.call(this,t))},getTicks:function(){for(var t=[],e=this._extent,i=e[0];i<=e[1];)t.push(i),i++;return t},getlabel:function(t){if(!this.isblank())return this._ordinalmeta.categories[t]},count:function(){return this._extent[1]-this._extent[0]+1},unionextentfromdata:function(t,e){this.unionextent(t.getapproximateextent(e))},getordinalmeta:function(){return this._ordinalmeta},niceticks:b,niceextent:b});ma.create="function(){return" new ma};var ia="Vo,TA=Vo,AA=yl.extend({type:" interval",_interval:0,_intervalprecision:2,setextent:function(t,e){var" i="this._extent;isNaN(t)||(i[0]=parseFloat(t)),isNaN(e)||(i[1]=parseFloat(e))},unionExtent:function(t){var" e="this._extent;t[0]<e[0]&&(e[0]=t[0]),t[1]">e[1]&&(e[1]=t[1]),AA.prototype.setExtent.call(this,e[0],e[1])},getInterval:function(){return this._interval},setInterval:function(t){this._interval=t,this._niceExtent=this._extent.slice(),this._intervalPrecision=Sl(t)},getTicks:function(){return Tl(this._interval,this._extent,this._niceExtent,this._intervalPrecision)},getLabel:function(t,e){if(null==t)return"";var i=e&&e.precision;return null==i?i=Wo(t)||0:"auto"===i&&(i=this._intervalPrecision),t=TA(t,i,!0),Qo(t)},niceTicks:function(t,e,i){t=t||5;var n=this._extent,o=n[1]-n[0];if(isFinite(o)){o<0&&(o=-o,n.reverse());var a="bl(n,t,e,i);this._intervalPrecision=a.intervalPrecision,this._interval=a.interval,this._niceExtent=a.niceTickExtent}},niceExtent:function(t){var" e="this._extent;if(e[0]===e[1])if(0!==e[0]){var" i="e[0];t.fixMax?e[0]-=i/2:(e[1]+=i/2,e[0]-=i/2)}else" e[1]="1;var" n="e[1]-e[0];isFinite(n)||(e[0]=0,e[1]=1),this.niceTicks(t.splitNumber,t.minInterval,t.maxInterval);var" o="this._interval;t.fixMin||(e[0]=TA(Math.floor(e[0]/o)*o)),t.fixMax||(e[1]=TA(Math.ceil(e[1]/o)*o))}});AA.create=function(){return" new aa};var da="__ec_stack_" ,ca="undefined" !="typeof" float32array?float32array:array,la="{seriesType:" bar",plan:ji(),reset:function(t){if(el(t)&&rl(t)){var" u>.5||(u=.5),{progress:function(t,e){for(var n,h=new CA(2*t.count),c=[],d=[],f=0;null!=(n=t.next());)d[l]=e.get(a,n),d[1-l]=e.get(r,n),c=i.dataToPoint(d,null,c),h[f++]=c[0],h[f++]=c[1];e.setLayout({largePoints:h,barWidth:u,valueAxisStart:zl(0,o),valueAxisHorizontal:s})}}}}},kA=AA.prototype,PA=Math.ceil,NA=Math.floor,OA=function(t,e,i,n){for(;i<n;){var o="i+n">>>1;t[o][1]<e?i=o+1:n=o}return i},ea="AA.extend({type:" time",getlabel:function(t){var" e="this._stepLvl,i=new" date(t);return ra(e[0],i,this.getsetting("useutc"))},niceextent:function(t){var i="new" date;e[1]="+new" date(i.getfullyear(),i.getmonth(),i.getdate()),e[0]="e[1]-864e5}this.niceTicks(t.splitNumber,t.minInterval,t.maxInterval);var" n="this._interval;t.fixMin||(e[0]=Vo(NA(e[0]/n)*n)),t.fixMax||(e[1]=Vo(PA(e[1]/n)*n))},niceTicks:function(t,e,i){t=t||10;var">i&&(a=i);var r=RA.length,s=OA(RA,a,0,r),l=RA[Math.min(s,r-1)],u=l[1];"year"===l[0]&&(u*=Ko(o/u/t,!0));var h=this.getSetting("useUTC")?0:60*new Date(+n[0]||+n[1]).getTimezoneOffset()*1e3,c=[Math.round(PA((n[0]-h)/u)*u+h),Math.round(NA((n[1]-h)/u)*u+h)];Il(c,n),this._stepLvl=l,this._interval=u,this._niceExtent=c},parse:function(t){return+jo(t)}});d(["contain","normalize"],function(t){EA.prototype[t]=function(e){return kA[t].call(this,this.parse(e))}});var RA=[["hh:mm:ss",1e3],["hh:mm:ss",5e3],["hh:mm:ss",1e4],["hh:mm:ss",15e3],["hh:mm:ss",3e4],["hh:mm\nMM-dd",6e4],["hh:mm\nMM-dd",3e5],["hh:mm\nMM-dd",6e5],["hh:mm\nMM-dd",9e5],["hh:mm\nMM-dd",18e5],["hh:mm\nMM-dd",36e5],["hh:mm\nMM-dd",72e5],["hh:mm\nMM-dd",216e5],["hh:mm\nMM-dd",432e5],["MM-dd\nyyyy",864e5],["MM-dd\nyyyy",1728e5],["MM-dd\nyyyy",2592e5],["MM-dd\nyyyy",3456e5],["MM-dd\nyyyy",432e6],["MM-dd\nyyyy",5184e5],["week",6048e5],["MM-dd\nyyyy",864e6],["week",12096e5],["week",18144e5],["month",26784e5],["week",36288e5],["month",53568e5],["week",6048e6],["quarter",8208e6],["month",107136e5],["month",13392e6],["half-year",16416e6],["month",214272e5],["month",26784e6],["year",32832e6]];EA.create=function(t){return new EA({useUTC:t.ecModel.get("useUTC")})};var zA=yl.prototype,BA=AA.prototype,VA=Wo,GA=Vo,FA=Math.floor,WA=Math.ceil,HA=Math.pow,ZA=Math.log,UA=yl.extend({type:"log",base:10,$constructor:function(){yl.apply(this,arguments),this._originalScale=new AA},getTicks:function(){var t=this._originalScale,e=this._extent,i=t.getExtent();return f(BA.getTicks.call(this),function(n){var o=Vo(HA(this.base,n));return o=n===e[0]&&t.__fixMin?Bl(o,i[0]):o,o=n===e[1]&&t.__fixMax?Bl(o,i[1]):o},this)},getLabel:BA.getLabel,scale:function(t){return t=zA.scale.call(this,t),HA(this.base,t)},setExtent:function(t,e){var i=this.base;t=ZA(t)/ZA(i),e=ZA(e)/ZA(i),BA.setExtent.call(this,t,e)},getExtent:function(){var t=this.base,e=zA.getExtent.call(this);e[0]=HA(t,e[0]),e[1]=HA(t,e[1]);var i=this._originalScale,n=i.getExtent();return i.__fixMin&&(e[0]=Bl(e[0],n[0])),i.__fixMax&&(e[1]=Bl(e[1],n[1])),e},unionExtent:function(t){this._originalScale.unionExtent(t);var e=this.base;t[0]=ZA(t[0])/ZA(e),t[1]=ZA(t[1])/ZA(e),zA.unionExtent.call(this,t)},unionExtentFromData:function(t,e){this.unionExtent(t.getApproximateExtent(e))},niceTicks:function(t){t=t||10;var e=this._extent,i=e[1]-e[0];if(!(i===1/0||i<=0)){var n="Yo(i);for(t/i*n<=.5&&(n*=10);!isNaN(n)&&Math.abs(n)<1&&Math.abs(n)">0;)n*=10;var o=[Vo(WA(e[0]/n)*n),Vo(FA(e[1]/n)*n)];this._interval=n,this._niceExtent=o}},niceExtent:function(t){BA.niceExtent.call(this,t);var e=this._originalScale;e.__fixMin=t.fixMin,e.__fixMax=t.fixMax}});d(["contain","normalize"],function(t){UA.prototype[t]=function(e){return e=ZA(e)/ZA(this.base),zA[t].call(this,e)}}),UA.create=function(){return new UA};var XA={getMin:function(t){var e=this.option,i=t||null==e.rangeStart?e.min:e.rangeStart;return this.axis&&null!=i&&"dataMin"!==i&&"function"!=typeof i&&!I(i)&&(i=this.axis.scale.parse(i)),i},getMax:function(t){var e=this.option,i=t||null==e.rangeEnd?e.max:e.rangeEnd;return this.axis&&null!=i&&"dataMax"!==i&&"function"!=typeof i&&!I(i)&&(i=this.axis.scale.parse(i)),i},getNeedCrossZero:function(){var t=this.option;return null==t.rangeStart&&null==t.rangeEnd&&!t.scale},getCoordSysModel:B,setRange:function(t,e){this.option.rangeStart=t,this.option.rangeEnd=e},resetRange:function(){this.option.rangeStart=this.option.rangeEnd=null}},jA=Zn({type:"triangle",shape:{cx:0,cy:0,width:0,height:0},buildPath:function(t,e){var i=e.cx,n=e.cy,o=e.width/2,a=e.height/2;t.moveTo(i,n-a),t.lineTo(i+o,n+a),t.lineTo(i-o,n+a),t.closePath()}}),YA=Zn({type:"diamond",shape:{cx:0,cy:0,width:0,height:0},buildPath:function(t,e){var i=e.cx,n=e.cy,o=e.width/2,a=e.height/2;t.moveTo(i,n-a),t.lineTo(i+o,n),t.lineTo(i,n+a),t.lineTo(i-o,n),t.closePath()}}),qA=Zn({type:"pin",shape:{x:0,y:0,width:0,height:0},buildPath:function(t,e){var i=e.x,n=e.y,o=e.width/5*3,a=Math.max(o,e.height),r=o/2,s=r*r/(a-r),l=n-a+r+s,u=Math.asin(s/r),h=Math.cos(u)*r,c=Math.sin(u),d=Math.cos(u),f=.6*r,p=.7*r;t.moveTo(i-h,l+s),t.arc(i,l,r,Math.PI-u,2*Math.PI+u),t.bezierCurveTo(i+h-c*f,l+s+d*f,i,n-p,i,n),t.bezierCurveTo(i,n-p,i-h+c*f,l+s+d*f,i-h,l+s),t.closePath()}}),KA=Zn({type:"arrow",shape:{x:0,y:0,width:0,height:0},buildPath:function(t,e){var i=e.height,n=e.width,o=e.x,a=e.y,r=n/3*2;t.moveTo(o,a),t.lineTo(o+r,a+i),t.lineTo(o,a+i/4*3),t.lineTo(o-r,a+i),t.lineTo(o,a),t.closePath()}}),$A={line:function(t,e,i,n,o){o.x1=t,o.y1=e+n/2,o.x2=t+i,o.y2=e+n/2},rect:function(t,e,i,n,o){o.x=t,o.y=e,o.width=i,o.height=n},roundRect:function(t,e,i,n,o){o.x=t,o.y=e,o.width=i,o.height=n,o.r=Math.min(i,n)/4},square:function(t,e,i,n,o){var a=Math.min(i,n);o.x=t,o.y=e,o.width=a,o.height=a},circle:function(t,e,i,n,o){o.cx=t+i/2,o.cy=e+n/2,o.r=Math.min(i,n)/2},diamond:function(t,e,i,n,o){o.cx=t+i/2,o.cy=e+n/2,o.width=i,o.height=n},pin:function(t,e,i,n,o){o.x=t+i/2,o.y=e+n/2,o.width=i,o.height=n},arrow:function(t,e,i,n,o){o.x=t+i/2,o.y=e+n/2,o.width=i,o.height=n},triangle:function(t,e,i,n,o){o.cx=t+i/2,o.cy=e+n/2,o.width=i,o.height=n}},JA={};d({line:_M,rect:yM,roundRect:yM,square:yM,circle:sM,diamond:YA,pin:qA,arrow:KA,triangle:jA},function(t,e){JA[e]=new t});var QA=Zn({type:"symbol",shape:{symbolType:"",x:0,y:0,width:0,height:0},beforeBrush:function(){var t=this.style;"pin"===this.shape.symbolType&&"inside"===t.textPosition&&(t.textPosition=["50%","40%"],t.textAlign="center",t.textVerticalAlign="middle")},buildPath:function(t,e,i){var n=e.symbolType,o=JA[n];"none"!==e.symbolType&&(o||(o=JA[n="rect"]),$A[n](e.x,e.y,e.width,e.height,o.shape),o.buildPath(t,o.shape,i))}}),tD={isDimensionStacked:fl,enableDataStack:dl,getStackedDimension:pl},eD=(Object.freeze||Object)({createList:function(t){return gl(t.getSource(),t)},getLayoutRect:ha,dataStack:tD,createScale:function(t,e){var i=e;Po.isInstance(e)||h(i=new Po(e),XA);var n=Wl(i);return n.setExtent(t[0],t[1]),Fl(n,i),n},mixinAxisModelCommonMethods:function(t){h(t,XA)},completeDimensions:ul,createDimensions:wA,createSymbol:$l}),iD=1e-8;tu.prototype={constructor:tu,properties:null,getBoundingRect:function(){var t=this._rect;if(t)return t;for(var e=Number.MAX_VALUE,i=[e,e],n=[-e,-e],o=[],a=[],r=this.geometries,s=0;s<r.length;s++)"polygon"===r[s].type&&(dn(r[s].exterior,o,a),tt(i,i,o),et(n,n,a));return 0="==s&&(i[0]=i[1]=n[0]=n[1]=0),this._rect=new" de(i[0],i[1],n[0]-i[0],n[1]-i[1])},contain:function(t){var e="this.getBoundingRect(),i=this.geometries;if(!e.contain(t[0],t[1]))return!1;t:for(var" n="0,o=i.length;n<o;n++)if(" polygon"="==i[n].type){var" " a="i[n].exterior,r=i[n].interiors;if(Ql(a,t[0],t[1])){for(var" s="0;s<(r?r.length:0);s++)if(Ql(r[s]))continue" t;return!0}}return!1},transformto:function(t,e,i,n){var o="this.getBoundingRect(),a=o.width/o.height;i?n||(n=i/a):i=a*n;for(var" r="new" de(t,e,i,n),s="o.calculateTransform(r),l=this.geometries,u=0;u<l.length;u++)if(" h="l[u].exterior,c=l[u].interiors,d=0;d<h.length;d++)Q(h[d],h[d],s);for(var" f="0;f<(c?c.length:0);f++)for(d=0;d<c[f].length;d++)Q(c[f][d],c[f][d],s)}(o=this._rect).copy(r),this.center=[o.x+o.width/2,o.y+o.height/2]},cloneShallow:function(t){null==t&&(t=this.name);var" tu(t,this.geometries,this.center);return e._rect="this._rect,e.transformTo=null,e}};var" nd="function(t){return" eu(t),f(g(t.features,function(t){return t.geometry&&t.properties&&t.geometry.coordinates.length>0}),function(t){var e=t.properties,i=t.geometry,n=i.coordinates,o=[];"Polygon"===i.type&&o.push({type:"polygon",exterior:n[0],interiors:n.slice(1)}),"MultiPolygon"===i.type&&d(n,function(t){t[0]&&o.push({type:"polygon",exterior:t[0],interiors:t.slice(1)})});var a=new tu(e.name,o,e.cp);return a.properties=e,a})},oD=Bi(),aD=[0,1],rD=function(t,e,i){this.dim=t,this.scale=e,this._extent=i||[0,0],this.inverse=!1,this.onBand=!1};rD.prototype={constructor:rD,contain:function(t){var e=this._extent,i=Math.min(e[0],e[1]),n=Math.max(e[0],e[1]);return t>=i&&t<=n},containdata:function(t){return this.contain(this.datatocoord(t))},getextent:function(){return this._extent.slice()},getpixelprecision:function(t){return ho(t||this.scale.getextent(),this._extent)},setextent:function(t,e){var i="this._extent;i[0]=t,i[1]=e},dataToCoord:function(t,e){var" t="n.normalize(t),this.onBand&&" ordinal"="==n.type&&vu(i=i.slice(),n.count()),zo(t,aD,i,e)},coordToData:function(t,e){var" " o="zo(t,i,aD,e);return" this.scale.scale(o)},pointtodata:function(t,e){},gettickscoords:function(t){var e="(t=t||{}).tickModel||this.getTickModel(),i=ou(this,e),n=f(i.ticks,function(t){return{coord:this.dataToCoord(t),tickValue:t}},this),o=e.get(" alignwithlabel");return" yu(this,n,i.tickcategoryinterval,o,t.clamp),n},getviewlabels:function(){return nu(this).labels},getlabelmodel:function(){return this.model.getmodel("axislabel")},gettickmodel:function(){return this.model.getmodel("axistick")},getbandwidth:function(){var n="Math.abs(t[1]-t[0]);return" math.abs(n) i},ishorizontal:null,getrotate:null,calculatecategoryinterval:function(){return fu(this)}};var sd="nD,lD={};d([" map","each","filter","indexof","inherits","reduce","filter","bind","curry","isarray","isstring","isobject","isfunction","extend","defaults","clone","merge"],function(t){ld[t]="aw[t]});var" ud="{};d([" extendshape","extendpath","makepath","makeimage","mergepath","resizepath","createicon","sethoverstyle","setlabelstyle","settextstyle","settext","getfont","updateprops","initprops","gettransform","clippointsbyrect","cliprectbyrect","group","image","text","circle","sector","ring","polygon","polyline","rect","line","beziercurve","arc","incrementaldisplayable","compoundpath","lineargradient","radialgradient","boundingrect"],function(t){ud[t]="zM[t]}),qI.extend({type:" series.line",dependencies:["grid","polar"],getinitialdata:function(t,e){return"" gl(this.getsource(),this)},defaultoption:{zlevel:0,z:2,coordinatesystem:"cartesian2d",legendhoverlink:!0,hoveranimation:!0,clipoverflow:!0,label:{position:"top"},linestyle:{width:2,type:"solid"},step:!1,smooth:!1,smoothmonotone:null,symbol:"emptycircle",symbolsize:4,symbolrotate:null,showsymbol:!0,showallsymbol:"auto",connectnulls:!1,sampling:"none",animationeasing:"linear",progressive:0,hoverlayerthreshold:1 0}});var hd="_u.prototype,cD=_u.getSymbolSize=function(t,e){var" instanceof array?i.slice():[+i,+i]};hd._createsymbol="function(t,e,i,n,o){this.removeAll();var" a="$l(t,-1,-1,2,2,e.getItemVisual(i," color"),o);a.attr({z2:100,culling:!0,scale:wu(n)}),a.drift="bu,this._symbolType=t,this.add(a)},hD.stopSymbolAnimation=function(t){this.childAt(0).stopAnimation(t)},hD.getSymbolPath=function(){return" this.childat(0)},hd.getscale="function(){return" this.childat(0).scale},hd.highlight="function(){this.childAt(0).trigger(" emphasis")},hd.downplay="function(){this.childAt(0).trigger(" normal")},hd.setz="function(t,e){var""" s="t.getItemVisual(e," symbolkeepaspect");this._createsymbol(n,t,e,a,s)}else(l="this.childAt(0)).silent=!1,Mo(l,{scale:wu(a)},o,e);if(this._updateCommon(t,e,a,i),r){var" l="this.childAt(0),u=i&&i.fadeIn,h={scale:l.scale.slice()};u&&(h.style={opacity:l.style.opacity}),l.scale=[0,0],u&&(l.style.opacity=0),Io(l,h,o,e)}this._seriesModel=o};var" dd="[" itemstyle"],fd="[" emphasis","itemstyle"],pd="["label"],gD=["emphasis","label"];hD._updateCommon=function(t,e,i,n){var""" m="n&&n.itemModel?n.itemModel:t.getItemModel(e);l=m.getModel(dD).getItemStyle([" color"]),u="m.getModel(fD).getItemStyle(),h=m.getShallow(" symbolrotate"),c="m.getShallow("symbolOffset"),d=m.getModel(pD),f=m.getModel(gD),p=m.getShallow("hoverAnimation"),g=m.getShallow("cursor")}else""" u="a({},u);var" v="o.style;o.attr(" rotation",(h||0)*math.pi 180||0),c&&o.attr("position",[bo(c[0],i[0]),bo(c[1],i[1])]),g&&o.attr("cursor",g),o.setcolor(s,n&&n.symbolinnercolor),o.setstyle(l);var" y="t.getItemVisual(e," opacity");null!="y&&(v.opacity=y);var" x="t.getItemVisual(e," liftz"),_="o.__z2Origin;null!=x?null==_&&(o.__z2Origin=o.z2,o.z2+=x):null!=_&&(o.z2=_,o.__z2Origin=null);var" w="n&&n.useNameLabel;po(v,u,d,f,{labelFetcher:r,labelDataIndex:e,defaultText:function(e,i){return" w?t.getname(e):xu(t,e)},isrecttext:!0,autocolor:s}),o.off("mouseover").off("mouseout").off("emphasis").off("normal"),o.hoverstyle="u,co(o),o.__symbolOriginalScale=wu(i),p&&r.isAnimationEnabled()&&o.on(" mouseover",su).on("mouseout",mu).on("emphasis",iu).on("normal",tu)},hd.fadeout="function(t,e){var" md="Au.prototype;mD.updateData=function(t,e){e=Cu(e);var" a(t,n,r);s.attr("position",o),t.setitemgraphicel(n,s),i.add(s)}}).update(function(s,l){var a(t,s)).attr("position",h),i.add(u),t.setitemgraphicel(s,u)):i.remove(u)}).remove(function(t){var this._symbolctor(e,n,this._seriesscope);a.traverse(function(t){t.isgroup||(t.incremental="t.useHoverLayer=!0)}),a.attr(" position",o),this.group.add(a),e.setitemgraphicel(n,a)}}},md.remove="function(t){var" vd="function(t,e,i,n,o,a,r,s){for(var" g[t]-g[e]});for(var>0&&Eu(i[o-1]);o--);for(;n<o&&eu(i[n]);n++);}for(;n<o;)n+=ru(t,i,n,o,o,1,a.min,a.max,e.smooth,e.smoothmonotone,e.connectnulls)+1}}),td=kn.extend({type:"ec-polygon",shape:{points:[],stackedonpoints:[],smooth:0,stackedonsmooth:0,smoothconstraint:!0,smoothmonotone:null,connectnulls:!1},brush:um(kn.prototype.brush),buildpath:function(t,e){var i="e.points,n=e.stackedOnPoints,o=0,a=i.length,r=e.smoothMonotone,s=Vu(i,e.smoothConstraint),l=Vu(n,e.smoothConstraint);if(e.connectNulls){for(;a">0&&Eu(i[a-1]);a--);for(;o<a&&eu(i[o]);o++);}for(;o<a;){var u="Ru(t,i,o,a,a,1,s.min,s.max,e.smooth,r,e.connectNulls);Ru(t,n,o+u-1,u,a,-1,l.min,l.max,e.stackedOnSmooth,r,e.connectNulls),o+=u+1,t.closePath()}}});Tr.extend({type:" line",init:function(){var" t="new" tb,e="new" au;this.group.add(e.group),this._symboldraw="e,this._lineGroup=t},render:function(t,e,i){var" n="t.coordinateSystem,o=this.group,a=t.getData(),s=t.getModel(" linestyle"),l="t.getModel(" areastyle"),u="a.mapArray(a.getItemLayout),h="polar"===n.type,c=this._coordSys,d=this._symbolDraw,f=this._polyline,p=this._polygon,g=this._lineGroup,m=t.get("animation"),v=!l.isEmpty(),y=l.get("origin"),x=Hu(n,a,ku(n,a,y)),_=t.get("showSymbol"),w=_&&!h&&qu(t,a,n),b=this._data;b&&b.eachItemGraphicEl(function(t,e){t.__temp&&(o.remove(t),b.setItemGraphicEl(e,null))}),_||d.remove(),o.add(g);var""" s="!h&&t.get(" step");f&&c.type="==n.type&&S===this._step?(v&&!p?p=this._newPolygon(u,x,n,m):p&&!v&&(g.remove(p),p=this._polygon=null),g.setClipPath(Xu(n,!1,!1,t)),_&&d.updateData(a,{isIgnore:w,clipShape:Xu(n,!1,!0,t)}),a.eachItemGraphicEl(function(t){t.stopAnimation(!0)}),Gu(this._stackedOnPoints,x)&&Gu(this._points,u)||(m?this._updateAnimation(a,x,n,i,S,y):(S&&(u=ju(u,n,S),x=ju(x,n,S)),f.setShape({points:u}),p&&p.setShape({points:u,stackedOnPoints:x})))):(_&&d.updateData(a,{isIgnore:w,clipShape:Xu(n,!1,!0,t)}),S&&(u=ju(u,n,S),x=ju(x,n,S)),f=this._newPolyline(u,n,m),v&&(p=this._newPolygon(u,x,n,m)),g.setClipPath(Xu(n,!0,!1,t)));var" " m="Yu(a,n)||a.getVisual(" color");f.usestyle(r(s.getlinestyle(),{fill:"none",stroke:m,linejoin:"bevel"}));var" i="t.get(" smooth");if(i="Fu(t.get(" smooth")),f.setshape({smooth:i,smoothmonotone:t.get("smoothmonotone"),connectnulls:t.get("connectnulls")}),p){var"" o="t.getData(),a=zi(o,n);if(!(a" instanceof array)&&null!="a&&a">=0){var r=o.getItemGraphicEl(a);if(!r){var s=o.getItemLayout(a);if(!s)return;(r=new _u(o,a)).position=s,r.setZ(t.get("zlevel"),t.get("z")),r.ignore=isNaN(s[0])||isNaN(s[1]),r.__temp=!0,o.setItemGraphicEl(a,r),r.stopSymbolAnimation(!0),this.group.add(r)}r.highlight()}else Tr.prototype.highlight.call(this,t,e,i,n)},downplay:function(t,e,i,n){var o=t.getData(),a=zi(o,n);if(null!=a&&a>=0){var r=o.getItemGraphicEl(a);r&&(r.__temp?(o.setItemGraphicEl(a,null),this.group.remove(r)):r.downplay())}else Tr.prototype.downplay.call(this,t,e,i,n)},_newPolyline:function(t){var e=this._polyline;return e&&this._lineGroup.remove(e),e=new ID({shape:{points:t},silent:!0,z2:10}),this._lineGroup.add(e),this._polyline=e,e},_newPolygon:function(t,e){var i=this._polygon;return i&&this._lineGroup.remove(i),i=new TD({shape:{points:t,stackedOnPoints:e},silent:!0}),this._lineGroup.add(i),this._polygon=i,i},_updateAnimation:function(t,e,i,n,o,a){var r=this._polyline,s=this._polygon,l=t.hostModel,u=vD(this._data,t,this._stackedOnPoints,e,this._coordSys,i,this._valueOrigin,a),h=u.current,c=u.stackedOnCurrent,d=u.next,f=u.stackedOnNext;o&&(h=ju(u.current,i,o),c=ju(u.stackedOnCurrent,i,o),d=ju(u.next,i,o),f=ju(u.stackedOnNext,i,o)),r.shape.__points=u.current,r.shape.points=h,Mo(r,{shape:{points:d}},l),s&&(s.setShape({points:h,stackedOnPoints:c}),Mo(s,{shape:{points:d,stackedOnPoints:f}},l));for(var p=[],g=u.status,m=0;m<g.length;m++)if("="===g[m].cmd){var 0="==i?NaN:e/i},sum:function(t){for(var" v="t.getItemGraphicEl(g[m].idx1);v&&p.push({el:v,ptIdx:m})}r.animators&&r.animators.length&&r.animators[0].during(function(){for(var" t="0;t<p.length;t++)p[t].el.attr(" position",r.shape.__points[p[t].ptidx])})},remove:function(t){var" e="this.group,i=this._data;this._lineGroup.removeAll(),this._symbolDraw.remove(!0),i&&i.eachItemGraphicEl(function(t,n){t.__temp&&(e.remove(t),i.setItemGraphicEl(n,null))}),this._polyline=this._polygon=this._coordSys=this._points=this._stackedOnPoints=this._data=null}});var" ad="function(t,e,i){return{seriesType:t,performRawSeries:!0,reset:function(t,n,o){var" a="t.getData(),r=t.get(" symbol")||e,s="t.get(" symbolsize"),l="t.get("symbolKeepAspect");if(a.setVisual({legendSymbol:i||r,symbol:r,symbolSize:s,symbolKeepAspect:l}),!n.isSeriesFiltered(t)){var""" u="function" =="typeof" s;return{dataeach:a.hasitemoption||u?function(e,i){if("function"="=typeof" s){var n="t.getRawValue(i),o=t.getDataParams(i);e.setItemVisual(i," symbolsize",s(n,o))}if(e.hasitemoption){var" o="f(i.dimensions,function(t){return" e.mapdimension(t)}).slice(0,2),a="o.length,r=e.getCalculationInfo(" stackresultdimension");return" fl(e,o[0])&&(o[0]="r),fl(e,o[1])&&(o[1]=r),a&&{progress:function(t,e){for(var" r="t.end-t.start,s=n&&new" float32array(r*a),l="t.start,u=0,h=[],c=[];l<t.end;l++){var" d;if(1="==a)f=e.get(o[0],l),d=!isNaN(f)&&i.dataToPoint(f,null,c);else{var" f="h[0]=e.get(o[0],l),p=h[1]=e.get(o[1],l);d=!isNaN(f)&&!isNaN(p)&&i.dataToPoint(h,null,c)}n?(s[u++]=d?d[0]:NaN,s[u++]=d?d[1]:NaN):e.setItemLayout(l,d&&d.slice()||[NaN,NaN])}n&&e.setLayout(" symbolpoints",s)}}}}}},cd="{average:function(t){for(var" " e},max:function(t){for(var>e&&(e=t[i]);return isFinite(e)?e:NaN},min:function(t){for(var e=1/0,i=0;i<t.length;i++)t[i]<e&&(e=t[i]);return isfinite(e)?e:nan},nearest:function(t){return t[0]}},ld="function(t,e){return" math.round(t.length 2)},kd="function(t){this._axes={},this._dimList=[],this.name=t||" "};kd.prototype="{constructor:kD,type:" cartesian",getaxis:function(t){return"" this._axes[t]},getaxes:function(){return f(this._dimlist,$u,this)},getaxesbyscale:function(t){return t="t.toLowerCase(),g(this.getAxes(),function(e){return" e.scale.type="==t})},addAxis:function(t){var" e="t.dim;this._axes[e]=t,this._dimList.push(e)},dataToCoord:function(t){return" this._datacoordconvert(t,"datatocoord")},coordtodata:function(t){return this._datacoordconvert(t,"coordtodata")},_datacoordconvert:function(t,e){for(var i="this._dimList,n=t" instanceof array?[]:{},o="0;o<i.length;o++){var" a="i[o],r=this._axes[a];n[a]=r[e](t[a])}return" n}},ju.prototype="{constructor:Ju,type:" cartesian2d",dimensions:["x","y"],getbaseaxis:function(){return" this.getaxesbyscale("ordinal")[0]||this.getaxesbyscale("time")[0]||this.getaxis("x")},containpoint:function(t){var e.contain(e.tolocalcoord(t[0]))&&i.contain(i.tolocalcoord(t[1]))},containdata:function(t){return this.getaxis("x").containdata(t[0])&&this.getaxis("y").containdata(t[1])},datatopoint:function(t,e,i){var n="this.getAxis(" x"),o="this.getAxis(" y");return"" this.getaxis("x"="==t.dim?" y":"x")}},u(ju,kd);var" pd="function(t,e,i,n,o){rD.call(this,t,e,i),this.type=n||" value",this.position="o||" bottom"};pd.prototype="{constructor:PD,index:0,getAxesOnZeroOf:null,model:null,isHorizontal:function(){var""" e[0]="this.toGlobalCoord(e[0]),e[1]=this.toGlobalCoord(e[1]),t&&e[0]">e[1]&&e.reverse(),e},getOtherAxis:function(){this.grid.getOtherAxis()},pointToData:function(t,e){return this.coordToData(this.toLocalCoord(t["x"===this.dim?0:1]),e)},toLocalCoord:null,toGlobalCoord:null},u(PD,rD);var ND={show:!0,zlevel:0,z:0,inverse:!1,name:"",nameLocation:"end",nameRotate:null,nameTruncate:{maxWidth:null,ellipsis:"...",placeholder:"."},nameTextStyle:{},nameGap:15,silent:!1,triggerEvent:!1,tooltip:{show:!1},axisPointer:{},axisLine:{show:!0,onZero:!0,onZeroAxisIndex:null,lineStyle:{color:"#333",width:1,type:"solid"},symbol:["none","none"],symbolSize:[10,15]},axisTick:{show:!0,inside:!1,length:5,lineStyle:{width:1}},axisLabel:{show:!0,inside:!1,rotate:0,showMinLabel:null,showMaxLabel:null,margin:8,fontSize:12},splitLine:{show:!0,lineStyle:{color:["#ccc"],width:1,type:"solid"}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}}},OD={};OD.categoryAxis=n({boundaryGap:!0,deduplication:null,splitLine:{show:!1},axisTick:{alignWithLabel:!1,interval:"auto"},axisLabel:{interval:"auto"}},ND),OD.valueAxis=n({boundaryGap:[0,0],splitNumber:5},ND),OD.timeAxis=r({scale:!0,min:"dataMin",max:"dataMax"},OD.valueAxis),OD.logAxis=r({scale:!0,logBase:10},OD.valueAxis);var ED=["value","category","time","log"],RD=function(t,e,i,a){d(ED,function(r){e.extend({type:t+"Axis."+r,mergeDefaultAndTheme:function(e,o){var a=this.layoutMode,s=a?pa(e):{};n(e,o.getTheme().get(r+"Axis")),n(e,this.getDefaultOption()),e.type=i(t,e),a&&fa(e,s,a)},optionUpdated:function(){"category"===this.option.type&&(this.__ordinalMeta=xl.createByAxisModel(this))},getCategories:function(t){var e=this.option;if("category"===e.type)return t?e.data:this.__ordinalMeta.categories},getOrdinalMeta:function(){return this.__ordinalMeta},defaultOption:o([{},OD[r+"Axis"],a],!0)})}),uI.registerSubTypeDefaulter(t+"Axis",v(i,t))},zD=uI.extend({type:"cartesian2dAxis",axis:null,init:function(){zD.superApply(this,"init",arguments),this.resetRange()},mergeOption:function(){zD.superApply(this,"mergeOption",arguments),this.resetRange()},restoreData:function(){zD.superApply(this,"restoreData",arguments),this.resetRange()},getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"grid",index:this.option.gridIndex,id:this.option.gridId})[0]}});n(zD.prototype,XA);var BD={offset:0};RD("x",zD,Qu,BD),RD("y",zD,Qu,BD),uI.extend({type:"grid",dependencies:["xAxis","yAxis"],layoutMode:"box",coordinateSystem:null,defaultOption:{show:!1,zlevel:0,z:0,left:"10%",top:60,right:"10%",bottom:60,containLabel:!1,backgroundColor:"rgba(0,0,0,0)",borderWidth:1,borderColor:"#ccc"}});var VD=eh.prototype;VD.type="grid",VD.axisPointerEnabled=!0,VD.getRect=function(){return this._rect},VD.update=function(t,e){var i=this._axesMap;this._updateScale(t,this.model),d(i.x,function(t){Fl(t.scale,t.model)}),d(i.y,function(t){Fl(t.scale,t.model)});var n={};d(i.x,function(t){ih(i,"y",t,n)}),d(i.y,function(t){ih(i,"x",t,n)}),this.resize(this.model,e)},VD.resize=function(t,e,i){function n(){d(a,function(t){var e=t.isHorizontal(),i=e?[0,o.width]:[0,o.height],n=t.inverse?1:0;t.setExtent(i[n],i[1-n]),oh(t,e?o.x:o.y)})}var o=ha(t.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()});this._rect=o;var a=this._axesList;n(),!i&&t.get("containLabel")&&(d(a,function(t){if(!t.model.get("axisLabel.inside")){var e=Xl(t);if(e){var i=t.isHorizontal()?"height":"width",n=t.model.get("axisLabel.margin");o[i]-=e[i]+n,"top"===t.position?o.y+=e.height+n:"left"===t.position&&(o.x+=e.width+n)}}}),n())},VD.getAxis=function(t,e){var i=this._axesMap[t];if(null!=i){if(null==e)for(var n in i)if(i.hasOwnProperty(n))return i[n];return i[e]}},VD.getAxes=function(){return this._axesList.slice()},VD.getCartesian=function(t,e){if(null!=t&&null!=e){var i="x"+t+"y"+e;return this._coordsMap[i]}w(t)&&(e=t.yAxisIndex,t=t.xAxisIndex);for(var n=0,o=this._coordsList;n<o.length;n++)if(o[n].getaxis("x").index===t||o[n].getaxis("y").index===e)return o[n]},vd.getcartesians="function(){return" this._coordslist.slice()},vd.converttopixel="function(t,e,i){var" n="this._findConvertTarget(t,e);return" n.cartesian?n.cartesian.datatopoint(i):n.axis?n.axis.toglobalcoord(n.axis.datatocoord(i)):null},vd.convertfrompixel="function(t,e,i){var" n.cartesian?n.cartesian.pointtodata(i):n.axis?n.axis.coordtodata(n.axis.tolocalcoord(i)):null},vd._findconverttarget="function(t,e){var" i,n,o="e.seriesModel,a=e.xAxisModel||o&&o.getReferringComponents(" xaxis")[0],r="e.yAxisModel||o&&o.getReferringComponents(" yaxis")[0],s="e.gridModel,u=this._coordsList;return""" o?l(u,i="o.coordinateSystem)<0&&(i=null):a&&r?i=this.getCartesian(a.componentIndex,r.componentIndex):a?n=this.getAxis(" x",a.componentindex):r?n="this.getAxis(" y",r.componentindex):s&&s.coordinatesystem="==this&&(i=this._coordsList[0]),{cartesian:i,axis:n}},VD.containPoint=function(t){var""" e="this._coordsList[0];if(e)return" e.containpoint(t)},vd._initcartesian="function(t,e,i){function" n(i){return function(n,s){if(th(n,t,e)){var l="n.get(" position");"x"="==i?" top"!="=l&&"bottom"!==l&&o[l="bottom"]&&(l="top"===l?"bottom":"top"):"left"!==l&&"right"!==l&&o[l="left"]&&(l="left"===l?"right":"left"),o[l]=!0;var""" u="new" pd(i,wl(n),[0,0],n.get("type"),l),h="category" =="=u.type;u.onBand=h&&n.get(" boundarygap"),u.inverse="n.get(" inverse"),n.axis="u,u.model=n,u.grid=this,u.index=s,this._axesList.push(u),a[i][s]=u,r[i]++}}}var""" o="{left:!1,right:!1,top:!1,bottom:!1},a={x:{},y:{}},r={x:0,y:0};if(e.eachComponent(" xaxis",n("x"),this),e.eachcomponent("yaxis",n("y"),this),!r.x||!r.y)return" this._axesmap="{},void(this._axesList=[]);this._axesMap=a,d(a.x,function(e,i){d(a.y,function(n,o){var" a="x" +i+"y"+o,r="new" ju(a);r.grid="this,r.model=t,this._coordsMap[a]=r,this._coordsList.push(r),r.addAxis(e),r.addAxis(n)},this)},this)},VD._updateScale=function(t,e){function" i(t,e,i){d(t.mapdimension(e.dim,!0),function(i){e.scale.unionextentfromdata(t,pl(t,i))})}d(this._axeslist,function(t){t.scale.setextent(1 0,-1 0)}),t.eachseries(function(n){if(rh(n)){var s="this.getCartesian(a.componentIndex,r.componentIndex),l=n.getData(),u=s.getAxis(" x"),h="s.getAxis(" y");"list"="==l.type&&(i(l,u),i(l,h))}},this)},VD.getTooltipAxes=function(t){var""" d(this.getcartesians(),function(n){var gd="[" xaxis","yaxis"];eh.create="function(t,e){var" " i="[];return" t.eachcomponent("grid",function(n,o){var eh(n,t,e);a.name="grid_" +o,a.resize(n,e,!0),n.coordinatesystem="a,i.push(a)}),t.eachSeries(function(t){if(rh(t)){var" fd="Math.PI,WD=function(t,e){this.opt=e,this.axisModel=t,r(e,{labelOffset:0,nameDirection:1,tickDirection:1,labelDirection:1,silent:!0}),this.group=new" tb;var tb({position:e.position.slice(),rotation:e.rotation});i.updatetransform(),this._transform="i.transform,this._dumbGroup=i};WD.prototype={constructor:WD,hasBuilder:function(t){return!!HD[t]},add:function(t){HD[t].call(this)},getGroup:function(){return" this.group}};var hd="{axisLine:function(){var" t="this.opt,e=this.axisModel;if(e.get(" axisline.show")){var" _m(qn({anid:"line",shape:{x1:o[0],y1:o[1],x2:r[0],y2:r[1]},style:s,strokecontainthreshold:t.strokecontainthreshold||5,silent:!0,z2:1})));var h&&(h="[h,h]),null!=l){" string"="=typeof" l&&(l="[l,l])," string"!="typeof" u&&"number"!="typeof" u||(u="[u,u]);var" c="u[0],f=u[1];d([{rotate:t.rotation+Math.PI/2,offset:h[0],r:0},{rotate:t.rotation-Math.PI/2,offset:h[1],r:Math.sqrt((o[0]-r[0])*(o[0]-r[0])+(o[1]-r[1])*(o[1]-r[1]))}],function(e,i){if(" none"!="=l[i]&&null!=l[i]){var" n,o="e.get(" namelocation"),r="t.nameDirection,s=e.getModel(" nametextstyle"),l="e.get("nameGap")||0,u=this.axisModel.axis.getExtent(),h=u[0]""">u[1]?-1:1,c=["start"===o?u[0]-h*l:"end"===o?u[1]+h*l:(u[0]+u[1])/2,fh(o)?t.labelOffset+r*l:0],d=e.get("nameRotate");null!=d&&(d=d*FD/180);var f;fh(o)?n=ZD(t.rotation,null!=d?d:t.rotation,r):(n=lh(t,o,d||0,u),null!=(f=t.axisNameAvailableWidth)&&(f=Math.abs(f/Math.sin(n.rotation)),!isFinite(f)&&(f=null)));var p=s.getFont(),g=e.get("nameTruncate",!0)||{},m=g.ellipsis,v=T(t.nameTruncateMaxWidth,g.maxWidth,f),y=null!=m&&null!=v?tI(i,v,p,m,{minChar:2,placeholder:g.placeholder}):i,x=e.get("tooltip",!0),_=e.mainType,w={componentType:_,name:i,$vars:["name"]};w[_+"Index"]=e.componentIndex;var b=new rM({anid:"name",__fullText:i,__truncatedText:y,position:c,rotation:n.rotation,silent:uh(e),z2:1,tooltip:x&&x.show?a({content:i,formatter:function(){return i},formatterParams:w},x):null});go(b.style,s,{text:y,textFont:p,textFill:s.getTextColor()||e.get("axisLine.lineStyle.color"),textAlign:n.textAlign,textVerticalAlign:n.textVerticalAlign}),e.get("triggerEvent")&&(b.eventData=sh(e),b.eventData.targetType="axisName",b.eventData.name=i),this._dumbGroup.add(b),b.updateTransform(),this.group.add(b),b.decomposeTransform()}}},ZD=WD.innerTextLayout=function(t,e,i){var n,o,a=Uo(e-t);return Xo(a)?(o=i>0?"top":"bottom",n="center"):Xo(a-FD)?(o=i>0?"bottom":"top",n="center"):(o="middle",n=a>0&&a<fd?i>0?"right":"left":i>0?"left":"right"),{rotation:a,textAlign:n,textVerticalAlign:o}},UD=d,XD=v,jD=Fs({type:"axis",_axisPointer:null,axisPointerClass:null,render:function(t,e,i,n){this.axisPointerClass&&bh(t),jD.superApply(this,"render",arguments),Ah(this,t,0,i,0,!0)},updateAxisPointer:function(t,e,i,n,o){Ah(this,t,0,i,0,!1)},remove:function(t,e){var i=this._axisPointer;i&&i.remove(e),jD.superApply(this,"remove",arguments)},dispose:function(t,e){Dh(this,e),jD.superApply(this,"dispose",arguments)}}),YD=[];jD.registerAxisPointerClass=function(t,e){YD[t]=e},jD.getAxisPointerClass=function(t){return t&&YD[t]};var qD=["axisLine","axisTickLabel","axisName"],KD=["splitArea","splitLine"],$D=jD.extend({type:"cartesianAxis",axisPointerClass:"CartesianAxisPointer",render:function(t,e,i,n){this.group.removeAll();var o=this._axisGroup;if(this._axisGroup=new tb,this.group.add(this._axisGroup),t.get("show")){var a=t.getCoordSysModel(),r=Ch(a,t),s=new WD(t,r);d(qD,s.add,s),this._axisGroup.add(s.getGroup()),d(KD,function(e){t.get(e+".show")&&this["_"+e](t,a)},this),Co(o,this._axisGroup,t),$D.superCall(this,"render",t,e,i,n)}},remove:function(){this._splitAreaColors=null},_splitLine:function(t,e){var i=t.axis;if(!i.scale.isBlank()){var n=t.getModel("splitLine"),o=n.getModel("lineStyle"),a=o.get("color");a=y(a)?a:[a];for(var s=e.coordinateSystem.getRect(),l=i.isHorizontal(),u=0,h=i.getTicksCoords({tickModel:n}),c=[],d=[],f=o.getLineStyle(),p=0;p<h.length;p++){var g="i.toGlobalCoord(h[p].coord);l?(c[0]=g,c[1]=s.y,d[0]=g,d[1]=s.y+s.height):(c[0]=s.x,c[1]=g,d[0]=s.x+s.width,d[1]=g);var" m="u++%a.length,v=h[p].tickValue;this._axisGroup.add(new" _m(qn({anid:null!="v?" line_"+h[p].tickvalue:null,shape:{x1:c[0],y1:c[1],x2:d[0],y2:d[1]},style:r({stroke:a[m]},f),silent:!0})))}}},_splitarea:function(t,e){var" i="t.axis;if(!i.scale.isBlank()){var" n="t.getModel(" splitarea"),o="n.getModel(" areastyle"),a="o.get("color"),s=e.coordinateSystem.getRect(),l=i.getTicksCoords({tickModel:n,clamp:!0});if(l.length){var""" u="a.length,h=this._splitAreaColors,c=R(),d=0;if(h)for(m=0;m<l.length;m++){var" f="h.get(l[m].tickValue);if(null!=f){d=(f+(u-1)*m)%u;break}}var" p="i.toGlobalCoord(l[0].coord),g=o.getAreaStyle();a=y(a)?a:[a];for(var" v,x,_,w,b="i.toGlobalCoord(l[m].coord);i.isHorizontal()?(v=p,x=s.y,_=b-v,w=s.height,p=v+_):(v=s.x,x=p,_=s.width,p=x+(w=b-x));var" s="l[m-1].tickValue;null!=S&&c.set(S,d),this._axisGroup.add(new" ym({anid:null!="S?" area_"+s:null,shape:{x:v,y:x,width:_,height:w},style:r({fill:a[d]},g),silent:!0})),d="(d+1)%u}this._splitAreaColors=c}}}});$D.extend({type:" xaxis"}),$d.extend({type:"yaxis"}),fs({type:"grid",render:function(t,e){this.group.removeall(),t.get("show")&&this.group.add(new"" ym({shape:t.coordinatesystem.getrect(),style:r({fill:t.get("backgroundcolor")},t.getitemstyle()),silent:!0,z2:-1}))}}),ps(function(t){t.xaxis&&t.yaxis&&!t.grid&&(t.grid="{})}),zs(AD(" line","circle","line")),rs(dd("line")),ns(gt.processor.statistic,function(t){return{seriestype:t,modifyoutputend:!0,reset:function(t,e,i){var" r="a.getBaseAxis(),s=a.getOtherAxis(r),l=r.getExtent(),u=l[1]-l[0],h=Math.round(n.count()/u);if(h">1){var c;"string"==typeof o?c=CD[o]:"function"==typeof o&&(c=o),c&&t.setData(n.downSample(n.mapDimension(s.dim),1/h,c,LD))}}}}}("line"));var JD=qI.extend({type:"series.__base_bar__",getInitialData:function(t,e){return gl(this.getSource(),this)},getMarkerPosition:function(t){var e=this.coordinateSystem;if(e){var i=e.dataToPoint(e.clampData(t)),n=this.getData(),o=n.getLayout("offset"),a=n.getLayout("size");return i[e.getBaseAxis().isHorizontal()?0:1]+=o+a/2,i}return[NaN,NaN]},defaultOption:{zlevel:0,z:2,coordinateSystem:"cartesian2d",legendHoverLink:!0,barMinHeight:0,barMinAngle:0,large:!1,largeThreshold:400,progressive:3e3,progressiveChunkMode:"mod",itemStyle:{},emphasis:{}}});JD.extend({type:"series.bar",dependencies:["grid","polar"],brushSelector:"rect",getProgressive:function(){return!!this.get("large")&&this.get("progressive")},getProgressiveThreshold:function(){var t=this.get("progressiveThreshold"),e=this.get("largeThreshold");return e>t&&(t=e),t}});var QD=Qb([["fill","color"],["stroke","borderColor"],["lineWidth","borderWidth"],["stroke","barBorderColor"],["lineWidth","barBorderWidth"],["opacity"],["shadowBlur"],["shadowOffsetX"],["shadowOffsetY"],["shadowColor"]]),tC={getBarItemStyle:function(t){var e=QD(this,t);if(this.getBorderLineDash){var i=this.getBorderLineDash();i&&(e.lineDash=i)}return e}},eC=["itemStyle","barBorderWidth"];a(Po.prototype,tC),Hs({type:"bar",render:function(t,e,i){this._updateDrawMode(t);var n=t.get("coordinateSystem");return"cartesian2d"!==n&&"polar"!==n||(this._isLargeDraw?this._renderLarge(t,e,i):this._renderNormal(t,e,i)),this.group},incrementalPrepareRender:function(t,e,i){this._clear(),this._updateDrawMode(t)},incrementalRender:function(t,e,i,n){this._incrementalRenderLarge(t,e)},_updateDrawMode:function(t){var e=t.pipelineContext.large;(null==this._isLargeDraw||e^this._isLargeDraw)&&(this._isLargeDraw=e,this._clear())},_renderNormal:function(t,e,i){var n,o=this.group,a=t.getData(),r=this._data,s=t.coordinateSystem,l=s.getBaseAxis();"cartesian2d"===s.type?n=l.isHorizontal():"polar"===s.type&&(n="angle"===l.dim);var u=t.isAnimationEnabled()?t:null;a.diff(r).add(function(e){if(a.hasValue(e)){var i=a.getItemModel(e),r=nC[s.type](a,e,i),l=iC[s.type](a,e,i,r,n,u);a.setItemGraphicEl(e,l),o.add(l),Oh(l,a,e,i,r,t,n,"polar"===s.type)}}).update(function(e,i){var l=r.getItemGraphicEl(i);if(a.hasValue(e)){var h=a.getItemModel(e),c=nC[s.type](a,e,h);l?Mo(l,{shape:c},u,e):l=iC[s.type](a,e,h,c,n,u,!0),a.setItemGraphicEl(e,l),o.add(l),Oh(l,a,e,h,c,t,n,"polar"===s.type)}else o.remove(l)}).remove(function(t){var e=r.getItemGraphicEl(t);"cartesian2d"===s.type?e&&Ph(t,u,e):e&&Nh(t,u,e)}).execute(),this._data=a},_renderLarge:function(t,e,i){this._clear(),Rh(t,this.group)},_incrementalRenderLarge:function(t,e){Rh(e,this.group,!0)},dispose:B,remove:function(t){this._clear(t)},_clear:function(t){var e=this.group,i=this._data;t&&t.get("animation")&&i&&!this._isLargeDraw?i.eachItemGraphicEl(function(e){"sector"===e.type?Nh(e.dataIndex,t,e):Ph(e.dataIndex,t,e)}):e.removeAll(),this._data=null}});var iC={cartesian2d:function(t,e,i,n,o,r,s){var l=new yM({shape:a({},n)});if(r){var u=l.shape,h=o?"height":"width",c={};u[h]=0,c[h]=n[h],zM[s?"updateProps":"initProps"](l,{shape:c},r,e)}return l},polar:function(t,e,i,n,o,a,s){var l=n.startAngle<n.endangle,u=new hm({shape:r({clockwise:l},n)});if(a){var h="u.shape,c=o?" r":"endangle",d="{};h[c]=o?0:n.startAngle,d[c]=n[c],zM[s?" updateprops":"initprops"](u,{shape:d},a,e)}return"" u}},nc="{cartesian2d:function(t,e,i){var" n="t.getItemLayout(e),o=Eh(i,n),a=n.width">0?1:-1,r=n.height>0?1:-1;return{x:n.x+a*o/2,y:n.y+r*o/2,width:n.width-a*o,height:n.height-r*o}},polar:function(t,e,i){var n=t.getItemLayout(e);return{cx:n.cx,cy:n.cy,r0:n.r0,r:n.r,startAngle:n.startAngle,endAngle:n.endAngle}}},oC=kn.extend({type:"largeBar",shape:{points:[]},buildPath:function(t,e){for(var i=e.points,n=this.__startPoint,o=this.__valueIdx,a=0;a<i.length;a+=2)n[this.__valueidx]=i[a+o],t.moveto(n[0],n[1]),t.lineto(i[a],i[a+1])}});rs(v(ol,"bar")),rs(la),zs({seriestype:"bar",reset:function(t){t.getdata().setvisual("legendsymbol","roundrect")}});var ac="function(t,e,i){e=y(e)&&{coordDimensions:e}||a({},e);var" n="t.getSource(),o=wA(n,e),r=new" ya(o,t);return r.initdata(n,i),r},rc="{updateSelectedMap:function(t){this._targetList=y(t)?t.slice():[],this._selectTargetMap=p(t||[],function(t,e){return" t.set(e.name,e),t},r())},select:function(t,e){var i="null!=e?this._targetList[e]:this._selectTargetMap.get(t);" single"="==this.get(" selectedmode")&&this._selecttargetmap.each(function(t){t.selected="!1}),i&&(i.selected=!0)},unSelect:function(t,e){var""" this[i.selected?"unselect":"select"](t,e),i.selected},isselected:function(t,e){var i&&i.selected}},sc="Ws({type:" series.pie",init:function(t){sc.superapply(this,"init",arguments),this.legenddataprovider="function(){return" " this.getrawdata()},this.updateselectedmap(this._createselectablelist()),this._defaultlabelline(t)},mergeoption:function(t){sc.supercall(this,"mergeoption",t),this.updateselectedmap(this._createselectablelist())},getinitialdata:function(t,e){return ac(this,["value"])},_createselectablelist:function(){for(var t="this.getRawData(),e=t.mapDimension(" value"),i="[],n=0,o=t.count();n<o;n++)i.push({name:t.getName(n),value:t.get(e,n),selected:fr(t,n," selected")});return"" i},getdataparams:function(t){var e="this.getData(),i=sC.superCall(this," getdataparams",t),n="[];return" e.each(e.mapdimension("value"),function(t){n.push(t)}),i.percent="Zo(n,t,e.hostModel.get(" percentprecision")),i.$vars.push("percent"),i},_defaultlabelline:function(t){ci(t,"labelline",["show"]);var" lc="Gh.prototype;lC.updateData=function(t,e,i){function" n(){s.stopanimation(!0),s.animateto({shape:{r:h.r+l.get("hoveroffset")}},300,"elasticout")}function o(){s.stopanimation(!0),s.animateto({shape:{r:h.r}},300,"elasticout")}var s="this.childAt(0),l=t.hostModel,u=t.getItemModel(e),h=t.getItemLayout(e),c=a({},h);c.label=null,i?(s.setShape(c)," scale"="==l.getShallow(" animationtype")?(s.shape.r="h.r0,Io(s,{shape:{r:h.r}},l,e)):(s.shape.endAngle=h.startAngle,Mo(s,{shape:{endAngle:h.endAngle}},l,e))):Mo(s,{shape:c},l,e);var""" d="t.getItemVisual(e," color");s.usestyle(r({linejoin:"bevel",fill:d},u.getmodel("itemstyle").getitemstyle())),s.hoverstyle="u.getModel(" emphasis.itemstyle").getitemstyle();var"" f="u.getShallow(" cursor");f&&s.attr("cursor",f),vh(this,t.getitemlayout(e),l.isselected(null,e),l.get("selectedoffset"),l.get("animation")),s.off("mouseover").off("mouseout").off("emphasis").off("normal"),u.get("hoveranimation")&&l.isanimationenabled()&&s.on("mouseover",n).on("mouseout",o).on("emphasis",n).on("normal",o),this._updatelabel(t,e),co(this)},lc._updatelabel="function(t,e){var" l="a.getModel(" label"),u="a.getModel(" emphasis.label"),h="a.getModel("labelLine"),c=a.getModel("emphasis.labelLine"),s=t.getItemVisual(e,"color");po(n.style,n.hoverStyle={},l,u,{labelFetcher:t.hostModel,labelDataIndex:e,defaultText:t.getName(e),autoColor:s,useInsideStyle:!!r.inside},{textAlign:r.textAlign,textVerticalAlign:r.verticalAlign,opacity:t.getItemVisual(e,"opacity")}),n.ignore=n.normalIgnore=!l.get("show"),n.hoverIgnore=!u.get("show"),i.ignore=i.normalIgnore=!h.get("show"),i.hoverIgnore=!c.get("show"),i.setStyle({stroke:s,opacity:t.getItemVisual(e,"opacity")}),i.setStyle(h.getModel("lineStyle").getLineStyle()),i.hoverStyle=c.getModel("lineStyle").getLineStyle();var""" tb;this._sectorgroup="t},render:function(t,e,i,n){if(!n||n.from!==this.uid){var" o="t.getData(),a=this._data,r=this.group,s=e.get(" animation"),l="!a,u=t.get(" animationtype"),h="v(Bh,this.uid,t,s,i),c=t.get("selectedMode");if(o.diff(a).add(function(t){var""" gh(o,t);l&&"scale"!="=u&&e.eachChild(function(t){t.stopAnimation(!0)}),c&&e.on(" click",h),o.setitemgraphicel(t,e),r.add(e)}).update(function(t,e){var">0&&"scale"!==u){var d=o.getItemLayout(0),f=Math.max(i.getWidth(),i.getHeight())/2,p=m(r.removeClipPath,r);r.setClipPath(this._createClipPath(d.cx,d.cy,f,d.startAngle,d.clockwise,p,t))}else r.removeClipPath();this._data=o}},dispose:function(){},_createClipPath:function(t,e,i,n,o,a,r){var s=new hM({shape:{cx:t,cy:e,r0:0,r:i,startAngle:n,endAngle:n,clockwise:o}});return Io(s,{shape:{endAngle:n+(o?1:-1)*Math.PI*2}},r,a),s},containPoint:function(t,e){var i=e.getData().getItemLayout(0);if(i){var n=t[0]-i.cx,o=t[1]-i.cy,a=Math.sqrt(n*n+o*o);return a<=i.r&&a>=i.r0}}});var uC=function(t,e){d(e,function(e){e.update="updateView",Os(e,function(i,n){var o={};return n.eachComponent({mainType:"series",subType:t,query:i},function(t){t[e.method]&&t[e.method](i.name,i.dataIndex);var n=t.getData();n.each(function(e){var i=n.getName(e);o[i]=t.isSelected(i)||!1})}),{name:i.name,selected:o}})})},hC=function(t){return{getTargetSeries:function(e){var i={},n=R();return e.eachSeriesByType(t,function(t){t.__paletteScope=i,n.set(t.uid,t)}),n},reset:function(t,e){var i=t.getRawData(),n={},o=t.getData();o.each(function(t){var e=o.getRawIndex(t);n[e]=t}),i.each(function(e){var a=n[e],r=null!=a&&o.getItemVisual(a,"color",!0);if(r)i.setItemVisual(e,"color",r);else{var s=i.getItemModel(e).get("itemStyle.color")||t.getColorFromPalette(i.getName(e)||e+"",t.__paletteScope,i.count());i.setItemVisual(e,"color",s),null!=a&&o.setItemVisual(a,"color",s)}})}}},cC=function(t,e,i,n){var o,a,r=t.getData(),s=[],l=!1;r.each(function(i){var n,u,h,c,d=r.getItemLayout(i),f=r.getItemModel(i),p=f.getModel("label"),g=p.get("position")||f.get("emphasis.label.position"),m=f.getModel("labelLine"),v=m.get("length"),y=m.get("length2"),x=(d.startAngle+d.endAngle)/2,_=Math.cos(x),w=Math.sin(x);o=d.cx,a=d.cy;var b="inside"===g||"inner"===g;if("center"===g)n=d.cx,u=d.cy,c="center";else{var S=(b?(d.r+d.r0)/2*_:d.r*_)+o,M=(b?(d.r+d.r0)/2*w:d.r*w)+a;if(n=S+3*_,u=M+3*w,!b){var I=S+_*(v+e-d.r),T=M+w*(v+e-d.r),A=I+(_<0?-1:1)*y,d=t;n=a+(_<0?-5:5),u=d,h=[[s,m],[i,t],[a,d]]}c=b?"center":_>0?"left":"right"}var C=p.getFont(),L=p.get("rotate")?_<0?-x+math.pi:-x:0,k=ke(t.getformattedlabel(i,"normal")||r.getname(i),c,c,"top");l=!!l,d.label={x:n,y:u,position:g,height:k.height,len:v,len2:y,linepoints:h,textalign:c,verticalalign:"middle",rotation:l,inside:b},b||s.push(d.label)}),!l&&t.get("avoidlabeloverlap")&&wh(s,o,a,e,i,n)},dc=2*math.pi,fc=math.pi 180,pc="function(t){return{seriesType:t,reset:function(t,e){var" i="e.findComponents({mainType:" legend"});if(i&&i.length){var" n="t.getData();n.filterSelf(function(t){for(var" e="n.getName(t),o=0;o<i.length;o++)if(!i[o].isSelected(e))return!1;return!0})}}}};uC(" pie",[{type:"pietoggleselect",event:"pieselectchanged",method:"toggleselected"},{type:"pieselect",event:"pieselected",method:"select"},{type:"pieunselect",event:"pieunselected",method:"unselect"}]),zs(hc("pie")),rs(v(function(t,e,i,n){e.eachseriesbytype(t,function(t){var" r="i.getWidth(),s=i.getHeight(),l=Math.min(r,s),u=Bo(o[0],r),h=Bo(o[1],s),c=Bo(a[0],l/2),d=Bo(a[1],l/2),f=-t.get(" startangle")*fc,p="t.get(" minangle")*fc,g="0;e.each(n,function(t){!isNaN(t)&&g++});var""" m="e.getSum(n),v=Math.PI/(m||g)*2,x=t.get(" clockwise"),_="t.get(" rosetype"),w="t.get("stillShowZeroSum"),b=e.getDataExtent(n);b[0]=0;var""" s="dC,M=0,I=f,T=x?1:-1;if(e.each(n,function(t,i){var" n;if(isnan(t))e.setitemlayout(i,{angle:nan,startangle:nan,endangle:nan,clockwise:x,cx:u,cy:h,r0:c,r:_?nan:d});else{(n="area" !="=_?0===m&&w?v:t*v:dC/g)<p?(n=p,S-=p):M+=t;var" o="I+T*n;e.setItemLayout(i,{angle:n,startAngle:I,endAngle:o,clockwise:x,cx:u,cy:h,r0:c,r:_?zo(t,b,[c,d]):d}),I=o}}),S<dC&&g)if(S<=.001){var" a="dC/g;e.each(n,function(t,i){if(!isNaN(t)){var" v="S/M,I=f,e.each(n,function(t,i){if(!isNaN(t)){var" gl(this.getsource(),this)},brushselector:"point",getprogressive:function(){var t="this.option.progressive;return" null="=t?this.option.large?5e3:this.get(" progressive"):t},getprogressivethreshold:function(){var" gc="Zn({shape:{points:null},symbolProxy:null,buildPath:function(t,e){var">=0;s--){var l=2*s,u=n[l]-a/2,h=n[l+1]-r/2;if(t>=u&&e>=h&&t<=u+a&&e<=h+r)return s}return-1}}),mc="Zh.prototype;mC.isPersistent=function(){return!this._incremental},mC.updateData=function(t){this.group.removeAll();var" e="new" gc({recthover:!0,cursor:"default"});e.setshape({points:t.getlayout("symbolpoints")}),this._setcommon(e,t),this.group.add(e),this._incremental="null},mC.updateLayout=function(t){if(!this._incremental){var" i="2*(t.endIndex-t.startIndex),n=4*t.startIndex*2;e=new" float32array(e.buffer,n,i)}t.setshape("points",e)})}},mc.incrementalprepareupdate="function(t){this.group.removeAll(),this._clearIncremental(),t.count()">2e6?(this._incremental||(this._incremental=new Hn({silent:!0})),this.group.add(this._incremental)):this._incremental=null},mC.incrementalUpdate=function(t,e){var i;this._incremental?(i=new gC,this._incremental.addDisplayable(i,!0)):((i=new gC({rectHover:!0,cursor:"default",startIndex:t.start,endIndex:t.end})).incremental=!0,this.group.add(i)),i.setShape({points:e.getLayout("symbolPoints")}),this._setCommon(i,e,!!this._incremental)},mC._setCommon=function(t,e,i){var n=e.hostModel,o=e.getVisual("symbolSize");t.setShape("size",o instanceof Array?o:[o,o]),t.symbolProxy=$l(e.getVisual("symbol"),0,0,0,0),t.setColor=t.symbolProxy.setColor;var a=t.shape.size[0]<4;t.usestyle(n.getmodel("itemstyle").getitemstyle(a?["color","shadowblur","shadowcolor"]:["color"]));var r="e.getVisual(" color");r&&t.setcolor(r),i||(t.seriesindex="n.seriesIndex,t.on(" mousemove",function(e){t.dataindex="null;var""" i="t.findDataIndex(e.offsetX,e.offsetY);i">=0&&(t.dataIndex=i+(t.startIndex||0))}))},mC.remove=function(){this._clearIncremental(),this._incremental=null,this.group.removeAll()},mC._clearIncremental=function(){var t=this._incremental;t&&t.clearDisplaybles()},Hs({type:"scatter",render:function(t,e,i){var n=t.getData();this._updateSymbolDraw(n,t).updateData(n),this._finished=!0},incrementalPrepareRender:function(t,e,i){var n=t.getData();this._updateSymbolDraw(n,t).incrementalPrepareUpdate(n),this._finished=!1},incrementalRender:function(t,e,i){this._symbolDraw.incrementalUpdate(t,e.getData()),this._finished=t.end===e.getData().count()},updateTransform:function(t,e,i){var n=t.getData();if(this.group.dirty(),!this._finished||n.count()>1e4||!this._symbolDraw.isPersistent())return{update:!0};var o=DD().reset(t);o.progress&&o.progress({start:0,end:n.count()},n),this._symbolDraw.updateLayout(n)},_updateSymbolDraw:function(t,e){var i=this._symbolDraw,n=e.pipelineContext.large;return i&&n===this._isLargeDraw||(i&&i.remove(),i=this._symbolDraw=n?new Zh:new Au,this._isLargeDraw=n,this.group.removeAll()),this.group.add(i.group),i},remove:function(t,e){this._symbolDraw&&this._symbolDraw.remove(!0),this._symbolDraw=null},dispose:function(){}}),zs(AD("scatter","circle")),Rs(DD("scatter")),u(Uh,rD),Xh.prototype.getIndicatorAxes=function(){return this._indicatorAxes},Xh.prototype.dataToPoint=function(t,e){var i=this._indicatorAxes[e];return this.coordToPoint(i.dataToCoord(t),e)},Xh.prototype.coordToPoint=function(t,e){var i=this._indicatorAxes[e].angle;return[this.cx+t*Math.cos(i),this.cy-t*Math.sin(i)]},Xh.prototype.pointToData=function(t){var e=t[0]-this.cx,i=t[1]-this.cy,n=Math.sqrt(e*e+i*i);e/=n,i/=n;for(var o,a=Math.atan2(-i,e),r=1/0,s=-1,l=0;l<this._indicatoraxes.length;l++){var 2="==i?i=5:i*=2,i*e}var" u="this._indicatorAxes[l],h=Math.abs(a-u.angle);h<r&&(o=u,s=l,r=h)}return[s,+(o&&o.coodToData(n))]},Xh.prototype.resize=function(t,e){var" i="t.get(" center"),n="e.getWidth(),o=e.getHeight(),a=Math.min(n,o)/2;this.cx=Bo(i[0],n),this.cy=Bo(i[1],o),this.startAngle=t.get(" startangle")*math.pi 180;var"" r="t.get(" radius");"string"!="typeof" " r&&"number"!="typeof" r||(r="[0,r]),this.r0=Bo(r[0],a),this.r=Bo(r[1],a),d(this._indicatorAxes,function(t,e){t.setExtent(this.r0,this.r);var" i(t){var e="Math.pow(10,Math.floor(Math.log(t)/Math.LN10)),i=t/e;return" n="this._indicatorAxes,o=this._model;d(n,function(t){t.scale.setExtent(1/0,-1/0)}),t.eachSeriesByType(" radar",function(e,i){if("radar"="==e.get(" coordinatesystem")&&t.getcomponent("radar",e.get("radarindex"))="==o){var""" a="e.getData();d(n,function(t){t.scale.unionExtentFromData(a,a.mapDimension(t.dim))})}},this);var" o="t.model,r=t.scale,s=o.getMin(),l=o.getMax(),u=r.getInterval();if(null!=s&&null!=l)r.setExtent(+s,+l),r.setInterval((l-s)/a);else" if(null!="s){var" h;do{h="s+u*a,r.setExtent(+s,h),r.setInterval(u),u=i(u)}while(h<n[1]&&isFinite(h)&&isFinite(n[1]))}else" c;do{c="l-u*a,r.setExtent(c,+l),r.setInterval(u),u=i(u)}while(c">n[0]&&isFinite(c)&&isFinite(n[0]))}else{r.getTicks().length-1>a&&(u=i(u));var d=Math.round((n[0]+n[1])/2/u)*u,f=Math.round(a/2);r.setExtent(Vo(d-f*u),Vo(d+(a-f)*u)),r.setInterval(u)}})},Xh.dimensions=[],Xh.create=function(t,e){var i=[];return t.eachComponent("radar",function(n){var o=new Xh(n,t,e);i.push(o),n.coordinateSystem=o}),t.eachSeriesByType("radar",function(t){"radar"===t.get("coordinateSystem")&&(t.coordinateSystem=i[t.get("radarIndex")||0])}),i},Ga.register("radar",Xh);var vC=OD.valueAxis,yC=(Gs({type:"radar",optionUpdated:function(){var t=this.get("boundaryGap"),e=this.get("splitNumber"),o=this.get("scale"),s=this.get("axisLine"),l=this.get("axisTick"),u=this.get("axisLabel"),h=this.get("name"),c=this.get("name.show"),d=this.get("name.formatter"),p=this.get("nameGap"),g=this.get("triggerEvent"),m=f(this.get("indicator")||[],function(f){null!=f.max&&f.max>0&&!f.min?f.min=0:null!=f.min&&f.min<0&&!f.max&&(f.max=0);var m="h;if(null!=f.color&&(m=r({color:f.color},h)),f=n(i(f),{boundaryGap:t,splitNumber:e,scale:o,axisLine:s,axisTick:l,axisLabel:u,name:f.text,nameLocation:" end",namegap:p,nametextstyle:m,triggerevent:g},!1),c||(f.name ),"string"="=typeof" " d){var v="f.name;f.name=d.replace(" {value}",null!="v?v:" ")}else"function"="=typeof""" d&&(f.name="d(f.name,f));var" y="a(new" po(f,null,this.ecmodel),xa);return y.maintype="radar" ,y.componentindex="this.componentIndex,y},this);this.getIndicatorModels=function(){return" m}},defaultoption:{zlevel:0,z:0,center:["50%","50%"],radius:"75%",startangle:90,name:{show:!0},boundarygap:[0,0],splitnumber:5,namegap:15,scale:!1,shape:"polygon",axisline:n({linestyle:{color:"#bbb"}},vc.axisline),axislabel:jh(vc.axislabel,!1),axistick:jh(vc.axistick,!1),splitline:jh(vc.splitline,!0),splitarea:jh(vc.splitarea,!0),indicator:[]}}),["axisline","axisticklabel","axisname"]);fs({type:"radar",render:function(t,e,i){this.group.removeall(),this._buildaxes(t),this._buildsplitlineandarea(t)},_buildaxes:function(t){var e="t.coordinateSystem;d(f(e.getIndicatorAxes(),function(t){return" new wd(t.model,{position:[e.cx,e.cy],rotation:t.angle,labeldirection:-1,tickdirection:-1,namedirection:1})}),function(t){d(yc,t.add,t),this.group.add(t.getgroup())},this)},_buildsplitlineandarea:function(t){function e(t,e,i){var n="i%e.length;return" t[n]="t[n]||[],n}var" i="t.coordinateSystem,n=i.getIndicatorAxes();if(n.length){var" o="t.get(" shape"),a="t.getModel(" splitline"),s="t.getModel("splitArea"),l=a.getModel("lineStyle"),u=s.getModel("areaStyle"),h=a.get("show"),c=s.get("show"),p=l.get("color"),g=u.get("color");p=y(p)?p:[p],g=y(g)?g:[g];var""" x="n[0].getTicksCoords(),_=i.cx,w=i.cy,b=0;b<x.length;b++)h&&m[D=e(m,p,b)].push(new" sm({shape:{cx:_,cy:w,r:x[b].coord}})),c&&b<x.length-1&&v[d="e(v,g,b)].push(new" cm({shape:{cx:_,cy:w,r0:x[b].coord,r:x[b+1].coord}}));else for(var s,m="f(n,function(t,e){var" s="null==S?n.length-1:Math.min(n.length-1,S),f(n,function(t){return" i.coordtopoint(t.coord,e)})}),i="[],b=0;b<=S;b++){for(var" t="[],A=0;A<n.length;A++)T.push(M[A][b]);if(T[0]&&T.push(T[0].slice()),h&&m[D=e(m,p,b)].push(new" gm({shape:{points:t}})),c&&i){var d="e(v,g,b-1);v[D].push(new" pm({shape:{points:t.concat(i)}}))}i="T.slice().reverse()}var" c="l.getLineStyle(),L=u.getAreaStyle();d(v,function(t,e){this.group.add(OM(t,{style:r({stroke:" none",fill:g[e%g.length]},l),silent:!0}))},this),d(m,function(t,e){this.group.add(om(t,{style:r({fill:"none",stroke:p[e%p.length]},c),silent:!0}))},this)}}});var" xc="qI.extend({type:" series.radar",dependencies:["radar"],init:function(t){xc.superapply(this,"init",arguments),this.legenddataprovider="function(){return" this.getrawdata()}},getinitialdata:function(t,e){return ac(this,{generatecoord:"indicator_",generatecoordcount:1 0})},formattooltip:function(t){var ea(""="==n?this.name:n)+" <br>"+f(i,function(i,n){var o=e.get(e.mapDimension(i.dim),t);return ea(i.name+" : "+o)}).join("<br>")},defaultOption:{zlevel:0,z:2,coordinateSystem:"radar",legendHoverLink:!0,radarIndex:0,lineStyle:{width:2,type:"solid"},label:{position:"top"},symbol:"emptyCircle",symbolSize:4}});Hs({type:"radar",render:function(t,e,n){function o(t,e){var i=t.getItemVisual(e,"symbol")||"circle",n=t.getItemVisual(e,"color");if("none"!==i){var o=Yh(t.getItemVisual(e,"symbolSize")),a=$l(i,-1,-1,2,2,n);return a.attr({style:{strokeNoScale:!0},z2:100,scale:[o[0]/2,o[1]/2]}),a}}function a(e,i,n,a,r,s){n.removeAll();for(var l=0;l<i.length-1;l++){var u="o(a,r);u&&(u.__dimIdx=l,e[l]?(u.attr(" position",e[l]),zm[s?"initprops":"updateprops"](u,{position:i[l]},t,r)):u.attr("position",i[l]),n.add(u))}}function" s(t){return f(t,function(t){return[l.cx,l.cy]})}var l="t.coordinateSystem,u=this.group,h=t.getData(),c=this._data;h.diff(c).add(function(e){var" i="h.getItemLayout(e);if(i){var" n="new" pm,o="new" gm,r="{shape:{points:i}};n.shape.points=s(i),o.shape.points=s(i),Io(n,r,t,e),Io(o,r,t,e);var" tb,u="new" tb;l.add(o),l.add(n),l.add(u),a(o.shape.points,i,u,h,e,!0),h.setitemgraphicel(e,l)}}).update(function(e,i){var n(){l.attr("ignore",m)}function o(){l.attr("ignore",g)}var a="h.getItemModel(e),s=t.childAt(0),l=t.childAt(1),c=t.childAt(2),d=h.getItemVisual(e," color");u.add(t),s.usestyle(r(a.getmodel("linestyle").getlinestyle(),{fill:"none",stroke:d})),s.hoverstyle="a.getModel(" emphasis.linestyle").getlinestyle();var"" f="a.getModel(" areastyle"),p="a.getModel(" emphasis.areastyle"),g="f.isEmpty()&&f.parentModel.isEmpty(),m=p.isEmpty()&&p.parentModel.isEmpty();m=m&&g,l.ignore=g,l.useStyle(r(f.getAreaStyle(),{fill:d,opacity:.7})),l.hoverStyle=p.getAreaStyle();var""" v="a.getModel(" itemstyle").getitemstyle(["color"]),y="a.getModel(" emphasis.itemstyle").getitemstyle(),x="a.getModel("label"),_=a.getModel("emphasis.label");c.eachChild(function(t){t.setStyle(v),t.hoverStyle=i(y),po(t.style,t.hoverStyle,x,_,{labelFetcher:h.hostModel,labelDataIndex:e,labelDimIndex:t.__dimIdx,defaultText:h.get(h.dimensions[t.__dimIdx],e),autoColor:d,isRectText:!0})}),t.off("mouseover").off("mouseout").off("normal").off("emphasis"),t.on("emphasis",n).on("mouseover",n).on("normal",o).on("mouseout",o),co(t)}),this._data=h},remove:function(){this.group.removeAll(),this._data=null},dispose:function(){}});zs(hC("radar")),zs(AD("radar","circle")),Rs(function(t){t.eachSeriesByType("radar",function(t){var""" e="t.getData(),i=[],n=t.coordinateSystem;if(n){for(var" o="n.getIndicatorAxes(),a=0;a<o.length;a++)e.each(e.mapDimension(o[a].dim),function(t,e){i[e]=i[e]||[],i[e][a]=n.dataToPoint(t,a)});e.each(function(t){i[t][0]&&i[t].push(i[t][0].slice()),e.setItemLayout(t,i[t])})}})}),Ns(pC(" radar")),ps(function(t){var" _c="[126,25],wC=[[[0,3.5],[7,11.2],[15,11.9],[30,7],[42,.7],[52,.7],[56,7.7],[59,.7],[64,.7],[64,0],[5,0],[0,3.5]],[[13,16.1],[19,14.7],[16,21.7],[11,23.1],[13,16.1]],[[12,32.2],[14,38.5],[15,38.5],[13,32.2],[12,32.2]],[[16,47.6],[12,53.2],[13,53.2],[18,47.6],[16,47.6]],[[6,64.4],[8,70],[9,70],[8,64.4],[6,64.4]],[[23,82.6],[29,79.8],[30,79.8],[25,82.6],[23,82.6]],[[37,70.7],[43,62.3],[44,62.3],[39,70.7],[37,70.7]],[[48,51.1],[51,45.5],[53,45.5],[50,51.1],[48,51.1]],[[51,35],[51,28.7],[53,28.7],[53,35],[51,35]],[[52,22.4],[55,17.5],[56,17.5],[53,22.4],[52,22.4]],[[58,12.6],[62,7],[63,7],[60,12.6],[58,12.6]],[[0,3.5],[0,93.1],[64,93.1],[64,0],[63,0],[63,92.4],[1,92.4],[1,3.5],[0,3.5]]],bC=0;bC<wC.length;bC++)for(var" sc="0;SC<wC[bC].length;SC++)wC[bC][SC][0]/=10.5,wC[bC][SC][1]/=-14,wC[bC][SC][0]+=_C[0],wC[bC][SC][1]+=_C[1];var" mc="function(t,e){" china"="==t&&e.push(new" " tu("南海诸岛",f(wc,function(t){return{type:"polygon",exterior:t}}),_c))},ic="{" 南海诸岛":[32,80],"广东":[0,-10],"香港":[10,5],"澳门":[-10,10],"天津":[5,5]},tc="function(t,e){if(" states":[-99,38],"united states of america":[-99,38]},dc="function(t,e){if(" world"="==t){var" i;var n,o="e.specialAreas||{},a=e.geoJSON;try{n=a?nD(a):[]}catch(t){throw" new error("invalid geojson format\n"+t.message)}return d(n,function(e){var nc(e).originroot="n.root,NC(e).boundingRect=n.boundingRect,n},makeGraphic:function(t,e,i){var" a;var r="n.originRoot,s=n.boundingRect;return" n.originroothostkey?a="Kh(e,s).root:(n.originRootHostKey=i,a=r),o.set(i,a)},removeGraphic:function(t,e,i){var" i,n="[],o=R(),a=R();return" d(jh(t),function(r){var s="OC[r.type].load(t,r);d(s.regions,function(t){var" de(0,0,0,0)}},makegraphic:$h("makegraphic"),removegraphic:$h("removegraphic")};h(qi.extend({type:"series.map",dependencies:["geo"],layoutmode:"box",needsdrawmap:!1,seriesgroup:[],getinitialdata:function(t){for(var d(ec.load(this.getmaptype(),this.option.namemap).regions,function(t){var t="this.option.geoIndex;return" null!="t?this.dependentModels.geo[t]:null},getMapType:function(){return(this.getHostGeoModel()||this).option.map},getRawValue:function(t){var" e.get(e.mapdimension("value"),t)},getregionmodel:function(t){var e.getitemmodel(e.indexofname(t))},formattooltip:function(t){for(var a.join(", ")+"<br>"+ea(n+" : "+i)},getTooltipPosition:function(t){if(null!=t){var e=this.getData().getName(t),i=this.coordinateSystem,n=i.getRegion(e);return n&&i.dataToPoint(n.center)}},setZoom:function(t){this.option.zoom=t},setCenter:function(t){this.option.center=t},defaultOption:{zlevel:0,z:2,coordinateSystem:"geo",map:"",left:"center",top:"center",aspectScale:.75,showLegendSymbol:!0,dataRangeHoverLink:!0,boundingCoords:null,center:null,zoom:1,scaleLimit:null,label:{show:!1,color:"#000"},itemStyle:{borderWidth:.5,borderColor:"#444",areaColor:"#eee"},emphasis:{label:{show:!0,color:"rgb(100,0,0)"},itemStyle:{areaColor:"rgba(255,215,0,0.8)"}}}}),rC);var RC="\0_ec_interaction_mutex";Os({type:"takeGlobalCursor",event:"globalCursorTaken",update:"update"},function(){}),h(nc,fw);var zC={axisPointer:1,tooltip:1,brush:1};yc.prototype={constructor:yc,draw:function(t,e,i,n,o){var a="geo"===t.mainType,r=t.getData&&t.getData();a&&e.eachComponent({mainType:"series",subType:"map"},function(e){r||e.getHostGeoModel()!==t||(r=e.getData())});var s=t.coordinateSystem;this._updateBackground(s);var l=this._regionsGroup,u=this.group,h=s.scale,c={position:s.position,scale:h};!l.childAt(0)||o?u.attr(c):Mo(u,c,t),l.removeAll();var f=["itemStyle"],p=["emphasis","itemStyle"],g=["label"],m=["emphasis","label"],v=R();d(s.regions,function(e){var i=v.get(e.name)||v.set(e.name,new tb),n=new MM({shape:{paths:[]}});i.add(n);var o,s=(C=t.getRegionModel(e.name)||t).getModel(f),u=C.getModel(p),c=gc(s),y=gc(u),x=C.getModel(g),_=C.getModel(m);if(r){o=r.indexOfName(e.name);var w=r.getItemVisual(o,"color",!0);w&&(c.fill=w)}d(e.geometries,function(t){if("polygon"===t.type){n.shape.paths.push(new pM({shape:{points:t.exterior}}));for(var e=0;e<(t.interiors?t.interiors.length:0);e++)n.shape.paths.push(new pm({shape:{points:t.interiors[e]}}))}}),n.setstyle(c),n.style.strokenoscale="!0,n.culling=!0;var" b="x.get(" show"),s="_.get(" show"),m="r&&isNaN(r.get(r.mapDimension("value"),o)),I=r&&r.getItemLayout(o);if(a||M&&(b||S)||I&&I.showLabel){var""" t,a="a?e.name:o;(!r||o">=0)&&(T=t);var D=new rM({position:e.center.slice(),scale:[1/h[0],1/h[1]],z2:10,silent:!0});po(D.style,D.hoverStyle={},x,_,{labelFetcher:T,labelDataIndex:A,defaultText:e.name,useInsideStyle:!1},{textAlign:"center",textVerticalAlign:"middle"}),i.add(D)}if(r)r.setItemGraphicEl(o,i);else{var C=t.getRegionModel(e.name);n.eventData={componentType:"geo",componentIndex:t.componentIndex,geoIndex:t.componentIndex,name:e.name,region:C&&C.option||{}}}(i.__regions||(i.__regions=[])).push(e),co(i,y,{hoverSilentOnTouch:!!t.get("selectedMode")}),l.add(i)}),this._updateController(t,e,i),mc(this,t,l,i,n),vc(t,l)},remove:function(){this._regionsGroup.removeAll(),this._backgroundGroup.removeAll(),this._controller.dispose(),this._mapName&&EC.removeGraphic(this._mapName,this.uid),this._mapName=null,this._controllerHost={}},_updateBackground:function(t){var e=t.map;this._mapName!==e&&d(EC.makeGraphic(e,this.uid),function(t){this._backgroundGroup.add(t)},this),this._mapName=e},_updateController:function(t,e,i){function n(){var e={type:"geoRoam",componentType:l};return e[l+"Id"]=t.id,e}var o=t.coordinateSystem,r=this._controller,s=this._controllerHost;s.zoomLimit=t.get("scaleLimit"),s.zoom=o.getZoom(),r.enable(t.get("roam")||!1);var l=t.mainType;r.off("pan").on("pan",function(t){this._mouseDownFlag=!1,dc(s,t.dx,t.dy),i.dispatchAction(a(n(),{dx:t.dx,dy:t.dy}))},this),r.off("zoom").on("zoom",function(t){if(this._mouseDownFlag=!1,fc(s,t.scale,t.originX,t.originY),i.dispatchAction(a(n(),{zoom:t.scale,originX:t.originX,originY:t.originY})),this._updateGroup){var e=this.group.scale;this._regionsGroup.traverse(function(t){"text"===t.type&&t.attr("scale",[1/e[0],1/e[1]])})}},this),r.setPointerChecker(function(e,n,a){return o.getViewRectAfterRoam().contain(n,a)&&!pc(e,i,t)})}};var BC="__seriesMapHighDown",VC="__seriesMapCallKey";Hs({type:"map",render:function(t,e,i,n){if(!n||"mapToggleSelect"!==n.type||n.from!==this.uid){var o=this.group;if(o.removeAll(),!t.getHostGeoModel()){if(n&&"geoRoam"===n.type&&"series"===n.componentType&&n.seriesId===t.id)(a=this._mapDraw)&&o.add(a.group);else if(t.needsDrawMap){var a=this._mapDraw||new yc(i,!0);o.add(a.group),a.draw(t,e,i,this,n),this._mapDraw=a}else this._mapDraw&&this._mapDraw.remove(),this._mapDraw=null;t.get("showLegendSymbol")&&e.getComponent("legend")&&this._renderSymbols(t,e,i)}}},remove:function(){this._mapDraw&&this._mapDraw.remove(),this._mapDraw=null,this.group.removeAll()},dispose:function(){this._mapDraw&&this._mapDraw.remove(),this._mapDraw=null},_renderSymbols:function(t,e,i){var n=t.originalData,o=this.group;n.each(n.mapDimension("value"),function(e,i){if(!isNaN(e)){var r=n.getItemLayout(i);if(r&&r.point){var s=r.point,l=r.offset,u=new sM({style:{fill:t.getData().getVisual("color")},shape:{cx:s[0]+9*l,cy:s[1],r:3},silent:!0,z2:8+(l?0:NM+1)});if(!l){var h=t.mainSeries.getData(),c=n.getName(i),d=h.indexOfName(c),f=n.getItemModel(i),p=f.getModel("label"),g=f.getModel("emphasis.label"),m=h.getItemGraphicEl(d),y=A(t.getFormattedLabel(d,"normal"),c),x=A(t.getFormattedLabel(d,"emphasis"),y),_=m[BC],w=Math.random();if(!_){_=m[BC]={};var b=v(xc,!0),S=v(xc,!1);m.on("mouseover",b).on("mouseout",S).on("emphasis",b).on("normal",S)}m[VC]=w,a(_,{recordVersion:w,circle:u,labelModel:p,hoverLabelModel:g,emphasisText:x,normalText:y}),_c(_,!1)}o.add(u)}}})}}),Os({type:"geoRoam",event:"geoRoam",update:"updateTransform"},function(t,e){var i=t.componentType||"series";e.eachComponent({mainType:i,query:t},function(e){var n=e.coordinateSystem;if("geo"===n.type){var o=wc(n,t,e.get("scaleLimit"));e.setCenter&&e.setCenter(o.center),e.setZoom&&e.setZoom(o.zoom),"series"===i&&d(e.seriesGroup,function(t){t.setCenter(o.center),t.setZoom(o.zoom)})}})});var GC=Q;h(bc,Tw),Sc.prototype={constructor:Sc,type:"view",dimensions:["x","y"],setBoundingRect:function(t,e,i,n){return this._rect=new de(t,e,i,n),this._rect},getBoundingRect:function(){return this._rect},setViewRect:function(t,e,i,n){this.transformTo(t,e,i,n),this._viewRect=new de(t,e,i,n)},transformTo:function(t,e,i,n){var o=this.getBoundingRect(),a=this._rawTransformable;a.transform=o.calculateTransform(new de(t,e,i,n)),a.decomposeTransform(),this._updateTransform()},setCenter:function(t){t&&(this._center=t,this._updateCenterAndZoom())},setZoom:function(t){t=t||1;var e=this.zoomLimit;e&&(null!=e.max&&(t=Math.min(e.max,t)),null!=e.min&&(t=Math.max(e.min,t))),this._zoom=t,this._updateCenterAndZoom()},getDefaultCenter:function(){var t=this.getBoundingRect();return[t.x+t.width/2,t.y+t.height/2]},getCenter:function(){return this._center||this.getDefaultCenter()},getZoom:function(){return this._zoom||1},getRoamTransform:function(){return this._roamTransformable.getLocalTransform()},_updateCenterAndZoom:function(){var t=this._rawTransformable.getLocalTransform(),e=this._roamTransformable,i=this.getDefaultCenter(),n=this.getCenter(),o=this.getZoom();n=Q([],n,t),i=Q([],i,t),e.origin=n,e.position=[i[0]-n[0],i[1]-n[1]],e.scale=[o,o],this._updateTransform()},_updateTransform:function(){var t=this._roamTransformable,e=this._rawTransformable;e.parent=t,t.updateTransform(),e.updateTransform(),wt(this.transform||(this.transform=[]),e.transform||xt()),this._rawTransform=e.getLocalTransform(),this.invTransform=this.invTransform||[],Tt(this.invTransform,this.transform),this.decomposeTransform()},getViewRect:function(){return this._viewRect},getViewRectAfterRoam:function(){var t=this.getBoundingRect().clone();return t.applyTransform(this.transform),t},dataToPoint:function(t,e,i){var n=e?this._rawTransform:this.transform;return i=i||[],n?GC(i,t,n):G(i,t)},pointToData:function(t){var e=this.invTransform;return e?GC([],t,e):[t[0],t[1]]},convertToPixel:v(Mc,"dataToPoint"),convertFromPixel:v(Mc,"pointToData"),containPoint:function(t){return this.getViewRectAfterRoam().contain(t[0],t[1])}},h(Sc,Tw),Ic.prototype={constructor:Ic,type:"geo",dimensions:["lng","lat"],containCoord:function(t){for(var e=this.regions,i=0;i<e.length;i++)if(e[i].contain(t))return!0;return!1},transformto:function(t,e,i,n){var o="this.getBoundingRect(),a=this._invertLongitute;o=o.clone(),a&&(o.y=-o.y-o.height);var" r="this._rawTransformable;if(r.transform=o.calculateTransform(new" de(t,e,i,n)),r.decomposetransform(),a){var s="r.scale;s[1]=-s[1]}r.updateTransform(),this._updateTransform()},getRegion:function(t){return" this._regionsmap.get(t)},getregionbycoord:function(t){for(var e="this.regions,i=0;i<e.length;i++)if(e[i].contain(t))return" e[i]},addgeocoord:function(t,e){this._namecoordmap.set(t,e)},getgeocoord:function(t){return this._namecoordmap.get(t)},getboundingrect:function(){return this._rect},datatopoint:function(t,e,i){if("string"="=typeof" t&&(t="this.getGeoCoord(t)),t)return" sc.prototype.datatopoint.call(this,t,e,i)},converttopixel:v(tc,"datatopoint"),convertfrompixel:v(tc,"pointtodata")},h(ic,sc);var fc="{dimensions:Ic.prototype.dimensions,create:function(t,e){var" i="[];t.eachComponent(" geo",function(t,n){var" l="new" ic(o+n,o,t.get("namemap"),r);l.aspectscale="a,l.zoomLimit=t.get(" scalelimit"),i.push(l),dc(l,t),t.coordinatesystem="l,l.model=t,l.resize=Ac,l.resize(t,e)}),t.eachSeries(function(t){if(" geo"="==t.get("coordinateSystem")){var""" n="{};return" t.eachseriesbytype("map",function(t){if(!t.gethostgeomodel()){var a="new" ic(n,n,o(f(t,function(t){return t.get("namemap")})));a.zoomlimit="T.apply(null,f(t,function(t){return" t.get("scalelimit")})),i.push(a),a.resize="Ac,a.aspectScale=t[0].get(" aspectscale"),a.resize(t[0],e),d(t,function(t){t.coordinatesystem="a,Dc(a,t)})}),i},getFilledRegions:function(t,e,i){for(var" " d(ec.load(e,i).regions,function(t){var t.getdata()}),t[0].get("mapvaluecalculation")),n="0;n<t.length;n++)t[n].originalData=t[n].getData();for(n=0;n<t.length;n++)t[n].seriesGroup=t,t[n].needsDrawMap=0===n&&!t[n].getHostGeoModel(),t[n].setData(i.cloneShallow()),t[n].mainSeries=t[0]})}),Ps(function(t){var" wc="d,HC=" \0__link_datas",zc="\0__link_mainData" ,uc="function(t,e){this.name=t||" ",this.depth="0,this.height=0,this.parentNode=null,this.dataIndex=-1,this.children=[],this.viewChildren=[],this.hostTree=e};UC.prototype={constructor:UC,isRemoved:function(){return""" this.dataindex<0},eachnode:function(t,e,i){"function"="=typeof" t&&(i="e,e=t,t=null),_(t=t||{})&&(t={order:t});var" n,o="t.order||" preorder",a="this[t.attr||" children"];"preorder"="==o&&(n=e.call(i,this));for(var""">e&&(e=n.height)}this.height=e+1},getNodeById:function(t){if(this.getId()===t)return this;for(var e=0,i=this.children,n=i.length;e<n;e++){var o="i[e].getNodeById(t);if(o)return" o}},contains:function(t){if(t="==this)return!0;for(var" e="0,i=this.children,n=i.length;e<n;e++){var" o}},getancestors:function(t){for(var e.reverse(),e},getvalue:function(t){var e.get(e.getdimension(t||"value"),this.dataindex)},setlayout:function(t,e){this.dataindex>=0&&this.hostTree.data.setItemLayout(this.dataIndex,t,e)},getLayout:function(){return this.hostTree.data.getItemLayout(this.dataIndex)},getModel:function(t){if(!(this.dataIndex<0)){var e,i="this.hostTree,n=i.data.getItemModel(this.dataIndex),o=this.getLevelModel();return" o||0!="=this.children.length&&(0===this.children.length||!1!==this.isExpand)||(e=this.getLeavesModel()),n.getModel(t,(o||e||i.hostModel).getModel(t))}},getLevelModel:function(){return(this.hostTree.levelModels||[])[this.depth]},getLeavesModel:function(){return" this.hosttree.leavesmodel},setvisual:function(t,e){this.dataindex>=0&&this.hostTree.data.setItemVisual(this.dataIndex,t,e)},getVisual:function(t,e){return this.hostTree.data.getItemVisual(this.dataIndex,t,e)},getRawIndex:function(){return this.hostTree.data.getRawIndex(this.dataIndex)},getId:function(){return this.hostTree.data.getId(this.dataIndex)},isAncestorOf:function(t){for(var e=t.parentNode;e;){if(e===this)return!0;e=e.parentNode}return!1},isDescendantOf:function(t){return t!==this&&t.isAncestorOf(this)}},Bc.prototype={constructor:Bc,type:"tree",eachNode:function(t,e,i){this.root.eachNode(t,e,i)},getNodeByDataIndex:function(t){var e=this.data.getRawIndex(t);return this._nodes[e]},getNodeByName:function(t){return this.root.getNodeByName(t)},update:function(){for(var t=this.data,e=this._nodes,i=0,n=e.length;i<n;i++)e[i].dataindex=-1;for(var i="0,n=t.count();i<n;i++)e[t.getRawIndex(i)].dataIndex=i},clearLayouts:function(){this.data.clearItemLayouts()}},Bc.createTree=function(t,e,i){function" n(t,e){var s="new" uc(t.name,o);e?vc(s,e):o.root="s,o._nodes.push(s);var" l="t.children;if(l)for(var" u="0;u<l.length;u++)n(l[u],s)}var" o="new" bc(e,i.levels,i.leaves),a="[],r=1;n(t),o.root.updateDepthAndHeight(0);var" ya(s,e);return l.initdata(a),lc({maindata:l,struct:o,structattr:"tree"}),o.update(),o},qi.extend({type:"series.tree",layoutinfo:null,layoutmode:"box",getinitialdata:function(t){var e="{name:t.name,children:t.data},i=t.leaves||{},n={};n.leaves=i;var">a&&(a=t.depth)});var r=t.expandAndCollapse&&t.initialTreeDepth>=0?t.initialTreeDepth:a;return o.root.eachNode("preorder",function(t){var e=t.hostTree.data.getRawDataItem(t.dataIndex);t.isExpand=e&&null!=e.collapsed?!e.collapsed:t.depth<=r}),o.data},getorient:function(){var t="this.get(" orient");return"horizontal"="==t?t=" lr":"vertical"="==t&&(t="TB"),t},setZoom:function(t){this.option.zoom=t},setCenter:function(t){this.option.center=t},formatTooltip:function(t){for(var""" e="this.getData().tree,i=e.root.children[0],n=e.getNodeByDataIndex(t),o=n.getValue(),a=n.name;n&&n!==i;)a=n.parentNode.name+" ."+a,n="n.parentNode;return" " ea(a+(isnan(o)||null="=o?" ":"" : "+o))},defaultoption:{zlevel:0,z:2,coordinatesystem:"view",left:"12%",top:"12%",right:"12%",bottom:"12%",layout:"orthogonal",roam:!1,nodescaleratio:.4,center:null,zoom:1,orient:"lr",symbol:"emptycircle",symbolsize:7,expandandcollapse:!0,initialtreedepth:2,linestyle:{color:"#ccc",width:1.5,curveness:.5},itemstyle:{color:"lightsteelblue",bordercolor:"#c23531",borderwidth:1.5},label:{show:!0,color:"#555"},leaves:{label:{show:!0}},animationeasing:"linear",animationduration:700,animationdurationupdate:1e3}}),hs({type:"tree",init:function(t,e){this._oldtree,this._maingroup="new" tb,this._controller="new" nc(e.getzr()),this._controllerhost="{target:this.group},this.group.add(this._mainGroup)},render:function(t,e,i,n){var" o="t.getData(),a=t.layoutInfo,r=this._mainGroup,s=t.get(" layout");"radial"="==s?r.attr(" position",[a.x+a.width 2,a.y+a.height 2]):r.attr("position",[a.x,a.y]),this._updateviewcoordsys(t),this._updatecontroller(t,e,i);var"" l="this._data,u={expandAndCollapse:t.get(" expandandcollapse"),layout:s,orient:t.getorient(),curvature:t.get("linestyle.curveness"),symbolrotate:t.get("symbolrotate"),symboloffset:t.get("symboloffset"),hoveranimation:t.get("hoveranimation"),usenamelabel:!0,fadein:!0};o.diff(l).add(function(e){qc(o,e)&&ed(o,e,null,r,t,u)}).update(function(e,i){var" n="l.getItemGraphicEl(i);Qc(o,e)?ed(o,e,n,r,t,u):n&&id(l,i,n,r,t,u)}).remove(function(e){var" i="l.getItemGraphicEl(e);i&&id(l,e,i,r,t,u)}).execute(),this._nodeScaleRatio=t.get(" nodescaleratio"),this._updatenodeandlinkscale(t),!0="==u.expandAndCollapse&&o.eachItemGraphicEl(function(e,n){e.off(" click").on("click",function(){i.dispatchaction({type:"treeexpandandcollapse",seriesid:t.id,dataindex:n})})}),this._data="o},_updateViewCoordSys:function(t){var""" a="t.coordinateSystem=new" sc;a.zoomlimit="t.get(" scalelimit"),a.setboundingrect(n[0],n[1],o[0]-n[0],o[1]-n[1]),a.setcenter(t.get("center")),a.setzoom(t.get("zoom")),this.group.attr({position:a.position,scale:a.scale}),this._viewcoordsys="a},_updateController:function(t,e,i){var" r="a.getBoundingRect();return" r.applytransform(a.transform),r.contain(n,o)&&!pc(e,i,t)}),n.enable(t.get("roam")),o.zoomlimit="t.get(" scalelimit"),o.zoom="t.coordinateSystem.getZoom(),n.off(" pan").off("zoom").on("pan",function(e){dc(o,e.dx,e.dy),i.dispatchaction({seriesid:t.id,type:"treeroam",dx:e.dx,dy:e.dy})},this).on("zoom",function(e){fc(o,e.scale,e.originx,e.originy),i.dispatchaction({seriesid:t.id,type:"treeroam",zoom:e.scale,originx:e.originx,originy:e.originy}),this._updatenodeandlinkscale(t)},this)},_updatenodeandlinkscale:function(t){var"" 1;var o.levels="n,Bc.createTree(i,this,o).data},optionUpdated:function(){this.resetViewRoot()},formatTooltip:function(t){var" ea(e.getname(t)+": "+n)},getdataparams:function(t){var e.treepathinfo="hd(i,this),e},setLayoutInfo:function(t){this.layoutInfo=this.layoutInfo||{},a(this.layoutInfo,t)},mapIdToIndex:function(t){var" null="=i&&e.set(t,i=this._idIndexMapCount++),i},getViewRoot:function(){return" this._viewroot},resetviewroot:function(t){t?this._viewroot="t:t=this._viewRoot;var" xc="5;fd.prototype={constructor:fd,render:function(t,e,i,n){var">=0;d--){var f=c[d],p=f.node,g=f.width,m=f.text;h>u.width&&(h-=g-s,g=s,m=null);var y=new pM({shape:{points:pd(a,0,g,l,d===c.length-1,0===d)},style:r(i.getItemStyle(),{lineJoin:"bevel",text:m,textFill:n.getTextColor(),textFont:n.getFont()}),z:10,onclick:v(o,p)});this.group.add(y),gd(y,t,p),a+=g+8}},remove:function(){this.group.removeAll()}};var jC=m,YC=tb,qC=yM,KC=d,$C=["label"],JC=["emphasis","label"],QC=["upperLabel"],tL=["emphasis","upperLabel"],eL=10,iL=1,nL=2,oL=Qb([["fill","color"],["stroke","strokeColor"],["lineWidth","strokeWidth"],["shadowBlur"],["shadowOffsetX"],["shadowOffsetY"],["shadowColor"]]),aL=function(t){var e=oL(t);return e.stroke=e.fill=e.lineWidth=null,e};Hs({type:"treemap",init:function(t,e){this._containerGroup,this._storage={nodeGroup:[],background:[],content:[]},this._oldTree,this._breadcrumb,this._controller,this._state="ready"},render:function(t,e,i,n){if(!(l(e.findComponents({mainType:"series",subType:"treemap",query:n}),t)<0)){this.seriesmodel=t,this.api=i,this.ecmodel=e;var o="sd(n,[" treemapzoomtonode","treemaproottonode"],t),a="n&&n.type,r=t.layoutInfo,s=!this._oldTree,u=this._storage,h=" treemaproottonode"="==a&&o&&u?{rootNodeGroup:u.nodeGroup[o.node.getRawIndex()],direction:n.direction}:null,c=this._giveContainerGroup(r),d=this._doRender(c,t,h);s||a&&"treemapZoomToNode"!==a&&"treemapRootToNode"!==a?d.renderFinally():this._doAnimation(c,d,t,h),this._resetController(i),this._renderBreadcrumb(t,i,o)}},_giveContainerGroup:function(t){var""" e="this._containerGroup;return" e||(e="this._containerGroup=new" yc,this._initevents(e),this.group.add(e)),e.attr("position",[t.x,t.y]),e},_dorender:function(t,e,i){function n(t,e,i,o,a){function r(t){return t.getid()}function s(r,s){var l="null!=r?t[r]:null,u=null!=s?e[s]:null,c=h(l,u,i,a);c&&n(l&&l.viewChildren||[],u&&u.viewChildren||[],c,o,a+1)}o?(e=t,KC(t,function(t,e){!t.isRemoved()&&s(e,e)})):new" us(e,t,r,r).add(s).update(s).remove(v(s,null)).execute()}var c="function(t){var" t&&kc(t,function(t,i){var n="e[i];KC(t,function(t){t&&(n.push(t),t.__tmWillDelete=1)})}),e}(l);return" this._oldtree="o,this._storage=s,{lastsForAnimation:r,willDeleteEls:c,renderFinally:function(){KC(c,function(t){KC(t,function(t){t.parent&&t.parent.remove(t)})}),KC(u,function(t){t.invisible=!0,t.dirty()})}}},_doAnimation:function(t,e,i,n){if(i.get(" animation")){var" a,l="t.parent;if(n&&" drilldown"="==n.direction)a=l===n.rootNodeGroup?{shape:{x:0,y:0,width:l.__tmNodeWidth,height:l.__tmNodeHeight},style:{opacity:0}}:{style:{opacity:0}};else{var" " u="0,h=0;l.__tmWillDelete||(u=l.__tmNodeWidth/2,h=l.__tmNodeHeight/2),a=" nodegroup"="==e?{position:[u,h],style:{opacity:0}}:{shape:{x:u,y:h,width:0,height:0},style:{opacity:0}}}a&&s.add(t,a,o,r)}})}),KC(this._storage,function(t,i){KC(t,function(t,n){var" nc(t.getzr())).enable(this.seriesmodel.get("roam")),e.on("pan",jc(this._onpan,this)),e.on("zoom",jc(this._onzoom,this)));var i="new" de(0,0,t.getwidth(),t.getheight());e.setpointerchecker(function(t,e,n){return i.contain(e,n)})},_clearcontroller:function(){var t="this._controller;t&&(t.dispose(),t=null)},_onPan:function(t){if(" animating"!="=this._state&&(Math.abs(t.dx)">3||Math.abs(t.dy)>3)){var e=this.seriesModel.getData().tree.root;if(!e)return;var i=e.getLayout();if(!i)return;this.api.dispatchAction({type:"treemapMove",from:this.uid,seriesId:this.seriesModel.id,rootRect:{x:i.x+t.dx,y:i.y+t.dy,width:i.width,height:i.height}})}},_onZoom:function(t){var e=t.originX,i=t.originY;if("animating"!==this._state){var n=this.seriesModel.getData().tree.root;if(!n)return;var o=n.getLayout();if(!o)return;var a=new de(o.x,o.y,o.width,o.height),r=this.seriesModel.layoutInfo;e-=r.x,i-=r.y;var s=xt();St(s,s,[-e,-i]),It(s,s,[t.scale,t.scale]),St(s,s,[e,i]),a.applyTransform(s),this.api.dispatchAction({type:"treemapRender",from:this.uid,seriesId:this.seriesModel.id,rootRect:{x:a.x,y:a.y,width:a.width,height:a.height}})}},_initEvents:function(t){t.on("click",function(t){if("ready"===this._state){var e=this.seriesModel.get("nodeClick",!0);if(e){var i=this.findTarget(t.offsetX,t.offsetY);if(i){var n=i.node;if(n.getLayout().isLeafRoot)this._rootToNode(i);else if("zoomToNode"===e)this._zoomToNode(i);else if("link"===e){var o=n.hostTree.data.getItemModel(n.dataIndex),a=o.get("link",!0),r=o.get("target",!0)||"blank";a&&window.open(a,r)}}}}},this)},_renderBreadcrumb:function(t,e,i){i||(i=null!=t.get("leafDepth",!0)?{node:t.getViewRoot()}:this.findTarget(e.getWidth()/2,e.getHeight()/2))||(i={node:t.getData().tree.root}),(this._breadcrumb||(this._breadcrumb=new fd(this.group))).render(t,e,i.node,jC(function(e){"animating"!==this._state&&(ud(t.getViewRoot(),e)?this._rootToNode({node:e}):this._zoomToNode({node:e}))},this))},remove:function(){this._clearController(),this._containerGroup&&this._containerGroup.removeAll(),this._storage={nodeGroup:[],background:[],content:[]},this._state="ready",this._breadcrumb&&this._breadcrumb.remove()},dispose:function(){this._clearController()},_zoomToNode:function(t){this.api.dispatchAction({type:"treemapZoomToNode",from:this.uid,seriesId:this.seriesModel.id,targetNode:t.node})},_rootToNode:function(t){this.api.dispatchAction({type:"treemapRootToNode",from:this.uid,seriesId:this.seriesModel.id,targetNode:t.node})},findTarget:function(t,e){var i;return this.seriesModel.getViewRoot().eachNode({attr:"viewChildren",order:"preorder"},function(n){var o=this._storage.background[n.getRawIndex()];if(o){var a=o.transformCoordToLocal(t,e),r=o.shape;if(!(r.x<=a[0]&&a[0]<=r.x+r.width&&r.y<=a[1]&&a[1]<=r.y+r.height))return!1;i={node:n,offsetx:a[0],offsety:a[1]}}},this),i}});for(var rl="[" treemapzoomtonode","treemaprender","treemapmove"],sl="0;sL<rL.length;sL++)Os({type:rL[sL],update:" updateview"},function(){});os({type:"treemaproottonode",update:"updateview"},function(t,e){e.eachcomponent({maintype:"series",subtype:"treemap",query:t},function(e,i){var"" n="sd(t,[" treemapzoomtonode","treemaproottonode"],e);if(n){var" o="e.getViewRoot();o&&(t.direction=ud(o,n.node)?" rollup":"drilldown"),e.resetviewroot(n.node)}})});var" ll="d,uL=w,hL=-1,cL=function(t){var" e="t.mappingMethod,n=t.type,o=this.option=i(t);this.type=n,this.mappingMethod=e,this._normalizeData=fL[e];var" a="dL[n];this.applyVisual=a.applyVisual,this.getColorMapper=a.getColorMapper,this._doMap=a._doMap[e]," piecewise"="==e?(wd(o),xd(o)):" category"="==e?o.categories?_d(o):wd(o,!0):(k("linear"!==e||o.dataExtent),wd(o))};cL.prototype={constructor:cL,mapValueToVisual:function(t){var""" this._domap(e,t)},getnormalizer:function(){return m(this._normalizedata,this)}};var dl="cL.visualHandlers={color:{applyVisual:Md(" color"),getcolormapper:function(){var" t="this.option;return" m("category"="==t.mappingMethod?function(t,e){return!e&&(t=this._normalizeData(t)),Id.call(this,t)}:function(e,i,n){var" qt(ut(t,this.option.parsedvisual),"rgba")},category:id,piecewise:function(t,e){var i="Dd.call(this,e);return" null="=i&&(i=qt(Ut(t,this.option.parsedVisual)," rgba")),i},fixed:td}},colorhue:bd(function(t,e){return" jt(t,e)}),colorsaturation:bd(function(t,e){return jt(t,null,e)}),colorlightness:bd(function(t,e){return jt(t,null,null,e)}),coloralpha:bd(function(t,e){return yt(t,e)}),opacity:{applyvisual:md("opacity"),_domap:ad([0,1])},liftz:{applyvisual:md("liftz"),_domap:{linear:td,category:td,piecewise:td,fixed:td}},symbol:{applyvisual:function(t,e,i){var if(ul(n))for(var in n)n.hasownproperty(o)&&i(o,n[o])},_domap:{linear:sd,category:id,piecewise:function(t,e){var zo(t,this.option.dataextent,[0,1],!0)},piecewise:function(t){var zo(i,[0,e.length-1],[0,1],!0)},category:function(t){var d(dl,function(e,i){t.push(i)}),t},cl.addvisualhandler="function(t,e){dL[t]=e},cL.isValidType=function(t){return" dl.hasownproperty(t)},cl.eachvisual="function(t,e,i){w(t)?d(t,e,i):e.call(i,t)},cL.mapVisual=function(t,e,i){var" n,o="y(t)?[]:w(t)?{}:(n=!0,null);return" cl.eachvisual(t,function(t,a){var r="e.call(i,t,a);n?o=r:o[a]=r}),o},cL.retrieveVisuals=function(t){var" e,i="{};return" t&&ll(dl,function(n,o){t.hasownproperty(o)&&(i[o]="t[o],e=!0)}),e?i:null},cL.prepareVisualTypes=function(t){if(uL(t)){var" t.sort(function(t,e){return"color"="==e&&" color"!="=t&&0===t.indexOf(" color")?1:-1}),t},cl.dependson="function(t,e){return"color"===e?!(!t||0!==t.indexOf(e)):t===e},cL.findPieceIndex=function(t,e,i){function""" n(e,i){var o,a="1/0,r=0,s=e.length;r<s;r++){var" l="e[r].value;if(null!=l){if(l===t||" string"="=typeof" " l&&l="==t+" ")return" r;i&&n(l,r)}}for(var u="e[r],h=u.interval,c=u.close;if(h){if(h[0]===-1/0){if(Ld(c[1],t,h[1]))return" r}else if(h[1]="==1/0){if(Ld(c[0],h[0],t))return" if(ld(c[0],h[0],t)&&ld(c[1],t,h[1]))return r;i&&n(h[0],r),i&&n(h[1],r)}}if(i)return pl="y,gL=" itemstyle",ml="{seriesType:" treemap",reset:function(t,e,i,n){var"" t?t.get(gl):null}),r,t.getviewroot().getancestors(),t)}},vl="Math.max,yL=Math.min,xL=T,_L=d,wL=[" itemstyle","borderwidth"],bl="[" itemstyle","gapwidth"],sl="["upperLabel","show"],ML=["upperLabel","height"],IL={seriesType:"treemap",reset:function(t,e,i,n){var""" v="treemapZoomToNode" =="=d?Xd(t,f,g,h,c):p?[p.width,p.height]:[h,c],y=s.sort;y&&" asc"!="=y&&" desc"!="=y&&(y="desc");var""" x="{squareRatio:s.squareRatio,sort:y,leafDepth:s.leafDepth};g.hostTree.clearLayouts();_={x:0,y:0,width:v[0],height:v[1],area:v[0]*v[1]};g.setLayout(_),Vd(g,x,!1,0);var" _="g.getLayout();_L(m,function(t,e){var" w="t.getData().tree.root;w.setLayout(jd(l,p,f),!0),t.setLayoutInfo(l),Yd(w,new" de(-l.x,-l.y,o,r),m,g,0)}};zs(ml),rs(il);var tl="function(t){this._directed=t||!1,this.nodes=[],this.edges=[],this._nodesMap={},this._edgesMap={},this.data,this.edgeData},AL=TL.prototype;AL.type=" graph",al.isdirected="function(){return" this._directed},al.addnode="function(t,e){t=t||" "+e;var" $d(t,e);return n.hostgraph="this,this.nodes.push(n),i[Kd(t)]=n,n}},AL.getNodeByIndex=function(t){var" this.nodes[e]},al.getnodebyid="function(t){return" this._nodesmap[kd(t)]},al.addedge="function(t,e,i){var" t&&(t="this.nodes[t])," number"="=typeof" e&&(e="this.nodes[e]),$d.isInstance(t)||(t=n[Kd(t)]),$d.isInstance(e)||(e=n[Kd(e)]),t&&e){var" jd(t,e,i);return r.hostgraph="this,this._directed&&(t.outEdges.push(r),e.inEdges.push(r)),t.edges.push(r),t!==e&&e.edges.push(r),this.edges.push(r),o[a]=r,r}}},AL.getEdgeByIndex=function(t){var" this.edges[e]},al.getedge="function(t,e){$d.isInstance(t)&&(t=t.id),$d.isInstance(e)&&(e=e.id);var" this._directed?i[t+"-"+e]:i[t+"-"+e]||i[e+"-"+t]},al.eachnode="function(t,e){for(var">=0&&t.call(e,i[o],o)},AL.eachEdge=function(t,e){for(var i=this.edges,n=i.length,o=0;o<n;o++)i[o].dataindex>=0&&i[o].node1.dataIndex>=0&&i[o].node2.dataIndex>=0&&t.call(e,i[o],o)},AL.breadthFirstTraverse=function(t,e,i,n){if($d.isInstance(e)||(e=this._nodesMap[Kd(e)]),e){for(var o="out"===i?"outEdges":"in"===i?"inEdges":"edges",a=0;a<this.nodes.length;a++)this.nodes[a].__visited=!1;if(!t.call(n,e,null))for(var r="[e];r.length;)for(var" s="r.shift(),l=s[o],a=0;a<l.length;a++){var" u="l[a],h=u.node1===s?u.node2:u.node1;if(!h.__visited){if(t.call(n,h,s))return;r.push(h),h.__visited=!0}}}},AL.update=function(){for(var" t="this.data,e=this.edgeData,i=this.nodes,n=this.edges,o=0,a=i.length;o<a;o++)i[o].dataIndex=-1;for(var" o="0,a=t.count();o<a;o++)i[t.getRawIndex(o)].dataIndex=o;e.filterSelf(function(t){var" i="n[e.getRawIndex(t)];return" i.node1.dataindex>=0&&i.node2.dataIndex>=0});for(var o=0,a=n.length;o<a;o++)n[o].dataindex=-1;for(var o="0,a=e.count();o<a;o++)n[e.getRawIndex(o)].dataIndex=o},AL.clone=function(){for(var" t="new" tl(this._directed),e="this.nodes,i=this.edges,n=0;n<e.length;n++)t.addNode(e[n].id,e[n].dataIndex);for(n=0;n<i.length;n++){var" t},$d.prototype="{constructor:$d,degree:function(){return" this.edges.length},indegree:function(){return this.inedges.length},outdegree:function(){return this.outedges.length},getmodel:function(t){if(!(this.dataindex<0))return this.hostgraph.data.getitemmodel(this.dataindex).getmodel(t)}},jd.prototype.getmodel="function(t){if(!(this.dataIndex<0))return" this.hostgraph.edgedata.getitemmodel(this.dataindex).getmodel(t)};var dl="function(t,e){return{getValue:function(i){var" n="this[t][e];return" n.get(n.getdimension(i||"value"),this.dataindex)},setvisual:function(i,n){this.dataindex>=0&&this[t][e].setItemVisual(this.dataIndex,i,n)},getVisual:function(i,n){return this[t][e].getItemVisual(this.dataIndex,i,n)},setLayout:function(i,n){this.dataIndex>=0&&this[t][e].setItemLayout(this.dataIndex,i,n)},getLayout:function(){return this[t][e].getItemLayout(this.dataIndex)},getGraphicEl:function(){return this[t][e].getItemGraphicEl(this.dataIndex)},getRawIndex:function(){return this[t][e].getRawIndex(this.dataIndex)}}};h($d,DL("hostGraph","data")),h(Jd,DL("hostGraph","edgeData")),TL.Node=$d,TL.Edge=Jd,ji($d),ji(Jd);var CL=function(t,e,i,n,o){for(var a=new TL(n),r=0;r<t.length;r++)a.addnode(t(t[r].id,t[r].name,r),r);for(var s="[],u=[],h=0,r=0;r<e.length;r++){var" c="e[r],d=c.source,f=c.target;a.addEdge(d,f,h)&&(u.push(c),s.push(T(c.id,d+" "> "+f)),h++)}var p,g=i.get("coordinateSystem");if("cartesian2d"===g||"polar"===g)p=gl(t,i);else{var m=Ga.get(g),v=m&&"view"!==m.type?m.dimensions||[]:[];l(v,"value")<0&&v.concat(["value"]);var y="wA(t,{coordDimensions:v});(p=new" ya(y,i)).initdata(t)}var x="new" ya(["value"],i);return x.initdata(u,s),o&&o(p,x),lc({maindata:p,struct:a,structattr:"graph",datas:{node:p,edge:x},datasattr:{node:"data",edge:"edgedata"}}),a.update(),a},ll="Ws({type:" series.graph",init:function(t){ll.superapply(this,"init",arguments),this.legenddataprovider="function(){return" " this._categoriesdata},this.filldatatextstyle(t.edges||t.links),this._updatecategoriesdata()},mergeoption:function(t){ll.superapply(this,"mergeoption",arguments),this.filldatatextstyle(t.edges||t.links),this._updatecategoriesdata()},mergedefaultandtheme:function(t){ll.superapply(this,"mergedefaultandtheme",arguments),ci(t,["edgelabel"],["show"])},getinitialdata:function(t,e){var i="t.edges||t.links||[],n=t.data||t.nodes||[],o=this;if(n&&i)return" cl(n,i,this,!0,function(t,i){function n(t){return(t="this.parsePath(t))&&" label"="==t[0]?r:t&&" emphasis"="==t[0]&&"label"===t[1]?l:this.parentModel}t.wrapMethod("getItemModel",function(t){var""" e="o._categoriesModels[t.getShallow(" category")];return" e&&(e.parentmodel="t.parentModel,t.parentModel=e),t});var" a="o.getModel(" edgelabel"),r="new" po({label:a.option},a.parentmodel,e),s="o.getModel(" emphasis.edgelabel"),l="new" po({emphasis:{label:s.option}},s.parentmodel,e);i.wrapmethod("getitemmodel",function(t){return t.customizegetparent(n),t})}).data},getgraph:function(){return this.getdata().graph},getedgedata:function(){return this.getgraph().edgedata},getcategoriesdata:function(){return this._categoriesdata},formattooltip:function(t,e,i){if("edge"="==i){var" n="this.getData(),o=this.getDataParams(t,i),a=n.graph.getEdgeByIndex(t),r=n.getName(a.node1.dataIndex),s=n.getName(a.node2.dataIndex),l=[];return" null!="r&&l.push(r),null!=s&&l.push(s),l=ea(l.join("> ")),o.value&&(l+=" : "+ea(o.value)),l}return LL.superApply(this,"formatTooltip",arguments)},_updateCategoriesData:function(){var t=f(this.option.categories||[],function(t){return null!=t.value?t:a({value:0},t)}),e=new yA(["value"],this);e.initData(t),this._categoriesData=e,this._categoriesModels=e.mapArray(function(t){return e.getItemModel(t,!0)})},setZoom:function(t){this.option.zoom=t},setCenter:function(t){this.option.center=t},isAnimationEnabled:function(){return LL.superCall(this,"isAnimationEnabled")&&!("force"===this.get("layout")&&this.get("force.layoutAnimation"))},defaultOption:{zlevel:0,z:2,coordinateSystem:"view",legendHoverLink:!0,hoverAnimation:!0,layout:null,focusNodeAdjacency:!1,circular:{rotateLabel:!1},force:{initLayout:null,repulsion:[0,50],gravity:.1,edgeLength:30,layoutAnimation:!0},left:"center",top:"center",symbol:"circle",symbolSize:10,edgeSymbol:["none","none"],edgeSymbolSize:10,edgeLabel:{position:"middle"},draggable:!1,roam:!1,center:null,zoom:1,nodeScaleRatio:.6,label:{show:!1,formatter:"{b}"},itemStyle:{},lineStyle:{color:"#aaa",width:1,curveness:0,opacity:.5},emphasis:{label:{show:!0}}}}),kL=_M.prototype,PL=bM.prototype,NL=Zn({type:"ec-line",style:{stroke:"#000",fill:null},shape:{x1:0,y1:0,x2:0,y2:0,percent:1,cpx1:null,cpy1:null},buildPath:function(t,e){(Qd(e)?kL:PL).buildPath(t,e)},pointAt:function(t){return Qd(this.shape)?kL.pointAt.call(this,t):PL.pointAt.call(this,t)},tangentAt:function(t){var e=this.shape,i=Qd(e)?[e.x2-e.x1,e.y2-e.y1]:PL.tangentAt.call(this,t);return q(i,i)}}),OL=["fromSymbol","toSymbol"],EL=af.prototype;EL.beforeUpdate=function(){var t=this,e=t.childOfName("fromSymbol"),i=t.childOfName("toSymbol"),n=t.childOfName("label");if(e||i||!n.ignore){for(var o=1,a=this.parent;a;)a.scale&&(o/=a.scale[0]),a=a.parent;var r=t.childOfName("line");if(this.__dirty||r.__dirty){var s=r.shape.percent,l=r.pointAt(0),u=r.pointAt(s),h=U([],u,l);if(q(h,h),e&&(e.attr("position",l),c=r.tangentAt(0),e.attr("rotation",Math.PI/2-Math.atan2(c[1],c[0])),e.attr("scale",[o*s,o*s])),i){i.attr("position",u);var c=r.tangentAt(1);i.attr("rotation",-Math.PI/2-Math.atan2(c[1],c[0])),i.attr("scale",[o*s,o*s])}if(!n.ignore){n.attr("position",u);var d,f,p,g=5*o;if("end"===n.__position)d=[h[0]*g+u[0],h[1]*g+u[1]],f=h[0]>.8?"left":h[0]<-.8?"right":"center",p=h[1]>.8?"top":h[1]<-.8?"bottom":"middle";else if("middle"="==n.__position){var" m="s/2,v=[(c=r.tangentAt(m))[1],-c[0]],y=r.pointAt(m);v[1]">0&&(v[0]=-v[0],v[1]=-v[1]),d=[y[0]+v[0]*g,y[1]+v[1]*g],f="center",p="bottom";var x=-Math.atan2(c[1],c[0]);u[0]<l[0]&&(x=math.pi+x),n.attr("rotation",x)}else d="[-h[0]*g+l[0],-h[1]*g+l[1]],f=h[0]">.8?"right":h[0]<-.8?"left":"center",p=h[1]>.8?"bottom":h[1]<-.8?"top":"middle";n.attr({style:{textverticalalign:n.__verticalalign||p,textalign:n.__textalign||f},position:d,scale:[o,o]})}}}},el._createline=function(t,e,i){var n="t.hostModel,o=nf(t.getItemLayout(e));o.shape.percent=0,Io(o,{shape:{percent:1}},n,e),this.add(o);var" a="new" rm({name:"label",linelabeloriginalopacity:1});this.add(a),d(ol,function(i){var h="t.getItemModel(e);a=h.getModel(" linestyle").getlinestyle(),s="h.getModel(" emphasis.linestyle").getlinestyle(),l="h.getModel("label"),u=h.getModel("emphasis.label")}var""" c="t.getItemVisual(e," color"),f="D(t.getItemVisual(e," opacity"),a.opacity,1);o.usestyle(r({strokenoscale:!0,fill:"none",stroke:c,opacity:f},a)),o.hoverstyle="s,d(OL,function(t){var""" e="this.childOfName(t);e&&(e.setColor(c),e.setStyle({opacity:f}))},this);var" p,g,m="l.getShallow(" show"),v="u.getShallow(" show"),y="this.childOfName("label");if((m||v)&&(p=c||"#000",null==(g=n.getFormattedLabel(e,"normal",t.dataType)))){var""" x="n.getRawValue(e);g=null==x?t.getName(e):isFinite(x)?Vo(x):x}var" _="m?g:null,w=v?A(n.getFormattedLabel(e," emphasis",t.datatype),g):null,b="y.style;null==_&&null==w||(go(y.style,l,{text:_},{autoColor:p}),y.__textAlign=b.textAlign,y.__verticalAlign=b.textVerticalAlign,y.__position=l.get(" position")||"middle"),y.hoverstyle="null!=w?{text:w,textFill:u.getTextColor(!0),fontStyle:u.getShallow("fontStyle"),fontWeight:u.getShallow("fontWeight"),fontSize:u.getShallow("fontSize"),fontFamily:u.getShallow("fontFamily")}:{text:null},y.ignore=!m&&!v,co(this)},EL.highlight=function(){this.trigger("emphasis")},EL.downplay=function(){this.trigger("normal")},EL.updateLayout=function(t,e){this.setLinePoints(t.getItemLayout(e))},EL.setLinePoints=function(t){var""" rl="rf.prototype;RL.isPersistent=function(){return!0},RL.updateData=function(t){var" o="uf(t);t.diff(n).add(function(i){sf(e,t,i,o)}).update(function(i,a){lf(e,n,t,a,i,o)}).remove(function(t){i.remove(n.getItemGraphicEl(t))}).execute()},RL.updateLayout=function(){var" t="this._lineData;t&&t.eachItemGraphicEl(function(e,i){e.updateLayout(t,i)},this)},RL.incrementalPrepareUpdate=function(t){this._seriesScope=uf(t),this._lineData=null,this.group.removeAll()},RL.incrementalUpdate=function(t,e){for(var" i="t.start;i<t.end;i++)if(cf(e.getItemLayout(i))){var" this._ctor(e,i,this._seriesscope);n.traverse(function(t){t.isgroup||(t.incremental="t.useHoverLayer=!0)}),this.group.add(n),e.setItemGraphicEl(i,n)}},RL.remove=function(){this._clearIncremental(),this._incremental=null,this.group.removeAll()},RL._clearIncremental=function(){var" zl="[],BL=[],VL=[],GL=rn,FL=hw,WL=Math.abs,HL=function(t,e){function" i(t){var instanceof array&&(e="(e[0]+e[1])/2),e}var" u="t.getLayout(),h=t.getVisual(" fromsymbol"),c="t.getVisual(" tosymbol");u.__original||(u.__original="[F(u[0]),F(u[1])],u[2]&&u.__original.push(F(u[2])));var""" d="u.__original;if(null!=u[2]){if(G(a[0],d[0]),G(a[1],d[2]),G(a[2],d[1]),h&&" none"!="=h){var" " f="i(t.node1),p=df(a,d[0],f*e);o(a[0][0],a[1][0],a[2][0],p,n),a[0][0]=n[3],a[1][0]=n[4],o(a[0][1],a[1][1],a[2][1],p,n),a[0][1]=n[3],a[1][1]=n[4]}if(c&&" au,n="new" rf,o="this.group;this._controller=new" nc(e.getzr()),this._controllerhost="{target:o},o.add(i.group),o.add(n.group),this._symbolDraw=i,this._lineDraw=n,this._firstRender=!0},render:function(t,e,i){var" s="{position:n.position,scale:n.scale};this._firstRender?r.attr(s):Mo(r,s,t)}HL(t.getGraph(),this._getNodeGlobalScale(t));var" l="t.getData();o.updateData(l);var" =="=t.get(" layout")&&t.get("circular.rotatelabel"),f="l.getLayout(" cx"),p="l.getLayout("cy");l.eachItemGraphicEl(function(t,e){var""" r="a?" left":"right";i.setstyle({textrotation:-o,textposition:r,textorigin:"center"}),i.hoverstyle&&(i.hoverstyle.textposition="r)}else" i.setstyle({textrotation:0})}),this._firstrender="!1},dispose:function(){this._controller&&this._controller.dispose(),this._controllerHost={}},focusNodeAdjacency:function(t,e,i,n){var" n(){t.step(function(t){i.updatelayout(i._model),(i._layouting="!t)&&(e?i._layoutTimeout=setTimeout(n,16):n())})}()},_updateController:function(t,e,i){var" r.applytransform(a.transform),r.contain(n,o)&&!pc(e,i,t)}),"view"="==t.coordinateSystem.type?(n.enable(t.get(" roam")),o.zoomlimit="t.get(" scalelimit"),o.zoom="t.coordinateSystem.getZoom(),n.off("pan").off("zoom").on("pan",function(e){dc(o,e.dx,e.dy),i.dispatchAction({seriesId:t.id,type:"graphRoam",dx:e.dx,dy:e.dy})}).on("zoom",function(e){fc(o,e.scale,e.originX,e.originY),i.dispatchAction({seriesId:t.id,type:"graphRoam",zoom:e.scale,originX:e.originX,originY:e.originY}),this._updateNodeAndLinkScale(),HL(t.getGraph(),this._getNodeGlobalScale(t)),this._lineDraw.updateLayout()},this)):n.disable()},_updateNodeAndLinkScale:function(){var""" 1;var jl="Z;Ns(function(t){var" i&&(i="o[i]);for(var" e&&(e="o[" ec-"+e]),n.getitemvisual(t,"color",!0)||n.setitemvisual(t,"color",i.getitemvisual(e,"color")))})})}),zs(function(t){t.eachseriesbytype("graph",function(t){var" e&&"none"!="=e||vf(t)})}),Rs(function(t){t.eachSeriesByType(" graph",function(t){"circular"="==t.get(" layout")&&xf(t)})}),rs(function(t){t.eachseriesbytype("graph",function(t){var"" isnan(n)&&(n="(h[0]+h[1])/2),{w:n,rep:n,fixed:o.getItemModel(e).get(" fixed"),p:!i||isnan(i[0])||isnan(i[1])?null:i}}),f="a.mapArray(" value",function(t,e){var"" isnan(o)&&(o="(c[0]+c[1])/2),{n1:d[i.node1.dataIndex],n2:d[i.node2.dataIndex],d:o,curveness:i.getModel().get(" linestyle.curveness")||0}}),p="(e=t.coordinateSystem).getBoundingRect(),g=_f(d,f,{rect:p,gravity:r.get(" gravity")}),m="g.step;g.step=function(t){for(var""" t.forcelayout="null})}),Es(" graphview",{create:function(t,e){var" t.eachseriesbytype("graph",function(t){var sc;f.zoomlimit="t.get(" scalelimit"),f.setboundingrect(a[0],a[1],u,h),f.setviewrect(l.x,l.y,c,d),f.setcenter(t.get("center")),f.setzoom(t.get("zoom")),i.push(f)}}),i}});qi.extend({type:"series.gauge",getinitialdata:function(t,e){var" y(i)||(i="[i]),t.data=i,aC(this,[" value"])},defaultoption:{zlevel:0,z:2,center:["50%","50%"],legendhoverlink:!0,radius:"75%",startangle:225,endangle:-45,clockwise:!0,min:0,max:100,splitnumber:10,axisline:{show:!0,linestyle:{color:[[.2,"#91c7ae"],[.8,"#63869e"],[1,"#c23531"]],width:30}},splitline:{show:!0,length:30,linestyle:{color:"#eee",width:2,type:"solid"}},axistick:{show:!0,splitnumber:5,length:8,linestyle:{color:"#eee",width:1,type:"solid"}},axislabel:{show:!0,distance:5,color:"auto"},pointer:{show:!0,length:"80%",width:8},itemstyle:{color:"auto"},title:{show:!0,offsetcenter:[0,"-40%"],color:"#333",fontsize:15},detail:{show:!0,backgroundcolor:"rgba(0,0,0,0)",borderwidth:0,bordercolor:"#ccc",width:100,height:null,padding:[5,10],offsetcenter:[0,"40%"],color:"auto",fontsize:30}}});var" yl="kn.extend({type:" echartsgaugepointer",shape:{angle:0,width:10,r:10,x:0,y:0},buildpath:function(t,e){var">=o/3?1:2),l=e.y-n(r)*a*(a>=o/3?1:2);r=e.angle-Math.PI/2,t.moveTo(s,l),t.lineTo(e.x+i(r)*a,e.y+n(r)*a),t.lineTo(e.x+i(e.angle)*o,e.y+n(e.angle)*o),t.lineTo(e.x-i(r)*a,e.y-n(r)*a),t.lineTo(s,l)}}),qL=2*Math.PI,KL=(Tr.extend({type:"gauge",render:function(t,e,i){this.group.removeAll();var n=t.get("axisLine.lineStyle.color"),o=bf(t,i);this._renderMain(t,e,i,n,o)},dispose:function(){},_renderMain:function(t,e,i,n,o){for(var a=this.group,r=t.getModel("axisLine").getModel("lineStyle"),s=t.get("clockwise"),l=-t.get("startAngle")/180*Math.PI,u=-t.get("endAngle")/180*Math.PI,h=(u-l)%qL,c=l,d=r.get("width"),f=0;f<n.length;f++){var p="Math.min(Math.max(n[f][0],0),1),g=new" hm({shape:{startangle:c,endangle:u="l+h*p,cx:o.cx,cy:o.cy,clockwise:s,r0:o.r-d,r:o.r},silent:!0});g.setStyle({fill:n[f][1]}),g.setStyle(r.getLineStyle([" color","borderwidth","bordercolor"])),a.add(g),c="u}var" " m="function(t){if(t<=0)return" n[0][1];for(var e="0;e<n.length;e++)if(n[e][0]">=t&&(0===e?0:n[e-1][0])<t)return n[e][1];return n[e-1][1]};if(!s){var v="l;l=u,u=v}this._renderTicks(t,e,i,m,o,l,u,s),this._renderPointer(t,e,i,m,o,l,u,s),this._renderTitle(t,e,i,m,o),this._renderDetail(t,e,i,m,o)},_renderTicks:function(t,e,i,n,o,a,r,s){for(var" l="this.group,u=o.cx,h=o.cy,c=o.r,d=+t.get(" min"),f="+t.get(" max"),p="t.getModel("splitLine"),g=t.getModel("axisTick"),m=t.getModel("axisLabel"),v=t.get("splitNumber"),y=g.get("splitNumber"),x=Bo(p.get("length"),c),_=Bo(g.get("length"),c),w=a,b=(r-a)/v,S=b/y,M=p.getModel("lineStyle").getLineStyle(),I=g.getModel("lineStyle").getLineStyle(),T=0;T<=v;T++){var""" a="Math.cos(w),D=Math.sin(w);if(p.get(" show")){var" c="new" _m({shape:{x1:a*c+u,y1:d*c+h,x2:a*(c-x)+u,y2:d*(c-x)+h},style:m,silent:!0});"auto"="==M.stroke&&C.setStyle({stroke:n(T/v)}),l.add(C)}if(m.get(" rm({style:go({},m,{text:l,x:a*(c-x-k)+u,y:d*(c-x-k)+h,textverticalalign:d<-.4?"top":d>.4?"bottom":"middle",textAlign:A<-.4?"left":a>.4?"right":"center"},{autoColor:P}),silent:!0}))}if(g.get("show")&&T!==v){for(var N=0;N<=y;n++){var a="Math.cos(w),D=Math.sin(w),O=new" _m({shape:{x1:a*c+u,y1:d*c+h,x2:a*(c-_)+u,y2:d*(c-_)+h},silent:!0,style:i});"auto"="==I.stroke&&O.setStyle({stroke:n((T+N/y)/v)}),l.add(O),w+=S}w-=S}else" w+="b}},_renderPointer:function(t,e,i,n,o,a,r,s){var" l="this.group,u=this._data;if(t.get(" pointer.show")){var" h="[+t.get(" min"),+t.get("max")],c="[a,r],d=t.getData(),f=d.mapDimension(" value");d.diff(u).add(function(e){var"" i="new" yl({shape:{angle:a}});io(i,{shape:{angle:zo(d.get(f,e),h,c,!0)}},t),l.add(i),d.setitemgraphicel(e,i)}).update(function(e,i){var n="u.getItemGraphicEl(i);Mo(n,{shape:{angle:zo(d.get(f,e),h,c,!0)}},t),l.add(n),d.setItemGraphicEl(e,n)}).remove(function(t){var" e="u.getItemGraphicEl(t);l.remove(e)}).execute(),d.eachItemGraphicEl(function(t,e){var" u&&u.eachitemgraphicel(function(t){l.remove(t)})},_rendertitle:function(t,e,i,n,o){var rm({silent:!0,style:go({},s,{x:u,y:h,text:a.getname(0),textalign:"center",textverticalalign:"middle"},{autocolor:f,forcerich:!0})}))}},_renderdetail:function(t,e,i,n,o){var rm({silent:!0,style:go({},a,{x:u,y:h,text:sf(p,a.get("formatter")),textwidth:isnan(c)?null:c,textheight:isnan(d)?null:d,textalign:"center",textverticalalign:"middle"},{autocolor:g,forcerich:!0})}))}}}),ws({type:"series.funnel",init:function(t){kl.superapply(this,"init",arguments),this.legenddataprovider="function(){return" this.getrawdata()},this._defaultlabelline(t)},getinitialdata:function(t,e){return ac(this,["value"])},_defaultlabelline:function(t){ci(t,"labelline",["show"]);var i.percent="o?+(e.get(n,t)/o*100).toFixed(2):0,i.$vars.push(" percent"),i},defaultoption:{zlevel:0,z:2,legendhoverlink:!0,left:80,top:60,right:80,bottom:60,minsize:"0%",maxsize:"100%",sort:"descending",gap:0,funnelalign:"center",label:{show:!0,position:"outer"},labelline:{show:!0,length:20,linestyle:{width:1,type:"solid"}},itemstyle:{bordercolor:"#fff",borderwidth:1},emphasis:{label:{show:!0}}}})),$l="Mf.prototype,JL=[" itemstyle","opacity"];$l.updatedata="function(t,e,i){var""" u="a.getModel(" itemstyle"),h="t.getItemVisual(e," color");n.setstyle(r({linejoin:"round",fill:h},u.getitemstyle(["opacity"]))),n.hoverstyle="u.getModel("emphasis").getItemStyle(),this._updateLabel(t,e),co(this)},$L._updateLabel=function(t,e){var""" mf(n,t);n.setitemgraphicel(t,e),a.add(e)}).update(function(t,e){var c="t.get(" funnelalign"),d="t.get(" gap"),f="(a.height-d*(i.count()-1))/i.count(),p=a.y,g=function(t,e){var""" o,r="zo(i.get(n,t)||0,[u,h],s,!0);switch(c){case" left":o="a.x;break;case" center":o="a.x+(a.width-r)/2;break;case"right":o=a.x+a.width-r}return[[o,e],[o+r,e]]};"ascending"===o&&(f=-f,d=-d,p+=a.height,r=r.reverse());for(var""" m="0;m<r.length;m++){var" v="r[m],y=r[m+1],x=i.getItemModel(v).get(" itemstyle.height");null="=x?x=f:(x=Bo(x,a.height)," ascending"="==o&&(x=-x));var""" _="g(v,p),w=g(y,p+x);p+=x+d,i.setItemLayout(v,{points:_.concat(w.slice().reverse())})}Af(i)})}),Ns(pC(" funnel"));var" ql="function(t,e,i,n,o){rD.call(this,t,e,i),this.type=n||" value",this.axisindex="o};QL.prototype={constructor:QL,model:null,isHorizontal:function(){return" horizontal"!="=this.coordinateSystem.getModel().get("layout")}},u(QL,rD);var""" tk="function(t,e,i,n,o,a){e[0]=kf(e[0],i),e[1]=kf(e[1],i),t=t||0;var" r="i[1]-i[0];null!=o&&(o=kf(o,[0,r])),null!=a&&(a=Math.max(a,null!=o?o:0))," all"="==n&&(o=a=Math.abs(e[1]-e[0]),n=0);var" " s="Lf(e,n);e[n]+=t;var" null!="a&&h.span">a&&(e[1-n]=e[n]+h.sign*a),e},ek=d,ik=Math.min,nk=Math.max,ok=Math.floor,ak=Math.ceil,rk=Vo,sk=Math.PI;Pf.prototype={type:"parallel",constructor:Pf,_init:function(t,e,i){var n=t.dimensions,o=t.parallelAxisIndex;ek(n,function(t,i){var n=o[i],a=e.getComponent("parallelAxis",n),r=this._axesMap.set(t,new QL(t,Wl(a),[0,0],a.get("type"),n)),s="category"===r.type;r.onBand=s&&a.get("boundaryGap"),r.inverse=a.get("inverse"),a.axis=r,r.model=a,r.coordinateSystem=a.coordinateSystem=this},this)},update:function(t,e){this._updateAxesFromSeries(this._model,t)},containPoint:function(t){var e=this._makeLayoutInfo(),i=e.axisBase,n=e.layoutBase,o=e.pixelDimIndex,a=t[1-o],r=t[o];return a>=i&&a<=i+e.axislength&&r>=n&&r<=n+e.layoutlength},getmodel:function(){return this._model},_updateaxesfromseries:function(t,e){e.eachseries(function(i){if(t.contains(i,e)){var n="i.getData();ek(this.dimensions,function(t){var" e="this._axesMap.get(t);e.scale.unionExtentFromData(n,n.mapDimension(t)),Fl(e.scale,e.model)},this)}},this)},resize:function(t,e){this._rect=ha(t.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()}),this._layoutAxes()},getRect:function(){return" this._rect},_makelayoutinfo:function(){var t,e="this._model,i=this._rect,n=[" x","y"],o="[" width","height"],a="e.get("layout"),r="horizontal"===a?0:1,s=i[o[r]],l=[0,s],u=this.dimensions.length,h=Nf(e.get("axisExpandWidth"),l),c=Nf(e.get("axisExpandCount")||0,[0,u]),d=e.get("axisExpandable")&&u""">3&&u>c&&c>1&&h>0&&s>0,f=e.get("axisExpandWindow");f?(t=Nf(f[1]-f[0],l),f[1]=f[0]+t):(t=Nf(h*(c-1),l),(f=[h*(e.get("axisExpandCenter")||ok(u/2))-t/2])[1]=f[0]+t);var p=(s-t)/(u-c);p<3&&(p=0);var g="[ok(rk(f[0]/h,1))+1,ak(rk(f[1]/h,1))-1],m=p/h*f[0];return{layout:a,pixelDimIndex:r,layoutBase:i[n[r]],layoutLength:s,axisBase:i[n[1-r]],axisLength:i[o[1-r]],axisExpandable:d,axisExpandWidth:h,axisCollapseWidth:p,axisExpandWindow:f,axisCount:u,winInnerIndices:g,axisExpandWindow0Pos:m}},_layoutAxes:function(){var" t="this._rect,e=this._axesMap,i=this.dimensions,n=this._makeLayoutInfo(),o=n.layout;e.each(function(t){var" e="[0,n.axisLength],i=t.inverse?1:0;t.setExtent(e[i],e[1-i])}),ek(i,function(e,i){var" a="(n.axisExpandable?Ef:Of)(i,n),r={horizontal:{x:a.position,y:n.axisLength},vertical:{x:0,y:a.position}},s={horizontal:sk/2,vertical:0},l=[r[o].x+t.x,r[o].y+t.y],u=s[o],h=xt();Mt(h,h,u),St(h,h,l),this._axesLayout[e]={position:l,rotation:u,transform:h,axisNameAvailableWidth:a.axisNameAvailableWidth,axisLabelShow:a.axisLabelShow,nameTruncateMaxWidth:a.nameTruncateMaxWidth,tickDirection:1,labelDirection:1}},this)},getAxis:function(t){return" this._axesmap.get(t)},datatopoint:function(t,e){return this.axiscoordtopoint(this._axesmap.get(e).datatocoord(t),e)},eachactivestate:function(t,e,i,n){null="=i&&(i=0),null==n&&(n=t.count());var" o="this._axesMap,a=this.dimensions,r=[],s=[];d(a,function(e){r.push(t.mapDimension(e)),s.push(o.get(e).model)});for(var" l="this.hasAxisBrushed(),u=i;u<n;u++){var" h;if(l){h="active" ;for(var c="t.getValues(r,u),f=0,p=a.length;f<p;f++)if(" inactive"="==s[f].getActiveState(c[f])){h=" inactive";break}}else"" h="normal" ;e(h,u)}},hasaxisbrushed:function(){for(var i},axiscoordtopoint:function(t,e){return ao([t,0],this._axeslayout[e].transform)},getaxislayout:function(t){return i(this._axeslayout[t])},getslidedaxisexpandwindow:function(t){var r,s="t[i]-e.layoutBase-e.axisExpandWindow0Pos,l=" slide",u="e.axisCollapseWidth,h=this._model.get(" axisexpandslidetriggerarea"),c="null!=h[0];if(u)c&&u&&s<o*h[0]?(l="jump",r=s-o*h[2]):c&&u&&s""">o*(1-h[0])?(l="jump",r=s-o*(1-h[2])):(r=s-o*h[1])>=0&&(r=s-o*(1-h[1]))<=0&&(r=0),(r*=e.axisexpandwidth u)?tk(r,n,a,"all"):l="none" ;else{o="n[1]-n[0];(n=[nk(0,a[1]*s/o-o/2)])[1]=ik(a[1],n[0]+o),n[0]=n[1]-o}return{axisExpandWindow:n,behavior:l}}},Ga.register(" parallel",{create:function(t,e){var" i="[];return" t.eachcomponent("parallel",function(n,o){var a="new" pf(n,t,e);a.name="parallel_" +o,a.resize(n,e),n.coordinatesystem="a,a.model=n,i.push(a)}),t.eachSeries(function(e){if(" parallel"="==e.get(" coordinatesystem")){var"" lk="uI.extend({type:" baseparallelaxis",axis:null,activeintervals:[],getareaselectstyle:function(){return" qb([["fill","color"],["linewidth","borderwidth"],["stroke","bordercolor"],["width","width"],["opacity","opacity"]])(this.getmodel("areaselectstyle"))},setactiveintervals:function(t){var e="this.activeIntervals=i(t);if(e)for(var" n="e.length-1;n">=0;n--)Go(e[n])},getActiveState:function(t){var e=this.activeIntervals;if(!e.length)return"normal";if(null==t||isNaN(t))return"inactive";if(1===e.length){var i=e[0];if(i[0]<=t&&t<=i[1])return"active"}else for(var n="0,o=e.length;n<o;n++)if(e[n][0]<=t&&t<=e[n][1])return" active";return"inactive"}}),uk="{type:" value",dim:null,areaselectstyle:{width:20,borderwidth:1,bordercolor:"rgba(160,197,232)",color:"rgba(160,197,232)",opacity:.3},realtime:!0,z:10};n(lk.prototype,xa),rd("parallel",lk,function(t,e){return"" e.type||(e.data?"category":"value")},uk),ui.extend({type:"parallel",dependencies:["parallelaxis"],coordinatesystem:null,dimensions:null,parallelaxisindex:null,layoutmode:"box",defaultoption:{zlevel:0,z:0,left:80,top:60,right:80,bottom:60,layout:"horizontal",axisexpandable:!1,axisexpandcenter:null,axisexpandcount:0,axisexpandwidth:50,axisexpandrate:17,axisexpanddebounce:50,axisexpandslidetriggerarea:[-.15,.05,.4],axisexpandtriggeron:"click",parallelaxisdefault:null},init:function(){ui.prototype.init.apply(this,arguments),this.mergeoption({})},mergeoption:function(t){var e="this.option;t&&n(e,t,!0),this._initDimensions()},contains:function(t,e){var" i="t.get(" parallelindex");return" null!="i&&e.getComponent(" parallel",i)="==this},setAxisExpand:function(t){d([" axisexpandable","axisexpandcenter","axisexpandcount","axisexpandwidth","axisexpandwindow"],function(e){t.hasownproperty(e)&&(this.option[e]="t[e])},this)},_initDimensions:function(){var""" t="this.dimensions=[],e=this.parallelAxisIndex=[];d(g(this.dependentModels.parallelAxis,function(t){return(t.get(" parallelindex")||0)="==this.componentIndex},this),function(i){t.push(" dim"+i.get("dim")),e.push(i.componentindex)})}}),os({type:"axisareaselect",event:"axisareaselected"},function(t,e){e.eachcomponent({maintype:"parallelaxis",query:t},function(e){e.axis.model.setactiveintervals(t.intervals)})}),os("parallelaxisexpand",function(t,e){e.eachcomponent({maintype:"parallel",query:t},function(e){e.setaxisexpand(t)})});var"" hk="v,ck=d,dk=f,fk=Math.min,pk=Math.max,gk=Math.pow,mk=1e4,vk=6,yk=6,xk=" globalpan",_k="{w:[0,0],e:[0,1],n:[1,0],s:[1,1]},wk={w:" ew",e:"ew",n:"ns",s:"ns",ne:"nesw",sw:"nesw",nw:"nwse",se:"nwse"},bk="{brushStyle:{lineWidth:2,stroke:"rgba(0,0,0,0.3)",fill:"rgba(0,0,0,0.1)"},transformable:!0,brushMode:"single",removeOnClick:!1},Sk=0;Rf.prototype={constructor:Rf,enableBrush:function(t){return""" this._brushtype&&bf(this),t.brushtype&&zf(this,t),this},setpanels:function(t){if(t&&t.length){var this._panels="null;return" this},mount:function(t){t="t||{},this._enableGlobalPan=t.enableGlobalPan;var" this._zr.add(e),e.attr({position:t.position||[0,0],rotation:t.rotation||0,scale:t.scale||[1,1]}),this._transform="e.getLocalTransform(),this},eachCover:function(t,e){ck(this._covers,t,e)},updateCovers:function(t){function" e(t,e){return(null!="t.id?t.id:a+e)+" -"+t.brushtype}function" o(e,i){var o="s[e]=null!=i?(r[i].__brushOption=n,r[i]):Gf(l,Vf(l,n));Hf(l,o)}}t=f(t,function(t){return" n(i(bk),t,!0)});var a="\0-brush-index-" ,r="this._covers,s=this._covers=[],l=this,u=this._creatingCover;return" new us(r,t,function(t,i){return e(t.__brushoption,i)},e).add(o).update(o).remove(function(t){r[t]!="=u&&l.group.remove(r[t])}).execute(),this},unmount:function(){return" this.enablebrush(!1),jf(this),this._zr.remove(this.group),this},dispose:function(){this.unmount(),this.off()}},h(rf,fw);var mk="{mousedown:function(t){if(this._dragging)gp.call(this,t);else" if(!t.target||!t.target.draggable){cp(t);var $f(hk(ap,function(t){return t},function(t){return t}),t,e,["w","e","n","s","se","sw","ne","nw"])},getcreatingrange:function(t){var ip(e[1][0],e[1][1],e[0][0],e[0][1])},updatecovershape:function(t,e,i,n){jf(t,e,i,n)},updatecommon:qf,contain:dp},polygon:{createcover:function(t,e){var tb;return i.add(new gm({name:"main",style:ep(e),silent:!0})),i},getcreatingrange:function(t){return t},endcreating:function(t,e){e.remove(e.childat(0)),e.add(new pm({name:"main",draggable:!0,drift:hk(rp,t,e),ondragend:hk(yf,t,{isend:!0})}))},updatecovershape:function(t,e,i,n){e.childat(0).setshape({points:lp(t,e,i)})},updatecommon:qf,contain:dp}},tk="[" axisline","axisticklabel","axisname"],ak="Fs({type:" parallelaxis",init:function(t,e){ak.superapply(this,"init",arguments),(this._brushcontroller="new""" rf(e.getzr())).on("brush",m(this._onbrush,this))},render:function(t,e,i,n){if(!wp(t,e,n)){this.axismodel="t,this.api=i,this.group.removeAll();var" tb,this.group.add(this._axisgroup),t.get("show")){var r="Sp(t,e),s=r.coordinateSystem,l=t.getAreaSelectStyle(),u=l.width,h=t.axis.dim,c=a({strokeContainThreshold:u},s.getAxisLayout(h)),f=new" wd(t,c);d(tk,f.add,f),this._axisgroup.add(f.getgroup()),this._refreshbrushcontroller(c,l,t,r,u,i);var p="n&&!1===n.animation?null:t;Co(o,this._axisGroup,p)}}},_refreshBrushController:function(t,e,i,n,o,a){var" dk="{mousedown:function(t){Mp(this," click")&&(this._mousedownpoint="[t.offsetX,t.offsetY])},mouseup:function(t){var" ">5)return;var n=this._model.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX,t.offsetY]);"none"!==n.behavior&&this._dispatchExpand({axisExpandWindow:n.axisExpandWindow})}this._mouseDownPoint=null},mousemove:function(t){if(!this._mouseDownPoint&&Mp(this,"mousemove")){var e=this._model,i=e.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX,t.offsetY]),n=i.behavior;"jump"===n&&this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")),this._throttledDispatchExpand("none"===n?null:{axisExpandWindow:i.axisExpandWindow,animation:"jump"===n&&null})}}};Ps(function(t){Df(t),Cf(t)}),qI.extend({type:"series.parallel",dependencies:["parallel"],visualColorAccessPath:"lineStyle.color",getInitialData:function(t,e){var i=this.getSource();return Ip(i,this),gl(i,this)},getRawIndicesByActiveState:function(t){var e=this.coordinateSystem,i=this.getData(),n=[];return e.eachActiveState(i,function(e,o){t===e&&n.push(i.getRawIndex(o))}),n},defaultOption:{zlevel:0,z:2,coordinateSystem:"parallel",parallelIndex:0,label:{show:!1},inactiveOpacity:.05,activeOpacity:1,lineStyle:{width:1,opacity:.45,type:"solid"},emphasis:{label:{show:!1}},progressive:500,smooth:!1,animationEasing:"linear"}});var Ck=.3,Lk=(Tr.extend({type:"parallel",init:function(){this._dataGroup=new tb,this.group.add(this._dataGroup),this._data,this._initialized},render:function(t,e,i,n){var o=this._dataGroup,a=t.getData(),r=this._data,s=t.coordinateSystem,l=s.dimensions,u=Lp(t);if(a.diff(r).add(function(t){kp(Cp(a,o,t,l,s),a,t,u)}).update(function(e,i){var o=r.getItemGraphicEl(i),h=Dp(a,e,l,s);a.setItemGraphicEl(e,o),Mo(o,{shape:{points:h}},n&&!1===n.animation?null:t,e),kp(o,a,e,u)}).remove(function(t){var e=r.getItemGraphicEl(t);o.remove(e)}).execute(),!this._initialized){this._initialized=!0;var h=Ap(s,t,function(){setTimeout(function(){o.removeClipPath()})});o.setClipPath(h)}this._data=a},incrementalPrepareRender:function(t,e,i){this._initialized=!0,this._data=null,this._dataGroup.removeAll()},incrementalRender:function(t,e,i){for(var n=e.getData(),o=e.coordinateSystem,a=o.dimensions,r=Lp(e),s=t.start;s<t.end;s++){var 0="==t.getLayout().value}).length?0:t.get(" layoutiterations"),t.get("orient"))})}),zs(function(t,e){t.eachseriesbytype("sankey",function(t){var" l="Cp(n,this._dataGroup,s,a,o);l.incremental=!0,kp(l,n,s,r)}},dispose:function(){},remove:function(){this._dataGroup&&this._dataGroup.removeAll(),this._data=null}}),[" linestyle","normal","opacity"]);zs({seriestype:"parallel",reset:function(t,e,i){var" n="t.getModel(" itemstyle"),o="t.getModel(" linestyle"),a="e.get("color"),r=o.get("color")||n.get("color")||a[t.seriesIndex%a.length],s=t.get("inactiveOpacity"),l=t.get("activeOpacity"),u=t.getModel("lineStyle").getLineStyle(),h=t.coordinateSystem,c=t.getData(),d={normal:u.opacity,active:l,inactive:s};return""" c.setvisual("color",r),{progress:function(t,e){h.eachactivestate(e,function(t,i){var o="e.getItemModel(i).get(Lk,!0);null!=o&&(n=o)}e.setItemVisual(i," opacity",n)},t.start,t.end)}}}});var" kk="qI.extend({type:" series.sankey",layoutinfo:null,getinitialdata:function(t){var" e="t.edges||t.links,i=t.data||t.nodes;if(i&&e)return" cl(i,e,this,!0).data},setnodeposition:function(t,e){var i="this.option.data[t];i.localX=e[0],i.localY=e[1]},getGraph:function(){return" this.getdata().graph},getedgedata:function(){return this.getgraph().edgedata},formattooltip:function(t,e,i){if("edge"="==i){var" -- "+o.target;return n.value&&(a+=" : " +n.value),ea(a)}return kk.supercall(this,"formattooltip",t,e)},optionupdated:function(){var t="this.option;!0===t.focusNodeAdjacency&&(t.focusNodeAdjacency=" alledges")},defaultoption:{zlevel:0,z:2,coordinatesystem:"view",layout:null,left:"5%",top:"5%",right:"20%",bottom:"5%",orient:"horizontal",nodewidth:20,nodegap:8,draggable:!0,focusnodeadjacency:!1,layoutiterations:32,label:{show:!0,position:"right",color:"#000",fontsize:12},itemstyle:{borderwidth:1,bordercolor:"#333"},linestyle:{color:"#314656",opacity:.2,curveness:.5},emphasis:{label:{show:!0},linestyle:{opacity:.6}},animationeasing:"linear",animationduration:1e3}}),pk="[" itemstyle","opacity"],nk="["lineStyle","opacity"],Ok=Zn({shape:{x1:0,y1:0,x2:0,y2:0,cpx1:0,cpy1:0,cpx2:0,cpy2:0,extent:0,orient:""},buildPath:function(t,e){var""" ok;i.dataindex="e.dataIndex,i.seriesIndex=t.seriesIndex,i.dataType=" edge";var" n,o,r,u,d,f,p,g,m="e.getModel(" linestyle"),v="m.get(" curveness"),y="e.node1.getLayout(),x=e.node1.getModel(),_=x.get("localX"),w=x.get("localY"),b=e.node2.getLayout(),S=e.node2.getModel(),M=S.get("localX"),I=S.get("localY"),T=e.getLayout();switch(i.shape.extent=Math.max(1,T.dy),i.shape.orient=c,"vertical"===c?(n=(null!=_?_*s:y.x)+T.sy,o=(null!=w?w*l:y.y)+y.dy,r=(null!=M?M*s:b.x)+T.ty,d=n,f=o*(1-v)+(u=null!=I?I*l:b.y)*v,p=r,g=o*v+u*(1-v)):(n=(null!=_?_*s:y.x)+y.dx,o=(null!=w?w*l:y.y)+T.sy,d=n*(1-v)+(r=null!=M?M*s:b.x)*v,f=o,p=n*v+r*(1-v),g=u=(null!=I?I*l:b.y)+T.ty),i.setShape({x1:n,y1:o,x2:r,y2:u,cpx1:d,cpy1:f,cpx2:p,cpy2:g}),i.setStyle(m.getItemStyle()),i.style.fill){case"source":i.style.fill=e.node1.getVisual("color");break;case"target":i.style.fill=e.node2.getVisual("color")}co(i,e.getModel("emphasis.lineStyle").getItemStyle()),a.add(i),h.setItemGraphicEl(e.dataIndex,i)}),o.eachNode(function(e){var""" ym({shape:{x:null!="o?o*s:i.x,y:null!=r?r*l:i.y,width:i.dx,height:i.dy},style:n.getModel(" itemstyle").getitemstyle()}),f="e.getModel(" emphasis.itemstyle").getitemstyle();po(d.style,f,h,c,{labelfetcher:t,labeldataindex:e.dataindex,defaulttext:e.id,isrecttext:!0}),d.setstyle("fill",e.getvisual("color")),co(d,f),a.add(d),u.setitemgraphicel(e.dataindex,d),d.datatype="node" }),u.eachitemgraphicel(function(e,o){var"" a="u.getItemModel(o);a.get(" draggable")&&(e.drift="function(e,a){n._focusAdjacencyDisabled=!0,this.shape.x+=e,this.shape.y+=a,this.dirty(),i.dispatchAction({type:" dragnode",seriesid:t.id,dataindex:u.getrawindex(o),localx:this.shape.x s,localy:this.shape.y l})},e.ondragend="function(){n._focusAdjacencyDisabled=!1},e.draggable=!0,e.cursor="move"),a.get("focusNodeAdjacency")&&(e.off("mouseover").on("mouseover",function(){n._focusAdjacencyDisabled||i.dispatchAction({type:"focusNodeAdjacency",seriesId:t.id,dataIndex:e.dataIndex})}),e.off("mouseout").on("mouseout",function(){n._focusAdjacencyDisabled||i.dispatchAction({type:"unfocusNodeAdjacency",seriesId:t.id})}))}),h.eachItemGraphicEl(function(e,o){h.getItemModel(o).get("focusNodeAdjacency")&&(e.off("mouseover").on("mouseover",function(){n._focusAdjacencyDisabled||i.dispatchAction({type:"focusNodeAdjacency",seriesId:t.id,edgeDataIndex:e.dataIndex})}),e.off("mouseout").on("mouseout",function(){n._focusAdjacencyDisabled||i.dispatchAction({type:"unfocusNodeAdjacency",seriesId:t.id})}))}),!this._data&&t.get("animation")&&a.setClipPath(Rp(a.getBoundingRect(),t,function(){a.removeClipPath()})),this._data=t.getData()},dispose:function(){},focusNodeAdjacency:function(t,e,i,n){var""" u="a.getNodeByIndex(r),h=a.getEdgeByIndex(l);if(a.eachNode(function(t){Op(t,Pk,.1)}),a.eachEdge(function(t){Op(t,Nk,.1)}),u){Ep(u,Pk);var" c="s.get(" focusnodeadjacency");"outedges"="==c?d(u.outEdges,function(t){t.dataIndex<0||(Ep(t,Nk),Ep(t.node2,Pk))}):" inedges"="==c?d(u.inEdges,function(t){t.dataIndex<0||(Ep(t,Nk),Ep(t.node1,Pk))}):"allEdges"===c&&d(u.edges,function(t){t.dataIndex<0||(Ep(t,Nk),Ep(t.node1,Pk),Ep(t.node2,Pk))})}h&&(Ep(h,Nk),Ep(h.node1,Pk),Ep(h.node2,Pk))}},unfocusNodeAdjacency:function(t,e,i,n){var""">n&&(n=e)}),d(e,function(e){var o=new cL({type:"color",mappingMethod:"linear",dataExtent:[i,n],visual:t.get("color")}).mapValueToVisual(e.getLayout().value);e.setVisual("color",o);var a=e.getModel().get("itemStyle.color");null!=a&&e.setVisual("color",a)})}})});var Ek={_baseAxisDim:null,getInitialData:function(t,e){var i,n,o=e.getComponent("xAxis",this.get("xAxisIndex")),a=e.getComponent("yAxis",this.get("yAxisIndex")),r=o.get("type"),s=a.get("type");"category"===r?(t.layout="horizontal",i=o.getOrdinalMeta(),n=!0):"category"===s?(t.layout="vertical",i=a.getOrdinalMeta(),n=!0):t.layout=t.layout||"horizontal";var l=["x","y"],u="horizontal"===t.layout?0:1,h=this._baseAxisDim=l[u],c=l[1-u],f=[o,a],p=f[u].get("type"),g=f[1-u].get("type"),m=t.data;if(m&&n){var v=[];d(m,function(t,e){var i;t.value&&y(t.value)?(i=t.value.slice(),t.value.unshift(e)):y(t)?(i=t.slice(),t.unshift(e)):i=t,v.push(i)}),t.data=v}var x=this.defaultValueDimensions;return aC(this,{coordDimensions:[{name:h,type:Ys(p),ordinalMeta:i,otherDims:{tooltip:!1,itemName:0},dimsDef:["base"]},{name:c,type:Ys(g),dimsDef:x.slice()}],dimensionsCount:x.length+1})},getBaseAxis:function(){var t=this._baseAxisDim;return this.ecModel.getComponent(t+"Axis",this.get(t+"AxisIndex")).axis}};h(qI.extend({type:"series.boxplot",dependencies:["xAxis","yAxis","grid"],defaultValueDimensions:[{name:"min",defaultTooltip:!0},{name:"Q1",defaultTooltip:!0},{name:"median",defaultTooltip:!0},{name:"Q3",defaultTooltip:!0},{name:"max",defaultTooltip:!0}],dimensions:null,defaultOption:{zlevel:0,z:2,coordinateSystem:"cartesian2d",legendHoverLink:!0,hoverAnimation:!0,layout:null,boxWidth:[7,50],itemStyle:{color:"#fff",borderWidth:1},emphasis:{itemStyle:{borderWidth:2,shadowBlur:5,shadowOffsetX:2,shadowOffsetY:2,shadowColor:"rgba(0,0,0,0.4)"}},animationEasing:"elasticOut",animationDuration:800}}),Ek,!0);var Rk=["itemStyle"],zk=["emphasis","itemStyle"],Bk=(Tr.extend({type:"boxplot",render:function(t,e,i){var n=t.getData(),o=this.group,a=this._data;this._data||o.removeAll();var r="horizontal"===t.get("layout")?1:0;n.diff(a).add(function(t){if(n.hasValue(t)){var e=ig(n.getItemLayout(t),n,t,r,!0);n.setItemGraphicEl(t,e),o.add(e)}}).update(function(t,e){var i=a.getItemGraphicEl(e);if(n.hasValue(t)){var s=n.getItemLayout(t);i?ng(s,i,n,t):i=ig(s,n,t,r),o.add(i),n.setItemGraphicEl(t,i)}else o.remove(i)}).remove(function(t){var e=a.getItemGraphicEl(t);e&&o.remove(e)}).execute(),this._data=n},remove:function(t){var e=this.group,i=this._data;this._data=null,i&&i.eachItemGraphicEl(function(t){t&&e.remove(t)})},dispose:B}),kn.extend({type:"boxplotBoxPath",shape:{},buildPath:function(t,e){var i=e.points,n=0;for(t.moveTo(i[n][0],i[n][1]),n++;n<4;n++)t.lineto(i[n][0],i[n][1]);for(t.closepath();n<i.length;n++)t.moveto(i[n][0],i[n][1]),n++,t.lineto(i[n][0],i[n][1])}})),vk=["itemstyle","bordercolor"],gk=d;zs(function(t,e){var i="t.get(" color");t.eachrawseriesbytype("boxplot",function(e){var" n="i[e.seriesIndex%i.length],o=e.getData();o.setVisual({legendSymbol:" roundrect",color:e.get(vk)||n}),t.isseriesfiltered(e)||o.each(function(t){var" e="o.getItemModel(t);o.setItemVisual(t,{color:e.get(Vk,!0)})})})}),Rs(function(t){var" n&&i.rect(n.brushrect)}}),ek,!0);var fk="[" itemstyle"],wk="[" emphasis","itemstyle"],hk="["color","color0","borderColor","borderColor0"],Zk=(Tr.extend({type:"candlestick",render:function(t,e,i){this._updateDrawMode(t),this._isLargeDraw?this._renderLarge(t):this._renderNormal(t)},incrementalPrepareRender:function(t,e,i){this._clear(),this._updateDrawMode(t)},incrementalRender:function(t,e,i,n){this._isLargeDraw?this._incrementalRenderLarge(t,e):this._incrementalRenderNormal(t,e)},_updateDrawMode:function(t){var""" a,r="e.getItemLayout(i);Io(a=lg(r,0,!0),{shape:{points:r.ends}},t,i),ug(a,e,i,o),n.add(a),e.setItemGraphicEl(i,a)}}).update(function(a,r){var" s="i.getItemGraphicEl(r);if(e.hasValue(a)){var" l="e.getItemLayout(a);s?Mo(s,{shape:{points:l.ends}},t,a):s=lg(l),ug(s,e,a,o),n.add(s),e.setItemGraphicEl(a,s)}else" n.remove(s)}).remove(function(t){var i,n="e.getData(),o=n.getLayout(" issimplebox");null!="(i=t.next());){var" " a;ug(a="lg(n.getItemLayout(i)),n,i,o),a.incremental=!0,this.group.add(a)}},_incrementalRenderLarge:function(t,e){cg(e,this.group,!0)},remove:function(t){this._clear()},_clear:function(){this.group.removeAll(),this._data=null},dispose:B}),kn.extend({type:" normalcandlestickbox",shape:{},buildpath:function(t,e){var" o="i[n++];t.moveTo(o,i[n++]),t.lineTo(o,i[n++])}else" n+="3}}),Xk=[" itemstyle","bordercolor"],jk="[" itemstyle","bordercolor0"],yk="["itemStyle","color"],qk=["itemStyle","color0"],Kk={seriesType:"candlestick",plan:JI(),performRawSeries:!0,reset:function(t,e){function""" i(t,e){return e.get(t>0?Yk:qk)}function n(t,e){return e.get(t>0?Xk:jk)}var o=t.getData(),a=t.pipelineContext.large;if(o.setVisual({legendSymbol:"roundRect",colorP:i(1,t),colorN:i(-1,t),borderColorP:n(1,t),borderColorN:n(-1,t)}),!e.isSeriesFiltered(t))return!a&&{progress:function(t,e){for(var o;null!=(o=t.next());){var a=e.getItemModel(o),r=e.getItemLayout(o).sign;e.setItemVisual(o,{color:i(r,a),borderColor:n(r,a)})}}}}},$k="undefined"!=typeof Float32Array?Float32Array:Array,Jk={seriesType:"candlestick",plan:JI(),reset:function(t){var e=t.coordinateSystem,i=t.getData(),n=pg(t,i),o=0,a=1,r=["x","y"],s=i.mapDimension(r[o]),l=i.mapDimension(r[a],!0),u=l[0],h=l[1],c=l[2],d=l[3];if(i.setLayout({candleWidth:n,isSimpleBox:n<=1.3}),!(null==s||l.length<4))return{progress:t.pipelinecontext.large?function(t,i){for(var n,r,l="new" $k(5*t.count),f="0,p=[],g=[];null!=(r=t.next());){var" m="i.get(s,r),v=i.get(u,r),y=i.get(h,r),x=i.get(c,r),_=i.get(d,r);isNaN(m)||isNaN(x)||isNaN(_)?(l[f++]=NaN,f+=4):(l[f++]=fg(i,r,v,y,h),p[o]=m,p[a]=x,n=e.dataToPoint(p,null,g),l[f++]=n?n[0]:NaN,l[f++]=n?n[1]:NaN,p[a]=_,n=e.dataToPoint(p,null,g),l[f++]=n?n[1]:NaN)}i.setLayout(" largepoints",l)}:function(t,i){function" r(t,i){var n="[];return" n[o]="i,n[a]=t,isNaN(i)||isNaN(t)?[NaN,NaN]:e.dataToPoint(n)}function" l(t,e,i){var a="e.slice(),r=e.slice();a[o]=$n(a[o]+n/2,1,!1),r[o]=$n(r[o]-n/2,1,!0),i?t.push(a,r):t.push(r,a)}function" f(t){return t[o]="$n(t[o],1),t}for(var" p;null!="(p=t.next());){var" g="i.get(s,p),m=i.get(u,p),v=i.get(h,p),y=i.get(c,p),x=i.get(d,p),_=Math.min(m,v),w=Math.max(m,v),b=r(_,g),S=r(w,g),M=r(y,g),I=r(x,g),T=[];l(T,S,0),l(T,b,1),T.push(f(I),f(S),f(M),f(b)),i.setItemLayout(p,{sign:fg(i,p,m,v,h),initBaseline:m">v?S[a]:b[a],ends:T,brushRect:function(t,e,i){var s=r(t,i),l=r(e,i);return s[o]-=n/2,l[o]-=n/2,{x:s[0],y:s[1],width:a?n:l[0]-s[0],height:a?l[1]-s[1]:n}}(y,x,g)})}}}}};Ps(function(t){t&&y(t.series)&&d(t.series,function(t){w(t)&&"k"===t.type&&(t.type="candlestick")})}),zs(Kk),Rs(Jk),qI.extend({type:"series.effectScatter",dependencies:["grid","polar"],getInitialData:function(t,e){return gl(this.getSource(),this)},brushSelector:"point",defaultOption:{coordinateSystem:"cartesian2d",zlevel:0,z:2,legendHoverLink:!0,effectType:"ripple",progressive:0,showEffectOn:"render",rippleEffect:{period:4,scale:2.5,brushType:"fill"},symbolSize:10}});var Qk=vg.prototype;Qk.stopEffectAnimation=function(){this.childAt(1).removeAll()},Qk.startEffectAnimation=function(t){for(var e=t.symbolType,i=t.color,n=this.childAt(1),o=0;o<3;o++){var a="$l(e,-1,-1,2,2,i);a.attr({style:{strokeNoScale:!0},z2:99,silent:!0,scale:[.5,.5]});var" r="-o/3*t.period+t.effectOffset;a.animate(" ",!0).when(t.period,{scale:[t.ripplescale 2,t.ripplescale 2]}).delay(r).start(),a.animatestyle(!0).when(t.period,{opacity:0}).delay(r).start(),n.add(a)}mg(n,t)},qk.updateeffectanimation="function(t){for(var" " e="this._effectCfg,i=this.childAt(1),n=[" symboltype","period","ripplescale"],o="0;o<n.length;o++){var" this.stopeffectanimation(),void this.starteffectanimation(t)}mg(i,t)},qk.highlight="function(){this.trigger(" emphasis")},qk.downplay="function(){this.trigger(" normal")},qk.updatedata="function(t,e){var""" i="t.hostModel;this.childAt(0).updateData(t,e);var" n="this.childAt(1),o=t.getItemModel(e),a=t.getItemVisual(e," symbol"),r="gg(t.getItemVisual(e," symbolsize")),s="t.getItemVisual(e,"color");n.attr("scale",r),n.traverse(function(t){t.attr({fill:s})});var""" l="o.getShallow(" symboloffset");if(l){var" u="n.position;u[0]=Bo(l[0],r[0]),u[1]=Bo(l[1],r[1])}n.rotation=(o.getShallow(" symbolrotate")||0)*math.pi 180||0;var" h="{};if(h.showEffectOn=i.get(" showeffecton"),h.ripplescale="o.get(" rippleeffect.scale"),h.brushtype="o.get("rippleEffect.brushType"),h.period=1e3*o.get("rippleEffect.period"),h.effectOffset=e/t.count(),h.z=o.getShallow("z")||0,h.zlevel=o.getShallow("zlevel")||0,h.symbolType=a,h.color=s,this.off("mouseover").off("mouseout").off("emphasis").off("normal"),"render"===h.showEffectOn)this._effectCfg?this.updateEffectAnimation(h):this.startEffectAnimation(h),this._effectCfg=h;else{this._effectCfg=null,this.stopEffectAnimation();var""" c="this.childAt(0),d=function(){c.highlight()," render"!="=h.showEffectOn&&this.startEffectAnimation(h)},f=function(){c.downplay()," au(vg)},render:function(t,e,i){var o="DD().reset(t);o.progress&&o.progress({start:0,end:n.count()},n),this._symbolDraw.updateLayout(n)},_updateGroupTransform:function(t){var" tp="undefined" =="typeof" uint32array?array:uint32array,ep="undefined" float64array?array:float64array,ip="qI.extend({type:" series.lines",dependencies:["grid","polar"],visualcoloraccesspath:"linestyle.color",init:function(t){t.data="t.data||[],yg(t);var" float32array(e.count)),ip.superapply(this,"init",arguments)},mergeoption:function(t){if(t.data="t.data||[],yg(t),t.data){var" float32array(e.count))}ip.superapply(this,"mergeoption",arguments)},appenddata:function(t){var float32array(e.count)),this.getrawdata().appenddata(t.data)},_getcoordsfromitemmodel:function(t){var e.option instanceof array?e.option:e.getshallow("coords")},getlinecoordscount:function(t){return this._flatcoordsoffset?this._flatcoordsoffset[2*t+1]:this._getcoordsfromitemmodel(t).length},getlinecoords:function(t,e){if(this._flatcoordsoffset){for(var n}for(var a.length},_processflatcoordsarray:function(t){var t[0]){for(var tp(i),o="new" ep(i),a="0,r=0,s=0,l=0;l<i;){s++;var" uint32array(n.buffer,0,r),flatcoords:o,count:s}}return{flatcoordsoffset:null,flatcoords:null,count:t.length}},getinitialdata:function(t,e){var ya(["value"],this);return i.hasitemoption="!1,i.initData(t.data,[],function(t,e,n,o){if(t" array)return nan;i.hasitemoption="!0;var" null!="a?a" array?a[o]:a:void 0}),i},formattooltip:function(t){var i;var> "))},preventIncremental:function(){return!!this.get("effect.show")},getProgressive:function(){var t=this.option.progressive;return null==t?this.option.large?1e4:this.get("progressive"):t},getProgressiveThreshold:function(){var t=this.option.progressiveThreshold;return null==t?this.option.large?2e4:this.get("progressiveThreshold"):t},defaultOption:{coordinateSystem:"geo",zlevel:0,z:2,legendHoverLink:!0,hoverAnimation:!0,xAxisIndex:0,yAxisIndex:0,symbol:["none","none"],symbolSize:[10,10],geoIndex:0,effect:{show:!1,period:4,constantSpeed:0,symbol:"circle",symbolSize:3,loop:!0,trailLength:.2},large:!1,largeThreshold:2e3,polyline:!1,label:{show:!1,position:"end"},lineStyle:{opacity:.5}}}),nP=xg.prototype;nP.createLine=function(t,e,i){return new af(t,e,i)},nP._updateEffectSymbol=function(t,e){var i=t.getItemModel(e).getModel("effect"),n=i.get("symbolSize"),o=i.get("symbol");y(n)||(n=[n,n]);var a=i.get("color")||t.getItemVisual(e,"color"),r=this.childAt(1);this._symbolType!==o&&(this.remove(r),(r=$l(o,-.5,-.5,1,1,a)).z2=100,r.culling=!0,this.add(r)),r&&(r.setStyle("shadowColor",a),r.setStyle(i.getItemStyle(["color"])),r.attr("scale",n),r.setColor(a),r.attr("scale",n),this._symbolType=o,this._updateEffectAnimation(t,i,e))},nP._updateEffectAnimation=function(t,e,i){var n=this.childAt(1);if(n){var o=this,a=t.getItemLayout(i),r=1e3*e.get("period"),s=e.get("loop"),l=e.get("constantSpeed"),u=T(e.get("delay"),function(e){return e/t.count()*r/3}),h="function"==typeof u;if(n.ignore=!0,this.updateAnimationPoints(n,a),l>0&&(r=this.getLineLength(n)/l*1e3),r!==this._period||s!==this._loop){n.stopAnimation();var c=u;h&&(c=u(i)),n.__t>0&&(c=-r*n.__t),n.__t=0;var d=n.animate("",s).when(r,{__t:1}).delay(c).during(function(){o.updateSymbolPosition(n)});s||d.done(function(){o.remove(n)}),d.start()}this._period=r,this._loop=s}},nP.getLineLength=function(t){return uw(t.__p1,t.__cp1)+uw(t.__cp1,t.__p2)},nP.updateAnimationPoints=function(t,e){t.__p1=e[0],t.__p2=e[1],t.__cp1=e[2]||[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2]},nP.updateData=function(t,e,i){this.childAt(0).updateData(t,e,i),this._updateEffectSymbol(t,e)},nP.updateSymbolPosition=function(t){var e=t.__p1,i=t.__p2,n=t.__cp1,o=t.__t,a=t.position,r=rn,s=sn;a[0]=r(e[0],n[0],i[0],o),a[1]=r(e[1],n[1],i[1],o);var l=s(e[0],n[0],i[0],o),u=s(e[1],n[1],i[1],o);t.rotation=-Math.atan2(u,l)-Math.PI/2,t.ignore=!1},nP.updateLayout=function(t,e){this.childAt(0).updateLayout(t,e);var i=t.getItemModel(e).getModel("effect");this._updateEffectAnimation(t,i,e)},u(xg,tb);var oP=_g.prototype;oP._createPolyline=function(t,e,i){var n=t.getItemLayout(e),o=new gM({shape:{points:n}});this.add(o),this._updateCommonStl(t,e,i)},oP.updateData=function(t,e,i){var n=t.hostModel;Mo(this.childAt(0),{shape:{points:t.getItemLayout(e)}},n,e),this._updateCommonStl(t,e,i)},oP._updateCommonStl=function(t,e,i){var n=this.childAt(0),o=t.getItemModel(e),a=t.getItemVisual(e,"color"),s=i&&i.lineStyle,l=i&&i.hoverLineStyle;i&&!t.hasItemOption||(s=o.getModel("lineStyle").getLineStyle(),l=o.getModel("emphasis.lineStyle").getLineStyle()),n.useStyle(r({strokeNoScale:!0,fill:"none",stroke:a},s)),n.hoverStyle=l,co(this)},oP.updateLayout=function(t,e){this.childAt(0).setShape("points",t.getItemLayout(e))},u(_g,tb);var aP=wg.prototype;aP.createLine=function(t,e,i){return new _g(t,e,i)},aP.updateAnimationPoints=function(t,e){this._points=e;for(var i=[0],n=0,o=1;o<e.length;o++){var a="e[o-1],r=e[o];n+=uw(a,r),i.push(n)}if(0!==n){for(o=0;o<i.length;o++)i[o]/=n;this._offsets=i,this._length=n}},aP.getLineLength=function(t){return" this._length},ap.updatesymbolposition="function(t){var" e="t.__t,i=this._points,n=this._offsets,o=i.length;if(n){var">=0&&!(n[r]<=e);r--);r=math.min(r,o-2)}else{for(var r="a;r<o&&!(n[r]">e);r++);r=Math.min(r-1,o-2)}J(t.position,i[r],i[r+1],(e-n[r])/(n[r+1]-n[r]));var s=i[r+1][0]-i[r][0],l=i[r+1][1]-i[r][1];t.rotation=-Math.atan2(l,s)-Math.PI/2,this._lastFrame=r,this._lastFramePercent=e,t.ignore=!1}},u(wg,xg);var rP=Zn({shape:{polyline:!1,curveness:0,segs:[]},buildPath:function(t,e){var i=e.segs,n=e.curveness;if(e.polyline)for(r=0;r<i.length;){var o="i[r++];if(o">0){t.moveTo(i[r++],i[r++]);for(var a=1;a<o;a++)t.lineto(i[r++],i[r++])}}else for(var r="0;r<i.length;){var" s="i[r++],l=i[r++],u=i[r++],h=i[r++];if(t.moveTo(s,l),n">0){var c=(s+u)/2-(l-h)*n,d=(l+h)/2-(u-s)*n;t.quadraticCurveTo(c,d,u,h)}else t.lineTo(u,h)}},findDataIndex:function(t,e){var i=this.shape,n=i.segs,o=i.curveness;if(i.polyline)for(var a=0,r=0;r<n.length;){var s="n[r++];if(s">0)for(var l=n[r++],u=n[r++],h=1;h<s;h++)if(vn(l,u,c=n[r++],d=n[r++]))return a;a++}else for(var a="0,r=0;r<n.length;){var" l="n[r++],u=n[r++],c=n[r++],d=n[r++];if(o">0){if(xn(l,u,(l+c)/2-(u-d)*o,(u+d)/2-(c-l)*o,c,d))return a}else if(vn(l,u,c,d))return a;a++}return-1}}),sP=bg.prototype;sP.isPersistent=function(){return!this._incremental},sP.updateData=function(t){this.group.removeAll();var e=new rP({rectHover:!0,cursor:"default"});e.setShape({segs:t.getLayout("linesPoints")}),this._setCommon(e,t),this.group.add(e),this._incremental=null},sP.incrementalPrepareUpdate=function(t){this.group.removeAll(),this._clearIncremental(),t.count()>5e5?(this._incremental||(this._incremental=new Hn({silent:!0})),this.group.add(this._incremental)):this._incremental=null},sP.incrementalUpdate=function(t,e){var i=new rP;i.setShape({segs:e.getLayout("linesPoints")}),this._setCommon(i,e,!!this._incremental),this._incremental?this._incremental.addDisplayable(i,!0):(i.rectHover=!0,i.cursor="default",i.__startIndex=t.start,this.group.add(i))},sP.remove=function(){this._clearIncremental(),this._incremental=null,this.group.removeAll()},sP._setCommon=function(t,e,i){var n=e.hostModel;t.setShape({polyline:n.get("polyline"),curveness:n.get("lineStyle.curveness")}),t.useStyle(n.getModel("lineStyle").getLineStyle()),t.style.strokeNoScale=!0;var o=e.getVisual("color");o&&t.setStyle("stroke",o),t.setStyle("fill"),i||(t.seriesIndex=n.seriesIndex,t.on("mousemove",function(e){t.dataIndex=null;var i=t.findDataIndex(e.offsetX,e.offsetY);i>0&&(t.dataIndex=i+t.__startIndex)}))},sP._clearIncremental=function(){var t=this._incremental;t&&t.clearDisplaybles()};var lP={seriesType:"lines",plan:JI(),reset:function(t){var e=t.coordinateSystem,i=t.get("polyline"),n=t.pipelineContext.large;return{progress:function(o,a){var r=[];if(n){var s,l=o.end-o.start;if(i){for(var u=0,h=o.start;h<o.end;h++)u+=t.getlinecoordscount(h);s=new float32array(l+2*u)}else s="new" float32array(4*l);for(var c="0,d=[],h=o.start;h<o.end;h++){g=t.getLineCoords(h,r),i&&(s[c++]=g);for(var" f="0;f<g;f++)d=e.dataToPoint(r[f],!1,d),s[c++]=d[0],s[c++]=d[1]}a.setLayout(" linespoints",s)}else" for(h="o.start;h<o.end;h++){var" p="a.getItemModel(h),g=t.getLineCoords(h,r),m=[];if(i)for(var" v="0;v<g;v++)m.push(e.dataToPoint(r[v]));else{m[0]=e.dataToPoint(r[0]),m[1]=e.dataToPoint(r[1]);var" y="p.get(" linestyle.curveness");+y&&(m[2]="[(m[0][0]+m[1][0])/2-(m[0][1]-m[1][1])*y,(m[0][1]+m[1][1])/2-(m[1][0]-m[0][0])*y])}a.setItemLayout(h,m)}}}}};Hs({type:" lines",init:function(){},render:function(t,e,i){var"" n="t.getData(),o=this._updateLineDraw(n,t),a=t.get(" zlevel"),r="t.get(" effect.traillength"),s="i.getZr(),l="svg"===s.painter.getType();l||s.painter.getLayer(a).clear(!0),null==this._lastZlevel||l||s.configLayer(this._lastZlevel,{motionBlur:!1}),this._showEffect(t)&&r&&(l||s.configLayer(a,{motionBlur:!0,lastFrameAlpha:Math.max(Math.min(r/10+.9,1),0)})),o.updateData(n),this._lastZlevel=a,this._finished=!0},incrementalPrepareRender:function(t,e,i){var""" a="lP.reset(t);a.progress&&a.progress({start:0,end:n.count()},n),this._lineDraw.updateLayout(),this._clearLayer(i)},_updateLineDraw:function(t,e){var" i="this._lineDraw,n=this._showEffect(e),o=!!e.get(" polyline"),a="e.pipelineContext.large;return" " i&&n="==this._hasEffet&&o===this._isPolyline&&a===this._isLargeDraw||(i&&i.remove(),i=this._lineDraw=a?new" bg:new rf(o?n?wg:_g:n?xg:af),this._haseffet="n,this._isPolyline=o,this._isLargeDraw=a,this.group.removeAll()),this.group.add(i.group),i},_showEffect:function(t){return!!t.get(" effect.show")},_clearlayer:function(t){var" e="t.getZr();" svg"="==e.painter.getType()||null==this._lastZlevel||e.painter.getLayer(this._lastZlevel).clear(!0)},remove:function(t,e){this._lineDraw&&this._lineDraw.remove(),this._lineDraw=null,this._clearLayer(e)},dispose:function(){}});var" up="lineStyle.opacity" .split("."),hp="{seriesType:" lines",reset:function(t,e,i){var" a.setvisual("fromsymbol",n&&n[0]),a.setvisual("tosymbol",n&&n[1]),a.setvisual("fromsymbolsize",o&&o[0]),a.setvisual("tosymbolsize",o&&o[1]),a.setvisual("opacity",t.get(up)),{dataeach:a.hasitemoption?function(t,e){var gl(this.getsource(),this,{generatecoord:"value"})},preventincremental:function(){var t="Ga.get(this.get(" coordinatesystem"));if(t&&t.dimensions)return"lng"="==t.dimensions[0]&&" lat"="==t.dimensions[1]},defaultOption:{coordinateSystem:"cartesian2d",zlevel:0,z:2,geoIndex:0,blurSize:30,pointSize:20,maxOpacity:1,minOpacity:0}});Mg.prototype={update:function(t,e,i,n,o,a){var""" r="this._getBrush(),s=this._getGradient(t,o," inrange"),l="this._getGradient(t,o," outofrange"),u="this.pointSize+this.blurSize,h=this.canvas,c=h.getContext("2d"),d=t.length;h.width=e,h.height=i;for(var""" h;for(var>0){var I=a(v)?s:l;v>0&&(v=v*S+b),x[_++]=I[M],x[_++]=I[M+1],x[_++]=I[M+2],x[_++]=I[M+3]*v*256}else _+=4}return c.putImageData(y,0,0),h},_getBrush:function(){var t=this._brushCanvas||(this._brushCanvas=iw()),e=this.pointSize+this.blurSize,i=2*e;t.width=i,t.height=i;var n=t.getContext("2d");return n.clearRect(0,0,i,i),n.shadowOffsetX=i,n.shadowBlur=this.blurSize,n.shadowColor="#000",n.beginPath(),n.arc(-e,e,this.pointSize,0,2*Math.PI,!0),n.closePath(),n.fill(),t},_getGradient:function(t,e,i){for(var n=this._gradientPixels,o=n[i]||(n[i]=new Uint8ClampedArray(1024)),a=[0,0,0,0],r=0,s=0;s<256;s++)e[i](s 255,!0,a),o[r++]="a[0],o[r++]=a[1],o[r++]=a[2],o[r++]=a[3];return" o}},hs({type:"heatmap",render:function(t,e,i){var n;e.eachcomponent("visualmap",function(e){e.eachtargetseries(function(i){i="==t&&(n=e)})}),this.group.removeAll(),this._incrementalDisplayable=null;var" o="t.coordinateSystem;" cartesian2d"="==o.type||" calendar"="==o.type?this._renderOnCartesianAndCalendar(t,i,0,t.getData().count()):Ag(o)&&this._renderOnGeo(o,t,n,i)},incrementalPrepareRender:function(t,e,i){this.group.removeAll()},incrementalRender:function(t,e,i,n){e.coordinateSystem&&this._renderOnCartesianAndCalendar(e,n,t.start,t.end,!0)},_renderOnCartesianAndCalendar:function(t,e,i,n,o){var""" r,s,l="t.coordinateSystem;if(" u="l.getAxis(" x"),h="l.getAxis(" y");r="u.getBandWidth(),s=h.getBandWidth()}for(var""" c="this.group,d=t.getData(),f=t.getModel(" itemstyle").getitemstyle(["color"]),p="t.getModel(" emphasis.itemstyle").getitemstyle(),g="t.getModel("label"),m=t.getModel("emphasis.label"),v=l.type,y="cartesian2d"===v?[d.mapDimension("x"),d.mapDimension("y"),d.mapDimension("value")]:[d.mapDimension("time"),d.mapDimension("value")],x=i;x<n;x++){var""" _;if("cartesian2d"="==v){if(isNaN(d.get(y[2],x)))continue;var" w="l.dataToPoint([d.get(y[0],x),d.get(y[1],x)]);_=new" ym({shape:{x:w[0]-r 2,y:w[1]-s 2,width:r,height:s},style:{fill:d.getitemvisual(x,"color"),opacity:d.getitemvisual(x,"opacity")}})}else{if(isnan(d.get(y[1],x)))continue;_="new" ym({z2:1,shape:l.datatorect([d.get(y[0],x)]).contentshape,style:{fill:d.getitemvisual(x,"color"),opacity:d.getitemvisual(x,"opacity")}})}var b="d.getItemModel(x);d.hasItemOption&&(f=b.getModel(" s="t.getRawValue(x),M=" -";s&&null!="S[2]&&(M=S[2]),po(f,p,g,m,{labelFetcher:t,labelDataIndex:x,defaultText:M,isRectText:!0}),_.setStyle(f),co(_,d.hasItemOption?p:a({},p)),_.incremental=o,o&&(_.useHoverLayer=!0),c.add(_),d.setItemGraphicEl(x,_)}},_renderOnGeo:function(t,e,i,n){var" " mg;s.blursize="e.get(" blursize"),s.pointsize="e.get(" pointsize"),s.minopacity="e.get("minOpacity"),s.maxOpacity=e.get("maxOpacity");var""" l="t.getViewRect().clone(),u=t.getRoamTransform();l.applyTransform(u);var" h="Math.max(l.x,0),c=Math.max(l.y,0),d=Math.min(l.width+l.x,n.getWidth()),f=Math.min(l.height+l.y,n.getHeight()),p=d-h,g=f-c,m=[r.mapDimension(" lng"),r.mapdimension("lat"),r.mapdimension("value")],v="r.mapArray(m,function(e,i,n){var" o[0]-="h,o[1]-=c,o.push(n),o}),y=i.getExtent(),x=" visualmap.continuous"="==i.type?Tg(y,i.option.range):Ig(y,i.getPieceList(),i.option.selected);s.update(v,p,g,o.color.getNormalizer(),{inRange:o.color.getColorMapper(),outOfRange:a.color.getColorMapper()},x);var" _="new" fi({style:{width:p,height:g,x:h,y:c,image:s.canvas},silent:!0});this.group.add(_)},dispose:function(){}});var cp="JD.extend({type:" series.pictorialbar",dependencies:["grid"],defaultoption:{symbol:"circle",symbolsize:null,symbolrotate:null,symbolposition:null,symboloffset:null,symbolmargin:null,symbolrepeat:!1,symbolrepeatdirection:"end",symbolclip:!1,symbolboundingdata:null,symbolpatternsize:400,bargap:"-100%",progressive:0,hoveranimation:!1},getinitialdata:function(t){return" t.stack="null,cP.superApply(this," getinitialdata",arguments)}}),dp="[" itemstyle","borderwidth"],fp="[{xy:"x",wh:"width",index:0,posDesc:["left","right"]},{xy:"y",wh:"height",index:1,posDesc:["top","bottom"]}],pP=new""" sm;hs({type:"pictorialbar",render:function(t,e,i){var n="this.group,o=t.getData(),a=this._data,r=t.coordinateSystem,s=!!r.getBaseAxis().isHorizontal(),l=r.grid.getRect(),u={ecSize:{width:i.getWidth(),height:i.getHeight()},seriesModel:t,coordSys:r,coordSysExtent:[[l.x,l.x+l.width],[l.y,l.y+l.height]],isHorizontal:s,valueDim:fP[+s],categoryDim:fP[1-s]};return" o.diff(a).add(function(t){if(o.hasvalue(t)){var e="Vg(o,t),i=Dg(o,t,e,u),a=Hg(o,u,i);o.setItemGraphicEl(t,a),n.add(a),qg(a,u,i)}}).update(function(t,e){var" i="a.getItemGraphicEl(e);if(o.hasValue(t)){var" r="Vg(o,t),s=Dg(o,t,r,u),l=Xg(o,s);i&&l!==i.__pictorialShapeStr&&(n.remove(i),o.setItemGraphicEl(t,null),i=null),i?Zg(i,u,s):i=Hg(o,u,s,!0),o.setItemGraphicEl(t,i),i.__pictorialSymbolMeta=s,n.add(i),qg(i,u,s)}else" n.remove(i)}).remove(function(t){var gp="function(t,e,i,n,o){rD.call(this,t,e,i),this.type=n||" value",this.position="o||" bottom",this.orient="null};gP.prototype={constructor:gP,model:null,isHorizontal:function(){var""" t="this.position;return" top"="==t||" bottom"="==t},pointToData:function(t,e){return""" this.coordinatesystem.pointtodata(t,e)[0]},toglobalcoord:null,tolocalcoord:null},u(gp,rd),$g.prototype="{type:" singleaxis",axispointerenabled:!0,constructor:$g,_init:function(t,e,i){var" gp(n,wl(t),[0,0],t.get("type"),t.get("position")),a="category" =="=o.type;o.onBand=a&&t.get(" boundarygap"),o.inverse="t.get(" inverse"),o.orient="t.get("orient"),t.axis=o,o.model=t,o.coordinateSystem=this,this._axis=o},update:function(t,e){t.eachSeries(function(t){if(t.coordinateSystem===this){var""" this._rect},_adjustaxis:function(){var t+e}:function(t){return n-t+e},t.tolocalcoord="o?function(t){return" t-e}:function(t){return n-t+e}},getaxis:function(){return this._axis},getbaseaxis:function(){return this._axis},getaxes:function(){return[this._axis]},gettooltipaxes:function(){return{baseaxes:[this.getaxis()]}},containpoint:function(t){var>=e.y&&t[1]<=e.y+e.height:i.contain(i.tolocalcoord(t[1]))&&t[0]>=e.y&&t[0]<=e.y+e.height},pointtodata:function(t){var e="this.getAxis();return[e.coordToData(e.toLocalCoord(t[" horizontal"="==e.orient?0:1]))]},dataToPoint:function(t){var" " t instanceof array&&(t="t[0]),n[o]=e.toGlobalCoord(e.dataToCoord(+t)),n[1-o]=0===o?i.y+i.height/2:i.x+i.width/2,n}},Ga.register(" single",{create:function(t,e){var" i="[];return" t.eachcomponent("singleaxis",function(n,o){var a="new" $g(n,t,e);a.name="single_" +o,a.resize(n,e),n.coordinatesystem="a,i.push(a)}),t.eachSeries(function(e){if(" singleaxis"="==e.get(" coordinatesystem")){var"" mp="[" axisline","axisticklabel","axisname"],vp="jD.extend({type:" singleaxis",axispointerclass:"singleaxispointer",render:function(t,e,i,n){var"" o="this.group;o.removeAll();var" wd(t,a);d(mp,r.add,r),o.add(r.getgroup()),t.get("splitline.show")&&this._splitline(t),vp.supercall(this,"render",t,e,i,n)},_splitline:function(t){var array?a:[a];for(var r="t.coordinateSystem.getRect(),s=e.isHorizontal(),l=[],u=0,h=e.getTicksCoords({tickModel:i}),c=[],d=[],f=0;f<h.length;++f){var" p="e.toGlobalCoord(h[f].coord);s?(c[0]=p,c[1]=r.y,d[0]=p,d[1]=r.y+r.height):(c[0]=r.x,c[1]=p,d[0]=r.x+r.width,d[1]=p);var" g="u++%a.length;l[g]=l[g]||[],l[g].push(new" _m(qn({shape:{x1:c[0],y1:c[1],x2:d[0],y2:d[1]},style:{linewidth:o},silent:!0})))}for(f="0;f<l.length;++f)this.group.add(OM(l[f],{style:{stroke:a[f%a.length],lineDash:n.getLineDash(o),lineWidth:o},silent:!0}))}}}),yP=uI.extend({type:" singleaxis",layoutmode:"box",axis:null,coordinatesystem:null,getcoordsysmodel:function(){return" this}}),xp="{left:" 5%",top:"5%",right:"5%",bottom:"5%",type:"value",position:"bottom",orient:"horizontal",axisline:{show:!0,linestyle:{width:2,type:"solid"}},tooltip:{show:!0},axistick:{show:!0,length:6,linestyle:{width:2}},axislabel:{show:!0,interval:"auto"},splitline:{show:!0,linestyle:{type:"dashed",opacity:.2}}};n(yp.prototype,xa),rd("single",yp,function(t,e){return" e.type||(e.data?"category":"value")},xp);var _p="function(t,e){var" i,n="[],o=t.seriesIndex;if(null==o||!(i=e.getSeriesByIndex(o)))return{point:[]};var" s="a.getItemGraphicEl(r),l=i.coordinateSystem;if(i.getTooltipPosition)n=i.getTooltipPosition(r)||[];else" if(l&&l.datatopoint)n="l.dataToPoint(a.getValues(f(l.dimensions,function(t){return" a.mapdimension(t)}),r,!0))||[];else if(s){var u="s.getBoundingRect().clone();u.applyTransform(s.transform),n=[u.x+u.width/2,u.y+u.height/2]}return{point:n,el:s}},wP=d,bP=v,SP=Bi(),MP=(Gs({type:" axispointer",coordsysaxesinfo:null,defaultoption:{show:"auto",triggeron:null,zlevel:0,z:50,type:"line",snap:!1,triggertooltip:!0,value:null,status:null,link:[],animation:null,animationdurationupdate:200,linestyle:{color:"#aaa",width:1,type:"solid"},shadowstyle:{color:"rgba(150,150,150,0.3)"},label:{show:!0,formatter:null,precision:"auto",margin:3,color:"#fff",padding:[5,7,5,7],backgroundcolor:"auto",bordercolor:null,borderwidth:0,shadowblur:3,shadowcolor:"#aaa"},handle:{show:!1,icon:"m10.7,11.9v-1.3h9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4c19.5,16.3,15.6,12.2,10.7,11.9z" m13.3,24.4h6.7v-1.2h6.6z m13.3,22h6.7v-1.2h6.6z m13.3,19.6h6.7v-1.2h6.6z",size:45,margin:50,color:"#333",shadowblur:3,shadowcolor:"#aaa",shadowoffsetx:0,shadowoffsety:2,throttle:40}}}),bi()),ip="d,TP=Fs({type:" axispointer",render:function(t,e,i){var" n="e.getComponent(" tooltip"),o="t.get(" triggeron")||n&&n.get("triggeron")||"mousemove|click";um("axispointer",i,function(t,e,i){"none"!="=o&&("leave"===t||o.indexOf(t)""">=0)&&i({type:"updateAxisPointer",currTrigger:t,x:e&&e.offsetX,y:e&&e.offsetY})})},remove:function(t,e){gm(e.getZr(),"axisPointer"),TP.superApply(this._model,"remove",arguments)},dispose:function(t,e){gm("axisPointer",e),TP.superApply(this._model,"dispose",arguments)}}),AP=Bi(),DP=i,CP=m;(mm.prototype={_group:null,_lastGraphicKey:null,_handle:null,_dragging:!1,_lastValue:null,_lastStatus:null,_payloadInfo:null,animationThreshold:15,render:function(t,e,i,n){var o=e.get("value"),a=e.get("status");if(this._axisModel=t,this._axisPointerModel=e,this._api=i,n||this._lastValue!==o||this._lastStatus!==a){this._lastValue=o,this._lastStatus=a;var r=this._group,s=this._handle;if(!a||"hide"===a)return r&&r.hide(),void(s&&s.hide());r&&r.show(),s&&s.show();var l={};this.makeElOption(l,o,t,e,i);var u=l.graphicKey;u!==this._lastGraphicKey&&this.clear(i),this._lastGraphicKey=u;var h=this._moveAnimation=this.determineAnimation(t,e);if(r){var c=v(vm,e,h);this.updatePointerEl(r,l,c,e),this.updateLabelEl(r,l,c,e)}else r=this._group=new tb,this.createPointerEl(r,l,t,e),this.createLabelEl(r,l,t,e),i.getZr().add(r);wm(r,e,!0),this._renderHandle(o)}},remove:function(t){this.clear(t)},dispose:function(t){this.clear(t)},determineAnimation:function(t,e){var i=e.get("animation"),n=t.axis,o="category"===n.type,a=e.get("snap");if(!a&&!o)return!1;if("auto"===i||null==i){var r=this.animationThreshold;if(o&&n.getBandWidth()>r)return!0;if(a){var s=Sh(t).seriesDataCount,l=n.getExtent();return Math.abs(l[0]-l[1])/s>r}return!1}return!0===i},makeElOption:function(t,e,i,n,o){},createPointerEl:function(t,e,i,n){var o=e.pointer;if(o){var a=AP(t).pointerEl=new zM[o.type](DP(e.pointer));t.add(a)}},createLabelEl:function(t,e,i,n){if(e.label){var o=AP(t).labelEl=new yM(DP(e.label));t.add(o),xm(o,n)}},updatePointerEl:function(t,e,i){var n=AP(t).pointerEl;n&&(n.setStyle(e.pointer.style),i(n,{shape:e.pointer.shape}))},updateLabelEl:function(t,e,i,n){var o=AP(t).labelEl;o&&(o.setStyle(e.label.style),i(o,{shape:e.label.shape,position:e.label.position}),xm(o,n))},_renderHandle:function(t){if(!this._dragging&&this.updateHandleTransform){var e=this._axisPointerModel,i=this._api.getZr(),n=this._handle,o=e.getModel("handle"),a=e.get("status");if(!o.get("show")||!a||"hide"===a)return n&&i.remove(n),void(this._handle=null);var r;this._handle||(r=!0,n=this._handle=ko(o.get("icon"),{cursor:"move",draggable:!0,onmousemove:function(t){mw(t.event)},onmousedown:CP(this._onHandleDragMove,this,0,0),drift:CP(this._onHandleDragMove,this),ondragend:CP(this._onHandleDragEnd,this)}),i.add(n)),wm(n,e,!1);var s=["color","borderColor","borderWidth","opacity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY"];n.setStyle(o.getItemStyle(null,s));var l=o.get("size");y(l)||(l=[l,l]),n.attr("scale",[l[0]/2,l[1]/2]),Pr(this,"_doDispatchAxisPointer",o.get("throttle")||0,"fixRate"),this._moveHandleToValue(t,r)}},_moveHandleToValue:function(t,e){vm(this._axisPointerModel,!e&&this._moveAnimation,this._handle,_m(this.getHandleTransform(t,this._axisModel,this._axisPointerModel)))},_onHandleDragMove:function(t,e){var i=this._handle;if(i){this._dragging=!0;var n=this.updateHandleTransform(_m(i),[t,e],this._axisModel,this._axisPointerModel);this._payloadInfo=n,i.stopAnimation(),i.attr(_m(n)),AP(i).lastProp=null,this._doDispatchAxisPointer()}},_doDispatchAxisPointer:function(){if(this._handle){var t=this._payloadInfo,e=this._axisModel;this._api.dispatchAction({type:"updateAxisPointer",x:t.cursorPoint[0],y:t.cursorPoint[1],tooltipOption:t.tooltipOption,axesInfo:[{axisDim:e.axis.dim,axisIndex:e.componentIndex}]})}},_onHandleDragEnd:function(t){if(this._dragging=!1,this._handle){var e=this._axisPointerModel.get("value");this._moveHandleToValue(e),this._api.dispatchAction({type:"hideTip"})}},getHandleTransform:null,updateHandleTransform:null,clear:function(t){this._lastValue=null,this._lastStatus=null;var e=t.getZr(),i=this._group,n=this._handle;e&&i&&(this._lastGraphicKey=null,i&&e.remove(i),n&&e.remove(n),this._group=null,this._handle=null,this._payloadInfo=null)},doClear:function(){},buildLabel:function(t,e,i){return i=i||0,{x:t[i],y:t[1-i],width:e[i],height:e[1-i]}}}).constructor=mm,Xi(mm);var LP=mm.extend({makeElOption:function(t,e,i,n,o){var a=i.axis,r=a.grid,s=n.get("type"),l=km(r,a).getOtherAxis(a).getGlobalExtent(),u=a.toGlobalCoord(a.dataToCoord(e,!0));if(s&&"none"!==s){var h=bm(n),c=kP[s](a,u,l,h);c.style=h,t.graphicKey=c.type,t.pointer=c}Am(e,t,Ch(r.model,i),i,n,o)},getHandleTransform:function(t,e,i){var n=Ch(e.axis.grid.model,e,{labelInside:!1});return n.labelMargin=i.get("handle.margin"),{position:Tm(e.axis,t,n),rotation:n.rotation+(n.labelDirection<0?math.pi:0)}},updatehandletransform:function(t,e,i,n){var o="i.axis,a=o.grid,r=o.getGlobalExtent(!0),s=km(a,o).getOtherAxis(o).getGlobalExtent(),l=" x"="==o.dim?0:1,u=t.position;u[l]+=e[l],u[l]=Math.min(r[1],u[l]),u[l]=Math.max(r[0],u[l]);var" " h="(s[1]+s[0])/2,c=[h,h];c[l]=u[l];var" d="[{verticalAlign:" middle"},{align:"center"}];return{position:u,rotation:t.rotation,cursorpoint:c,tooltipoption:d[l]}}}),kp="{line:function(t,e,i,n){var" qn({shape:o,style:n}),{type:"line",shape:o}},shadow:function(t,e,i,n){var e="t.axisPointer.link;e&&!y(e)&&(t.axisPointer.link=[e])}}),Ns(GT.PROCESSOR.STATISTIC,function(t,e){t.getComponent(" axispointer").coordsysaxesinfo="mh(t,e)}),Os({type:" updateaxispointer",event:"updateaxispointer",update:":updateaxispointer"},function(t,e,i){var"" n="t.currTrigger,o=[t.x,t.y],a=t,r=t.dispatchAction||m(i.dispatchAction,i),s=e.getComponent(" axispointer").coordsysaxesinfo;if(s){lm(o)&&(o="_P({seriesIndex:a.seriesIndex,dataIndex:a.dataIndex},e).point);var" l="lm(o),u=a.axesInfo,h=s.axesInfo,c=" leave"="==n||lm(o),d={},f={},p={list:[],map:{}},g={showPointer:bP(em,f),showTooltip:bP(im,p)};wP(s.coordSysMap,function(t,e){var" i="l||t.containPoint(o);wP(s.coordSysAxesInfo[e],function(t,e){var" r="a&&a.value;null!=r||l||(r=n.pointToData(o)),null!=r&&Qg(t,r,g,!1,d)}})});var" v="{};return" wp(h,function(t,e){var a="o.value;i.mapper&&(a=t.axis.scale.parse(i.mapper(a,sm(e),sm(t)))),v[t.key]=a}})}),wP(v,function(t,e){Qg(h[e],t,g,!0,d)}),nm(f,h,d),om(p,o,t,r),am(h,0,i),d}});var" pp="[" x","y"],np="[" width","height"],op="mm.extend({makeElOption:function(t,e,i,n,o){var""" n.labelmargin="i.get(" handle.margin"),{position:tm(e.axis,t,n),rotation:n.rotation+(n.labeldirection<0?math.pi:0)}},updatehandletransform:function(t,e,i,n){var" u="Om(a,1-r),h=(u[1]+u[0])/2,c=[h,h];return" c[r]="l[r],{position:l,rotation:t.rotation,cursorPoint:c,tooltipOption:{verticalAlign:" middle"}}}}),ep="{line:function(t,e,i,n){var" rp="qI.extend({type:" series.themeriver",dependencies:["singleaxis"],namemap:null,init:function(t){rp.superapply(this,"init",arguments),this.legenddataprovider="function(){return" this.getrawdata()}},fixdata:function(t){for(var t[2]}).entries(t),function(t){return{name:t.key,datalist:t.values}}),n="i.length,o=-1,a=-1,r=0;r<n;++r){var" s="i[r].dataList.length;s">o&&(o=s,a=r)}for(var l=0;l<n;++l)if(l!==a)for(var u="i[l].name,h=0;h<o;++h){for(var" c="i[a].dataList[h][0],d=i[l].dataList.length,p=-1,g=0;g<d;++g)if(i[l].dataList[g][0]===c){p=g;break}-1===p&&(t[e]=[],t[e][0]=c,t[e][1]=0,t[e][2]=u,e++)}return" t},getinitialdata:function(t,e){for(var i="e.queryComponents({mainType:" singleaxis",index:this.get("singleaxisindex"),id:this.get("singleaxisid")})[0].get("type"),n="g(t.data,function(t){return" " void 0!="=t[2]}),o=this.fixData(n||[]),a=[],r=this.nameMap=R(),s=0,l=0;l<o.length;++l)a.push(o[l][2]),r.get(o[l][2])||(r.set(o[l][2],s),s++);var" ya(u,this);return h.initdata(o),h},getlayerseries:function(){for(var t="this.getData(),e=t.count(),i=[],n=0;n<e;++n)i[n]=n;for(var" o="f(zp().key(function(e){return" t.get("name",e)}).entries(i),function(t){return{name:t.key,indices:t.values}}),a="t.mapDimension(" single"),r="0;r<o.length;++r)o[r].indices.sort(function(e,i){return" t.get(a,e)-t.get(a,i)});return o},getaxistooltipdata:function(t,e,i){y(t)||(t="t?[t]:[]);for(var" n,o="this.getData(),a=this.getLayerSeries(),r=[],s=a.length,l=0;l<s;++l){for(var" f="o.get(t[0],a[l].indices[d]),p=Math.abs(f-e);p<=u&&(n=f,u=p,h=a[l].indices[d])}r.push(h)}return{dataIndices:r,nestestValue:n}},formatTooltip:function(t){var" e="this.getData(),i=e.getName(t),n=e.get(e.mapDimension(" value"),t);return(isnan(n)||null="=n)&&(n=" -"),ea(i+""" : "+n)},defaultoption:{zlevel:0,z:2,coordinatesystem:"singleaxis",boundarygap:["10%","10%"],singleaxisindex:0,animationeasing:"linear",label:{margin:4,show:!0,position:"left",color:"#000",fontsize:11},emphasis:{label:{show:!0}}}});hs({type:"themeriver",init:function(){this._layers="[]},render:function(t,e,i){function" n(t){return t.name}function o(e,i,n){var u,h="[],c=[],f=l[i].indices,p=0;p<f.length;p++){var" g="r.getItemLayout(f[p]),m=g.x,v=g.y0,y=g.y;h.push([m,v]),c.push([m,v+y]),u=r.getItemVisual(f[p]," color")}var" x,_,w="r.getItemLayout(f[0]),b=r.getItemModel(f[p-1]),S=b.getModel(" label"),m="S.get(" margin");if("add"="==e){I=d[i]=new""" tb;x="new" td({shape:{points:h,stackedonpoints:c,smooth:.4,stackedonsmooth:.4,smoothconstraint:!1},z2:0}),_="new" rm({style:{x:w.x-m,y:w.y0+w.y 2}}),i.add(x),i.add(_),s.add(i),x.setclippath(em(x.getboundingrect(),t,function(){x.removeclippath()}))}else{var s.remove(o[i])}var r="t.getData(),s=this.group,l=t.getLayerSeries(),u=r.getLayout(" layoutinfo"),h="u.rect,c=u.boundaryGap;s.attr(" position",[0,h.y+c[0]]);var"" d="{};new" us(this._layersseries||[],l,n,n).add(m(o,this,"add")).update(m(o,this,"update")).remove(m(o,this,"remove")).execute(),this._layersseries="l,this._layers=d},dispose:function(){}});Rs(function(t,e){t.eachSeriesByType(" themeriver",function(t){var" a="t.get(" boundarygap"),r="i.getAxis();n.boundaryGap=a," horizontal"="==r.orient?(a[0]=Bo(a[0],o.height),a[1]=Bo(a[1],o.height),Rm(e,t,o.height-a[0]-a[1])):(a[0]=Bo(a[0],o.width),a[1]=Bo(a[1],o.width),Rm(e,t,o.width-a[0]-a[1])),e.setLayout("layoutInfo",n)})}),zs(function(t){t.eachSeriesByType("themeRiver",function(t){var""" l="o.get(a);null!=l&&e.setItemVisual(l," color",s)})})}),ns(pc("themeriver")),qi.extend({type:"series.sunburst",_viewroot:null,getinitialdata:function(t,e){var" n="t.levels||[],o={};return" o.levels="n,Bc.createTree(i,this,o).data},optionUpdated:function(){this.resetViewRoot()},getDataParams:function(t){var" e.treepathinfo="hd(i,this),e},defaultOption:{zlevel:0,z:2,center:[" 50%","50%"],radius:[0,"75%"],clockwise:!0,startangle:90,minangle:0,percentprecision:2,stillshowzerosum:!0,highlightpolicy:"descendant",nodeclick:"roottonode",renderlabelforzerodata:!1,label:{rotate:"radial",show:!0,opacity:1,align:"center",position:"inside",distance:5,silent:!0,emphasis:{}},itemstyle:{borderwidth:1,bordercolor:"white",bordertype:"solid",shadowblur:0,shadowcolor:"rgba(0," 0, 0.2)",shadowoffsetx:0,shadowoffsety:0,opacity:1,emphasis:{},highlight:{opacity:1},downplay:{opacity:.9}},animationtype:"expansion",animationduration:1e3,animationdurationupdate:500,animationeasing:"cubicout",data:[],levels:[],sort:"desc"},getviewroot:function(){return this._viewroot},resetviewroot:function(t){t?this._viewroot="t:t=this._viewRoot;var" zp="{NONE:" none",descendant:"descendant",ancestor:"ancestor",self:"self"},bp="2,VP=4,GP=Vm.prototype;GP.updateData=function(t,e,i,o,s){this.node=e,e.piece=this,o=o||this._seriesModel,s=s||this._ecModel;var" f,p="u.getModel(" itemstyle").getitemstyle();f="r({lineJoin:" bevel",fill:(f="normal" =="=i?p:n(u.getModel(i+".itemStyle").getItemStyle(),p)).fill||d},f),t?(l.setShape(c),l.shape.r=h.r0,Mo(l,{shape:{r:h.r}},o,e.dataIndex),l.useStyle(f)):"object"==typeof""" f.fill&&f.fill.type||"object"="=typeof" l.style.fill&&l.style.fill.type?(mo(l,{shape:c},o),l.usestyle(f)):mo(l,{shape:c,style:f},o),this._updatelabel(o,d,i);var m="o.getShallow(" highlightpolicy");this._initevents(l,e,o,m)}this._seriesmodel="o||this._seriesModel,this._ecModel=s||this._ecModel},GP.onEmphasis=function(t){var" n(t){var null="=e?a.get(t):e}var">Math.PI/2?"right":"left"):x&&"center"!==x?"left"===x?(f=u.r0+y,p>Math.PI/2&&(x="right")):"right"===x&&(f=u.r-y,p>Math.PI/2&&(x="left")):(f=(u.r+u.r0)/2,x="center"),d.attr("style",{text:l,textAlign:x,textVerticalAlign:n("verticalAlign")||"middle",opacity:n("opacity")});var _=f*g+u.cx,w=f*m+u.cy;d.attr("position",[_,w]);var b=n("rotate"),S=0;"radial"===b?(S=-p)<-math.pi 2&&(s+="Math.PI):" tangential"="==b?(S=Math.PI/2-p)" ">Math.PI/2?S-=Math.PI:S<-math.pi 2&&(s+="Math.PI):" number"="=typeof" " b&&(s="b*Math.PI/180),d.attr(" rotation",s)},gp._initevents="function(t,e,i,n){t.off(" mouseover").off("mouseout").off("emphasis").off("normal");var"" o="this,a=function(){o.onEmphasis(n)},r=function(){o.onNormal()};i.isAnimationEnabled()&&t.on(" mouseover",a).on("mouseout",r).on("emphasis",a).on("normal",r).on("downplay",function(){o.ondownplay()}).on("highlight",function(){o.onhighlight()})},u(vm,tb);tr.extend({type:"sunburst",init:function(){},render:function(t,e,i,n){function" o(i,n){if(c||!i||i.getvalue()||(i="null),i!==l&&n!==l)if(n&&n.piece)i?(n.piece.updateData(!1,i," normal",t,e),s.setitemgraphicel(i.dataindex,n.piece)):a(n);else" if(i){var vm(i,t,e);h.add(o),s.setitemgraphicel(i.dataindex,o)}}function a(t){t&&t.piece&&(h.remove(t.piece),t.piece="null)}var" r="this;this.seriesModel=t,this.api=i,this.ecModel=e;var" s="t.getData(),l=s.tree.root,u=t.getViewRoot(),h=this.group,c=t.get(" renderlabelforzerodata"),d="[];u.eachNode(function(t){d.push(t)});var" f="this._oldChildren||[];if(function(t,e){function" i(t){return t.getid()}function n(i,n){o(null="=i?null:t[i],null==n?null:e[n])}0===t.length&&0===e.length||new" us(e,t,i,i).add(n).update(n).remove(v(n,null)).execute()}(d,f),function(i,n){if(n.depth>0){r.virtualPiece?r.virtualPiece.updateData(!1,i,"normal",t,e):(r.virtualPiece=new Vm(i,t,e),h.add(r.virtualPiece)),n.piece._onclickEvent&&n.piece.off("click",n.piece._onclickEvent);var o=function(t){r._rootToNode(n.parentNode)};n.piece._onclickEvent=o,r.virtualPiece.on("click",o)}else r.virtualPiece&&(h.remove(r.virtualPiece),r.virtualPiece=null)}(l,u),n&&n.highlight&&n.highlight.piece){var p=t.getShallow("highlightPolicy");n.highlight.piece.onEmphasis(p)}else if(n&&n.unhighlight){var g=this.virtualPiece;!g&&l.children.length&&(g=l.children[0].piece),g&&g.onNormal()}this._initEvents(),this._oldChildren=d},dispose:function(){},_initEvents:function(){var t=this,e=function(e){var i=!1;t.seriesModel.getViewRoot().eachNode(function(n){if(!i&&n.piece&&n.piece.childAt(0)===e.target){var o=n.getModel().get("nodeClick");if("rootToNode"===o)t._rootToNode(n);else if("link"===o){var a=n.getModel(),r=a.get("link");if(r){var s=a.get("target",!0)||"_blank";window.open(r,s)}}i=!0}})};this.group._onclickEvent&&this.group.off("click",this.group._onclickEvent),this.group.on("click",e),this.group._onclickEvent=e},_rootToNode:function(t){t!==this.seriesModel.getViewRoot()&&this.api.dispatchAction({type:"sunburstRootToNode",from:this.uid,seriesId:this.seriesModel.id,targetNode:t})},containPoint:function(t,e){var i=e.getData().getItemLayout(0);if(i){var n=t[0]-i.cx,o=t[1]-i.cy,a=Math.sqrt(n*n+o*o);return a<=i.r&&a>=i.r0}}});var FP="sunburstRootToNode";Os({type:FP,update:"updateView"},function(t,e){e.eachComponent({mainType:"series",subType:"sunburst",query:t},function(e,i){var n=sd(t,[FP],e);if(n){var o=e.getViewRoot();o&&(t.direction=ud(o,n.node)?"rollUp":"drillDown"),e.resetViewRoot(n.node)}})});var WP="sunburstHighlight";Os({type:WP,update:"updateView"},function(t,e){e.eachComponent({mainType:"series",subType:"sunburst",query:t},function(e,i){var n=sd(t,[WP],e);n&&(t.highlight=n.node)})});Os({type:"sunburstUnhighlight",update:"updateView"},function(t,e){e.eachComponent({mainType:"series",subType:"sunburst",query:t},function(e,i){t.unhighlight=!0})});var HP=Math.PI/180;zs(v(hC,"sunburst")),Rs(v(function(t,e,i,n){e.eachSeriesByType(t,function(t){var e=t.get("center"),n=t.get("radius");y(n)||(n=[0,n]),y(e)||(e=[e,e]);var o=i.getWidth(),a=i.getHeight(),r=Math.min(o,a),s=Bo(e[0],o),l=Bo(e[1],a),u=Bo(n[0],r/2),h=Bo(n[1],r/2),c=-t.get("startAngle")*HP,f=t.get("minAngle")*HP,p=t.getData().tree.root,g=t.getViewRoot(),m=g.depth,v=t.get("sort");null!=v&&Zm(g,v);var x=0;d(g.children,function(t){!isNaN(t.getValue())&&x++});var _=g.getValue(),w=Math.PI/(_||x)*2,b=g.depth>0,S=g.height-(b?-1:1),M=(h-u)/(S||1),I=t.get("clockwise"),T=t.get("stillShowZeroSum"),A=I?1:-1,D=function(t,e){if(t){var i=e;if(t!==p){var n=t.getValue(),o=0===_&&T?w:n*w;o<f&&(o=f),i=e+a*o;var a="t.depth-m-(b?-1:1),h=u+M*a,c=u+M*(a+1),g=t.getModel();null!=g.get(" r0")&&(h="Bo(g.get(" r0"),r 2)),null!="g.get("r")&&(c=Bo(g.get("r"),r/2)),t.setLayout({angle:o,startAngle:e,endAngle:i,clockwise:I,cx:s,cy:l,r0:h,r:c})}if(t.children&&t.children.length){var""" v="0;d(t.children,function(t){v+=D(t,e+v)})}return" i-e}};if(b){var c="u,L=u+M,k=2*Math.PI;p.setLayout({angle:k,startAngle:c,endAngle:c+k,clockwise:I,cx:s,cy:l,r0:C,r:L})}D(g,c)})}," sunburst")),ns(v(pc,"sunburst"));var" zp="[" itemstyle"],up="[" emphasis","itemstyle"],xp="["label"],jP=["emphasis","label"],YP="e\0\0",qP={cartesian2d:function(t){var""" e="t.grid.getRect();return{coordSys:{type:" cartesian2d",x:e.x,y:e.y,width:e.width,height:e.height},api:{coord:function(e){return" t.datatopoint(e)},size:m(xm,t)}}},geo:function(t){var t.datatopoint(e)},size:m(jm,t)}}},singleaxis:function(t){var t.datatopoint(e)},size:m(ym,t)}}},polar:function(t){var n[0]>n[1]&&n.reverse(),{coordSys:{type:"polar",cx:t.cx,cy:t.cy,r:n[1],r0:n[0]},api:{coord:m(function(n){var o=e.dataToRadius(n[0]),a=i.dataToAngle(n[1]),r=t.coordToPoint([o,a]);return r.push(o,a*Math.PI/180),r}),size:m(qm,t)}}},calendar:function(t){var e=t.getRect(),i=t.getRangeInfo();return{coordSys:{type:"calendar",x:e.x,y:e.y,width:e.width,height:e.height,cellWidth:t.getCellWidth(),cellHeight:t.getCellHeight(),rangeInfo:{start:i.start,end:i.end,weeks:i.weeks,dayCount:i.allDay}},api:{coord:function(e,i){return t.dataToPoint(e,i)}}}}};qI.extend({type:"series.custom",dependencies:["grid","polar","geo","singleAxis","calendar"],defaultOption:{coordinateSystem:"cartesian2d",zlevel:0,z:2,legendHoverLink:!0,useTransform:!0},getInitialData:function(t,e){return gl(this.getSource(),this)},getDataParams:function(t,e,i){var n=qI.prototype.getDataParams.apply(this,arguments);return i&&(n.info=i.info),n}}),Tr.extend({type:"custom",_data:null,render:function(t,e,i,n){var o=this._data,a=t.getData(),r=this.group,s=Qm(t,a,e,i);a.diff(o).add(function(e){ev(null,e,s(e,n),t,r,a)}).update(function(e,i){ev(o.getItemGraphicEl(i),e,s(e,n),t,r,a)}).remove(function(t){var e=o.getItemGraphicEl(t);e&&r.remove(e)}).execute(),this._data=a},incrementalPrepareRender:function(t,e,i){this.group.removeAll(),this._data=null},incrementalRender:function(t,e,i,n,o){for(var a=e.getData(),r=Qm(e,a,i,n),s=t.start;s<t.end;s++)ev(null,s,r(s,o),e,this.group,a).traverse(function(t){t.isgroup||(t.incremental=!0,t.usehoverlayer=!0)})},dispose:b,filterforexposedevent:function(t,e,i,n){var o="e.element;if(null==o||i.name===o)return!0;for(;(i=i.parent)&&i!==this.group;)if(i.name===o)return!0;return!1}}),Ps(function(t){var" e="t.graphic;y(e)?e[0]&&e[0].elements?t.graphic=[t.graphic[0]]:t.graphic=[{elements:e}]:e&&!e.elements&&(t.graphic=[{elements:[e]}])});var" kp="Gs({type:" graphic",defaultoption:{elements:[],parentid:null},_eloptionstoupdate:null,mergeoption:function(t){var" i="this.option,n=(e?i:t).elements,o=i.elements=e?[]:i.elements,a=[];this._flatten(n,a);var" r="Pi(o,a);Ni(r);var" s="this._elOptionsToUpdate=[];d(r,function(t,e){var" l="o.length-1;l">=0;l--)null==o[l]?o.splice(l,1):delete o[l].$action},_flatten:function(t,e,i){d(t,function(t){if(t){i&&(t.parentOption=i),e.push(t);var n=t.children;"group"===t.type&&n&&this._flatten(n,e,t),delete t.children}},this)},useElOptionsToUpdate:function(){var t=this._elOptionsToUpdate;return this._elOptionsToUpdate=null,t}});Fs({type:"graphic",init:function(t,e){this._elMap=R(),this._lastGraphicModel},render:function(t,e,i){t!==this._lastGraphicModel&&this._clear(),this._lastGraphicModel=t,this._updateElements(t),this._relocate(t,i)},_updateElements:function(t){var e=t.useElOptionsToUpdate();if(e){var i=this._elMap,n=this.group;d(e,function(e){var o=e.$action,a=e.id,r=i.get(a),s=e.parentId,l=null!=s?i.get(s):n,u=e.style;"text"===e.type&&u&&(e.hv&&e.hv[1]&&(u.textVerticalAlign=u.textBaseline=null),!u.hasOwnProperty("textFill")&&u.fill&&(u.textFill=u.fill),!u.hasOwnProperty("textStroke")&&u.stroke&&(u.textStroke=u.stroke));var h=fv(e);o&&"merge"!==o?"replace"===o?(dv(r,i),cv(a,l,h,i)):"remove"===o&&dv(r,i):r?r.attr(h):cv(a,l,h,i);var c=i.get(a);c&&(c.__ecGraphicWidth=e.width,c.__ecGraphicHeight=e.height,yv(c,t))})}},_relocate:function(t,e){for(var i=t.option.elements,n=this.group,o=this._elMap,a=i.length-1;a>=0;a--){var r=i[a],s=o.get(r.id);if(s){var l=s.parent;ca(s,r,l===n?{width:e.getWidth(),height:e.getHeight()}:{width:l.__ecGraphicWidth||0,height:l.__ecGraphicHeight||0},null,{hv:r.hv,boundingMode:r.bounding})}}},_clear:function(){var t=this._elMap;t.each(function(e){dv(e,t)}),this._elMap=R()},dispose:function(){this._clear()}});var $P=Gs({type:"legend.plain",dependencies:["series"],layoutMode:{type:"box",ignoreSize:!0},init:function(t,e,i){this.mergeDefaultAndTheme(t,i),t.selected=t.selected||{}},mergeOption:function(t){$P.superCall(this,"mergeOption",t)},optionUpdated:function(){this._updateData(this.ecModel);var t=this._data;if(t[0]&&"single"===this.get("selectedMode")){for(var e=!1,i=0;i<t.length;i++){var n="t[i].get(" name");if(this.isselected(n)){this.select(n),e="!0;break}}!e&&this.select(t[0].get(" name"))}},_updatedata:function(t){var"" e="[],i=[];t.eachRawSeries(function(n){var" o="n.name;i.push(o);var" a;if(n.legenddataprovider){var r="n.legendDataProvider(),s=r.mapArray(r.getName);t.isSeriesFiltered(n)||(i=i.concat(s)),s.length?e=e.concat(s):a=!0}else" a="!0;a&&Oi(n)&&e.push(n.name)}),this._availableNames=i;var" t&&"number"!="typeof" t||(t="{name:t}),new" po(t,this,this.ecmodel)},this);this._data="n},getData:function(){return" this._data},select:function(t){var>=0},defaultOption:{zlevel:0,z:4,show:!0,orient:"horizontal",left:"center",top:0,align:"auto",backgroundColor:"rgba(0,0,0,0)",borderColor:"#ccc",borderRadius:0,borderWidth:0,padding:5,itemGap:10,itemWidth:25,itemHeight:14,inactiveColor:"#ccc",textStyle:{color:"#333"},selectedMode:!0,tooltip:{show:!1}}});Os("legendToggleSelect","legendselectchanged",v(xv,"toggleSelected")),Os("legendSelect","legendselected",v(xv,"select")),Os("legendUnSelect","legendunselected",v(xv,"unSelect"));var JP=v,QP=d,tN=tb,eN=Fs({type:"legend.plain",newlineDisabled:!1,init:function(){this.group.add(this._contentGroup=new tN),this._backgroundEl,this._isFirstRender=!0},getContentGroup:function(){return this._contentGroup},render:function(t,e,i){var n=this._isFirstRender;if(this._isFirstRender=!1,this.resetInner(),t.get("show",!0)){var o=t.get("align");o&&"auto"!==o||(o="right"===t.get("left")&&"vertical"===t.get("orient")?"right":"left"),this.renderInner(o,t,e,i);var a=t.getBoxLayoutParams(),s={width:i.getWidth(),height:i.getHeight()},l=t.get("padding"),u=ha(a,s,l),h=this.layoutInner(t,o,u,n),c=ha(r({width:h.width,height:h.height},a),s,l);this.group.attr("position",[c.x-h.x,c.y-h.y]),this.group.add(this._backgroundEl=wv(h,t))}},resetInner:function(){this.getContentGroup().removeAll(),this._backgroundEl&&this.group.remove(this._backgroundEl)},renderInner:function(t,e,i,n){var o=this.getContentGroup(),a=R(),r=e.get("selectedMode"),s=[];i.eachRawSeries(function(t){!t.get("legendHoverLink")&&s.push(t.id)}),QP(e.getData(),function(l,u){var h=l.get("name");if(this.newlineDisabled||""!==h&&"\n"!==h){var c=i.getSeriesByName(h)[0];if(!a.get(h))if(c){var d=c.getData(),f=d.getVisual("color");"function"==typeof f&&(f=f(c.getDataParams(0)));var p=d.getVisual("legendSymbol")||"roundRect",g=d.getVisual("symbol");this._createItem(h,u,l,e,p,g,t,f,r).on("click",JP(bv,h,n)).on("mouseover",JP(Sv,c.name,null,n,s)).on("mouseout",JP(Mv,c.name,null,n,s)),a.set(h,!0)}else i.eachRawSeries(function(i){if(!a.get(h)&&i.legendDataProvider){var o=i.legendDataProvider(),c=o.indexOfName(h);if(c<0)return;var d="o.getItemVisual(c," color");this._createitem(h,u,l,e,"roundrect",null,t,d,r).on("click",jp(bv,h,n)).on("mouseover",jp(sv,null,h,n,s)).on("mouseout",jp(mv,null,h,n,s)),a.set(h,!0)}},this)}else" o.add(new tn({newline:!0}))},this)},_createitem:function(t,e,i,n,o,r,s,l,u){var h="n.get(" itemwidth"),c="n.get(" itemheight"),d="n.get("inactiveColor"),f=n.get("symbolKeepAspect"),p=n.isSelected(t),g=new""" tn,m="i.getModel(" textstyle"),v="i.get(" icon"),y="i.getModel("tooltip"),x=y.parentModel;if(o=v||o,g.add($l(o,0,0,h,c,p?l:d,null==f||f)),!v&&r&&(r!==o||"none"===r)){var""" _=".8*c;" none"="==r&&(r=" circle"),g.add($l(r,(h-_) 2,(c-_) 2,_,_,p?l:d,null="=f||f))}var""" w="left" =="=s?h+5:-5,b=s,S=n.get(" formatter"),m="t;" string"="=typeof""" s&&s?m="S.replace(" {name}",null!="t?t:" "):"function"="=typeof""" s&&(m="S(t)),g.add(new" rm({style:go({},m,{text:m,x:w,y:c 2,textfill:p?m.gettextcolor():d,textalign:b,textverticalalign:"middle"})}));var i="new" ym({shape:g.getboundingrect(),invisible:!0,tooltip:y.get("show")?a({content:t,formatter:x.get("formatter",!0)||function(){return t},formatterparams:{componenttype:"legend",legendindex:n.componentindex,name:t,$vars:["name"]}},y.option):null});return g.add(i),g.eachchild(function(t){t.silent="!0}),I.silent=!u,this.getContentGroup().add(g),co(g),g.__legendDataIndex=e,g},layoutInner:function(t,e,i){var" n="this.getContentGroup();rI(t.get(" orient"),n,t.get("itemgap"),i.width,i.height);var" o="n.getBoundingRect();return" n.attr("position",[-o.x,-o.y]),this.group.getboundingrect()},remove:function(){this.getcontentgroup().removeall(),this._isfirstrender="!0}});Ns(function(t){var" e="t.findComponents({mainType:" legend"});e&&e.length&&t.filterseries(function(t){for(var" in="$P.extend({type:" legend.scroll",setscrolldataindex:function(t){this.option.scrolldataindex="t},defaultOption:{scrollDataIndex:0,pageButtonItemGap:5,pageButtonGap:null,pageButtonPosition:" end",pageformatter:"{current} {total}",pageicons:{horizontal:["m0,0l12,-10l12,10z","m0,0l-12,-10l-12,10z"],vertical:["m0,0l20,0l10,-20z","m0,0l20,0l10,20z"]},pageiconcolor:"#2f4554",pageiconinactivecolor:"#aaa",pageiconsize:15,pagetextstyle:{color:"#333"},animationdurationupdate:800},init:function(t,e,i,n){var"" nn),this._containergroup.add(this.getcontentgroup()),this.group.add(this._controllergroup="new" nn),this._showcontroller},resetinner:function(){rn.supercall(this,"resetinner"),this._controllergroup.removeall(),this._containergroup.removeclippath(),this._containergroup.__rectsize="null},renderInner:function(t,e,i,n){function" o(t,i){var a="this;rN.superCall(this," renderinner",t,e,i,n);var" r="this._controllerGroup,s=e.get(" pageiconsize",!0);y(s)||(s="[s,s]),o(" pageprev",0);var"" l="e.getModel(" pagetextstyle");r.add(new" rm({name:"pagetext",style:{textfill:l.gettextcolor(),font:l.getfont(),textverticalalign:"middle",textalign:"center"},silent:!0})),o("pagenext",1)},layoutinner:function(t,e,i,n){var c="o.getBoundingRect(),d=r.getBoundingRect(),f=this._showController=c[l]">i[l],p=[-c.x,-c.y];n||(p[s]=o.position[s]);var g=[0,0],m=[-d.x,-d.y],v=A(t.get("pageButtonGap",!0),t.get("itemGap",!0));f&&("end"===t.get("pageButtonPosition",!0)?m[s]+=i[l]-d[l]:g[s]+=d[l]+v),m[1-s]+=c[u]/2-d[u]/2,o.attr("position",p),a.attr("position",g),r.attr("position",m);var y=this.group.getBoundingRect();if((y={x:0,y:0})[l]=f?i[l]:c[l],y[u]=Math.max(c[u],d[u]),y[h]=Math.min(0,d[h]+m[1-s]),a.__rectSize=i[l],f){var x={x:0,y:0};x[l]=Math.max(i[l]-d[l]-v,0),x[u]=y[u],a.setClipPath(new yM({shape:x})),a.__rectSize=x[l]}else r.eachChild(function(t){t.attr({invisible:!0,silent:!0})});var _=this._getPageInfo(t);return null!=_.pageIndex&&Mo(o,{position:_.contentPosition},!!f&&t),this._updatePageInfoView(t,_),y},_pageGo:function(t,e,i){var n=this._getPageInfo(e)[t];null!=n&&i.dispatchAction({type:"legendScroll",scrollDataIndex:n,legendId:e.id})},_updatePageInfoView:function(t,e){var i=this._controllerGroup;d(["pagePrev","pageNext"],function(n){var o=null!=e[n+"DataIndex"],a=i.childOfName(n);a&&(a.setStyle("fill",o?t.get("pageIconColor",!0):t.get("pageIconInactiveColor",!0)),a.cursor=o?"pointer":"default")});var n=i.childOfName("pageText"),o=t.get("pageFormatter"),a=e.pageIndex,r=null!=a?a+1:0,s=e.pageCount;n&&o&&n.setStyle("text",_(o)?o.replace("{current}",r).replace("{total}",s):o({current:r,total:s}))},_getPageInfo:function(t){function e(t){if(t){var e=t.getBoundingRect(),i=e[l]+t.position[r];return{s:i,e:i+e[s],i:t.__legendDataIndex}}}function i(t,e){return t.e>=e&&t.s<=e+a}var n="t.get(" scrolldataindex",!0),o="this.getContentGroup(),a=this._containerGroup.__rectSize,r=t.getOrient().index,s=oN[r],l=aN[r],u=this._findTargetItemIndex(n),h=o.children(),c=h[u],d=h.length,f=d?1:0,p={contentPosition:o.position.slice(),pageCount:f,pageIndex:f-1,pagePrevDataIndex:null,pageNextDataIndex:null};if(!c)return" " p;var g="e(c);p.contentPosition[r]=-g.s;for(var" m="u+1,v=g,y=g,x=null;m<=d;++m)(!(x=e(h[m]))&&y.e">v.s+a||x&&!i(x,v.s))&&(v=y.i>v.i?y:x)&&(null==p.pageNextDataIndex&&(p.pageNextDataIndex=v.i),++p.pageCount),y=x;for(var m=u-1,v=g,y=g,x=null;m>=-1;--m)(x=e(h[m]))&&i(y,x.s)||!(v.i<y.i)||(y=v,null==p.pageprevdataindex&&(p.pageprevdataindex=v.i),++p.pagecount,++p.pageindex),v=x;return p},_findtargetitemindex:function(t){var e,i="this.getContentGroup();return" this._showcontroller?i.eachchild(function(i,n){i.__legenddataindex="==t&&(e=n)}):e=0,e}});Os(" legendscroll","legendscroll",function(t,e){var" i="t.scrollDataIndex;null!=i&&e.eachComponent({mainType:" legend",subtype:"scroll",query:t},function(t){t.setscrolldataindex(i)})}),gs({type:"tooltip",dependencies:["axispointer"],defaultoption:{zlevel:0,z:60,show:!0,showcontent:!0,trigger:"item",triggeron:"mousemove|click",alwaysshowcontent:!1,displaymode:"single",rendermode:"auto",confine:!1,showdelay:0,hidedelay:100,transitionduration:.4,enterable:!1,backgroundcolor:"rgba(50,50,50,0.7)",bordercolor:"#333",borderradius:4,borderwidth:0,padding:5,extracsstext:"",axispointer:{type:"line",axis:"auto",animation:"auto",animationdurationupdate:200,animationeasingupdate:"exponentialout",crossstyle:{color:"#999",width:1,type:"dashed",textstyle:{}}},textstyle:{color:"#fff",fontsize:14}}});var" sn="d,lN=ta,uN=[" ","-webkit-","-moz-","-o-"];cv.prototype="{constructor:Cv,_enterable:!0,update:function(){var" " t="this._container,e=t.currentStyle||document.defaultView.getComputedStyle(t),i=t.style;" absolute"!="=i.position&&" e="this.el;e.style.cssText=" position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;"+dv(t)+";left:"+this._x+"px;top:"+this._y+"px;"+(t.get("extracsstext")||""),e.style.display="e.innerHTML?" block":"none",e.style.pointerevents="this._enterable?"auto":"none",this._show=!0},setContent:function(t){this.el.innerHTML=null==t?"":t},setEnterable:function(t){this._enterable=t},getSize:function(){var""" i,n="this._zr;n&&n.painter&&(i=n.painter.getViewportRootOffset())&&(t+=i.offsetLeft,e+=i.offsetTop);var" o="this.el.style;o.left=t+" px",o.top="e+" px",this._x="t,this._y=e},hide:function(){this.el.style.display="none",this._show=!1},hideLater:function(t){!this._show||this._inContent&&this._enterable||(t?(this._hideDelay=t,this._show=!1,this._hideTimeout=setTimeout(m(this.hide,this),t)):this.hide())},isShow:function(){return""" this._show},getoutersize:function(){var n="{},o=t,a=o.indexOf(" {marker");a">=0;){var r=o.indexOf("|}"),s=o.substr(a+"{marker".length,r-a-"{marker".length);s.indexOf("sub")>-1?n["marker"+s]={textWidth:4,textHeight:4,textBorderRadius:2,textBackgroundColor:e[s],textOffset:[3,0]}:n["marker"+s]={textWidth:10,textHeight:10,textBorderRadius:5,textBackgroundColor:e[s]},a=(o=o.substr(r+1)).indexOf("{marker")}this.el=new rM({style:{rich:n,text:t,textLineHeight:20,textBackgroundColor:i.get("backgroundColor"),textBorderRadius:i.get("borderRadius"),textFill:i.get("textStyle.color"),textPadding:i.get("padding")},z:i.get("z")}),this._zr.add(this.el);var l=this;this.el.on("mouseover",function(){l._enterable&&(clearTimeout(l._hideTimeout),l._show=!0),l._inContent=!0}),this.el.on("mouseout",function(){l._enterable&&l._show&&l.hideLater(l._hideDelay),l._inContent=!1})},setEnterable:function(t){this._enterable=t},getSize:function(){var t=this.el.getBoundingRect();return[t.width,t.height]},moveTo:function(t,e){this.el&&this.el.attr("position",[t,e])},hide:function(){this.el.hide(),this._show=!1},hideLater:function(t){!this._show||this._inContent&&this._enterable||(t?(this._hideDelay=t,this._show=!1,this._hideTimeout=setTimeout(m(this.hide,this),t)):this.hide())},isShow:function(){return this._show},getOuterSize:function(){return this.getSize()}};var hN=m,cN=d,dN=Bo,fN=new yM({shape:{x:-1,y:-1,width:2,height:2}});Fs({type:"tooltip",init:function(t,e){if(!U_.node){var i=t.getComponent("tooltip").get("renderMode");this._renderMode=Hi(i);var n;"html"===this._renderMode?(n=new Cv(e.getDom(),e),this._newLine="<br>"):(n=new Lv(e),this._newLine="\n"),this._tooltipContent=n}},render:function(t,e,i){if(!U_.node){this.group.removeAll(),this._tooltipModel=t,this._ecModel=e,this._api=i,this._lastDataByCoordSys=null,this._alwaysShowContent=t.get("alwaysShowContent");var n=this._tooltipContent;n.update(),n.setEnterable(t.get("enterable")),this._initGlobalListener(),this._keepShow()}},_initGlobalListener:function(){var t=this._tooltipModel.get("triggerOn");um("itemTooltip",this._api,hN(function(e,i,n){"none"!==t&&(t.indexOf(e)>=0?this._tryShow(i,n):"leave"===e&&this._hide(n))},this))},_keepShow:function(){var t=this._tooltipModel,e=this._ecModel,i=this._api;if(null!=this._lastX&&null!=this._lastY&&"none"!==t.get("triggerOn")){var n=this;clearTimeout(this._refreshUpdateTimeout),this._refreshUpdateTimeout=setTimeout(function(){n.manuallyShowTip(t,e,i,{x:n._lastX,y:n._lastY})})}},manuallyShowTip:function(t,e,i,n){if(n.from!==this.uid&&!U_.node){var o=Pv(n,i);this._ticket="";var a=n.dataByCoordSys;if(n.tooltip&&null!=n.x&&null!=n.y){var r=fN;r.position=[n.x,n.y],r.update(),r.tooltip=n.tooltip,this._tryShow({offsetX:n.x,offsetY:n.y,target:r},o)}else if(a)this._tryShow({offsetX:n.x,offsetY:n.y,position:n.position,event:{},dataByCoordSys:n.dataByCoordSys,tooltipOption:n.tooltipOption},o);else if(null!=n.seriesIndex){if(this._manuallyAxisShowTip(t,e,i,n))return;var s=_P(n,e),l=s.point[0],u=s.point[1];null!=l&&null!=u&&this._tryShow({offsetX:l,offsetY:u,position:n.position,target:s.el,event:{}},o)}else null!=n.x&&null!=n.y&&(i.dispatchAction({type:"updateAxisPointer",x:n.x,y:n.y}),this._tryShow({offsetX:n.x,offsetY:n.y,position:n.position,target:i.getZr().findHover(n.x,n.y).target,event:{}},o))}},manuallyHideTip:function(t,e,i,n){var o=this._tooltipContent;!this._alwaysShowContent&&this._tooltipModel&&o.hideLater(this._tooltipModel.get("hideDelay")),this._lastX=this._lastY=null,n.from!==this.uid&&this._hide(Pv(n,i))},_manuallyAxisShowTip:function(t,e,i,n){var o=n.seriesIndex,a=n.dataIndex,r=e.getComponent("axisPointer").coordSysAxesInfo;if(null!=o&&null!=a&&null!=r){var s=e.getSeriesByIndex(o);if(s&&"axis"===(t=kv([s.getData().getItemModel(a),s,(s.coordinateSystem||{}).model,t])).get("trigger"))return i.dispatchAction({type:"updateAxisPointer",seriesIndex:o,dataIndex:a,position:n.position}),!0}},_tryShow:function(t,e){var i=t.target;if(this._tooltipModel){this._lastX=t.offsetX,this._lastY=t.offsetY;var n=t.dataByCoordSys;n&&n.length?this._showAxisTooltip(n,t):i&&null!=i.dataIndex?(this._lastDataByCoordSys=null,this._showSeriesItemTooltip(t,i,e)):i&&i.tooltip?(this._lastDataByCoordSys=null,this._showComponentItemTooltip(t,i,e)):(this._lastDataByCoordSys=null,this._hide(e))}},_showOrMove:function(t,e){var i=t.get("showDelay");e=m(e,this),clearTimeout(this._showTimout),i>0?this._showTimout=setTimeout(e,i):e()},_showAxisTooltip:function(t,e){var i=this._ecModel,o=this._tooltipModel,a=[e.offsetX,e.offsetY],r=[],s=[],l=kv([e.tooltipOption,o]),u=this._renderMode,h=this._newLine,c={};cN(t,function(t){cN(t.dataByAxis,function(t){var e=i.getComponent(t.axisDim+"Axis",t.axisIndex),o=t.value,a=[];if(e&&null!=o){var l=Im(o,e.axis,i,t.seriesDataIndices,t.valueLabelOpt);d(t.seriesDataIndices,function(r){var h=i.getSeriesByIndex(r.seriesIndex),d=r.dataIndexInside,f=h&&h.getDataParams(d);if(f.axisDim=t.axisDim,f.axisIndex=t.axisIndex,f.axisType=t.axisType,f.axisId=t.axisId,f.axisValue=Ul(e.axis,o),f.axisValueLabel=l,f){s.push(f);var p,g=h.formatTooltip(d,!0,null,u);if(w(g)){p=g.html;var m=g.markers;n(c,m)}else p=g;a.push(p)}});var f=l;"html"!==u?r.push(a.join(h)):r.push((f?ea(f)+h:"")+a.join(h))}})},this),r.reverse(),r=r.join(this._newLine+this._newLine);var f=e.position;this._showOrMove(l,function(){this._updateContentNotChangedOnAxis(t)?this._updatePosition(l,f,a[0],a[1],this._tooltipContent,s):this._showTooltipContent(l,r,s,Math.random(),a[0],a[1],f,void 0,c)})},_showSeriesItemTooltip:function(t,e,i){var n=this._ecModel,o=e.seriesIndex,a=n.getSeriesByIndex(o),r=e.dataModel||a,s=e.dataIndex,l=e.dataType,u=r.getData(),h=kv([u.getItemModel(s),r,a&&(a.coordinateSystem||{}).model,this._tooltipModel]),c=h.get("trigger");if(null==c||"item"===c){var d,f,p=r.getDataParams(s,l),g=r.formatTooltip(s,!1,l,this._renderMode);w(g)?(d=g.html,f=g.markers):(d=g,f=null);var m="item_"+r.name+"_"+s;this._showOrMove(h,function(){this._showTooltipContent(h,d,p,m,t.offsetX,t.offsetY,t.position,t.target,f)}),i({type:"showTip",dataIndexInside:s,dataIndex:u.getRawIndex(s),seriesIndex:o,from:this.uid})}},_showComponentItemTooltip:function(t,e,i){var n=e.tooltip;if("string"==typeof n){var o=n;n={content:o,formatter:o}}var a=new Po(n,this._tooltipModel,this._ecModel),r=a.get("content"),s=Math.random();this._showOrMove(a,function(){this._showTooltipContent(a,r,a.get("formatterParams")||{},s,t.offsetX,t.offsetY,t.position,e)}),i({type:"showTip",from:this.uid})},_showTooltipContent:function(t,e,i,n,o,a,r,s,l){if(this._ticket="",t.get("showContent")&&t.get("show")){var u=this._tooltipContent,h=t.get("formatter");r=r||t.get("position");var c=e;if(h&&"string"==typeof h)c=ia(h,i,!0);else if("function"==typeof h){var d=hN(function(e,n){e===this._ticket&&(u.setContent(n,l,t),this._updatePosition(t,r,o,a,u,i,s))},this);this._ticket=n,c=h(i,n,d)}u.setContent(c,l,t),u.show(t),this._updatePosition(t,r,o,a,u,i,s)}},_updatePosition:function(t,e,i,n,o,a,r){var s=this._api.getWidth(),l=this._api.getHeight();e=e||t.get("position");var u=o.getSize(),h=t.get("align"),c=t.get("verticalAlign"),d=r&&r.getBoundingRect().clone();if(r&&d.applyTransform(r.transform),"function"==typeof e&&(e=e([i,n],a,o.el,d,{viewSize:[s,l],contentSize:u.slice()})),y(e))i=dN(e[0],s),n=dN(e[1],l);else if(w(e)){e.width=u[0],e.height=u[1];var f=ha(e,{width:s,height:l});i=f.x,n=f.y,h=null,c=null}else"string"==typeof e&&r?(i=(p=Ev(e,d,u))[0],n=p[1]):(i=(p=Nv(i,n,o,s,l,h?null:20,c?null:20))[0],n=p[1]);if(h&&(i-=Rv(h)?u[0]/2:"right"===h?u[0]:0),c&&(n-=Rv(c)?u[1]/2:"bottom"===c?u[1]:0),t.get("confine")){var p=Ov(i,n,o,s,l);i=p[0],n=p[1]}o.moveTo(i,n)},_updateContentNotChangedOnAxis:function(t){var e=this._lastDataByCoordSys,i=!!e&&e.length===t.length;return i&&cN(e,function(e,n){var o=e.dataByAxis||{},a=(t[n]||{}).dataByAxis||[];(i&=o.length===a.length)&&cN(o,function(t,e){var n=a[e]||{},o=t.seriesDataIndices||[],r=n.seriesDataIndices||[];(i&=t.value===n.value&&t.axisType===n.axisType&&t.axisId===n.axisId&&o.length===r.length)&&cN(o,function(t,e){var n=r[e];i&=t.seriesIndex===n.seriesIndex&&t.dataIndex===n.dataIndex})})}),this._lastDataByCoordSys=t,!!i},_hide:function(t){this._lastDataByCoordSys=null,t({type:"hideTip",from:this.uid})},dispose:function(t,e){U_.node||(this._tooltipContent.hide(),gm("itemTooltip",e))}}),Os({type:"showTip",event:"showTip",update:"tooltip:manuallyShowTip"},function(){}),Os({type:"hideTip",event:"hideTip",update:"tooltip:manuallyHideTip"},function(){}),Gv.prototype={constructor:Gv,pointToData:function(t,e){return this.polar.pointToData(t,e)["radius"===this.dim?0:1]},dataToRadius:rD.prototype.dataToCoord,radiusToData:rD.prototype.coordToData},u(Gv,rD);var pN=Bi();Fv.prototype={constructor:Fv,pointToData:function(t,e){return this.polar.pointToData(t,e)["radius"===this.dim?0:1]},dataToAngle:rD.prototype.dataToCoord,angleToData:rD.prototype.coordToData,calculateCategoryInterval:function(){var t=this,e=t.getLabelModel(),i=t.scale,n=i.getExtent(),o=i.count();if(n[1]-n[0]<1)return 0;var a="n[0],r=t.dataToCoord(a+1)-t.dataToCoord(a),s=Math.abs(r),l=ke(a,e.getFont()," center","top"),u="Math.max(l.height,7)/s;isNaN(u)&&(u=1/0);var" " h="Math.max(0,Math.floor(u)),c=pN(t.model),d=c.lastAutoInterval,f=c.lastTickCount;return" null!="d&&null!=f&&Math.abs(d-h)<=1&&Math.abs(f-o)<=1&&d">h?h=d:(c.lastTickCount=o,c.lastAutoInterval=h),h}},u(Fv,rD);var gN=function(t){this.name=t||"",this.cx=0,this.cy=0,this._radiusAxis=new Gv,this._angleAxis=new Fv,this._radiusAxis.polar=this._angleAxis.polar=this};gN.prototype={type:"polar",axisPointerEnabled:!0,constructor:gN,dimensions:["radius","angle"],model:null,containPoint:function(t){var e=this.pointToCoord(t);return this._radiusAxis.contain(e[0])&&this._angleAxis.contain(e[1])},containData:function(t){return this._radiusAxis.containData(t[0])&&this._angleAxis.containData(t[1])},getAxis:function(t){return this["_"+t+"Axis"]},getAxes:function(){return[this._radiusAxis,this._angleAxis]},getAxesByScale:function(t){var e=[],i=this._angleAxis,n=this._radiusAxis;return i.scale.type===t&&e.push(i),n.scale.type===t&&e.push(n),e},getAngleAxis:function(){return this._angleAxis},getRadiusAxis:function(){return this._radiusAxis},getOtherAxis:function(t){var e=this._angleAxis;return t===e?this._radiusAxis:e},getBaseAxis:function(){return this.getAxesByScale("ordinal")[0]||this.getAxesByScale("time")[0]||this.getAngleAxis()},getTooltipAxes:function(t){var e=null!=t&&"auto"!==t?this.getAxis(t):this.getBaseAxis();return{baseAxes:[e],otherAxes:[this.getOtherAxis(e)]}},dataToPoint:function(t,e){return this.coordToPoint([this._radiusAxis.dataToRadius(t[0],e),this._angleAxis.dataToAngle(t[1],e)])},pointToData:function(t,e){var i=this.pointToCoord(t);return[this._radiusAxis.radiusToData(i[0],e),this._angleAxis.angleToData(i[1],e)]},pointToCoord:function(t){var e=t[0]-this.cx,i=t[1]-this.cy,n=this.getAngleAxis(),o=n.getExtent(),a=Math.min(o[0],o[1]),r=Math.max(o[0],o[1]);n.inverse?a=r-360:r=a+360;var s=Math.sqrt(e*e+i*i);e/=s,i/=s;for(var l=Math.atan2(-i,e)/Math.PI*180,u=l<a?1:-1;l<a||l>r;)l+=360*u;return[s,l]},coordToPoint:function(t){var e=t[0],i=t[1]/180*Math.PI;return[Math.cos(i)*e+this.cx,-Math.sin(i)*e+this.cy]}};var mN=uI.extend({type:"polarAxis",axis:null,getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"polar",index:this.option.polarIndex,id:this.option.polarId})[0]}});n(mN.prototype,XA);var vN={angle:{startAngle:90,clockwise:!0,splitNumber:12,axisLabel:{rotate:!1}},radius:{splitNumber:5}};RD("angle",mN,Wv,vN.angle),RD("radius",mN,Wv,vN.radius),Gs({type:"polar",dependencies:["polarAxis","angleAxis"],coordinateSystem:null,findAxisModel:function(t){var e;return this.ecModel.eachComponent(t,function(t){t.getCoordSysModel()===this&&(e=t)},this),e},defaultOption:{zlevel:0,z:0,center:["50%","50%"],radius:"80%"}});var yN={dimensions:gN.prototype.dimensions,create:function(t,e){var i=[];return t.eachComponent("polar",function(t,n){var o=new gN(n);o.update=Zv;var a=o.getRadiusAxis(),r=o.getAngleAxis(),s=t.findAxisModel("radiusAxis"),l=t.findAxisModel("angleAxis");Uv(a,s),Uv(r,l),Hv(o,t,e),i.push(o),t.coordinateSystem=o,o.model=t}),t.eachSeries(function(e){if("polar"===e.get("coordinateSystem")){var i=t.queryComponents({mainType:"polar",index:e.get("polarIndex"),id:e.get("polarId")})[0];e.coordinateSystem=i.coordinateSystem}}),i}};Ga.register("polar",yN);var xN=["axisLine","axisLabel","axisTick","splitLine","splitArea"];jD.extend({type:"angleAxis",axisPointerClass:"PolarAxisPointer",render:function(t,e){if(this.group.removeAll(),t.get("show")){var n=t.axis,o=n.polar,a=o.getRadiusAxis().getExtent(),r=n.getTicksCoords(),s=f(n.getViewLabels(),function(t){return(t=i(t)).coord=n.dataToCoord(t.tickValue),t});Yv(s),Yv(r),d(xN,function(e){!t.get(e+".show")||n.scale.isBlank()&&"axisLine"!==e||this["_"+e](t,o,r,a,s)},this)}},_axisLine:function(t,e,i,n){var o=t.getModel("axisLine.lineStyle"),a=new sM({shape:{cx:e.cx,cy:e.cy,r:n[jv(e)]},style:o.getLineStyle(),z2:1,silent:!0});a.style.fill=null,this.group.add(a)},_axisTick:function(t,e,i,n){var o=t.getModel("axisTick"),a=(o.get("inside")?-1:1)*o.get("length"),s=n[jv(e)],l=f(i,function(t){return new _M({shape:Xv(e,[s,s+a],t.coord)})});this.group.add(OM(l,{style:r(o.getModel("lineStyle").getLineStyle(),{stroke:t.get("axisLine.lineStyle.color")})}))},_axisLabel:function(t,e,i,n,o){var a=t.getCategories(!0),r=t.getModel("axisLabel"),s=r.get("margin");d(o,function(i,o){var l=r,u=i.tickValue,h=n[jv(e)],c=e.coordToPoint([h+s,i.coord]),d=e.cx,f=e.cy,p=Math.abs(c[0]-d)/h<.3?"center":c[0]>d?"left":"right",g=Math.abs(c[1]-f)/h<.3?"middle":c[1]>f?"top":"bottom";a&&a[u]&&a[u].textStyle&&(l=new Po(a[u].textStyle,r,r.ecModel));var m=new rM({silent:!0});this.group.add(m),go(m.style,l,{x:c[0],y:c[1],textFill:l.getTextColor()||t.get("axisLine.lineStyle.color"),text:i.formattedLabel,textAlign:p,textVerticalAlign:g})},this)},_splitLine:function(t,e,i,n){var o=t.getModel("splitLine").getModel("lineStyle"),a=o.get("color"),s=0;a=a instanceof Array?a:[a];for(var l=[],u=0;u<i.length;u++){var h="s++%a.length;l[h]=l[h]||[],l[h].push(new" _m({shape:xv(e,n,i[u].coord)}))}for(u="0;u<l.length;u++)this.group.add(OM(l[u],{style:r({stroke:a[u%a.length]},o.getLineStyle()),silent:!0,z:t.get(" z")}))},_splitarea:function(t,e,i,n){if(i.length){var" o="t.getModel(" splitarea").getmodel("areastyle"),a="o.get(" color"),s="0;a=a""" instanceof array?a:[a];for(var l="[],u=Math.PI/180,h=-i[0].coord*u,c=Math.min(n[0],n[1]),d=Math.max(n[0],n[1]),f=t.get(" clockwise"),p="1;p<i.length;p++){var" " g="s++%a.length;l[g]=l[g]||[],l[g].push(new" hm({shape:{cx:e.cx,cy:e.cy,r0:c,r:d,startangle:h,endangle:-i[p].coord*u,clockwise:f},silent:!0})),h="-i[p].coord*u}for(p=0;p<l.length;p++)this.group.add(OM(l[p],{style:r({fill:a[p%a.length]},o.getAreaStyle()),silent:!0}))}}});var" _n="[" axisline","axisticklabel","axisname"],wn="[" splitline","splitarea"];jd.extend({type:"radiusaxis",axispointerclass:"polaraxispointer",render:function(t,e){if(this.group.removeall(),t.get("show")){var"" i="t.axis,n=i.polar,o=n.getAngleAxis(),a=i.getTicksCoords(),r=o.getExtent()[0],s=i.getExtent(),l=qv(n,t,r),u=new" wd(t,l);d(_n,u.add,u),this.group.add(u.getgroup()),d(wn,function(e){t.get(e+".show")&&!i.scale.isblank()&&this["_"+e](t,n,r,s,a)},this)}},_splitline:function(t,e,i,n,o){var a="t.getModel(" splitline").getmodel("linestyle"),s="a.get(" color"),l="0;s=s""" array?s:[s];for(var u="[],h=0;h<o.length;h++){var" c="l++%s.length;u[c]=u[c]||[],u[c].push(new" sm({shape:{cx:e.cx,cy:e.cy,r:o[h].coord},silent:!0}))}for(h="0;h<u.length;h++)this.group.add(OM(u[h],{style:r({stroke:s[h%s.length],fill:null},a.getLineStyle()),silent:!0}))},_splitArea:function(t,e,i,n,o){if(o.length){var" d="l++%s.length;u[d]=u[d]||[],u[d].push(new" hm({shape:{cx:e.cx,cy:e.cy,r0:h,r:o[c].coord,startangle:0,endangle:2*math.pi},silent:!0})),h="o[c].coord}for(c=0;c<u.length;c++)this.group.add(OM(u[c],{style:r({fill:s[c%s.length]},a.getAreaStyle()),silent:!0}))}}});var" bn="mm.extend({makeElOption:function(t,e,i,n,o){var" r,s="a.polar,l=s.getOtherAxis(a).getExtent();r=a[" datato"+sa(a.dim)](e);var" n="{},o=Vv(g(e.getSeriesByType(t),function(t){return!e.isSeriesFiltered(t)&&t.coordinateSystem&&" polar"="==t.coordinateSystem.type}));e.eachSeriesByType(t,function(t){if(" e="t.getData(),i=t.coordinateSystem,a=i.getBaseAxis(),r=zv(t),s=o[Bv(a)][r],l=s.offset,u=s.width,h=i.getOtherAxis(a),c=t.coordinateSystem.cx,d=t.coordinateSystem.cy,f=t.get(" barminheight")||0,p="t.get(" barminangle")||0;n[r]="n[r]||[];for(var""" w="e.get(g,x),b=e.get(m,x);if(!isNaN(w)){var" s="w">=0?"p":"n",M=y;v&&(n[r][b]||(n[r][b]={p:y,n:y}),M=n[r][b][S]);var I,T,A,D;if("radius"===h.dim){var C=h.dataToRadius(w)-y,L=a.dataToAngle(b);Math.abs(C)<f&&(c=(c<0?-1:1)*f),i=m,t=m+c,d=(a=l-l)-u,v&&(n[r][b][s]=t)}else{var k="h.dataToAngle(w,!0)-y,P=a.dataToRadius(b);Math.abs(k)<p&&(k=(k<0?-1:1)*p),T=(I=P+l)+u,A=M,D=M+k,v&&(n[r][b][S]=D)}e.setItemLayout(x,{cx:c,cy:d,r0:I,r:T,startAngle:-A*Math.PI/180,endAngle:-D*Math.PI/180})}}}},this)}," bar")),fs({type:"polar"}),h(ui.extend({type:"geo",coordinatesystem:null,layoutmode:"box",init:function(t){ui.prototype.init.apply(this,arguments),ci(t,"label",["show"])},optionupdated:function(){var" t="this.option,e=this;t.regions=FC.getFilledRegions(t.regions,t.map,t.nameMap),this._optionModelMap=p(t.regions||[],function(t,i){return" i.name&&t.set(i.name,new po(i,e)),t},r()),this.updateselectedmap(t.regions)},defaultoption:{zlevel:0,z:0,show:!0,left:"center",top:"center",aspectscale:null,silent:!1,map:"",boundingcoords:null,center:null,zoom:1,scalelimit:null,label:{show:!1,color:"#000"},itemstyle:{borderwidth:.5,bordercolor:"#444",color:"#eee"},emphasis:{label:{show:!0,color:"rgb(100,0,0)"},itemstyle:{color:"rgba(255,215,0,0.8)"}},regions:[]},getregionmodel:function(t){return this._optionmodelmap.get(t)||new po(null,this,this.ecmodel)},getformattedlabel:function(t,e){var i="this.getRegionModel(t).get(" label."+e+".formatter"),n="{name:t};return" function"="=typeof""" i?(n.status="e,i(n)):" string"="=typeof" " i?i.replace("{a}",null!="t?t:" "):void" 0},setzoom:function(t){this.option.zoom="t},setCenter:function(t){this.option.center=t}}),rC),Fs({type:" geo",init:function(t,e){var" yc(e,!0);this._mapdraw="i,this.group.add(i.group)},render:function(t,e,i,n){if(!n||" geotoggleselect"!="=n.type||n.from!==this.uid){var" o="this._mapDraw;t.get(" show")?o.draw(t,e,i,this,n):this._mapdraw.group.removeall(),this.group.silent="t.get(" silent")}},dispose:function(){this._mapdraw&&this._mapdraw.remove()}}),$v("toggleselected",{type:"geotoggleselect",event:"geoselectchanged"}),$v("select",{type:"geoselect",event:"geoselected"}),$v("unselect",{type:"geounselect",event:"geounselected"});var"" mn="[" rect","polygon","keep","clear"],in="d,TN={lineX:oy(0),lineY:oy(1),rect:{point:function(t,e,i){return" t&&i.boundingrect.contain(t[0],t[1])},rect:function(t,e,i){return t&&i.boundingrect.intersect(t)}},polygon:{point:function(t,e,i){return t&&i.boundingrect.contain(t[0],t[1])&&ql(i.range,t[0],t[1])},rect:function(t,e,i){var n="i.range;if(!t||n.length<=1)return!1;var" 0}}},an="d,DN=l,CN=v,LN=[" datatopoint","pointtodata"],kn="[" grid","xaxis","yaxis","geo","graph","polar","radiusaxis","angleaxis","bmap"],pn="hy.prototype;PN.setOutputRanges=function(t,e){this.matchOutputRanges(t,e,function(t,e,i){if((t.coordRanges||(t.coordRanges=[])).push(e),!t.coordRange){t.coordRange=e;var""" f(this._targetinfolist,function(i){var>=0},PN.findTargetInfo=function(t,e){for(var i=this._targetInfoList,n=dy(e,t),o=0;o<i.length;o++){var a="i[o],r=t.panelId;if(r){if(a.panelId===r)return" a}else for(o="0;o<ON.length;o++)if(ON[o](n,a))return" a}return!0};var nn="{grid:function(t,e){var" i="t.xAxisModels,n=t.yAxisModels,o=t.gridModels,a=R(),r={},s={};(i||n||o)&&(AN(i,function(t){var" e="t.axis.grid.model;a.set(e.id,e),r[e.id]=!0}),AN(n,function(t){var" o="t.coordinateSystem,a=[];AN(o.getCartesians(),function(t,e){(DN(i,t.getAxis(" x").model)">=0||DN(n,t.getAxis("y").model)>=0)&&a.push(t)}),e.push({panelId:"grid--"+t.id,gridModel:t,coordSysModel:t,coordSys:a[0],coordSyses:a,getPanelRect:EN.grid,xAxisDeclared:r[t.id],yAxisDeclared:s[t.id]})}))},geo:function(t,e){AN(t.geoModels,function(t){var i=t.coordinateSystem;e.push({panelId:"geo--"+t.id,geoModel:t,coordSysModel:t,coordSys:i,coordSyses:[i],getPanelRect:EN.geo})})}},ON=[function(t,e){var i=t.xAxisModel,n=t.yAxisModel,o=t.gridModel;return!o&&i&&(o=i.axis.grid.model),!o&&n&&(o=n.axis.grid.model),o&&o===e.gridModel},function(t,e){var i=t.geoModel;return i&&i===e.geoModel}],EN={grid:function(){return this.coordSys.grid.getRect().clone()},geo:function(){var t=this.coordSys,e=t.getBoundingRect().clone();return e.applyTransform(To(t)),e}},RN={lineX:CN(fy,0),lineY:CN(fy,1),rect:function(t,e,i){var n=e[LN[t]]([i[0][0],i[1][0]]),o=e[LN[t]]([i[0][1],i[1][1]]),a=[cy([n[0],o[0]]),cy([n[1],o[1]])];return{values:a,xyMinMax:a}},polygon:function(t,e,i){var n=[[1/0,-1/0],[1/0,-1/0]];return{values:f(i,function(i){var o=e[LN[t]](i);return n[0][0]=Math.min(n[0][0],o[0]),n[1][0]=Math.min(n[1][0],o[1]),n[0][1]=Math.max(n[0][1],o[0]),n[1][1]=Math.max(n[1][1],o[1]),o}),xyMinMax:n}}},zN={lineX:CN(py,0),lineY:CN(py,1),rect:function(t,e,i){return[[t[0][0]-i[0]*e[0][0],t[0][1]-i[0]*e[0][1]],[t[1][0]-i[1]*e[1][0],t[1][1]-i[1]*e[1][1]]]},polygon:function(t,e,i){return f(t,function(t,n){return[t[0]-i[0]*e[n][0],t[1]-i[1]*e[n][1]]})}},BN=["inBrush","outOfBrush"],VN="__ecBrushSelect",GN="__ecInBrushSelectEvent",FN=GT.VISUAL.BRUSH;Rs(FN,function(t,e,i){t.eachComponent({mainType:"brush"},function(e){i&&"takeGlobalCursor"===i.type&&e.setBrushOption("brush"===i.key?i.brushOption:{brushType:!1}),(e.brushTargetManager=new hy(e.option,t)).setInputRanges(e.areas,t)})}),zs(FN,function(t,e,n){var o,a,s=[];t.eachComponent({mainType:"brush"},function(e,n){function l(t){return"all"===m||v[t]}function u(t){return!!t.length}function h(t,e){var i=t.coordinateSystem;w|=i.hasAxisBrushed(),l(e)&&i.eachActiveState(t.getData(),function(t,e){"active"===t&&(x[e]=1)})}function c(i,n,o){var a=_y(i);if(a&&!wy(e,n)&&(d(b,function(n){a[n.brushType]&&e.brushTargetManager.controlSeries(n,i,t)&&o.push(n),w|=u(o)}),l(n)&&u(o))){var r=i.getData();r.each(function(t){xy(a,o,r,t)&&(x[t]=1)})}}var p={brushId:e.id,brushIndex:n,brushName:e.name,areas:i(e.areas),selected:[]};s.push(p);var g=e.option,m=g.brushLink,v=[],x=[],_=[],w=0;n||(o=g.throttleType,a=g.throttleDelay);var b=f(e.areas,function(t){return by(r({boundingRect:WN[t.brushType](t)},t))}),S=ty(e.option,BN,function(t){t.mappingMethod="fixed"});y(m)&&d(m,function(t){v[t]=1}),t.eachSeries(function(t,e){var i=_[e]=[];"parallel"===t.subType?h(t,e):c(t,e,i)}),t.eachSeries(function(t,e){var i={seriesId:t.id,seriesIndex:e,seriesName:t.name,dataIndex:[]};p.selected.push(i);var n=_y(t),o=_[e],a=t.getData(),r=l(e)?function(t){return x[t]?(i.dataIndex.push(a.getRawIndex(t)),"inBrush"):"outOfBrush"}:function(t){return xy(n,o,a,t)?(i.dataIndex.push(a.getRawIndex(t)),"inBrush"):"outOfBrush"};(l(e)?w:u(o))&&iy(BN,S,a,r)})}),vy(e,o,a,s,n)});var WN={lineX:B,lineY:B,rect:function(t){return Sy(t.range)},polygon:function(t){for(var e,i=t.range,n=0,o=i.length;n<o;n++){e=e||[[1 0,-1 0],[1 0]];var a="i[n];a[0]<e[0][0]&&(e[0][0]=a[0]),a[0]">e[0][1]&&(e[0][1]=a[0]),a[1]<e[1][0]&&(e[1][0]=a[1]),a[1]>e[1][1]&&(e[1][1]=a[1])}return e&&Sy(e)}},HN=["#ddd"];Gs({type:"brush",dependencies:["geo","grid","xAxis","yAxis","parallel","series"],defaultOption:{toolbox:null,brushLink:null,seriesIndex:"all",geoIndex:null,xAxisIndex:null,yAxisIndex:null,brushType:"rect",brushMode:"single",transformable:!0,brushStyle:{borderWidth:1,color:"rgba(120,140,180,0.3)",borderColor:"rgba(120,140,180,0.8)"},throttleType:"fixRate",throttleDelay:0,removeOnClick:!0,z:1e4},areas:[],brushType:null,brushOption:{},coordInfoList:[],optionUpdated:function(t,e){var i=this.option;!e&&ey(i,t,["inBrush","outOfBrush"]);var n=i.inBrush=i.inBrush||{};i.outOfBrush=i.outOfBrush||{color:HN},n.hasOwnProperty("liftZ")||(n.liftZ=5)},setAreas:function(t){t&&(this.areas=f(t,function(t){return My(this.option,t)},this))},setBrushOption:function(t){this.brushOption=My(this.option,t),this.brushType=this.brushOption.brushType}});Fs({type:"brush",init:function(t,e){this.ecModel=t,this.api=e,this.model,(this._brushController=new Rf(e.getZr())).on("brush",m(this._onBrush,this)).mount()},render:function(t){return this.model=t,Iy.apply(this,arguments)},updateTransform:Iy,updateView:Iy,dispose:function(){this._brushController.dispose()},_onBrush:function(t,e){var n=this.model.id;this.model.brushTargetManager.setOutputRanges(t,this.ecModel),(!e.isEnd||e.removeOnClick)&&this.api.dispatchAction({type:"brush",brushId:n,areas:i(t),$from:n})}}),Os({type:"brush",event:"brush"},function(t,e){e.eachComponent({mainType:"brush",query:t},function(e){e.setAreas(t.areas)})}),Os({type:"brushSelect",event:"brushSelected",update:"none"},function(){});var ZN={},UN=sT.toolbox.brush;Dy.defaultOption={show:!0,type:["rect","polygon","lineX","lineY","keep","clear"],icon:{rect:"M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",polygon:"M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",lineX:"M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",lineY:"M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",keep:"M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",clear:"M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"},title:i(UN.title)};var XN=Dy.prototype;XN.render=XN.updateView=function(t,e,i){var n,o,a;e.eachComponent({mainType:"brush"},function(t){n=t.brushType,o=t.brushOption.brushMode||"single",a|=t.areas.length}),this._brushType=n,this._brushMode=o,d(t.get("type",!0),function(e){t.setIconStatus(e,("keep"===e?"multiple"===o:"clear"===e?a:e===n)?"emphasis":"normal")})},XN.getIcons=function(){var t=this.model,e=t.get("icon",!0),i={};return d(t.get("type",!0),function(t){e[t]&&(i[t]=e[t])}),i},XN.onclick=function(t,e,i){var n=this._brushType,o=this._brushMode;"clear"===i?(e.dispatchAction({type:"axisAreaSelect",intervals:[]}),e.dispatchAction({type:"brush",command:"clear",areas:[]})):e.dispatchAction({type:"takeGlobalCursor",key:"brush",brushOption:{brushType:"keep"===i?n:n!==i&&i,brushMode:"keep"===i?"multiple"===o?"single":"multiple":o}})},Ty("brush",Dy),Ps(function(t,e){var i=t&&t.brush;if(y(i)||(i=i?[i]:[]),i.length){var n=[];d(i,function(t){var e=t.hasOwnProperty("toolbox")?t.toolbox:[];e instanceof Array&&(n=n.concat(e))});var o=t&&t.toolbox;y(o)&&(o=o[0]),o||(o={feature:{}},t.toolbox=[o]);var a=o.feature||(o.feature={}),r=a.brush||(a.brush={}),s=r.type||(r.type=[]);s.push.apply(s,n),Jv(s),e&&!s.length&&s.push.apply(s,MN)}});Cy.prototype={constructor:Cy,type:"calendar",dimensions:["time","value"],getDimensionsInfo:function(){return[{name:"time",type:"time"},"value"]},getRangeInfo:function(){return this._rangeInfo},getModel:function(){return this._model},getRect:function(){return this._rect},getCellWidth:function(){return this._sw},getCellHeight:function(){return this._sh},getOrient:function(){return this._orient},getFirstDayOfWeek:function(){return this._firstDayOfWeek},getDateInfo:function(t){var e=(t=jo(t)).getFullYear(),i=t.getMonth()+1;i=i<10?"0"+i:i;var 0="==(e=e||0)?this.getDateInfo(t):((t=new" n="t.getDate();n=n<10?" 0"+n:n;var" o="t.getDay();return" date(this.getdateinfo(t).time)).setdate(t.getdate()+e),this.getdateinfo(t))},update:function(t,e){function i(t,e){return null!="t[e]&&" auto"!="=t[e]}this._firstDayOfWeek=+this._model.getModel(" daylabel").get("firstday"),this._orient="this._model.get("orient"),this._lineWidth=this._model.getModel("itemStyle").getItemStyle().lineWidth||0,this._rangeInfo=this._getRangeInfo(this._initRangeOption());var""" l="{width:e.getWidth(),height:e.getHeight()},u=this._rect=ha(r,l);d([0,1],function(t){i(a,t)||(a[t]=u[o[t]]/s[t])}),this._sw=a[0],this._sh=a[1]},dataToPoint:function(t,e){y(t)&&(t=t[0]),null==e&&(e=!0);var" i="this.getDateInfo(t),n=this._rangeInfo,o=i.formatedDate;if(e&&!(i.time">=n.start.time&&i.time<n.end.time+864e5))return[nan,nan];var a="i.day,r=this._getRangeInfo([n.start.time,o]).nthWeek;return" vertical"="==this._orient?[this._rect.x+a*this._sw+this._sw/2,this._rect.y+r*this._sh+this._sh/2]:[this._rect.x+r*this._sw+this._sw/2,this._rect.y+a*this._sh+this._sh/2]},pointToData:function(t){var" " e="this.pointToDate(t);return" e&&e.time},datatorect:function(t,e){var i="this.dataToPoint(t,e);return{contentShape:{x:i[0]-(this._sw-this._lineWidth)/2,y:i[1]-(this._sh-this._lineWidth)/2,width:this._sw-this._lineWidth,height:this._sh-this._lineWidth},center:i,tl:[i[0]-this._sw/2,i[1]-this._sh/2],tr:[i[0]+this._sw/2,i[1]-this._sh/2],br:[i[0]+this._sw/2,i[1]+this._sh/2],bl:[i[0]-this._sw/2,i[1]+this._sh/2]}},pointToDate:function(t){var" t="this._model.get(" range"),e="t;if(y(e)&&1===e.length&&(e=e[0]),/^\d{4}$/.test(e)&&(t=[e+" -01-01",e+"-12-31"]), ^\d{4}[\ |-]\d{1,2}$ .test(e)){var"" o="this.getNextNDay(n,-1);t=[i.formatedDate,o.formatedDate]}/^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(e)&&(t=[e,e]);var" a.start.time>a.end.time&&t.reverse(),t},_getRangeInfo:function(t){var e;(t=[this.getDateInfo(t[0]),this.getDateInfo(t[1])])[0].time>t[1].time&&(e=!0,t.reverse());var i=Math.floor(t[1].time/864e5)-Math.floor(t[0].time/864e5)+1,n=new Date(t[0].time),o=n.getDate(),a=t[1].date.getDate();if(n.setDate(o+i-1),n.getDate()!==a)for(var r=n.getTime()-t[1].time>0?1:-1;n.getDate()!==a&&(n.getTime()-t[1].time)*r>0;)i-=r,n.setDate(o+i-1);var s=Math.floor((i+t[0].day+6)/7),l=e?1-s:s-1;return e&&t.reverse(),{range:[t[0].formatedDate,t[1].formatedDate],start:t[0],end:t[1],allDay:i,weeks:s,nthWeek:l,fweek:t[0].day,lweek:t[1].day}},_getDateByWeeksAndDay:function(t,e,i){var n=this._getRangeInfo(i);if(t>n.weeks||0===t&&e<n.fweek||t===n.weeks&&e>n.lweek)return!1;var o=7*(t-1)-n.fweek+e,a=new Date(n.start.time);return a.setDate(n.start.d+o),this.getDateInfo(a)}},Cy.dimensions=Cy.prototype.dimensions,Cy.getDimensionsInfo=Cy.prototype.getDimensionsInfo,Cy.create=function(t,e){var i=[];return t.eachComponent("calendar",function(n){var o=new Cy(n,t,e);i.push(o),n.coordinateSystem=o}),t.eachSeries(function(t){"calendar"===t.get("coordinateSystem")&&(t.coordinateSystem=i[t.get("calendarIndex")||0])}),i},Ga.register("calendar",Cy);var jN=uI.extend({type:"calendar",coordinateSystem:null,defaultOption:{zlevel:0,z:2,left:80,top:60,cellSize:20,orient:"horizontal",splitLine:{show:!0,lineStyle:{color:"#000",width:1,type:"solid"}},itemStyle:{color:"#fff",borderWidth:1,borderColor:"#ccc"},dayLabel:{show:!0,firstDay:0,position:"start",margin:"50%",nameMap:"en",color:"#000"},monthLabel:{show:!0,position:"start",margin:5,align:"center",nameMap:"en",formatter:null,color:"#000"},yearLabel:{show:!0,position:null,margin:30,formatter:null,color:"#ccc",fontFamily:"sans-serif",fontWeight:"bolder",fontSize:20}},init:function(t,e,i,n){var o=pa(t);jN.superApply(this,"init",arguments),ky(t,o)},mergeOption:function(t,e){jN.superApply(this,"mergeOption",arguments),ky(this.option,t)}}),YN={EN:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],CN:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},qN={EN:["S","M","T","W","T","F","S"],CN:["日","一","二","三","四","五","六"]};Fs({type:"calendar",_tlpoints:null,_blpoints:null,_firstDayOfMonth:null,_firstDayPoints:null,render:function(t,e,i){var n=this.group;n.removeAll();var o=t.coordinateSystem,a=o.getRangeInfo(),r=o.getOrient();this._renderDayRect(t,a,n),this._renderLines(t,a,r,n),this._renderYearText(t,a,r,n),this._renderMonthText(t,r,n),this._renderWeekText(t,a,r,n)},_renderDayRect:function(t,e,i){for(var n=t.coordinateSystem,o=t.getModel("itemStyle").getItemStyle(),a=n.getCellWidth(),r=n.getCellHeight(),s=e.start.time;s<=e.end.time;s=n.getnextnday(s,1).time){var l="n.dataToRect([s],!1).tl,u=new" ym({shape:{x:l[0],y:l[1],width:a,height:r},cursor:"default",style:o});i.add(u)}},_renderlines:function(t,e,i,n){function o(e){a._firstdayofmonth.push(r.getdateinfo(e)),a._firstdaypoints.push(r.datatorect([e],!1).tl);var o="a._getLinePointsOfOneWeek(t,e,i);a._tlpoints.push(o[0]),a._blpoints.push(o[o.length-1]),l&&a._drawSplitline(o,s,n)}var" a="this,r=t.coordinateSystem,s=t.getModel(" splitline.linestyle").getlinestyle(),l="t.get(" splitline.show"),u="s.lineWidth;this._tlpoints=[],this._blpoints=[],this._firstDayOfMonth=[],this._firstDayPoints=[];for(var""" h="e.start,c=0;h.time<=e.end.time;c++){o(h.formatedDate),0===c&&(h=r.getDateInfo(e.start.y+" -"+e.start.m));var" d="h.date;d.setMonth(d.getMonth()+1),h=r.getDateInfo(d)}o(r.getNextNDay(e.end.time,1).formatedDate),l&&this._drawSplitline(a._getEdgesPoints(a._tlpoints,u,i),s,n),l&&this._drawSplitline(a._getEdgesPoints(a._blpoints,u,i),s,n)},_getEdgesPoints:function(t,e,i){var" n="[t[0].slice(),t[t.length-1].slice()],o=" horizontal"="==i?0:1;return" " n[0][o]="n[0][o]-e/2,n[1][o]=n[1][o]+e/2,n},_drawSplitline:function(t,e,i){var" gm({z2:20,shape:{points:t},style:e});i.add(n)},_getlinepointsofoneweek:function(t,e,i){var r="n.getNextNDay(e.time,a),s=n.dataToRect([r.time],!1);o[2*r.day]=s.tl,o[2*r.day+1]=s[" o},_formatterlabel:function(t,e){return"string"="=typeof" t&&t?na(t,e):"function"="=typeof" t?t(e):e.namemap},_yeartextpositioncontrol:function(t,e,i,n,o){e="e.slice();var" s="[this._tlpoints[this._tlpoints.length-1],this._blpoints[0]],l=(s[0][0]+s[1][0])/2,u=(s[0][1]+s[1][1])/2,h=">+e.start.y&&(d=d+"-"+e.end.y);var f=o.get("formatter"),p={start:e.start.y,end:e.end.y,nameMap:d},g=this._formatterLabel(f,p),m=new rM({z2:30});go(m.style,o,{text:g}),m.attr(this._yearTextPositionControl(m,c[r],i,r,a)),n.add(m)}},_monthTextPositionControl:function(t,e,i,n,o){var a="left",r="top",s=t[0],l=t[1];return"horizontal"===i?(l+=o,e&&(a="center"),"start"===n&&(r="bottom")):(s+=o,e&&(r="middle"),"start"===n&&(a="right")),{x:s,y:l,textAlign:a,textVerticalAlign:r}},_renderMonthText:function(t,e,i){var n=t.getModel("monthLabel");if(n.get("show")){var o=n.get("nameMap"),r=n.get("margin"),s=n.get("position"),l=n.get("align"),u=[this._tlpoints,this._blpoints];_(o)&&(o=YN[o.toUpperCase()]||[]);var h="start"===s?0:1,c="horizontal"===e?0:1;r="start"===s?-r:r;for(var d="center"===l,f=0;f<u[h].length-1;f++){var p="u[h][f].slice(),g=this._firstDayOfMonth[f];if(d){var" m="this._firstDayPoints[f];p[c]=(m[c]+u[0][f+1][c])/2}var" v="n.get(" formatter"),y="o[+g.m-1],x={yyyy:g.y,yy:(g.y+" ").slice(2),mm:g.m,m:+g.m,namemap:y},w="this._formatterLabel(v,x),b=new""" rm({z2:30});a(go(b.style,n,{text:w}),this._monthtextpositioncontrol(p,d,e,s,r)),i.add(b)}}},_weektextpositioncontrol:function(t,e,i,n,o){var a="center" ,r="middle" ,s="t[0],l=t[1],u=" start"="==i;return" horizontal"="==e?(s=s+n+(u?1:-1)*o[0]/2,a=u?"right":"left"):(l=l+n+(u?1:-1)*o[1]/2,r=u?"bottom":"top"),{x:s,y:l,textAlign:a,textVerticalAlign:r}},_renderWeekText:function(t,e,i,n){var""" o="t.getModel(" daylabel");if(o.get("show")){var" r="t.coordinateSystem,s=o.get(" position"),l="o.get(" namemap"),u="o.get("margin"),h=r.getFirstDayOfWeek();_(l)&&(l=qN[l.toUpperCase()]||[]);var""" c="r.getNextNDay(e.end.time,7-e.lweek).time,d=[r.getCellWidth(),r.getCellHeight()];u=Bo(u,d[" f="0;f<7;f++){var" rm({z2:30});a(go(v.style,o,{text:l[m]}),this._weektextpositioncontrol(g,i,s,u,d)),n.add(v)}}}}),gs({type:"title",layoutmode:{type:"box",ignoresize:!0},defaultoption:{zlevel:0,z:6,show:!0,text:"",target:"blank",subtext:"",subtarget:"blank",left:0,top:0,backgroundcolor:"rgba(0,0,0,0)",bordercolor:"#ccc",borderwidth:0,padding:5,itemgap:10,textstyle:{fontsize:18,fontweight:"bolder",color:"#333"},subtextstyle:{color:"#aaa"}}}),fs({type:"title",render:function(t,e,i){if(this.group.removeall(),t.get("show")){var n="this.group,o=t.getModel(" textstyle"),a="t.getModel(" subtextstyle"),r="t.get("textAlign"),s=t.get("textBaseline"),l=new""" rm({style:go({},o,{text:t.get("text"),textfill:o.gettextcolor()},{disablebox:!0}),z2:10}),u="l.getBoundingRect(),h=t.get(" subtext"),c="new" " rm({style:go({},a,{text:h,textfill:a.gettextcolor(),y:u.height+t.get("itemgap"),textverticalalign:"top"},{disablebox:!0}),z2:10}),d="t.get(" link"),f="t.get(" sublink"),p="t.get("triggerEvent",!0);l.silent=!d&&!p,c.silent=!f&&!p,d&&l.on("click",function(){window.open(d,"_"+t.get("target"))}),f&&c.on("click",function(){window.open(f,"_"+t.get("subtarget"))}),l.eventData=c.eventData=p?{componentType:"title",componentIndex:t.componentIndex}:null,n.add(l),h&&n.add(c);var""" g="n.getBoundingRect(),m=t.getBoxLayoutParams();m.width=g.width,m.height=g.height;var" y="{textAlign:r,textVerticalAlign:s};l.setStyle(y),c.setStyle(y),g=n.getBoundingRect();var" x="v.margin,_=t.getItemStyle([" color","opacity"]);_.fill="t.get(" backgroundcolor");var"" w="new" ym({shape:{x:g.x-x[3],y:g.y-x[0],width:g.width+x[1]+x[3],height:g.height+x[0]+x[2],r:t.get("borderradius")},style:_,silent:!0});kn(w),n.add(w)}}}),ui.registersubtypedefaulter("datazoom",function(){return"slider"});var kn="[" cartesian2d","polar","singleaxis"],$n="function(t,e){var" i="f(t=t.slice(),sa),n=f(e=(e||[]).slice(),sa);return" function(o,a){d(t,function(t,r){for(var s="{name:t,capital:i[r]},l=0;l<e.length;l++)s[e[l]]=t+n[l];o.call(a,s)})}}([" x","y","z","radius","angle","single"],["axisindex","axis","index","id"]),jn="d,QN=Go,tO=function(t,e,i,n){this._dimName=t,this._axisIndex=e,this._valueWindow,this._percentWindow,this._dataExtent,this._minMaxSpan,this.ecModel=n,this._dataZoomModel=i};tO.prototype={constructor:tO,hostedBy:function(t){return" this._datazoommodel="==t},getDataValueWindow:function(){return" this._valuewindow.slice()},getdatapercentwindow:function(){return this._percentwindow.slice()},gettargetseriesmodels:function(){var t="[],e=this.ecModel;return" e.eachseries(function(i){if(py(i.get("coordinatesystem"))){var this.ecmodel.getcomponent(this._dimname+"axis",this._axisindex)},getotheraxismodel:function(){var t,e,i="this._dimName,n=this.ecModel,o=this.getAxisModel();" x"="==i||" y"="==i?(e="gridIndex",t="x"===i?"y":"x"):(e="polarIndex",t="angle"===i?"radius":"angle");var""" a;return n.eachcomponent(t+"axis",function(t){(t.get(e)||0)="==(o.get(e)||0)&&(a=t)}),a},getMinMaxSpan:function(){return" i(this._minmaxspan)},calculatedatawindow:function(t){var e="this._dataExtent,i=this.getAxisModel().axis.scale,n=this._dataZoomModel.getRangePropMode(),o=[0,100],a=[t.start,t.end],r=[];return" jn(["startvalue","endvalue"],function(e){r.push(null!="t[e]?i.parse(t[e]):null)}),JN([0,1],function(t){var" i(t){return>=r[0]&&t<=r[1]}if(t===this._datazoommodel){var n="this._dimName,o=this.getTargetSeriesModels(),a=t.get(" filtermode"),r="this._valueWindow;" none"!="=a&&JN(o,function(t){var""" e="t.getData(),o=e.mapDimension(n,!0);o.length&&(" weakfilter"="==a?e.filterSelf(function(t){for(var" " i,n,a,s="0;s<o.length;s++){var" l="e.get(o[s],t),u=!isNaN(l),h=l<r[0],c=l">r[1];if(u&&!h&&!c)return!0;u&&(a=!0),h&&(i=!0),c&&(n=!0)}return a&&i&&n}):JN(o,function(n){if("empty"===a)t.setData(e.map(n,function(t){return i(t)?t:NaN}));else{var o={};o[n]=r,e.selectRange(o)}}),JN(o,function(t){e.setApproximateExtent(r,t)}))})}}};var eO=d,iO=$N,nO=Gs({type:"dataZoom",dependencies:["xAxis","yAxis","zAxis","radiusAxis","angleAxis","singleAxis","series"],defaultOption:{zlevel:0,z:4,orient:null,xAxisIndex:null,yAxisIndex:null,filterMode:"filter",throttle:null,start:0,end:100,startValue:null,endValue:null,minSpan:null,maxSpan:null,minValueSpan:null,maxValueSpan:null,rangeMode:null},init:function(t,e,i){this._dataIntervalByAxis={},this._dataInfo={},this._axisProxies={},this.textStyleModel,this._autoThrottle=!0,this._rangePropMode=["percent","percent"];var n=By(t);this.mergeDefaultAndTheme(t,i),this.doInit(n)},mergeOption:function(t){var e=By(t);n(this.option,t,!0),this.doInit(e)},doInit:function(t){var e=this.option;U_.canvasSupported||(e.realtime=!1),this._setDefaultThrottle(t),Vy(this,t),eO([["start","startValue"],["end","endValue"]],function(t,i){"value"===this._rangePropMode[i]&&(e[t[0]]=null)},this),this.textStyleModel=this.getModel("textStyle"),this._resetTarget(),this._giveAxisProxies()},_giveAxisProxies:function(){var t=this._axisProxies;this.eachTargetAxis(function(e,i,n,o){var a=this.dependentModels[e.axis][i],r=a.__dzAxisProxy||(a.__dzAxisProxy=new tO(e.name,i,this,o));t[e.name+"_"+i]=r},this)},_resetTarget:function(){var t=this.option,e=this._judgeAutoMode();iO(function(e){var i=e.axisIndex;t[i]=Di(t[i])},this),"axisIndex"===e?this._autoSetAxisIndex():"orient"===e&&this._autoSetOrient()},_judgeAutoMode:function(){var t=this.option,e=!1;iO(function(i){null!=t[i.axisIndex]&&(e=!0)},this);var i=t.orient;return null==i&&e?"orient":e?void 0:(null==i&&(t.orient="horizontal"),"axisIndex")},_autoSetAxisIndex:function(){var t=!0,e=this.get("orient",!0),i=this.option,n=this.dependentModels;if(t){var o="vertical"===e?"y":"x";n[o+"Axis"].length?(i[o+"AxisIndex"]=[0],t=!1):eO(n.singleAxis,function(n){t&&n.get("orient",!0)===e&&(i.singleAxisIndex=[n.componentIndex],t=!1)})}t&&iO(function(e){if(t){var n=[],o=this.dependentModels[e.axis];if(o.length&&!n.length)for(var a=0,r=o.length;a<r;a++)"category"===o[a].get("type")&&n.push(a);i[e.axisindex]=n,n.length&&(t=!1)}},this),t&&this.ecmodel.eachseries(function(t){this._isserieshasallaxestypeof(t,"value")&&io(function(e){var n="i[e.axisIndex],o=t.get(e.axisIndex),a=t.get(e.axisId);l(n,o=t.ecModel.queryComponents({mainType:e.axis,index:o,id:a})[0].componentIndex)<0&&n.push(o)})},this)},_autoSetOrient:function(){var" t;this.eachtargetaxis(function(e){!t&&(t="e.name)},this),this.option.orient=" y"="==t?" vertical":"horizontal"},_isserieshasallaxestypeof:function(t,e){var"" i="!0;return" io(function(n){var o="t.get(n.axisIndex),a=this.dependentModels[n.axis][o];a&&a.get(" type")="==e||(i=!1)},this),i},_setDefaultThrottle:function(t){if(t.hasOwnProperty(" throttle")&&(this._autothrottle="!1),this._autoThrottle){var""" e="this.ecModel.option;this.option.throttle=e.animation&&e.animationDurationUpdate">0?100:20}},getFirstTargetAxisModel:function(){var t;return iO(function(e){if(null==t){var i=this.get(e.axisIndex);i.length&&(t=this.dependentModels[e.axis][i[0]])}},this),t},eachTargetAxis:function(t,e){var i=this.ecModel;iO(function(n){eO(this.get(n.axisIndex),function(o){t.call(e,n,o,this,i)},this)},this)},getAxisProxy:function(t,e){return this._axisProxies[t+"_"+e]},getAxisModel:function(t,e){var i=this.getAxisProxy(t,e);return i&&i.getAxisModel()},setRawRange:function(t,e){var i=this.option;eO([["start","startValue"],["end","endValue"]],function(e){null==t[e[0]]&&null==t[e[1]]||(i[e[0]]=t[e[0]],i[e[1]]=t[e[1]])},this),!e&&Vy(this,t)},getPercentRange:function(){var t=this.findRepresentativeAxisProxy();if(t)return t.getDataPercentWindow()},getValueRange:function(t,e){if(null!=t||null!=e)return this.getAxisProxy(t,e).getDataValueWindow();var i=this.findRepresentativeAxisProxy();return i?i.getDataValueWindow():void 0},findRepresentativeAxisProxy:function(t){if(t)return t.__dzAxisProxy;var e=this._axisProxies;for(var i in e)if(e.hasOwnProperty(i)&&e[i].hostedBy(this))return e[i];for(var i in e)if(e.hasOwnProperty(i)&&!e[i].hostedBy(this))return e[i]},getRangePropMode:function(){return this._rangePropMode.slice()}}),oO=KI.extend({type:"dataZoom",render:function(t,e,i,n){this.dataZoomModel=t,this.ecModel=e,this.api=i},getTargetCoordInfo:function(){function t(t,e,i,n){for(var o,a=0;a<i.length;a++)if(i[a].model===t){o=i[a];break}o||i.push(o={model:t,axismodels:[],coordindex:n}),o.axismodels.push(e)}var e="this.dataZoomModel,i=this.ecModel,n={};return" e.eachtargetaxis(function(e,o){var a="i.getComponent(e.axis,o);if(a){var" r="a.getCoordSysModel();r&&t(r,a,n[r.mainType]||(n[r.mainType]=[]),r.componentIndex)}},this),n}}),aO=(nO.extend({type:" datazoom.slider",layoutmode:"box",defaultoption:{show:!0,right:"ph",top:"ph",width:"ph",height:"ph",left:null,bottom:null,backgroundcolor:"rgba(47,69,84,0)",databackground:{linestyle:{color:"#2f4554",width:.5,opacity:.3},areastyle:{color:"rgba(47,69,84,0.3)",opacity:.3}},bordercolor:"#ddd",fillercolor:"rgba(167,183,204,0.4)",handleicon:"m8.2,13.6v3.9h6.3v9.7h3.1v14.9h3.3v9.7h1.8v-9.7h3.3v13.6h8.2z" m9.7,24.4h4.8v-1.4h4.9v24.4z m9.7,19.1h4.8v-1.4h4.9v19.1z",handlesize:"100%",handlestyle:{color:"#a7b7cc"},labelprecision:null,labelformatter:null,showdetail:!0,showdatashadow:"auto",realtime:!0,zoomlock:!1,textstyle:{color:"#333"}}}),ym),ro="zo,sO=Go,lO=m,uO=d,hO=" horizontal",co="5,dO=[" line","bar","candlestick","scatter"],fo="oO.extend({type:"dataZoom.slider",init:function(t,e){this._displayables={},this._orient,this._range,this._handleEnds,this._size,this._handleWidth,this._handleHeight,this._location,this._dragging,this._dataShadowInfo,this.api=e},render:function(t,e,i,n){fO.superApply(this,"render",arguments),Pr(this,"_dispatchZoomAction",this.dataZoomModel.get("throttle"),"fixRate"),this._orient=t.get("orient"),!1!==this.dataZoomModel.get("show")?(n&&"dataZoom"===n.type&&n.from===this.uid||this._buildView(),this._updateView()):this.group.removeAll()},remove:function(){fO.superApply(this,"remove",arguments),Nr(this,"_dispatchZoomAction")},dispose:function(){fO.superApply(this,"dispose",arguments),Nr(this,"_dispatchZoomAction")},_buildView:function(){var""" t="this.group;t.removeAll(),this._resetLocation(),this._resetInterval();var" tb;this._renderbackground(),this._renderhandle(),this._renderdatashadow(),t.add(e),this._positiongroup()},_resetlocation:function(){var s="t.getBoundingRect([a]);t.attr(" position",[e.x-s.x,e.y-s.y])},_getviewextent:function(){return[0,this._size[0]]},_renderbackground:function(){var" ao({silent:!0,shape:{x:0,y:0,width:e[0],height:e[1]},style:{fill:t.get("backgroundcolor")},z2:-40})),i.add(new ao({shape:{x:0,y:0,width:e[0],height:e[1]},style:{fill:"transparent"},z2:0,onclick:m(this._onclickpanelclick,this)}))},_renderdatashadow:function(){var l,u="[0,e[1]],h=[0,e[0]],c=[[e[0],0],[0,0]],d=[],f=h[1]/(n.count()-1),p=0,g=Math.round(n.count()/e[0]);n.each([o],function(t,e){if(g">0&&e%g)p+=f;else{var i=null==t||isNaN(t)||""===t,n=i?0:rO(t,a,u,!0);i&&!l&&e?(c.push([c[c.length-1][0],0]),d.push([d[d.length-1][0],0])):!i&&l&&(c.push([p,0]),d.push([p,0])),c.push([p,n]),d.push([p,n]),p+=f,l=i}});var m=this.dataZoomModel;this._displayables.barGroup.add(new pM({shape:{points:c},style:r({fill:m.get("dataBackgroundColor")},m.getModel("dataBackground.areaStyle").getAreaStyle()),silent:!0,z2:-20})),this._displayables.barGroup.add(new gM({shape:{points:d},style:m.getModel("dataBackground.lineStyle").getLineStyle(),silent:!0,z2:-19}))}}},_prepareDataShadowInfo:function(){var t=this.dataZoomModel,e=t.get("showDataShadow");if(!1!==e){var i,n=this.ecModel;return t.eachTargetAxis(function(o,a){d(t.getAxisProxy(o.name,a).getTargetSeriesModels(),function(t){if(!(i||!0!==e&&l(dO,t.get("type"))<0)){var r,s="n.getComponent(o.axis,a).axis,u=Gy(o.name),h=t.coordinateSystem;null!=u&&h.getOtherAxis&&(r=h.getOtherAxis(s).inverse),u=t.getData().mapDimension(u),i={thisAxis:s,series:t,thisDim:o.name,otherDim:u,otherAxisInverse:r}}},this)},this),i}},_renderHandle:function(){var" t="this._displayables,e=t.handles=[],i=t.handleLabels=[],n=this._displayables.barGroup,o=this._size,a=this.dataZoomModel;n.add(t.filler=new" ao({draggable:!0,cursor:fy(this._orient),drift:lo(this._ondragmove,this,"all"),onmousemove:function(t){mw(t.event)},ondragstart:lo(this._showdatainfo,this,!0),ondragend:lo(this._ondragend,this),onmouseover:lo(this._showdatainfo,this,!0),onmouseout:lo(this._showdatainfo,this,!1),style:{fill:a.get("fillercolor"),textposition:"inside"}})),n.add(new ao(kn({silent:!0,shape:{x:0,y:0,width:o[0],height:o[1]},style:{stroke:a.get("databackgroundcolor")||a.get("bordercolor"),linewidth:1,fill:"rgba(0,0,0,0)"}}))),uo([0,1],function(t){var o="ko(a.get(" handleicon"),{cursor:fy(this._orient),draggable:!0,drift:lo(this._ondragmove,this,t),onmousemove:function(t){mw(t.event)},ondragend:lo(this._ondragend,this),onmouseover:lo(this._showdatainfo,this,!0),onmouseout:lo(this._showdatainfo,this,!1)},{x:-1,y:0,width:2,height:2}),r="o.getBoundingRect();this._handleHeight=Bo(a.get(" handlesize"),this._size[1]),this._handlewidth="r.width/r.height*this._handleHeight,o.setStyle(a.getModel("handleStyle").getItemStyle());var""" s="a.get(" handlecolor");null!="s&&(o.style.fill=s),n.add(e[t]=o);var" " l="a.textStyleModel;this.group.add(i[t]=new" rm({silent:!0,invisible:!0,style:{x:0,y:0,text:"",textverticalalign:"middle",textalign:"center",textfill:l.gettextcolor(),textfont:l.getfont()},z2:10}))},this)},_resetinterval:function(){var i="this.dataZoomModel,n=this._handleEnds,o=this._getViewExtent(),a=i.findRepresentativeAxisProxy().getMinMaxSpan(),r=[0,100];tk(e,n,o,i.get(" zoomlock")?"all":t,null!="a.minSpan?rO(a.minSpan,r,o,!0):null,null!=a.maxSpan?rO(a.maxSpan,r,o,!0):null);var" e="this._displayables,i=this._handleEnds,n=sO(i.slice()),o=this._size;uO([0,1],function(t){var" n="e.handles[t],a=this._handleHeight;n.attr({scale:[a/2,a/2],position:[i[t],o[1]/2-a/2]})},this),e.filler.setShape({x:n[0],y:0,width:n[1]-n[0],height:o[1]}),this._updateDataInfo(t)},_updateDataInfo:function(t){function" e(t){var c="sO(this._handleEnds.slice());e.call(this,0),e.call(this,1)},_formatLabel:function(t,e){var" a="null==t||isNaN(t)?" ":"category"="==e.type||" time"="==e.type?e.scale.getLabel(Math.round(t)):t.toFixed(Math.min(o,20));return""" x(n)?n(t,a):_(n)?n.replace("{value}",a):a},_showdatainfo:function(t){t="this._dragging||t;var">e[0]||i[1]<0||i[1]>e[1])){var n=this._handleEnds,o=(n[0]+n[1])/2,a=this._updateInterval("all",i[0]-o);this._updateView(),a&&this._dispatchZoomAction()}},_dispatchZoomAction:function(){var t=this._range;this.api.dispatchAction({type:"dataZoom",from:this.uid,dataZoomId:this.dataZoomModel.id,start:t[0],end:t[1]})},_findCoordRect:function(){var t;if(uO(this.getTargetCoordInfo(),function(e){if(!t&&e.length){var i=e[0].model.coordinateSystem;t=i.getRect&&i.getRect()}}),!t){var e=this.api.getWidth(),i=this.api.getHeight();t={x:.2*e,y:.2*i,width:.6*e,height:.6*i}}return t}});nO.extend({type:"dataZoom.inside",defaultOption:{disabled:!1,zoomLock:!1,zoomOnMouseWheel:!0,moveOnMouseMove:!0,moveOnMouseWheel:!1,preventDefaultMouseMove:!0}});var pO="\0_ec_dataZoom_roams",gO=m,mO=oO.extend({type:"dataZoom.inside",init:function(t,e){this._range},render:function(t,e,i,n){mO.superApply(this,"render",arguments),this._range=t.getPercentRange(),d(this.getTargetCoordInfo(),function(e,n){var o=f(e,function(t){return Zy(t.model)});d(e,function(e){var a=e.model,r={};d(["pan","zoom","scrollMove"],function(t){r[t]=gO(vO[t],this,e,n)},this),Wy(i,{coordId:Zy(a),allCoordIds:o,containsPoint:function(t,e,i){return a.coordinateSystem.containPoint([e,i])},dataZoomId:t.id,dataZoomModel:t,getRange:r})},this)},this)},dispose:function(){Hy(this.api,this.dataZoomModel.id),mO.superApply(this,"dispose",arguments),this._range=null}}),vO={zoom:function(t,e,i,n){var o=this._range,a=o.slice(),r=t.axisModels[0];if(r){var s=yO[e](null,[n.originX,n.originY],r,i,t),l=(s.signal>0?s.pixelStart+s.pixelLength-s.pixel:s.pixel-s.pixelStart)/s.pixelLength*(a[1]-a[0])+a[0],u=Math.max(1/n.scale,0);a[0]=(a[0]-l)*u+l,a[1]=(a[1]-l)*u+l;var h=this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();return tk(0,a,[0,100],0,h.minSpan,h.maxSpan),this._range=a,o[0]!==a[0]||o[1]!==a[1]?a:void 0}},pan:Ky(function(t,e,i,n,o,a){var r=yO[n]([a.oldX,a.oldY],[a.newX,a.newY],e,o,i);return r.signal*(t[1]-t[0])*r.pixel/r.pixelLength}),scrollMove:Ky(function(t,e,i,n,o,a){return yO[n]([0,0],[a.scrollDelta,a.scrollDelta],e,o,i).signal*(t[1]-t[0])*a.scrollDelta})},yO={grid:function(t,e,i,n,o){var a=i.axis,r={},s=o.model.coordinateSystem.getRect();return t=t||[0,0],"x"===a.dim?(r.pixel=e[0]-t[0],r.pixelLength=s.width,r.pixelStart=s.x,r.signal=a.inverse?1:-1):(r.pixel=e[1]-t[1],r.pixelLength=s.height,r.pixelStart=s.y,r.signal=a.inverse?-1:1),r},polar:function(t,e,i,n,o){var a=i.axis,r={},s=o.model.coordinateSystem,l=s.getRadiusAxis().getExtent(),u=s.getAngleAxis().getExtent();return t=t?s.pointToCoord(t):[0,0],e=s.pointToCoord(e),"radiusAxis"===i.mainType?(r.pixel=e[0]-t[0],r.pixelLength=l[1]-l[0],r.pixelStart=l[0],r.signal=a.inverse?1:-1):(r.pixel=e[1]-t[1],r.pixelLength=u[1]-u[0],r.pixelStart=u[0],r.signal=a.inverse?-1:1),r},singleAxis:function(t,e,i,n,o){var a=i.axis,r=o.model.coordinateSystem.getRect(),s={};return t=t||[0,0],"horizontal"===a.orient?(s.pixel=e[0]-t[0],s.pixelLength=r.width,s.pixelStart=r.x,s.signal=a.inverse?1:-1):(s.pixel=e[1]-t[1],s.pixelLength=r.height,s.pixelStart=r.y,s.signal=a.inverse?-1:1),s}};Ns({getTargetSeries:function(t){var e=R();return t.eachComponent("dataZoom",function(t){t.eachTargetAxis(function(t,i,n){d(n.getAxisProxy(t.name,i).getTargetSeriesModels(),function(t){e.set(t.uid,t)})})}),e},modifyOutputEnd:!0,overallReset:function(t,e){t.eachComponent("dataZoom",function(t){t.eachTargetAxis(function(t,i,n){n.getAxisProxy(t.name,i).reset(n,e)}),t.eachTargetAxis(function(t,i,n){n.getAxisProxy(t.name,i).filterData(n,e)})}),t.eachComponent("dataZoom",function(t){var e=t.findRepresentativeAxisProxy(),i=e.getDataPercentWindow(),n=e.getDataValueWindow();t.setRawRange({start:i[0],end:i[1],startValue:n[0],endValue:n[1]},!0)})}}),Os("dataZoom",function(t,e){var i=Ny(m(e.eachComponent,e,"dataZoom"),$N,function(t,e){return t.get(e.axisIndex)}),n=[];e.eachComponent({mainType:"dataZoom",query:t},function(t,e){n.push.apply(n,i(t).nodes)}),d(n,function(e,i){e.setRawRange({start:t.start,end:t.end,startValue:t.startValue,endValue:t.endValue})})});var xO=d,_O=function(t){var e=t&&t.visualMap;y(e)||(e=e?[e]:[]),xO(e,function(t){if(t){$y(t,"splitList")&&!$y(t,"pieces")&&(t.pieces=t.splitList,delete t.splitList);var e=t.pieces;e&&y(e)&&xO(e,function(t){w(t)&&($y(t,"start")&&!$y(t,"min")&&(t.min=t.start),$y(t,"end")&&!$y(t,"max")&&(t.max=t.end))})}})};uI.registerSubTypeDefaulter("visualMap",function(t){return t.categories||(t.pieces?t.pieces.length>0:t.splitNumber>0)&&!t.calculable?"piecewise":"continuous"});var wO=GT.VISUAL.COMPONENT;zs(wO,{createOnAllSeries:!0,reset:function(t,e){var i=[];return e.eachComponent("visualMap",function(e){var n=t.pipelineContext;!e.isTargetSeries(t)||n&&n.large||i.push(ny(e.stateList,e.targetVisuals,m(e.getValueState,e),e.getDataDimension(t.getData())))}),i}}),zs(wO,{createOnAllSeries:!0,reset:function(t,e){var i=t.getData(),n=[];e.eachComponent("visualMap",function(e){if(e.isTargetSeries(t)){var o=e.getVisualMeta(m(Jy,null,t,e))||{stops:[],outerColors:[]},a=e.getDataDimension(i),r=i.getDimensionInfo(a);null!=r&&(o.dimension=r.index,n.push(o))}}),t.getData().setVisual("visualMeta",n)}});var bO={get:function(t,e,n){var o=i((SO[t]||{})[e]);return n&&y(o)?o[o.length-1]:o}},SO={color:{active:["#006edd","#e0ffff"],inactive:["rgba(0,0,0,0)"]},colorHue:{active:[0,360],inactive:[0,0]},colorSaturation:{active:[.3,1],inactive:[0,0]},colorLightness:{active:[.9,.5],inactive:[0,0]},colorAlpha:{active:[.3,1],inactive:[0,0]},opacity:{active:[.3,1],inactive:[0,0]},symbol:{active:["circle","roundRect","diamond"],inactive:["none"]},symbolSize:{active:[10,50],inactive:[0,0]}},MO=cL.mapVisual,IO=cL.eachVisual,TO=y,AO=d,DO=Go,CO=zo,LO=B,kO=Gs({type:"visualMap",dependencies:["series"],stateList:["inRange","outOfRange"],replacableOptionKeys:["inRange","outOfRange","target","controller","color"],dataBound:[-1/0,1/0],layoutMode:{type:"box",ignoreSize:!0},defaultOption:{show:!0,zlevel:0,z:4,seriesIndex:"all",min:0,max:200,dimension:null,inRange:null,outOfRange:null,left:0,right:null,top:null,bottom:0,itemWidth:null,itemHeight:null,inverse:!1,orient:"vertical",backgroundColor:"rgba(0,0,0,0)",borderColor:"#ccc",contentColor:"#5793f3",inactiveColor:"#aaa",borderWidth:0,padding:5,textGap:10,precision:0,color:null,formatter:null,text:null,textStyle:{color:"#333"}},init:function(t,e,i){this._dataExtent,this.targetVisuals={},this.controllerVisuals={},this.textStyleModel,this.itemSize,this.mergeDefaultAndTheme(t,i)},optionUpdated:function(t,e){var i=this.option;U_.canvasSupported||(i.realtime=!1),!e&&ey(i,t,this.replacableOptionKeys),this.textStyleModel=this.getModel("textStyle"),this.resetItemSize(),this.completeVisualOption()},resetVisual:function(t){var e=this.stateList;t=m(t,this),this.controllerVisuals=ty(this.option.controller,e,t),this.targetVisuals=ty(this.option.target,e,t)},getTargetSeriesIndices:function(){var t=this.option.seriesIndex,e=[];return null==t||"all"===t?this.ecModel.eachSeries(function(t,i){e.push(i)}):e=Di(t),e},eachTargetSeries:function(t,e){d(this.getTargetSeriesIndices(),function(i){t.call(e,this.ecModel.getSeriesByIndex(i))},this)},isTargetSeries:function(t){var e=!1;return this.eachTargetSeries(function(i){i===t&&(e=!0)}),e},formatValueText:function(t,e,i){function n(t){return t===l[0]?"min":t===l[1]?"max":(+t).toFixed(Math.min(s,20))}var o,a,r=this.option,s=r.precision,l=this.dataBound,u=r.formatter;return i=i||["<",">"],y(t)&&(t=t.slice(),o=!0),a=e?t:o?[n(t[0]),n(t[1])]:n(t),_(u)?u.replace("{value}",o?a[0]:a).replace("{value2}",o?a[1]:a):x(u)?o?u(t[0],t[1]):u(t):o?t[0]===l[0]?i[0]+" "+a[1]:t[1]===l[1]?i[1]+" "+a[0]:a[0]+" - "+a[1]:a},resetExtent:function(){var t=this.option,e=DO([t.min,t.max]);this._dataExtent=e},getDataDimension:function(t){var e=this.option.dimension,i=t.dimensions;if(null!=e||i.length){if(null!=e)return t.getDimension(e);for(var n=t.dimensions,o=n.length-1;o>=0;o--){var a=n[o];if(!t.getDimensionInfo(a).isCalculationCoord)return a}}},getExtent:function(){return this._dataExtent.slice()},completeVisualOption:function(){function t(t){TO(o.color)&&!t.inRange&&(t.inRange={color:o.color.slice().reverse()}),t.inRange=t.inRange||{color:e.get("gradientColor")},AO(this.stateList,function(e){var i=t[e];if(_(i)){var n=bO.get(i,"active",l);n?(t[e]={},t[e][i]=n):delete t[e]}},this)}var e=this.ecModel,o=this.option,a={inRange:o.inRange,outOfRange:o.outOfRange},r=o.target||(o.target={}),s=o.controller||(o.controller={});n(r,a),n(s,a);var l=this.isCategory();t.call(this,r),t.call(this,s),function(t,e,i){var n=t[e],o=t[i];n&&!o&&(o=t[i]={},AO(n,function(t,e){if(cL.isValidType(e)){var i=bO.get(e,"inactive",l);null!=i&&(o[e]=i,"color"!==e||o.hasOwnProperty("opacity")||o.hasOwnProperty("colorAlpha")||(o.opacity=[0,0]))}}))}.call(this,r,"inRange","outOfRange"),function(t){var e=(t.inRange||{}).symbol||(t.outOfRange||{}).symbol,n=(t.inRange||{}).symbolSize||(t.outOfRange||{}).symbolSize,o=this.get("inactiveColor");AO(this.stateList,function(a){var r=this.itemSize,s=t[a];s||(s=t[a]={color:l?o:[o]}),null==s.symbol&&(s.symbol=e&&i(e)||(l?"roundRect":["roundRect"])),null==s.symbolSize&&(s.symbolSize=n&&i(n)||(l?r[0]:[r[0],r[0]])),s.symbol=MO(s.symbol,function(t){return"none"===t||"square"===t?"roundRect":t});var u=s.symbolSize;if(null!=u){var h=-1/0;IO(u,function(t){t>h&&(h=t)}),s.symbolSize=MO(u,function(t){return CO(t,[0,h],[0,r[0]],!0)})}},this)}.call(this,s)},resetItemSize:function(){this.itemSize=[parseFloat(this.get("itemWidth")),parseFloat(this.get("itemHeight"))]},isCategory:function(){return!!this.option.categories},setSelected:LO,getValueState:LO,getVisualMeta:LO}),PO=[20,140],NO=kO.extend({type:"visualMap.continuous",defaultOption:{align:"auto",calculable:!1,range:null,realtime:!0,itemHeight:null,itemWidth:null,hoverLink:!0,hoverLinkDataSize:null,hoverLinkOnHandle:null},optionUpdated:function(t,e){NO.superApply(this,"optionUpdated",arguments),this.resetExtent(),this.resetVisual(function(t){t.mappingMethod="linear",t.dataExtent=this.getExtent()}),this._resetRange()},resetItemSize:function(){NO.superApply(this,"resetItemSize",arguments);var t=this.itemSize;"horizontal"===this._orient&&t.reverse(),(null==t[0]||isNaN(t[0]))&&(t[0]=PO[0]),(null==t[1]||isNaN(t[1]))&&(t[1]=PO[1])},_resetRange:function(){var t=this.getExtent(),e=this.option.range;!e||e.auto?(t.auto=1,this.option.range=t):y(e)&&(e[0]>e[1]&&e.reverse(),e[0]=Math.max(e[0],t[0]),e[1]=Math.min(e[1],t[1]))},completeVisualOption:function(){kO.prototype.completeVisualOption.apply(this,arguments),d(this.stateList,function(t){var e=this.option.controller[t].symbolSize;e&&e[0]!==e[1]&&(e[0]=0)},this)},setSelected:function(t){this.option.range=t.slice(),this._resetRange()},getSelected:function(){var t=this.getExtent(),e=Go((this.get("range")||[]).slice());return e[0]>t[1]&&(e[0]=t[1]),e[1]>t[1]&&(e[1]=t[1]),e[0]<t[0]&&(e[0]=t[0]),e[1]<t[0]&&(e[1]=t[0]),e},getvaluestate:function(t){var e="this.option.range,i=this.getExtent();return(e[0]<=i[0]||e[0]<=t)&&(e[1]">=i[1]||t<=e[1])?"inrange":"outofrange"},findtargetdataindices:function(t){var e="[];return" this.eachtargetseries(function(i){var n="[],o=i.getData();o.each(this.getDataDimension(o),function(e,i){t[0]<=e&&e<=t[1]&&n.push(i)},this),e.push({seriesId:i.id,dataIndex:n})},this),e},getVisualMeta:function(t){function" e(e,i){o.push({value:e,color:t(e,i)})}for(var i="Qy(0,0,this.getExtent()),n=Qy(0,0,this.option.range.slice()),o=[],a=0,r=0,s=n.length,l=i.length;r<l&&(!n.length||i[r]<=n[0]);r++)i[r]<n[a]&&e(i[r]," outofrange");for(u="1;a<s;a++,u=0)u&&o.length&&e(n[a]," outofrange"),e(n[a],"inrange");for(var"" u="1;r<l;r++)(!n.length||n[n.length-1]<i[r])&&(u&&(o.length&&e(o[o.length-1].value," outofrange"),u="0),e(i[r]," outofrange"));var"" h="o.length;return{stops:o,outerColors:[h?o[0].color:" transparent",h?o[h-1].color:"transparent"]}}}),oo="Fs({type:" visualmap",autopositionvalues:{left:1,right:1,top:1,bottom:1},init:function(t,e){this.ecmodel="t,this.api=e,this.visualMapModel},render:function(t,e,i,n){this.visualMapModel=t,!1!==t.get("show")?this.doRender.apply(this,arguments):this.group.removeAll()},renderBackground:function(t){var""" ym({z2:-1,silent:!0,shape:{x:n.x-i[3],y:n.y-i[0],width:n.width+i[3]+i[1],height:n.height+i[0]+i[2]},style:{fill:e.get("backgroundcolor"),stroke:e.get("bordercolor"),linewidth:e.get("borderwidth")}}))},getcontrollervisual:function(t,e,i){function n(t){return s[t]}function o(t,e){s[t]="e}var" a="(i=i||{}).forceState,r=this.visualMapModel,s={};if(" symbol"="==e&&(s.symbol=r.get(" itemsymbol")),"color"="==e){var""" l="r.get(" contentcolor");s.color="l}var" " d(cl.preparevisualtypes(u),function(a){var r="u[a];i.convertOpacityToAlpha&&" opacity"="==a&&(a=" coloralpha",r="u.__alphaForOpacity),cL.dependsOn(a,e)&&r&&r.applyVisual(t,n,o)}),s[e]},positionGroup:function(t){var""" t="this.visualMapModel,e=this.group;this._orient=t.get(" orient"),this._usehandle="t.get(" calculable"),this._resetinterval(),this._renderbar(e);var"" o="this.visualMapModel,a=o.get(" textgap"),r="o.itemSize,s=this._shapes.barGroup,l=this._applyTransform([r[0]/2,0===i?-a:r[1]+a],s),u=this._applyTransform(0===i?" bottom":"top",s),h="this._orient,c=this.visualMapModel.textStyleModel;this.group.add(new""" rm({style:{x:l[0],y:l[1],textverticalalign:"horizontal"="==h?" middle":u,textalign:"horizontal"="==h?u:" center",text:n,textfont:c.getfont(),textfill:c.gettextcolor()}}))}},_renderbar:function(t){var"" rm({draggable:!0,drift:a,onmousemove:function(t){mw(t.event)},ondragend:r,style:{x:0,y:0,text:"",textfont:l.getfont(),textfill:l.gettextcolor()}});this.group.add(u);var rm({silent:!0,invisible:!0,style:{x:0,y:0,text:"",textfont:a.getfont(),textfill:a.gettextcolor()}});this.group.add(r);var s="[" horizontal"="==n?i/2:GO+3,0],l=this._shapes;l.indicator=o,l.indicatorLabel=r,l.indicatorLabelPoint=s},_dragHandle:function(t,e,i,n){if(this._useHandle){if(this._dragging=!e,!e){var" tm(0,0,0,1,a),barpoints:s,handlescolor:[a[0].color,a[a.length-1].color]}},_makecolorgradient:function(t,e){var>t[1])break;i.push({color:this.getControllerVisual(a,"color",e),offset:o/100})}return i.push({color:this.getControllerVisual(t[1],"color",e),offset:1}),i},_createBarPoints:function(t,e){var i=this.visualMapModel.itemSize;return[[i[0]-e[0],t[0]],[i[0],t[0]],[i[0],t[1]],[i[0]-e[1],t[1]]]},_createBarGroup:function(t){var e=this._orient,i=this.visualMapModel.get("inverse");return new tb("horizontal"!==e||i?"horizontal"===e&&i?{scale:"bottom"===t?[-1,1]:[1,1],rotation:-Math.PI/2}:"vertical"!==e||i?{scale:"left"===t?[1,1]:[-1,1]}:{scale:"left"===t?[1,-1]:[-1,-1]}:{scale:"bottom"===t?[1,1]:[-1,1],rotation:Math.PI/2})},_updateHandle:function(t,e){if(this._useHandle){var i=this._shapes,n=this.visualMapModel,o=i.handleThumbs,a=i.handleLabels;RO([0,1],function(r){var s=o[r];s.setStyle("fill",e.handlesColor[r]),s.position[1]=t[r];var l=Ao(i.handleLabelPoints[r],To(s,this.group));a[r].setStyle({x:l[0],y:l[1],text:n.formatValueText(this._dataInterval[r]),textVerticalAlign:"middle",textAlign:this._applyTransform("horizontal"===this._orient?0===r?"bottom":"top":"left",i.barGroup)})},this)}},_showIndicator:function(t,e,i,n){var o=this.visualMapModel,a=o.getExtent(),r=o.itemSize,s=[0,r[1]],l=EO(t,a,s,!0),u=this._shapes,h=u.indicator;if(h){h.position[1]=l,h.attr("invisible",!1),h.setShape("points",ox(!!i,n,l,r[1]));var c={convertOpacityToAlpha:!0},d=this.getControllerVisual(t,"color",c);h.setStyle("fill",d);var f=Ao(u.indicatorLabelPoint,To(h,this.group)),p=u.indicatorLabel;p.attr("invisible",!1);var g=this._applyTransform("left",u.barGroup),m=this._orient;p.setStyle({text:(i||"")+o.formatValueText(e),textVerticalAlign:"horizontal"===m?g:"middle",textAlign:"horizontal"===m?"center":g,x:f[0],y:f[1]})}},_enableHoverLinkToSeries:function(){var t=this;this._shapes.barGroup.on("mousemove",function(e){if(t._hovering=!0,!t._dragging){var i=t.visualMapModel.itemSize,n=t._applyTransform([e.offsetX,e.offsetY],t._shapes.barGroup,!0,!0);n[1]=zO(BO(0,n[1]),i[1]),t._doHoverLinkToSeries(n[1],0<=n[0]&&n[0]<=i[0])}}).on("mouseout",function(){t._hovering=!1,!t._dragging&&t._clearhoverlinktoseries()})},_enablehoverlinkfromseries:function(){var t="this.api.getZr();this.visualMapModel.option.hoverLink?(t.on(" mouseover",this._hoverlinkfromseriesmouseover,this),t.on("mouseout",this._hideindicator,this)):this._clearhoverlinkfromseries()},_dohoverlinktoseries:function(t,e){var" i="this.visualMapModel,n=i.itemSize;if(i.option.hoverLink){var" o="[0,n[1]],a=i.getExtent();t=zO(BO(o[0],t),o[1]);var" r="ax(i,a,o),s=[t-r,t+r],l=EO(t,o,a,!0),u=[EO(s[0],o,a,!0),EO(s[1],o,a,!0)];s[0]<o[0]&&(u[0]=-1/0),s[1]">o[1]&&(u[1]=1/0),e&&(u[0]===-1/0?this._showIndicator(l,u[1],"< ",r):u[1]===1/0?this._showIndicator(l,u[0],"> ",r):this._showIndicator(l,l,"≈ ",r));var h=this._hoverLinkDataIndices,c=[];(e||rx(i))&&(c=this._hoverLinkDataIndices=i.findTargetDataIndices(u));var d=Ri(h,c);this._dispatchHighDown("downplay",ex(d[0])),this._dispatchHighDown("highlight",ex(d[1]))}},_hoverLinkFromSeriesMouseOver:function(t){var e=t.target,i=this.visualMapModel;if(e&&null!=e.dataIndex){var n=this.ecModel.getSeriesByIndex(e.seriesIndex);if(i.isTargetSeries(n)){var o=n.getData(e.dataType),a=o.get(i.getDataDimension(o),e.dataIndex,!0);isNaN(a)||this._showIndicator(a,a)}}},_hideIndicator:function(){var t=this._shapes;t.indicator&&t.indicator.attr("invisible",!0),t.indicatorLabel&&t.indicatorLabel.attr("invisible",!0)},_clearHoverLinkToSeries:function(){this._hideIndicator();var t=this._hoverLinkDataIndices;this._dispatchHighDown("downplay",ex(t)),t.length=0},_clearHoverLinkFromSeries:function(){this._hideIndicator();var t=this.api.getZr();t.off("mouseover",this._hoverLinkFromSeriesMouseOver),t.off("mouseout",this._hideIndicator)},_applyTransform:function(t,e,i,n){var o=To(e,n?null:this.group);return zM[y(t)?"applyTransform":"transformDirection"](t,o,i)},_dispatchHighDown:function(t,e){e&&e.length&&this.api.dispatchAction({type:t,batch:e})},dispose:function(){this._clearHoverLinkFromSeries(),this._clearHoverLinkToSeries()},remove:function(){this._clearHoverLinkFromSeries(),this._clearHoverLinkToSeries()}});Os({type:"selectDataRange",event:"dataRangeSelected",update:"update"},function(t,e){e.eachComponent({mainType:"visualMap",query:t},function(e){e.setSelected(t.selected)})}),Ps(_O);var WO=kO.extend({type:"visualMap.piecewise",defaultOption:{selected:null,minOpen:!1,maxOpen:!1,align:"auto",itemWidth:20,itemHeight:14,itemSymbol:"roundRect",pieceList:null,categories:null,splitNumber:5,selectedMode:"multiple",itemGap:10,hoverLink:!0,showLabel:null},optionUpdated:function(t,e){WO.superApply(this,"optionUpdated",arguments),this._pieceList=[],this.resetExtent();var n=this._mode=this._determineMode();HO[this._mode].call(this),this._resetSelected(t,e);var o=this.option.categories;this.resetVisual(function(t,e){"categories"===n?(t.mappingMethod="category",t.categories=i(o)):(t.dataExtent=this.getExtent(),t.mappingMethod="piecewise",t.pieceList=f(this._pieceList,function(t){var t=i(t);return"inRange"!==e&&(t.visual=null),t}))})},completeVisualOption:function(){function t(t,e,i){return t&&t[e]&&(w(t[e])?t[e].hasOwnProperty(i):t[e]===i)}var e=this.option,i={},n=cL.listVisualTypes(),o=this.isCategory();d(e.pieces,function(t){d(n,function(e){t.hasOwnProperty(e)&&(i[e]=1)})}),d(i,function(i,n){var a=0;d(this.stateList,function(i){a|=t(e,i,n)||t(e.target,i,n)},this),!a&&d(this.stateList,function(t){(e[t]||(e[t]={}))[n]=bO.get(n,"inRange"===t?"active":"inactive",o)})},this),kO.prototype.completeVisualOption.apply(this,arguments)},_resetSelected:function(t,e){var i=this.option,n=this._pieceList,o=(e?i:t).selected||{};if(i.selected=o,d(n,function(t,e){var i=this.getSelectedMapKey(t);o.hasOwnProperty(i)||(o[i]=!0)},this),"single"===i.selectedMode){var a=!1;d(n,function(t,e){var i=this.getSelectedMapKey(t);o[i]&&(a?o[i]=!1:a=!0)},this)}},getSelectedMapKey:function(t){return"categories"===this._mode?t.value+"":t.index+""},getPieceList:function(){return this._pieceList},_determineMode:function(){var t=this.option;return t.pieces&&t.pieces.length>0?"pieces":this.option.categories?"categories":"splitNumber"},setSelected:function(t){this.option.selected=i(t)},getValueState:function(t){var e=cL.findPieceIndex(t,this._pieceList);return null!=e&&this.option.selected[this.getSelectedMapKey(this._pieceList[e])]?"inRange":"outOfRange"},findTargetDataIndices:function(t){var e=[];return this.eachTargetSeries(function(i){var n=[],o=i.getData();o.each(this.getDataDimension(o),function(e,i){cL.findPieceIndex(e,this._pieceList)===t&&n.push(i)},this),e.push({seriesId:i.id,dataIndex:n})},this),e},getRepresentValue:function(t){var e;if(this.isCategory())e=t.value;else if(null!=t.value)e=t.value;else{var i=t.interval||[];e=i[0]===-1/0&&i[1]===1/0?0:(i[0]+i[1])/2}return e},getVisualMeta:function(t){function e(e,a){var r=o.getRepresentValue({interval:e});a||(a=o.getValueState(r));var s=t(r,a);e[0]===-1/0?n[0]=s:e[1]===1/0?n[1]=s:i.push({value:e[0],color:s},{value:e[1],color:s})}if(!this.isCategory()){var i=[],n=[],o=this,a=this._pieceList.slice();if(a.length){var r=a[0].interval[0];r!==-1/0&&a.unshift({interval:[-1/0,r]}),(r=a[a.length-1].interval[1])!==1/0&&a.push({interval:[r,1/0]})}else a.push({interval:[-1/0,1/0]});var s=-1/0;return d(a,function(t){var i=t.interval;i&&(i[0]>s&&e([s,i[0]],"outOfRange"),e(i.slice()),s=i[1])},this),{stops:i,outerColors:n}}}}),HO={splitNumber:function(){var t=this.option,e=this._pieceList,i=Math.min(t.precision,20),n=this.getExtent(),o=t.splitNumber;o=Math.max(parseInt(o,10),1),t.splitNumber=o;for(var a=(n[1]-n[0])/o;+a.toFixed(i)!==a&&i<5;)i++;t.precision=i,a=+a.tofixed(i);var r="0;t.minOpen&&e.push({index:r++,interval:[-1/0,n[0]],close:[0,0]});for(var" s="n[0],l=r+o;r<l;s+=a){var" u="r===o-1?n[1]:s+a;e.push({index:r++,interval:[s,u],close:[1,1]})}t.maxOpen&&e.push({index:r++,interval:[n[1],1/0],close:[0,0]}),$o(e),d(e,function(t){t.text=this.formatValueText(t.interval)},this)},categories:function(){var" t="this.option;d(t.categories,function(t){this._pieceList.push({text:this.formatValueText(t,!0),value:t})},this),lx(t,this._pieceList)},pieces:function(){var" n="{text:" ",index:i};if(null!="t.label&&(n.text=t.label),t.hasOwnProperty(" value")){var"" o="n.value=t.value;n.interval=[o,o],n.close=[1,1]}else{for(var" a="n.interval=[],r=n.close=[0,0],s=[1,0,1],l=[-1/0,1/0],u=[],h=0;h<2;h++){for(var" c="[[" gte","gt","min"],["lte","lt","max"]][h],d="0;d<3&&null==a[h];d++)a[h]=t[c[d]],r[h]=s[d],u[h]=2===d;null==a[h]&&(a[h]=l[h])}u[0]&&a[1]===1/0&&(r[0]=0),u[1]&&a[0]===-1/0&&(r[1]=0),a[0]===a[1]&&r[0]&&r[1]&&(n.value=a[0])}n.visual=cL.retrieveVisuals(t),e.push(n)},this),lx(t,e),$o(e),d(e,function(t){var" " e="t.close,i=[[" <","≤"][e[1]],["">","≥"][e[0]]];t.text=t.text||this.formatValueText(null!=t.value?t.value:t.interval,!1,i)},this)}};OO.extend({type:"visualMap.piecewise",doRender:function(){var t=this.group;t.removeAll();var e=this.visualMapModel,i=e.get("textGap"),n=e.textStyleModel,o=n.getFont(),a=n.getTextColor(),r=this._getItemAlign(),s=e.itemSize,l=this._getViewData(),u=l.endsText,h=T(e.get("showLabel",!0),!u);u&&this._renderEndsText(t,u[0],s,h,r),d(l.viewPieceList,function(n){var l=n.piece,u=new tb;u.onclick=m(this._onItemClick,this,l),this._enableHoverLink(u,n.indexInModelPieceList);var c=e.getRepresentValue(l);if(this._createItemSymbol(u,c,[0,0,s[0],s[1]]),h){var d=this.visualMapModel.getValueState(c);u.add(new rM({style:{x:"right"===r?-i:s[0]+i,y:s[1]/2,text:l.text,textVerticalAlign:"middle",textAlign:r,textFont:o,textFill:a,opacity:"outOfRange"===d?.5:1}}))}t.add(u)},this),u&&this._renderEndsText(t,u[1],s,h,r),rI(e.get("orient"),t,e.get("itemGap")),this.renderBackground(t),this.positionGroup(t)},_enableHoverLink:function(t,e){function i(t){var i=this.visualMapModel;i.option.hoverLink&&this.api.dispatchAction({type:t,batch:ex(i.findTargetDataIndices(e))})}t.on("mouseover",m(i,this,"highlight")).on("mouseout",m(i,this,"downplay"))},_getItemAlign:function(){var t=this.visualMapModel,e=t.option;if("vertical"===e.orient)return tx(t,this.api,t.itemSize);var i=e.align;return i&&"auto"!==i||(i="left"),i},_renderEndsText:function(t,e,i,n,o){if(e){var a=new tb,r=this.visualMapModel.textStyleModel;a.add(new rM({style:{x:n?"right"===o?i[0]:0:i[0]/2,y:i[1]/2,textVerticalAlign:"middle",textAlign:n?o:"center",text:e,textFont:r.getFont(),textFill:r.getTextColor()}})),t.add(a)}},_getViewData:function(){var t=this.visualMapModel,e=f(t.getPieceList(),function(t,e){return{piece:t,indexInModelPieceList:e}}),i=t.get("text"),n=t.get("orient"),o=t.get("inverse");return("horizontal"===n?o:!o)?e.reverse():i&&(i=i.slice().reverse()),{viewPieceList:e,endsText:i}},_createItemSymbol:function(t,e,i){t.add($l(this.getControllerVisual(e,"symbol"),i[0],i[1],i[2],i[3],this.getControllerVisual(e,"color")))},_onItemClick:function(t){var e=this.visualMapModel,n=e.option,o=i(n.selected),a=e.getSelectedMapKey(t);"single"===n.selectedMode?(o[a]=!0,d(o,function(t,e){o[e]=e===a})):o[a]=!o[a],this.api.dispatchAction({type:"selectDataRange",from:this.uid,visualMapId:this.visualMapModel.id,selected:o})}});Ps(_O);var ZO=Qo,UO=ea,XO=Gs({type:"marker",dependencies:["series","grid","polar","geo"],init:function(t,e,i,n){this.mergeDefaultAndTheme(t,i),this.mergeOption(t,i,n.createdBySelf,!0)},isAnimationEnabled:function(){if(U_.node)return!1;var t=this.__hostSeries;return this.getShallow("animation")&&t&&t.isAnimationEnabled()},mergeOption:function(t,e,i,n){var o=this.constructor,r=this.mainType+"Model";i||e.eachSeries(function(t){var i=t.get(this.mainType,!0),s=t[r];i&&i.data?(s?s.mergeOption(i,e,!0):(n&&ux(i),d(i.data,function(t){t instanceof Array?(ux(t[0]),ux(t[1])):ux(t)}),a(s=new o(i,this,e),{mainType:this.mainType,seriesIndex:t.seriesIndex,name:t.name,createdBySelf:!0}),s.__hostSeries=t),t[r]=s):t[r]=null},this)},formatTooltip:function(t){var e=this.getData(),i=this.getRawValue(t),n=y(i)?f(i,ZO).join(", "):ZO(i),o=e.getName(t),a=UO(this.name);return(null!=i||o)&&(a+="<br>"),o&&(a+=UO(o),null!=i&&(a+=" : ")),null!=i&&(a+=UO(n)),a},getData:function(){return this._data},setData:function(t){this._data=t}});h(XO,UI),XO.extend({type:"markPoint",defaultOption:{zlevel:0,z:5,symbol:"pin",symbolSize:50,tooltip:{trigger:"item"},label:{show:!0,position:"inside"},itemStyle:{borderWidth:2},emphasis:{label:{show:!0}}}});var jO=l,YO=v,qO={min:YO(dx,"min"),max:YO(dx,"max"),average:YO(dx,"average")},KO=Fs({type:"marker",init:function(){this.markerGroupMap=R()},render:function(t,e,i){var n=this.markerGroupMap;n.each(function(t){t.__keep=!1});var o=this.type+"Model";e.eachSeries(function(t){var n=t[o];n&&this.renderSeries(t,n,e,i)},this),n.each(function(t){!t.__keep&&this.group.remove(t.group)},this)},renderSeries:function(){}});KO.extend({type:"markPoint",updateTransform:function(t,e,i){e.eachSeries(function(t){var e=t.markPointModel;e&&(xx(e.getData(),t,i),this.markerGroupMap.get(t.id).updateLayout(e))},this)},renderSeries:function(t,e,i,n){var o=t.coordinateSystem,a=t.id,r=t.getData(),s=this.markerGroupMap,l=s.get(a)||s.set(a,new Au),u=_x(o,t,e);e.setData(u),xx(e.getData(),t,n),u.each(function(t){var i=u.getItemModel(t),n=i.getShallow("symbolSize");"function"==typeof n&&(n=n(e.getRawValue(t),e.getDataParams(t))),u.setItemVisual(t,{symbolSize:n,color:i.get("itemStyle.color")||r.getVisual("color"),symbol:i.getShallow("symbol")})}),l.updateData(u),this.group.add(l.group),u.eachItemGraphicEl(function(t){t.traverse(function(t){t.dataModel=e})}),l.__keep=!0,l.group.silent=e.get("silent")||t.get("silent")}}),Ps(function(t){t.markPoint=t.markPoint||{}}),XO.extend({type:"markLine",defaultOption:{zlevel:0,z:5,symbol:["circle","arrow"],symbolSize:[8,16],precision:2,tooltip:{trigger:"item"},label:{show:!0,position:"end"},lineStyle:{type:"dashed"},emphasis:{label:{show:!0},lineStyle:{width:3}},animationEasing:"linear"}});var $O=function(t,e,o,r){var s=t.getData(),l=r.type;if(!y(r)&&("min"===l||"max"===l||"average"===l||"median"===l||null!=r.xAxis||null!=r.yAxis)){var u,h;if(null!=r.yAxis||null!=r.xAxis)u=null!=r.yAxis?"y":"x",e.getAxis(u),h=T(r.yAxis,r.xAxis);else{var c=px(r,s,e,t);u=c.valueDataDim,c.valueAxis,h=yx(s,u,l)}var d="x"===u?0:1,f=1-d,p=i(r),g={};p.type=null,p.coord=[],g.coord=[],p.coord[f]=-1/0,g.coord[f]=1/0;var m=o.get("precision");m>=0&&"number"==typeof h&&(h=+h.toFixed(Math.min(m,20))),p.coord[d]=g.coord[d]=h,r=[p,g,{type:l,valueIndex:r.valueIndex,value:h}]}return r=[fx(t,r[0]),fx(t,r[1]),a({},r[2])],r[2].type=r[2].type||"",n(r[2],r[0]),n(r[2],r[1]),r};KO.extend({type:"markLine",updateTransform:function(t,e,i){e.eachSeries(function(t){var e=t.markLineModel;if(e){var n=e.getData(),o=e.__from,a=e.__to;o.each(function(e){Ix(o,e,!0,t,i),Ix(a,e,!1,t,i)}),n.each(function(t){n.setItemLayout(t,[o.getItemLayout(t),a.getItemLayout(t)])}),this.markerGroupMap.get(t.id).updateLayout()}},this)},renderSeries:function(t,e,i,n){function o(e,i,o){var a=e.getItemModel(i);Ix(e,i,o,t,n),e.setItemVisual(i,{symbolSize:a.get("symbolSize")||g[o?0:1],symbol:a.get("symbol",!0)||p[o?0:1],color:a.get("itemStyle.color")||s.getVisual("color")})}var a=t.coordinateSystem,r=t.id,s=t.getData(),l=this.markerGroupMap,u=l.get(r)||l.set(r,new rf);this.group.add(u.group);var h=Tx(a,t,e),c=h.from,d=h.to,f=h.line;e.__from=c,e.__to=d,e.setData(f);var p=e.get("symbol"),g=e.get("symbolSize");y(p)||(p=[p,p]),"number"==typeof g&&(g=[g,g]),h.from.each(function(t){o(c,t,!0),o(d,t,!1)}),f.each(function(t){var e=f.getItemModel(t).get("lineStyle.color");f.setItemVisual(t,{color:e||c.getItemVisual(t,"color")}),f.setItemLayout(t,[c.getItemLayout(t),d.getItemLayout(t)]),f.setItemVisual(t,{fromSymbolSize:c.getItemVisual(t,"symbolSize"),fromSymbol:c.getItemVisual(t,"symbol"),toSymbolSize:d.getItemVisual(t,"symbolSize"),toSymbol:d.getItemVisual(t,"symbol")})}),u.updateData(f),h.line.eachItemGraphicEl(function(t,i){t.traverse(function(t){t.dataModel=e})}),u.__keep=!0,u.group.silent=e.get("silent")||t.get("silent")}}),Ps(function(t){t.markLine=t.markLine||{}}),XO.extend({type:"markArea",defaultOption:{zlevel:0,z:1,tooltip:{trigger:"item"},animation:!1,label:{show:!0,position:"top"},itemStyle:{borderWidth:0},emphasis:{label:{show:!0,position:"top"}}}});var JO=function(t,e,i,n){var a=fx(t,n[0]),r=fx(t,n[1]),s=T,l=a.coord,u=r.coord;l[0]=s(l[0],-1/0),l[1]=s(l[1],-1/0),u[0]=s(u[0],1/0),u[1]=s(u[1],1/0);var h=o([{},a,r]);return h.coord=[a.coord,r.coord],h.x0=a.x,h.y0=a.y,h.x1=r.x,h.y1=r.y,h},QO=[["x0","y0"],["x1","y0"],["x1","y1"],["x0","y1"]];KO.extend({type:"markArea",updateTransform:function(t,e,i){e.eachSeries(function(t){var e=t.markAreaModel;if(e){var n=e.getData();n.each(function(e){var o=f(QO,function(o){return Lx(n,e,o,t,i)});n.setItemLayout(e,o),n.getItemGraphicEl(e).setShape("points",o)})}},this)},renderSeries:function(t,e,i,n){var o=t.coordinateSystem,a=t.id,s=t.getData(),l=this.markerGroupMap,u=l.get(a)||l.set(a,{group:new tb});this.group.add(u.group),u.__keep=!0;var h=kx(o,t,e);e.setData(h),h.each(function(e){h.setItemLayout(e,f(QO,function(i){return Lx(h,e,i,t,n)})),h.setItemVisual(e,{color:s.getVisual("color")})}),h.diff(u.__data).add(function(t){var e=new pM({shape:{points:h.getItemLayout(t)}});h.setItemGraphicEl(t,e),u.group.add(e)}).update(function(t,i){var n=u.__data.getItemGraphicEl(i);Mo(n,{shape:{points:h.getItemLayout(t)}},e,t),u.group.add(n),h.setItemGraphicEl(t,n)}).remove(function(t){var e=u.__data.getItemGraphicEl(t);u.group.remove(e)}).execute(),h.eachItemGraphicEl(function(t,i){var n=h.getItemModel(i),o=n.getModel("label"),a=n.getModel("emphasis.label"),s=h.getItemVisual(i,"color");t.useStyle(r(n.getModel("itemStyle").getItemStyle(),{fill:Yt(s,.4),stroke:s})),t.hoverStyle=n.getModel("emphasis.itemStyle").getItemStyle(),po(t.style,t.hoverStyle,o,a,{labelFetcher:e,labelDataIndex:i,defaultText:h.getName(i)||"",isRectText:!0,autoColor:s}),co(t,{}),t.dataModel=e}),u.__data=h,u.group.silent=e.get("silent")||t.get("silent")}}),Ps(function(t){t.markArea=t.markArea||{}});uI.registerSubTypeDefaulter("timeline",function(){return"slider"}),Os({type:"timelineChange",event:"timelineChanged",update:"prepareAndUpdate"},function(t,e){var i=e.getComponent("timeline");return i&&null!=t.currentIndex&&(i.setCurrentIndex(t.currentIndex),!i.get("loop",!0)&&i.isIndexMax()&&i.setPlayState(!1)),e.resetOption("timeline"),r({currentIndex:i.option.currentIndex},t)}),Os({type:"timelinePlayChange",event:"timelinePlayChanged",update:"update"},function(t,e){var i=e.getComponent("timeline");i&&null!=t.playState&&i.setPlayState(t.playState)});var tE=uI.extend({type:"timeline",layoutMode:"box",defaultOption:{zlevel:0,z:4,show:!0,axisType:"time",realtime:!0,left:"20%",top:null,right:"20%",bottom:0,width:null,height:40,padding:5,controlPosition:"left",autoPlay:!1,rewind:!1,loop:!0,playInterval:2e3,currentIndex:0,itemStyle:{},label:{color:"#000"},data:[]},init:function(t,e,i){this._data,this._names,this.mergeDefaultAndTheme(t,i),this._initData()},mergeOption:function(t){tE.superApply(this,"mergeOption",arguments),this._initData()},setCurrentIndex:function(t){null==t&&(t=this.option.currentIndex);var e=this._data.count();this.option.loop?t=(t%e+e)%e:(t>=e&&(t=e-1),t<0&&(t=0)),this.option.currentindex=t},getcurrentindex:function(){return this.option.currentindex},isindexmax:function(){return this.getcurrentindex()>=this._data.count()-1},setPlayState:function(t){this.option.autoPlay=!!t},getPlayState:function(){return!!this.option.autoPlay},_initData:function(){var t=this.option,e=t.data||[],n=t.axisType,o=this._names=[];if("category"===n){var a=[];d(e,function(t,e){var n,r=Li(t);w(t)?(n=i(t)).value=e:n=e,a.push(n),_(r)||null!=r&&!isNaN(r)||(r=""),o.push(r+"")}),e=a}var r={category:"ordinal",time:"time"}[n]||"number";(this._data=new yA([{name:"value",type:r}],this)).initData(e,o)},getData:function(){return this._data},getCategories:function(){if("category"===this.get("axisType"))return this._names.slice()}});h(tE.extend({type:"timeline.slider",defaultOption:{backgroundColor:"rgba(0,0,0,0)",borderColor:"#ccc",borderWidth:0,orient:"horizontal",inverse:!1,tooltip:{trigger:"item"},symbol:"emptyCircle",symbolSize:10,lineStyle:{show:!0,width:2,color:"#304654"},label:{position:"auto",show:!0,interval:"auto",rotate:0,color:"#304654"},itemStyle:{color:"#304654",borderWidth:1},checkpointStyle:{symbol:"circle",symbolSize:13,color:"#c23531",borderWidth:5,borderColor:"rgba(194,53,49, 0.5)",animation:!0,animationDuration:300,animationEasing:"quinticInOut"},controlStyle:{show:!0,showPlayBtn:!0,showPrevBtn:!0,showNextBtn:!0,itemSize:22,itemGap:12,position:"left",playIcon:"path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",stopIcon:"path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",nextIcon:"path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z",prevIcon:"path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z",color:"#304654",borderColor:"#304654",borderWidth:1},emphasis:{label:{show:!0,color:"#c23531"},itemStyle:{color:"#c23531"},controlStyle:{color:"#c23531",borderColor:"#c23531",borderWidth:2}},data:[]}}),UI);var eE=KI.extend({type:"timeline"}),iE=function(t,e,i,n){rD.call(this,t,e,i),this.type=n||"value",this.model=null};iE.prototype={constructor:iE,getLabelModel:function(){return this.model.getModel("label")},isHorizontal:function(){return"horizontal"===this.model.get("orient")}},u(iE,rD);var nE=m,oE=d,aE=Math.PI;eE.extend({type:"timeline.slider",init:function(t,e){this.api=e,this._axis,this._viewRect,this._timer,this._currentPointer,this._mainGroup,this._labelGroup},render:function(t,e,i,n){if(this.model=t,this.api=i,this.ecModel=e,this.group.removeAll(),t.get("show",!0)){var o=this._layout(t,i),a=this._createGroup("mainGroup"),r=this._createGroup("labelGroup"),s=this._axis=this._createAxis(o,t);t.formatTooltip=function(t){return ea(s.scale.getLabel(t))},oE(["AxisLine","AxisTick","Control","CurrentPointer"],function(e){this["_render"+e](o,a,s,t)},this),this._renderAxisLabel(o,r,s,t),this._position(o,t)}this._doPlayStop()},remove:function(){this._clearTimer(),this.group.removeAll()},dispose:function(){this._clearTimer()},_layout:function(t,e){var i=t.get("label.position"),n=t.get("orient"),o=Ex(t,e);null==i||"auto"===i?i="horizontal"===n?o.y+o.height/2<e.getheight() 2?"-":"+":o.x+o.width 2<e.getwidth() 2?"+":"-":isnan(i)&&(i="{horizontal:{top:" -",bottom:"+"},vertical:{left:"-",right:"+"}}[n][i]);var" a="{horizontal:" center",vertical:i">=0||"+"===i?"left":"right"},r={horizontal:i>=0||"+"===i?"top":"bottom",vertical:"middle"},s={horizontal:0,vertical:aE/2},l="vertical"===n?o.height:o.width,u=t.getModel("controlStyle"),h=u.get("show",!0),c=h?u.get("itemSize"):0,d=h?u.get("itemGap"):0,f=c+d,p=t.get("label.rotate")||0;p=p*aE/180;var g,m,v,y,x=u.get("position",!0),_=h&&u.get("showPlayBtn",!0),w=h&&u.get("showPrevBtn",!0),b=h&&u.get("showNextBtn",!0),S=0,M=l;return"left"===x||"bottom"===x?(_&&(g=[0,0],S+=f),w&&(m=[S,0],S+=f),b&&(v=[M-c,0],M-=f)):(_&&(g=[M-c,0],M-=f),w&&(m=[0,0],S+=f),b&&(v=[M-c,0],M-=f)),y=[S,M],t.get("inverse")&&y.reverse(),{viewRect:o,mainLength:l,orient:n,rotation:s[n],labelRotation:p,labelPosOpt:i,labelAlign:t.get("label.align")||a[n],labelBaseline:t.get("label.verticalAlign")||t.get("label.baseline")||r[n],playPosition:g,prevBtnPosition:m,nextBtnPosition:v,axisExtent:y,controlSize:c,controlGap:d}},_position:function(t,e){function i(t){var e=t.position;t.origin=[c[0][0]-e[0],c[1][0]-e[1]]}function n(t){return[[t.x,t.x+t.width],[t.y,t.y+t.height]]}function o(t,e,i,n,o){t[n]+=i[n][o]-e[n][o]}var a=this._mainGroup,r=this._labelGroup,s=t.viewRect;if("vertical"===t.orient){var l=xt(),u=s.x,h=s.y+s.height;St(l,l,[-u,-h]),Mt(l,l,-aE/2),St(l,l,[u,h]),(s=s.clone()).applyTransform(l)}var c=n(s),d=n(a.getBoundingRect()),f=n(r.getBoundingRect()),p=a.position,g=r.position;g[0]=p[0]=c[0][0];var m=t.labelPosOpt;if(isNaN(m))o(p,d,c,1,v="+"===m?0:1),o(g,f,c,1,1-v);else{var v=m>=0?0:1;o(p,d,c,1,v),g[1]=p[1]+m}a.attr("position",p),r.attr("position",g),a.rotation=r.rotation=t.rotation,i(a),i(r)},_createAxis:function(t,e){var i=e.getData(),n=e.get("axisType"),o=Wl(e,n);o.getTicks=function(){return i.mapArray(["value"],function(t){return t})};var a=i.getDataExtent("value");o.setExtent(a[0],a[1]),o.niceTicks();var r=new iE("value",o,t.axisExtent,n);return r.model=e,r},_createGroup:function(t){var e=this["_"+t]=new tb;return this.group.add(e),e},_renderAxisLine:function(t,e,i,n){var o=i.getExtent();n.get("lineStyle.show")&&e.add(new _M({shape:{x1:o[0],y1:0,x2:o[1],y2:0},style:a({lineCap:"round"},n.getModel("lineStyle").getLineStyle()),silent:!0,z2:1}))},_renderAxisTick:function(t,e,i,n){var o=n.getData(),a=i.scale.getTicks();oE(a,function(t){var a=i.dataToCoord(t),r=o.getItemModel(t),s=r.getModel("itemStyle"),l=r.getModel("emphasis.itemStyle"),u={position:[a,0],onclick:nE(this._changeTimeline,this,t)},h=zx(r,s,e,u);co(h,l.getItemStyle()),r.get("tooltip")?(h.dataIndex=t,h.dataModel=n):h.dataIndex=h.dataModel=null},this)},_renderAxisLabel:function(t,e,i,n){if(i.getLabelModel().get("show")){var o=n.getData(),a=i.getViewLabels();oE(a,function(n){var a=n.tickValue,r=o.getItemModel(a),s=r.getModel("label"),l=r.getModel("emphasis.label"),u=i.dataToCoord(n.tickValue),h=new rM({position:[u,0],rotation:t.labelRotation-t.rotation,onclick:nE(this._changeTimeline,this,a),silent:!1});go(h.style,s,{text:n.formattedLabel,textAlign:t.labelAlign,textVerticalAlign:t.labelBaseline}),e.add(h),co(h,go({},l))},this)}},_renderControl:function(t,e,i,n){function o(t,i,o,h){if(t){var c=Rx(n,i,u,{position:t,origin:[a/2,0],rotation:h?-r:0,rectHover:!0,style:s,onclick:o});e.add(c),co(c,l)}}var a=t.controlSize,r=t.rotation,s=n.getModel("controlStyle").getItemStyle(),l=n.getModel("emphasis.controlStyle").getItemStyle(),u=[0,-a/2,a,a],h=n.getPlayState(),c=n.get("inverse",!0);o(t.nextBtnPosition,"controlStyle.nextIcon",nE(this._changeTimeline,this,c?"-":"+")),o(t.prevBtnPosition,"controlStyle.prevIcon",nE(this._changeTimeline,this,c?"+":"-")),o(t.playPosition,"controlStyle."+(h?"stopIcon":"playIcon"),nE(this._handlePlayClick,this,!h),!0)},_renderCurrentPointer:function(t,e,i,n){var o=n.getData(),a=n.getCurrentIndex(),r=o.getItemModel(a).getModel("checkpointStyle"),s=this,l={onCreate:function(t){t.draggable=!0,t.drift=nE(s._handlePointerDrag,s),t.ondragend=nE(s._handlePointerDragend,s),Bx(t,a,i,n,!0)},onUpdate:function(t){Bx(t,a,i,n)}};this._currentPointer=zx(r,r,this._mainGroup,{},this._currentPointer,l)},_handlePlayClick:function(t){this._clearTimer(),this.api.dispatchAction({type:"timelinePlayChange",playState:t,from:this.uid})},_handlePointerDrag:function(t,e,i){this._clearTimer(),this._pointerChangeTimeline([i.offsetX,i.offsetY])},_handlePointerDragend:function(t){this._pointerChangeTimeline([t.offsetX,t.offsetY],!0)},_pointerChangeTimeline:function(t,e){var i=this._toAxisCoord(t)[0],n=Go(this._axis.getExtent().slice());i>n[1]&&(i=n[1]),i<n[0]&&(i=n[0]),this._currentpointer.position[0]=i,this._currentpointer.dirty();var o="this._findNearestTick(i),a=this.model;(e||o!==a.getCurrentIndex()&&a.get(" realtime"))&&this._changetimeline(o)},_doplaystop:function(){this._cleartimer(),this.model.getplaystate()&&(this._timer="setTimeout(nE(function(){var" " t="this.model;this._changeTimeline(t.getCurrentIndex()+(t.get(" rewind",!0)?-1:1))},this),this.model.get("playinterval")))},_toaxiscoord:function(t){return" ao(t,this._maingroup.getlocaltransform(),!0)},_findnearesttick:function(t){var e,i="this.model.getData(),n=1/0,o=this._axis;return" i.each(["value"],function(i,a){var r="o.dataToCoord(i),s=Math.abs(r-t);s<n&&(n=s,e=a)}),e},_clearTimer:function(){this._timer&&(clearTimeout(this._timer),this._timer=null)},_changeTimeline:function(t){var" e="this.model.getCurrentIndex();" +"="==t?t=e+1:" -"="==t&&(t=e-1),this.api.dispatchAction({type:"timelineChange",currentIndex:t,from:this.uid})}}),Ps(function(t){var""" re="Gs({type:" toolbox",layoutmode:{type:"box",ignoresize:!0},optionupdated:function(){re.superapply(this,"optionupdated",arguments),d(this.option.feature,function(t,e){var" i="Ay(e);i&&n(t,i.defaultOption)})},defaultOption:{show:!0,z:6,zlevel:0,orient:" horizontal",left:"right",top:"top",backgroundcolor:"transparent",bordercolor:"#ccc",borderradius:0,borderwidth:0,padding:5,itemsize:15,itemgap:8,showtitle:!0,iconstyle:{bordercolor:"#666",color:"none"},emphasis:{iconstyle:{bordercolor:"#3e98c5"}}}});fs({type:"toolbox",render:function(t,e,i,n){function" o(o,r){var s,c="h[o],d=h[r],f=new" po(l[c],t,t.ecmodel);if(c&&!d){if(vx(c))s="{model:f,onclick:f.option.onclick,featureName:c};else{var" p="Ay(c);if(!p)return;s=new" p(f,e,i)}u[c]="s}else{if(!(s=u[d]))return;s.model=f,s.ecModel=e,s.api=i}c||!d?f.get(" show")&&!s.unusable?(a(f,s,c),f.seticonstatus="function(t,e){var" a(n,o,a){var l="n.getModel(" iconstyle"),u="n.getModel(" emphasis.iconstyle"),h="o.getIcons?o.getIcons():n.get("icon"),c=n.get("title")||{};if("string"==typeof""" h){var f="h,p=c;c={},(h={})[a]=f,c[a]=p}var" g="n.iconPaths={};d(h,function(a,h){var" d="ko(a,{},{x:-s/2,y:-s/2,width:s,height:s});d.setStyle(l.getItemStyle()),d.hoverStyle=u.getItemStyle(),co(d),t.get(" showtitle")&&(d.__title="c[h],d.on(" mouseover",function(){var"" s="+t.get(" itemsize"),l="t.get(" feature")||{},u="this._features||(this._features={}),h=[];d(l,function(t,e){h.push(e)}),new""" us(this._featurenames||[],h).add(o).update(o).remove(v(o,null)).execute(),this._featurenames="h,_v(r,t,i),r.add(wv(r.getBoundingRect(),t)),r.eachChild(function(t){var">i.getHeight()&&(n.textPosition="top",l=!0);var u=l?-5-o.height:s+8;a+o.width/2>i.getWidth()?(n.textPosition=["100%",u],n.textAlign="right"):a-o.width/2<0&&(n.textposition=[0,u],n.textalign="left")}})}},updateview:function(t,e,i,n){d(this._features,function(t){t.updateview&&t.updateview(t.model,e,i,n)})},remove:function(t,e){d(this._features,function(i){i.remove&&i.remove(t,e)}),this.group.removeall()},dispose:function(t,e){d(this._features,function(i){i.dispose&&i.dispose(t,e)})}});var se="sT.toolbox.saveAsImage;Gx.defaultOption={show:!0,icon:" m4.7,22.9l29.3,45.5l54.7,23.4m4.6,43.6l4.6,58l53.8,58l53.8,43.6m29.2,45.1l29.2,0",title:se.title,type:"png",name:"",excludecomponents:["toolbox"],pixelratio:1,lang:se.lang.slice()},gx.prototype.unusable="!U_.canvasSupported,Gx.prototype.onclick=function(t,e){var" " i="this.model,n=i.get(" name")||t.get("title.0.text")||"echarts",o="document.createElement(" a"),a="i.get("type",!0)||"png";o.download=n+"."+a,o.target="_blank";var""" r="e.getConnectedDataURL({type:a,backgroundColor:i.get(" backgroundcolor",!0)||t.get("backgroundcolor")||"#fff",excludecomponents:i.get("excludecomponents"),pixelratio:i.get("pixelratio")});if(o.href="r," function"!="typeof""" mouseevent||u_.browser.ie||u_.browser.edge)if(window.navigator.mssaveoropenblob){for(var s="atob(r.split(" ,")[1]),l="s.length,u=new" uint8array(l);l--;)u[l]="s.charCodeAt(l);var" h="new" blob([u]);window.navigator.mssaveoropenblob(h,n+"."+a)}else{var c="i.get(" lang"),d="<body" style="margin:0;"><img src +r+'" style="max-width:100%;" title="'+(c&&c[0]||" ")+'">';window.open().document.write(d)}else{var f=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!1});o.dispatchEvent(f)}},Ty("saveAsImage",Gx);var lE=sT.toolbox.magicType;Fx.defaultOption={show:!0,type:[],icon:{line:"M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",bar:"M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",stack:"M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z",tiled:"M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z"},title:i(lE.title),option:{},seriesIndex:{}};var uE=Fx.prototype;uE.getIcons=function(){var t=this.model,e=t.get("icon"),i={};return d(t.get("type"),function(t){e[t]&&(i[t]=e[t])}),i};var hE={line:function(t,e,i,o){if("bar"===t)return n({id:e,type:"line",data:i.get("data"),stack:i.get("stack"),markPoint:i.get("markPoint"),markLine:i.get("markLine")},o.get("option.line")||{},!0)},bar:function(t,e,i,o){if("line"===t)return n({id:e,type:"bar",data:i.get("data"),stack:i.get("stack"),markPoint:i.get("markPoint"),markLine:i.get("markLine")},o.get("option.bar")||{},!0)},stack:function(t,e,i,o){if("line"===t||"bar"===t)return n({id:e,stack:"__ec_magicType_stack__"},o.get("option.stack")||{},!0)},tiled:function(t,e,i,o){if("line"===t||"bar"===t)return n({id:e,stack:""},o.get("option.tiled")||{},!0)}},cE=[["line","bar"],["stack","tiled"]];uE.onclick=function(t,e,i){var n=this.model,o=n.get("seriesIndex."+i);if(hE[i]){var a={series:[]};d(cE,function(t){l(t,i)>=0&&d(t,function(t){n.setIconStatus(t,"normal")})}),n.setIconStatus(i,"emphasis"),t.eachComponent({mainType:"series",query:null==o?null:{seriesIndex:o}},function(e){var o=e.subType,s=e.id,l=hE[i](o,s,e,n);l&&(r(l,e.option),a.series.push(l));var u=e.coordinateSystem;if(u&&"cartesian2d"===u.type&&("line"===i||"bar"===i)){var h=u.getAxesByScale("ordinal")[0];if(h){var c=h.dim+"Axis",d=t.queryComponents({mainType:c,index:e.get(name+"Index"),id:e.get(name+"Id")})[0].componentIndex;a[c]=a[c]||[];for(var f=0;f<=d;f++)a[c][d]=a[c][d]||{};a[c][d].boundarygap="bar"===i}}}),e.dispatchaction({type:"changemagictype",currenttype:i,newoption:a})}},os({type:"changemagictype",event:"magictypechanged",update:"prepareandupdate"},function(t,e){e.mergeoption(t.newoption)}),ty("magictype",fx);var de="sT.toolbox.dataView,fE=new" array(60).join("-"),pe="\t" ,ge="new" regexp("["+pe+"]+","g");$x.defaultoption="{show:!0,readOnly:!1,optionToContent:null,contentToOption:null,icon:" m17.5,17.3h33" m17.5,17.3h33 m45.4,29.5h-28 m11.5,2v56h51v14.8l38.4,2h11.5z m38.4,2.2v12.7h51 m45.4,41.7h-28",title:i(de.title),lang:i(de.lang),backgroundcolor:"#fff",textcolor:"#000",textareacolor:"#fff",textareabordercolor:"#333",buttoncolor:"#c23531",buttontextcolor:"#fff"},$x.prototype.onclick="function(t,e){function" i(){n.removechild(a),x._dom="null}var" n="e.getDom(),o=this.model;this._dom&&n.removeChild(this._dom);var" a="document.createElement(" div");a.style.csstext="position:absolute;left:5px;top:5px;bottom:5px;right:5px;" ,a.style.backgroundcolor="o.get(" backgroundcolor")||"#fff";var"" r="document.createElement(" h4"),s="o.get(" lang")||[];r.innerhtml="s[0]||o.get("title"),r.style.cssText="margin:""" 10px 20px;",r.style.color="o.get(" textcolor");var" l="document.createElement(" div"),u="document.createElement(" textarea");l.style.csstext="display:block;width:100%;overflow:auto;" ;var"" h="o.get(" optiontocontent"),c="o.get(" contenttooption"),d="Ux(t);if("function"==typeof""" h){var f="h(e.getOption());" string"="=typeof" " f?l.innerhtml="f:M(f)&&l.appendChild(f)}else" l.appendchild(u),u.readonly="o.get(" readonly"),u.style.csstext="width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;" ,u.style.color="o.get(" textcolor"),u.style.bordercolor="o.get("textareaBorderColor"),u.style.backgroundColor=o.get("textareaColor"),u.value=d.value;var""" p="d.meta,g=document.createElement(" div");g.style.csstext="position:absolute;bottom:0;left:0;right:0;" ;var" m="float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px" ,v="document.createElement(" div"),y="document.createElement(" div");m+=";background-color:" +o.get("buttoncolor"),m+=";color:" +o.get("buttontextcolor");var"" x="this;ht(v," click",i),ht(y,"click",function(){var" t;try{t="function" =="typeof" c?c(l,e.getoption()):kx(u.value,p)}catch(t){throw i(),new error("data view format error "+t)}t&&e.dispatchaction({type:"changedataview",newoption:t}),i()}),v.innerhtml="s[1],y.innerHTML=s[2],y.style.cssText=m,v.style.cssText=m,!o.get(" readonly")&&g.appendchild(y),g.appendchild(v),ht(u,"keydown",function(t){if(9="==(t.keyCode||t.which)){var" e="this.value,i=this.selectionStart,n=this.selectionEnd;this.value=e.substring(0,i)+pE+e.substring(n),this.selectionStart=this.selectionEnd=i+1,mw(t)}}),a.appendChild(r),a.appendChild(l),a.appendChild(g),l.style.height=n.clientHeight-80+" px",n.appendchild(a),this._dom="a},$x.prototype.remove=function(t,e){this._dom&&e.getDom().removeChild(this._dom)},$x.prototype.dispose=function(t,e){this.remove(t,e)},Ty(" dataview",$x),os({type:"changedataview",event:"dataviewchanged",update:"prepareandupdate"},function(t,e){var"" i="[];d(t.newOption.series,function(t){var" o="n.get(" data");i.push({name:t.name,data:jx(t.data,o)})}else" i.push(a({type:"scatter"},t))}),e.mergeoption(r({series:i},t.newoption))});var me="d,vE=" \0_ec_hist_store";no.extend({type:"datazoom.select"}),oo.extend({type:"datazoom.select"});var" ye="sT.toolbox.dataZoom,xE=d,_E=" \0_ec_\0toolbox-datazoom_";o_.defaultoption="{show:!0,icon:{zoom:" m0,13.5h26.9"" m13.5,26.9v0 m32.1,13.5h58v58h13.5 v32.1",back:"m22,1.4l9.9,13.5l12.3,12.3 m10.3,13.5h54.9v44.6 h10.3v-26"},title:i(ye.title)};var we="o_.prototype;wE.render=function(t,e,i,n){this.model=t,this.ecModel=e,this.api=i,s_(t,e,this,n,i),r_(t,e)},wE.onclick=function(t,e,i){bE[i].call(this)},wE.remove=function(t,e){this._brushController.unmount()},wE.dispose=function(t,e){this._brushController.dispose()};var" be="{zoom:function(){var" t="!this._isZoomActive;this.api.dispatchAction({type:" takeglobalcursor",key:"datazoomselect",datazoomselectactive:t})},back:function(){this._dispatchzoomaction(t_(this.ecmodel))}};we._onbrush="function(t,e){function" i(t,e,i){var n(t,e,i){var n;return i.eachcomponent({maintype:"datazoom",subtype:"select"},function(i){i.getaxismodel(t,e.componentindex)&&(n="i)}),n}if(e.isEnd&&t.length){var" hy(a_(this.model.option),a,{include:["grid"]}).matchoutputranges(t,a,function(t,e,n){if("cartesian2d"="==n.type){var" e(t,e){if(e){var i(e,i){var se="sT.toolbox.restore;l_.defaultOption={show:!0,icon:" m3.8,33.4" m47,18.9h9.8v8.7 m56.3,20.1 c52.1,9,40.5,0.6,26.8,2.1c12.6,3.7,1.6,16.2,2.1,30.6 m13,41.1h3.1v10.2 m3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",title:se.title},l_.prototype.onclick="function(t,e,i){e_(t),e.dispatchAction({type:" restore",from:this.uid})},ty("restore",l_),os({type:"restore",event:"restore",update:"prepareandupdate"},function(t,e){e.resetoption("recreate")});var" me,ie="urn:schemas-microsoft-com:vml" ,te="undefined" window?null:window,ae="!1,DE=TE&&TE.document;if(DE&&!U_.canvasSupported)try{!DE.namespaces.zrvml&&DE.namespaces.add(" zrvml",ie),me="function(t){return" de.createelement("<zrvml:"+t+' class="zrvml">')}}catch(t){ME=function(t){return DE.createElement("<"+t+' xmlns="'+IE+'" class="zrvml">')}}var CE=ES.CMD,LE=Math.round,kE=Math.sqrt,PE=Math.abs,NE=Math.cos,OE=Math.sin,EE=Math.max;if(!U_.canvasSupported){var RE=21600,zE=RE/2,BE=function(t){t.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px;",t.coordsize=RE+","+RE,t.coordorigin="0,0"},VE=function(t){return String(t).replace(/&/g,"&amp;").replace(/"/g,"&quot;")},GE=function(t,e,i){return"rgb("+[t,e,i].join(",")+")"},FE=function(t,e){e&&t&&e.parentNode!==t&&t.appendChild(e)},WE=function(t,e){e&&t&&e.parentNode===t&&t.removeChild(e)},HE=function(t,e,i){return 1e5*(parseFloat(t)||0)+1e3*(parseFloat(e)||0)+i},ZE=function(t,e){return"string"==typeof t?t.lastIndexOf("%")>=0?parseFloat(t)/100*e:parseFloat(t):t},UE=function(t,e,i){var n=Gt(e);i=+i,isNaN(i)&&(i=1),n&&(t.color=GE(n[0],n[1],n[2]),t.opacity=i*n[3])},XE=function(t){var e=Gt(t);return[GE(e[0],e[1],e[2]),e[3]]},jE=function(t,e,i){var n=e.fill;if(null!=n)if(n instanceof IM){var o,a=0,r=[0,0],s=0,l=1,u=i.getBoundingRect(),h=u.width,c=u.height;if("linear"===n.type){o="gradient";var d=i.transform,f=[n.x*h,n.y*c],p=[n.x2*h,n.y2*c];d&&(Q(f,f,d),Q(p,p,d));var g=p[0]-f[0],m=p[1]-f[1];(a=180*Math.atan2(g,m)/Math.PI)<0&&(a+=360),a<1e-6&&(a=0)}else{o="gradientradial";var f="[n.x*h,n.y*c],d=i.transform,v=i.scale,y=h,x=c;r=[(f[0]-u.x)/y,(f[1]-u.y)/x],d&&Q(f,f,d),y/=v[0]*RE,x/=v[1]*RE;var" _="EE(y,x);s=0/_,l=2*n.r/_-s}var" w="n.colorStops.slice();w.sort(function(t,e){return" t.offset-e.offset});for(var b="w.length,S=[],M=[],I=0;I<b;I++){var" t="w[I],A=XE(T.color);M.push(T.offset*l+s+" " "+a[0]),0!="=I&&I!==b-1||S.push(A)}if(b">=2){var D=S[0][0],C=S[1][0],L=S[0][1]*e.opacity,k=S[1][1]*e.opacity;t.type=o,t.method="none",t.focus="100%",t.angle=a,t.color=D,t.color2=C,t.colors=M.join(","),t.opacity=k,t.opacity2=L}"radial"===o&&(t.focusposition=r.join(","))}else UE(t,n,e.opacity)},YE=function(t,e){null!=e.lineDash&&(t.dashstyle=e.lineDash.join(" ")),null==e.stroke||e.stroke instanceof IM||UE(t,e.stroke,e.opacity)},qE=function(t,e,i,n){var o="fill"===e,a=t.getElementsByTagName(e)[0];null!=i[e]&&"none"!==i[e]&&(o||!o&&i.lineWidth)?(t[o?"filled":"stroked"]="true",i[e]instanceof IM&&WE(t,a),a||(a=u_(e)),o?jE(a,i,n):YE(a,i),FE(t,a)):(t[o?"filled":"stroked"]="false",WE(t,a))},KE=[[],[],[]],$E=function(t,e){var i,n,o,a,r,s,l=CE.M,u=CE.C,h=CE.L,c=CE.A,d=CE.Q,f=[],p=t.data,g=t.len();for(a=0;a<g;){switch(o=p[a++],n="",i=0,o){case l:n=" m " ,i="1,r=p[a++],s=p[a++],KE[0][0]=r,KE[0][1]=s;break;case" h:n=" l " d:case u:n=" c " m,v,y="p[a++],x=p[a++],_=p[a++],w=p[a++];o===d?(m=_,v=w,_=(_+2*y)/3,w=(w+2*x)/3,y=(r+2*y)/3,x=(s+2*x)/3):(m=p[a++],v=p[a++]),KE[0][0]=y,KE[0][1]=x,KE[1][0]=_,KE[1][1]=w,KE[2][0]=m,KE[2][1]=v,r=m,s=v;break;case" c:var b="0,S=0,M=1,I=1,T=0;e&&(b=e[4],S=e[5],M=kE(e[0]*e[0]+e[1]*e[1]),I=kE(e[2]*e[2]+e[3]*e[3]),T=Math.atan2(-e[1]/I,e[0]/M));var" a="p[a++],D=p[a++],C=p[a++],L=p[a++],k=p[a++]+T,P=p[a++]+k+T;a++;var" n="p[a++],O=A+NE(k)*C,E=D+OE(k)*L,y=A+NE(P)*C,x=D+OE(P)*L,R=N?" " wa ":" at ";math.abs(o-y)<1e-4&&(math.abs(p-k)>.01?N&&(O+=.0125):Math.abs(E-D)<1e-4?n&&o<a||!n&&o>A?x-=.0125:x+=.0125:N&&E<d||!n&&e>D?y+=.0125:y-=.0125),f.push(R,LE(((A-C)*M+b)*RE-zE),",",LE(((D-L)*I+S)*RE-zE),",",LE(((A+C)*M+b)*RE-zE),",",LE(((D+L)*I+S)*RE-zE),",",LE((O*M+b)*RE-zE),",",LE((E*I+S)*RE-zE),",",LE((y*M+b)*RE-zE),",",LE((x*I+S)*RE-zE)),r=y,s=x;break;case CE.R:var z=KE[0],B=KE[1];z[0]=p[a++],z[1]=p[a++],B[0]=z[0]+p[a++],B[1]=z[1]+p[a++],e&&(Q(z,z,e),Q(B,B,e)),z[0]=LE(z[0]*RE-zE),B[0]=LE(B[0]*RE-zE),z[1]=LE(z[1]*RE-zE),B[1]=LE(B[1]*RE-zE),f.push(" m ",z[0],",",z[1]," l ",B[0],",",z[1]," l ",B[0],",",B[1]," l ",z[0],",",B[1]);break;case CE.Z:f.push(" x ")}if(i>0){f.push(n);for(var V=0;V<i;v++){var g="KE[V];e&&Q(G,G,e),f.push(LE(G[0]*RE-zE)," ,",le(g[1]*re-ze),v<i-1?",":"")}}}return" f.join("")};kn.prototype.brushvml="function(t){var" e="this.style,i=this._vmlEl;i||(i=u_(" shape"),be(i),this._vmlel="i),qE(i," fill",e,this),qe(i,"stroke",e,this);var"" n="this.transform,o=null!=n,a=i.getElementsByTagName(" stroke")[0];if(a){var" r="e.lineWidth;if(o&&!e.strokeNoScale){var" s="n[0]*n[3]-n[1]*n[2];r*=kE(PE(s))}a.weight=r+" px"}var" l="this.path||(this.path=new" es);this.__dirtypath&&(l.beginpath(),l.subpixeloptimize="!1,this.buildPath(l,this.shape),l.toStatic(),this.__dirtyPath=!1),i.path=$E(l,this.transform),i.style.zIndex=HE(this.zlevel,this.z,this.z2),FE(t,i),null!=e.text?this.drawRectText(t,this.getBoundingRect()):this.removeRectText(t)},kn.prototype.onRemove=function(t){WE(t,this._vmlEl),this.removeRectText(t)},kn.prototype.onAdd=function(t){FE(t,this._vmlEl),this.appendRectText(t)};var" je="function(t){return" object"="=typeof" " t&&t.tagname&&"img"="==t.tagName.toUpperCase()};fi.prototype.brushVML=function(t){var" e,i,n="this.style,o=n.image;if(JE(o)){var" a="o.src;if(a===this._imageSrc)e=this._imageWidth,i=this._imageHeight;else{var" o="==this._imageSrc&&(e=this._imageWidth,i=this._imageHeight);if(o){var" u="n.x||0,h=n.y||0,c=n.width,d=n.height,f=n.sWidth,p=n.sHeight,g=n.sx||0,m=n.sy||0,v=f&&p,y=this._vmlEl;y||(y=DE.createElement(" div"),be(y),this._vmlel="y);var" x,_="y.style,w=!1,b=1,S=1;if(this.transform&&(x=this.transform,b=kE(x[0]*x[0]+x[1]*x[1]),S=kE(x[2]*x[2]+x[3]*x[3]),w=x[1]||x[2]),w){var" m="[u,h],I=[u+c,h],T=[u,h+d],A=[u+c,h+d];Q(M,M,x),Q(I,I,x),Q(T,T,x),Q(A,A,x);var" d="EE(M[0],I[0],T[0],A[0]),C=EE(M[1],I[1],T[1],A[1]),L=[];L.push(" m11=",x[0]/b," ,","m12=",x[2]/S," ,","m21=",x[1]/b," ,","m22=",x[3]/S," ,","dx=",LE(u*b+x[4])," ,","dy=",LE(h*S+x[5])),_.padding=" 0" "+le(d)+"px "+le(c)+"px 0",_.filter="progid:DXImageTransform.Microsoft.Matrix(" +l.join("")+", sizingmethod="clip)" }else" x&&(u="u*b+x[4],h=h*S+x[5]),_.filter=" ",_.left="LE(u)+" px",_.top="LE(h)+"px";var""" k="this._imageEl,P=this._cropEl;k||(k=DE.createElement(" div"),this._imageel="k);var" image,e="this;O.onload=function(){O.onload=null,e=O.width,i=O.height,N.width=LE(b*e*c/f)+" px",n.height="LE(S*i*d/p)+" px",e._imagewidth="e,E._imageHeight=i,E._imageSrc=o},O.src=o}P||((P=DE.createElement("div")).style.overflow="hidden",this._cropEl=P);var""" n.width="LE(b*c)+" z ,b="n.opacity;B<1&&(z+=" .alpha(opacity="+LE(100*B)+" )" "),z+="progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" +o+", qe,tr="{},eR=0,iR=document.createElement(" div"),nr="function(t){var">100&&(eR=0,tR={});var i,n=iR.style;try{n.font=t,i=n.fontFamily.split(",")[0]}catch(t){}e={style:n.fontStyle||"normal",variant:n.fontVariant||"normal",weight:n.fontWeight||"normal",size:0|parseFloat(n.fontSize||12),family:i||"Microsoft YaHei"},tR[t]=e,eR++}return e};!function(t,e){bb[t]=e}("measureText",function(t,e){var i=DE;QE||((QE=i.createElement("div")).style.cssText="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;",DE.body.appendChild(QE));try{QE.style.font=e}catch(t){}return QE.innerHTML="",QE.appendChild(i.createTextNode(t)),{width:QE.offsetWidth}});for(var oR=new de,aR=[Db,di,fi,kn,rM],rR=0;rR<ar.length;rr++){var sr="aR[rR].prototype;sR.drawRectText=function(t,e,i,n){var" o="this.style;this.__dirty&&Ye(o);var" a="o.text;if(null!=a&&(a+=" "),a){if(o.rich){var" r="Ze(a,o);a=[];for(var" s="0;s<r.lines.length;s++){for(var" l="r.lines[s].tokens,u=[],h=0;h<l.length;h++)u.push(l[h].text);a.push(u.join(" "))}a="a.join(" \n")}var"" c,d,f="o.textAlign,p=o.textVerticalAlign,g=nR(o.font),m=g.style+" " "+g.variant+" "+g.weight+" "+g.size+'px "'+g.family+'"';i="i||ke(a,m,f,p,o.textPadding,o.textLineHeight);var" v="this.transform;if(v&&!n&&(oR.copy(e),oR.applyTransform(v),e=oR),n)c=e.x,d=e.y;else{var" y="o.textPosition,x=o.textDistance;if(y" instanceof array)c="e.x+ZE(y[0],e.width),d=e.y+ZE(y[1],e.height),f=f||" left";else{var" _="Re(y,e,x);c=_.x,d=_.y,f=f||_.textAlign,p=p||_.textVerticalAlign}}c=Oe(c,i.width,f),d=Ee(d,i.height,p),d+=i.height/2;var" w,b,s,m="u_,I=this._textVmlEl;I?b=(w=(S=I.firstChild).nextSibling).nextSibling:(I=M(" line"),w="M(" path"),b="M("textpath"),S=M("skew"),b.style["v-text-align"]="left",BE(I),w.textpathok=!0,b.on=!0,I.from="0""" 0",i.to="1000 0.05" ,fe(i,s),fe(i,w),fe(i,b),this._textvmlel="I);var" t="[c,d],A=I.style;v&&n?(Q(T,T,v),S.on=!0,S.matrix=v[0].toFixed(3)+" ,"+v[2].tofixed(3)+","+v[1].tofixed(3)+","+v[3].tofixed(3)+",0,0",s.offset="(LE(T[0])||0)+" ,"+(le(t[1])||0),s.origin="0" 0",a.left="0px" ,a.top="0px" ):(s.on="!1,A.left=LE(c)+" px",a.top="LE(d)+" px"),b.string="VE(a);try{b.style.font=m}catch(t){}qE(I,"fill",{fill:o.textFill,opacity:o.opacity},this),qE(I,"stroke",{stroke:o.textStroke,opacity:o.opacity,lineDash:o.lineDash},this),I.style.zIndex=HE(this.zlevel,this.z,this.z2),FE(t,I)}},sR.removeRectText=function(t){WE(t,this._textVmlEl),this._textVmlEl=null},sR.appendRectText=function(t){FE(t,this._textVmlEl)}}rM.prototype.brushVML=function(t){var""" e="this.style;null!=e.text?this.drawRectText(t,{x:e.x||0,y:e.y||0,width:0,height:0},this.getBoundingRect(),!0):this.removeRectText(t)},rM.prototype.onRemove=function(t){this.removeRectText(t)},rM.prototype.onAdd=function(t){this.appendRectText(t)}}d_.prototype={constructor:d_,getType:function(){return" vml"},getviewportroot:function(){return" this._vmlviewport},getviewportrootoffset:function(){var n="t[i];n.invisible||n.ignore?(n.__alreadyNotVisible||n.onRemove(e),n.__alreadyNotVisible=!0):(n.__alreadyNotVisible&&n.onAdd(e),n.__alreadyNotVisible=!1,n.__dirty&&(n.beforeBrush&&n.beforeBrush(),(n.brushVML||n.brush).call(n,e),n.afterBrush&&n.afterBrush())),n.__dirty=!1}this._firstPaint&&(this._vmlViewport.appendChild(e),this._firstPaint=!1)},resize:function(t,e){var" i="this._vmlViewport.style;i.width=t+" px",i.height="e+" px"}},dispose:function(){this.root.innerhtml ,this._vmlroot="this._vmlViewport=this.storage=null},getWidth:function(){return""" this._width},getheight:function(){return this._height},clear:function(){this._vmlviewport&&this.root.removechild(this._vmlviewport)},_getwidth:function(){var lr="http://www.w3.org/2000/svg" ,ur="ES.CMD,hR=Array.prototype.join,cR=" none",dr="Math.round,fR=Math.sin,pR=Math.cos,gR=Math.PI,mR=2*Math.PI,vR=180/gR,yR=1e-4,xR={};xR.brush=function(t){var" _r="{};_R.brush=function(t){var" htmlimageelement&&(i="i.src),i){var" wr="{},bR=new" de,sr="function(t,e,i){var" r,s,l="n.textPosition,u=n.textDistance,h=n.textAlign||" left";"number"="=typeof" n.fontsize&&(n.fontsize+="px" );var c="n.font||[n.fontStyle||" ",n.fontweight||"",n.fontsize||"",n.fontfamily||""].join("" ")||wb,d="M_(n.textVerticalAlign),f=(i=ke(o,c,h,d,n.textPadding,n.textLineHeight)).lineHeight;if(l" array)r="e.x+l[0],s=e.y+l[1];else{var" p="Re(l,e,u);r=p.x,s=p.y,d=M_(p.textVerticalAlign),h=p.textAlign}__(a," alignment-baseline",d),c&&(a.style.font="c);var" g="n.textPadding;if(__(a," x",r),__(a,"y",s),b_(a,n,!0,t),t" rm||t.style.transformtext)x_(a,t.transform);else{if(t.transform)br.copy(e),br.applytransform(t.transform),e="bR;else{var" m="t.transformCoordToGlobal(e.x,e.y);e.x=m[0],e.y=m[1],t.transform=_t(xt())}var" if(t.__tspanlist.length)for(var>=o&&u+1>=a){for(var h=[],c=0;c<e.length;c++)h.push(c);return[{indices:h,count:e.length}]}for(;r<=s;){var d="function(){for(var" i="-1*r;i<=r;i+=2){var" s,u="l[i-1],h=l[i+1],c=(h?h.newPos:0)-i;u&&(l[i-1]=void" 0);var 0,!0)):((s="u).newPos++,n.pushComponent(s.components,!0,void" 0)),c="n.extractCommon(s,e,t,i),s.newPos+1">=o&&c+1>=a)return T_(0,s.components);l[i]=s}else l[i]=void 0}r++}();if(d)return d}},pushComponent:function(t,e,i){var n=t[t.length-1];n&&n.added===e&&n.removed===i?t[t.length-1]={count:n.count+1,added:e,removed:i}:t.push({count:1,added:e,removed:i})},extractCommon:function(t,e,i,n){for(var o=e.length,a=i.length,r=t.newPos,s=r-n,l=0;r+1<o&&s+1<a&&this.equals(e[r+1],i[s+1]);)r++,s++,l++;return 0="==i.length?t?((i=e.insertBefore(this.createElement(" defs"),e.firstchild)).contains||(i.contains="function(t){var" " l&&t.components.push({count:l}),t.newpos="r,s},tokenize:function(t){return" t.slice()},join:function(t){return t.slice()}};var mr="new" i_,ir="function(t,e,i){return" mr.diff(t,e,i)};d_.prototype.createelement="p_,D_.prototype.getDefs=function(t){var" e="this._svgRoot,i=this._svgRoot.getElementsByTagName(" defs");return" n="e.length-1;n">=0;--n)if(e[n]===t)return!0;return!1}),i):null:i[0]},D_.prototype.update=function(t,e){if(t){var i=this.getDefs(!1);if(t[this._domName]&&i.contains(t[this._domName]))"function"==typeof e&&e(t);else{var n=this.add(t);n&&(t[this._domName]=n)}}},D_.prototype.addDom=function(t){this.getDefs(!0).appendChild(t)},D_.prototype.removeDom=function(t){var e=this.getDefs(!1);e&&t[this._domName]&&(e.removeChild(t[this._domName]),t[this._domName]=null)},D_.prototype.getDoms=function(){var t=this.getDefs(!1);if(!t)return[];var e=[];return d(this._tagNames,function(i){var n=t.getElementsByTagName(i);e=e.concat([].slice.call(n))}),e},D_.prototype.markAllUnused=function(){var t=this;d(this.getDoms(),function(e){e[t._markLabel]="0"})},D_.prototype.markUsed=function(t){t&&(t[this._markLabel]="1")},D_.prototype.removeUnused=function(){var t=this.getDefs(!1);if(t){var e=this;d(this.getDoms(),function(i){"1"!==i[e._markLabel]&&t.removeChild(i)})}},D_.prototype.getSvgProxy=function(t){return t instanceof kn?xR:t instanceof fi?_R:t instanceof rM?wR:xR},D_.prototype.getTextSvgElement=function(t){return t.__textSvgEl},D_.prototype.getSvgElement=function(t){return t.__svgEl},u(C_,D_),C_.prototype.addWithoutUpdate=function(t,e){if(e&&e.style){var i=this;d(["fill","stroke"],function(n){if(e.style[n]&&("linear"===e.style[n].type||"radial"===e.style[n].type)){var o,a=e.style[n],r=i.getDefs(!0);a._dom?(o=a._dom,r.contains(a._dom)||i.addDom(o)):o=i.add(a),i.markUsed(e);var s=o.getAttribute("id");t.setAttribute(n,"url(#"+s+")")}})}},C_.prototype.add=function(t){var e;if("linear"===t.type)e=this.createElement("linearGradient");else{if("radial"!==t.type)return Yw("Illegal gradient type."),null;e=this.createElement("radialGradient")}return t.id=t.id||this.nextId++,e.setAttribute("id","zr"+this._zrId+"-gradient-"+t.id),this.updateDom(t,e),this.addDom(e),e},C_.prototype.update=function(t){var e=this;D_.prototype.update.call(this,t,function(){var i=t.type,n=t._dom.tagName;"linear"===i&&"linearGradient"===n||"radial"===i&&"radialGradient"===n?e.updateDom(t,t._dom):(e.removeDom(t),e.add(t))})},C_.prototype.updateDom=function(t,e){if("linear"===t.type)e.setAttribute("x1",t.x),e.setAttribute("y1",t.y),e.setAttribute("x2",t.x2),e.setAttribute("y2",t.y2);else{if("radial"!==t.type)return void Yw("Illegal gradient type.");e.setAttribute("cx",t.x),e.setAttribute("cy",t.y),e.setAttribute("r",t.r)}t.global?e.setAttribute("gradientUnits","userSpaceOnUse"):e.setAttribute("gradientUnits","objectBoundingBox"),e.innerHTML="";for(var i=t.colorStops,n=0,o=i.length;n<o;++n){var a="this.createElement(" stop");a.setattribute("offset",100*i[n].offset+"%");var" r="i[n].color;if(r.indexOf(!1)){var" s="Gt(r)[3],l=Zt(r);a.setAttribute(" stop-color","#"+l),a.setattribute("stop-opacity",s)}else" a.setattribute("stop-color",i[n].color);e.appendchild(a)}t._dom="e},C_.prototype.markUsed=function(t){if(t.style){var" e="t.style.fill;e&&e._dom&&D_.prototype.markUsed.call(this,e._dom),(e=t.style.stroke)&&e._dom&&D_.prototype.markUsed.call(this,e._dom)}},u(L_,D_),L_.prototype.update=function(t){var" i="this.getTextSvgElement(t);i&&this.updateDom(i,t.__clipPaths,!0),this.markUsed(t)},L_.prototype.updateDom=function(t,e,i){if(e&&e.length">0){var n,o,a=this.getDefs(!0),r=e[0],s=i?"_textDom":"_dom";r[s]?(o=r[s].getAttribute("id"),n=r[s],a.contains(n)||a.appendChild(n)):(o="zr"+this._zrId+"-clip-"+this.nextId,++this.nextId,(n=this.createElement("clipPath")).setAttribute("id",o),a.appendChild(n),r[s]=n);var l=this.getSvgProxy(r);if(r.transform&&r.parent.invTransform&&!i){var u=Array.prototype.slice.call(r.transform);bt(r.transform,r.parent.invTransform,r.transform),l.brush(r),r.transform=u}else l.brush(r);var h=this.getSvgElement(r);n.innerHTML="",n.appendChild(h.cloneNode()),t.setAttribute("clip-path","url(#"+o+")"),e.length>1&&this.updateDom(n,e.slice(1),i)}else t&&t.setAttribute("clip-path","none")},L_.prototype.markUsed=function(t){var e=this;t.__clipPaths&&t.__clipPaths.length>0&&d(t.__clipPaths,function(t){t._dom&&D_.prototype.markUsed.call(e,t._dom),t._textDom&&D_.prototype.markUsed.call(e,t._textDom)})},u(k_,D_),k_.prototype.addWithoutUpdate=function(t,e){if(e&&P_(e.style)){var i,n=e.style;n._shadowDom?(i=n._shadowDom,this.getDefs(!0).contains(n._shadowDom)||this.addDom(i)):i=this.add(e),this.markUsed(e);var o=i.getAttribute("id");t.style.filter="url(#"+o+")"}},k_.prototype.add=function(t){var e=this.createElement("filter"),i=t.style;return i._shadowDomId=i._shadowDomId||this.nextId++,e.setAttribute("id","zr"+this._zrId+"-shadow-"+i._shadowDomId),this.updateDom(t,e),this.addDom(e),e},k_.prototype.update=function(t,e){var i=e.style;if(P_(i)){var n=this;D_.prototype.update.call(this,e,function(t){n.updateDom(e,t._shadowDom)})}else this.remove(t,i)},k_.prototype.remove=function(t,e){null!=e._shadowDomId&&(this.removeDom(e),t.style.filter="")},k_.prototype.updateDom=function(t,e){var i=e.getElementsByTagName("feDropShadow");i=0===i.length?this.createElement("feDropShadow"):i[0];var n,o,a,r,s=t.style,l=t.scale?t.scale[0]||1:1,u=t.scale?t.scale[1]||1:1;if(s.shadowBlur||s.shadowOffsetX||s.shadowOffsetY)n=s.shadowOffsetX||0,o=s.shadowOffsetY||0,a=s.shadowBlur,r=s.shadowColor;else{if(!s.textShadowBlur)return void this.removeDom(e,s);n=s.textShadowOffsetX||0,o=s.textShadowOffsetY||0,a=s.textShadowBlur,r=s.textShadowColor}i.setAttribute("dx",n/l),i.setAttribute("dy",o/u),i.setAttribute("flood-color",r);var h=a/2/l+" "+a/2/u;i.setAttribute("stdDeviation",h),e.setAttribute("x","-100%"),e.setAttribute("y","-100%"),e.setAttribute("width",Math.ceil(a/2*200)+"%"),e.setAttribute("height",Math.ceil(a/2*200)+"%"),e.appendChild(i),s._shadowDom=e},k_.prototype.markUsed=function(t){var e=t.style;e&&e._shadowDom&&D_.prototype.markUsed.call(this,e._shadowDom)};var TR=function(t,e,i,n){this.root=t,this.storage=e,this._opts=i=a({},i||{});var o=p_("svg");o.setAttribute("xmlns","http://www.w3.org/2000/svg"),o.setAttribute("version","1.1"),o.setAttribute("baseProfile","full"),o.style.cssText="user-select:none;position:absolute;left:0;top:0;",this.gradientManager=new C_(n,o),this.clipPathManager=new L_(n,o),this.shadowManager=new k_(n,o);var r=document.createElement("div");r.style.cssText="overflow:hidden;position:relative",this._svgRoot=o,this._viewport=r,t.appendChild(r),r.appendChild(o),this.resize(i.width,i.height),this._visibleList=[]};TR.prototype={constructor:TR,getType:function(){return"svg"},getViewportRoot:function(){return this._viewport},getViewportRootOffset:function(){var t=this.getViewportRoot();if(t)return{offsetLeft:t.offsetLeft||0,offsetTop:t.offsetTop||0}},refresh:function(){var t=this.storage.getDisplayList(!0);this._paintList(t)},setBackgroundColor:function(t){this._viewport.style.background=t},_paintList:function(t){this.gradientManager.markAllUnused(),this.clipPathManager.markAllUnused(),this.shadowManager.markAllUnused();var e,i=this._svgRoot,n=this._visibleList,o=t.length,a=[];for(e=0;e<o;e++){var 0="==i.length?t?((i=e.insertBefore(p_(" defs"),e.firstchild)).contains||(i.contains="function(t){var" " r="O_(f=t[e]),s=G_(f)||V_(f);f.invisible||(f.__dirty&&(r&&r.brush(f),this.clipPathManager.update(f),f.style&&(this.gradientManager.update(f.style.fill),this.gradientManager.update(f.style.stroke),this.shadowManager.update(s,f)),f.__dirty=!1),a.push(f))}var" l,u="IR(n,a);for(e=0;e<u.length;e++)if((c=u[e]).removed)for(d=0;d<c.count;d++){var" s="G_(f=n[c.indices[d]]),h=V_(f);B_(i,s),B_(i,h)}for(e=0;e<u.length;e++){var" c="u[e];if(c.added)for(d=0;d<c.count;d++){var" if(!c.removed)for(var d="0;d<c.count;d++){var" f="a[c.indices[d]];l=s=V_(f)||G_(f)||l,this.gradientManager.markUsed(f),this.gradientManager.addWithoutUpdate(s,f),this.shadowManager.markUsed(f),this.shadowManager.addWithoutUpdate(s,f),this.clipPathManager.markUsed(f)}}this.gradientManager.removeUnused(),this.clipPathManager.removeUnused(),this.shadowManager.removeUnused(),this._visibleList=a},_getDefs:function(t){var" e="this._svgRoot,i=this._svgRoot.getElementsByTagName(" defs");return" n="e.length-1;n">=0;--n)if(e[n]===t)return!0;return!1}),i):null:i[0]},resize:function(t,e){var i=this._viewport;i.style.display="none";var n=this._opts;if(null!=t&&(n.width=t),null!=e&&(n.height=e),t=this._getSize(0),e=this._getSize(1),i.style.display="",this._width!==t||this._height!==e){this._width=t,this._height=e;var o=i.style;o.width=t+"px",o.height=e+"px";var a=this._svgRoot;a.setAttribute("width",t),a.setAttribute("height",e)}},getWidth:function(){return this._width},getHeight:function(){return this._height},_getSize:function(t){var e=this._opts,i=["width","height"][t],n=["clientWidth","clientHeight"][t],o=["paddingLeft","paddingTop"][t],a=["paddingRight","paddingBottom"][t];if(null!=e[i]&&"auto"!==e[i])return parseFloat(e[i]);var r=this.root,s=document.defaultView.getComputedStyle(r);return(r[n]||N_(s[i])||N_(r.style[i]))-(N_(s[o])||0)-(N_(s[a])||0)|0},dispose:function(){this.root.innerHTML="",this._svgRoot=this._viewport=this.storage=null},clear:function(){this._viewport&&this.root.removeChild(this._viewport)},pathToDataUrl:function(){return this.refresh(),"data:image/svg+xml;charset=UTF-8,"+this._svgRoot.outerHTML}},d(["getLayer","insertLayer","eachLayer","eachBuiltinLayer","eachOtherLayer","getLayers","modLayer","delLayer","clearLayer","toDataURL","pathToImage"],function(t){TR.prototype[t]=F_(t)}),Ti("svg",TR),t.version="4.2.1",t.dependencies=RT,t.PRIORITY=GT,t.init=function(t,e,i){var n=Ls(t);if(n)return n;var o=new ls(t,e,i);return o.id="ec_"+nA++,eA[o.id]=o,Fi(t,aA,o.id),Ds(o),o},t.connect=function(t){if(y(t)){var e=t;t=null,PT(e,function(e){null!=e.group&&(t=e.group)}),t=t||"g_"+oA++,PT(e,function(e){e.group=t})}return iA[t]=!0,t},t.disConnect=Cs,t.disconnect=rA,t.dispose=function(t){"string"==typeof t?t=eA[t]:t instanceof ls||(t=Ls(t)),t instanceof ls&&!t.isDisposed()&&t.dispose()},t.getInstanceByDom=Ls,t.getInstanceById=function(t){return eA[t]},t.registerTheme=ks,t.registerPreprocessor=Ps,t.registerProcessor=Ns,t.registerPostUpdate=function(t){$T.push(t)},t.registerAction=Os,t.registerCoordinateSystem=Es,t.getCoordinateSystemDimensions=function(t){var e=Ga.get(t);if(e)return e.getDimensionsInfo?e.getDimensionsInfo():e.dimensions.slice()},t.registerLayout=Rs,t.registerVisual=zs,t.registerLoading=Vs,t.extendComponentModel=Gs,t.extendComponentView=Fs,t.extendSeriesModel=Ws,t.extendChartView=Hs,t.setCanvasCreator=function(t){e("createCanvas",t)},t.registerMap=function(t,e,i){CT.registerMap(t,e,i)},t.getMap=function(t){var e=CT.retrieveMap(t);return e&&e[0]&&{geoJson:e[0].geoJSON,specialAreas:e[0].specialAreas}},t.dataTool=sA,t.zrender=Hb,t.number=YM,t.format=iI,t.throttle=kr,t.helper=eD,t.matrix=Sw,t.vector=cw,t.color=Ww,t.parseGeoJSON=nD,t.parseGeoJson=sD,t.util=lD,t.graphic=uD,t.List=yA,t.Model=Po,t.Axis=rD,t.env=U_});</o;e++){var></o;++n){var></o&&s+1<a&&this.equals(e[r+1],i[s+1]);)r++,s++,l++;return></e.length;c++)h.push(c);return[{indices:h,count:e.length}]}for(;r<=s;){var></ar.length;rr++){var></i;v++){var></d||!n&&e></1e-4?n&&o<a||!n&&o></g;){switch(o=p[a++],n="",i=0,o){case></0&&(a+=360),a<1e-6&&(a=0)}else{o="gradientradial";var></"+t+'></=d;f++)a[c][d]=a[c][d]||{};a[c][d].boundarygap="bar"===i}}}),e.dispatchaction({type:"changemagictype",currenttype:i,newoption:a})}},os({type:"changemagictype",event:"magictypechanged",update:"prepareandupdate"},function(t,e){e.mergeoption(t.newoption)}),ty("magictype",fx);var></0&&(n.textposition=[0,u],n.textalign="left")}})}},updateview:function(t,e,i,n){d(this._features,function(t){t.updateview&&t.updateview(t.model,e,i,n)})},remove:function(t,e){d(this._features,function(i){i.remove&&i.remove(t,e)}),this.group.removeall()},dispose:function(t,e){d(this._features,function(i){i.dispose&&i.dispose(t,e)})}});var></n[0]&&(i=n[0]),this._currentpointer.position[0]=i,this._currentpointer.dirty();var></e.getheight()></0&&(t=0)),this.option.currentindex=t},getcurrentindex:function(){return></5;)i++;t.precision=i,a=+a.tofixed(i);var></=n[0]&&n[0]<=i[0])}}).on("mouseout",function(){t._hovering=!1,!t._dragging&&t._clearhoverlinktoseries()})},_enablehoverlinkfromseries:function(){var></=e[1])?"inrange":"outofrange"},findtargetdataindices:function(t){var></t[0]&&(e[0]=t[0]),e[1]<t[0]&&(e[1]=t[0]),e},getvaluestate:function(t){var></","></0||i[1]></0)){var></i.length;a++)if(i[a].model===t){o=i[a];break}o||i.push(o={model:t,axismodels:[],coordindex:n}),o.axismodels.push(e)}var></r;a++)"category"===o[a].get("type")&&n.push(a);i[e.axisindex]=n,n.length&&(t=!1)}},this),t&&this.ecmodel.eachseries(function(t){this._isserieshasallaxestypeof(t,"value")&&io(function(e){var></=r[1]}if(t===this._datazoommodel){var></u[h].length-1;f++){var></=e.end.time;s=n.getnextnday(s,1).time){var></n.fweek||t===n.weeks&&e></n.end.time+864e5))return[nan,nan];var></10?"0"+i:i;var></e[1][0]&&(e[1][0]=a[1]),a[1]></o;n++){e=e||[[1></i.length;o++){var></f&&(c=(c<0?-1:1)*f),i=m,t=m+c,d=(a=l-l)-u,v&&(n[r][b][s]=t)}else{var></i.length;u++){var></.3?"middle":c[1]></.3?"center":c[0]></a?1:-1;l<a||l></1)return></y.i)||(y=v,null==p.pageprevdataindex&&(p.pageprevdataindex=v.i),++p.pagecount,++p.pageindex),v=x;return></=e+a}var></0)return;var></t.length;i++){var></t.end;s++)ev(null,s,r(s,o),e,this.group,a).traverse(function(t){t.isgroup||(t.incremental=!0,t.usehoverlayer=!0)})},dispose:b,filterforexposedevent:function(t,e,i,n){var></f&&(o=f),i=e+a*o;var></=i.r&&a></-math.pi></-math.pi></n;++l)if(l!==a)for(var></0?math.pi:0)}},updatehandletransform:function(t,e,i,n){var></=e.y+e.height},pointtodata:function(t){var></=e.y+e.height:i.contain(i.tolocalcoord(t[1]))&&t[0]></256;s++)e[i](s></o.end;h++)u+=t.getlinecoordscount(h);s=new></s;h++)if(vn(l,u,c=n[r++],d=n[r++]))return></n.length;){var></o;a++)t.lineto(i[r++],i[r++])}}else></i.length;){var></=e);r--);r=math.min(r,o-2)}else{for(var></e.length;o++){var></3;o++){var></=1.3}),!(null==s||l.length<4))return{progress:t.pipelinecontext.large?function(t,i){for(var></4;n++)t.lineto(i[n][0],i[n][1]);for(t.closepath();n<i.length;n++)t.moveto(i[n][0],i[n][1]),n++,t.lineto(i[n][0],i[n][1])}})),vk=["itemstyle","bordercolor"],gk=d;zs(function(t,e){var></t.end;s++){var></=t&&t<=i[1])return"active"}else></=0&&(r=0),(r*=e.axisexpandwidth></3&&(p=0);var></=n+e.layoutlength},getmodel:function(){return></=i+e.axislength&&r></=y;n++){var></-.4?"left":a></t)return></n.length;f++){var></-.8?"top":"middle";n.attr({style:{textverticalalign:n.__verticalalign||p,textalign:n.__textalign||f},position:d,scale:[o,o]})}}}},el._createline=function(t,e,i){var></-.8?"left":"center",p=h[1]></l[0]&&(x=math.pi+x),n.attr("rotation",x)}else></-.8?"bottom":"middle";else></-.8?"right":"center",p=h[1]></0&&v.concat(["value"]);var></t.length;r++)a.addnode(t(t[r].id,t[r].name,r),r);for(var></a;o++)n[o].dataindex=-1;for(var></this.nodes.length;a++)this.nodes[a].__visited=!1;if(!t.call(n,e,null))for(var></n;o++)i[o].dataindex></=a[0]&&a[0]<=r.x+r.width&&r.y<=a[1]&&a[1]<=r.y+r.height))return!1;i={node:n,offsetx:a[0],offsety:a[1]}}},this),i}});for(var></0)){this.seriesmodel=t,this.api=i,this.ecmodel=e;var></=r}),o.data},getorient:function(){var></n;i++)e[i].dataindex=-1;for(var></0)){var></n;e++){var></e.length;i++)if(e[i].contain(t))return!0;return!1},transformto:function(t,e,i,n){var></(t.interiors?t.interiors.length:0);e++)n.shape.paths.push(new></i.length-1;l++){var></0&&!f.max&&(f.max=0);var></this._indicatoraxes.length;l++){var></4;t.usestyle(n.getmodel("itemstyle").getitemstyle(a?["color","shadowblur","shadowcolor"]:["color"]));var></=u+a&&e<=h+r)return></0?-x+math.pi:-x:0,k=ke(t.getformattedlabel(i,"normal")||r.getname(i),c,c,"top");l=!!l,d.label={x:n,y:u,position:g,height:k.height,len:v,len2:y,linepoints:h,textalign:c,verticalalign:"middle",rotation:l,inside:b},b||s.push(d.label)}),!l&&t.get("avoidlabeloverlap")&&wh(s,o,a,e,i,n)},dc=2*math.pi,fc=math.pi></0?-1:1)*y,d=t;n=a+(_<0?-5:5),u=d,h=[[s,m],[i,t],[a,d]]}c=b?"center":_></=i.r&&a></i.length;a+=2)n[this.__valueidx]=i[a+o],t.moveto(n[0],n[1]),t.lineto(i[a],i[a+1])}});rs(v(ol,"bar")),rs(la),zs({seriestype:"bar",reset:function(t){t.getdata().setvisual("legendsymbol","roundrect")}});var></n.endangle,u=new></h.length;p++){var></fd?i></o.length;n++)if(o[n].getaxis("x").index===t||o[n].getaxis("y").index===e)return></t.length;i++)t[i]<e&&(e=t[i]);return></g.length;m++)if("="===g[m].cmd){var></a&&eu(i[o]);o++);}for(;o<a;){var></o&&eu(i[n]);n++);}for(;n<o;)n+=ru(t,i,n,o,o,1,a.min,a.max,e.smooth,e.smoothmonotone,e.connectnulls)+1}}),td=kn.extend({type:"ec-polygon",shape:{points:[],stackedonpoints:[],smooth:0,stackedonsmooth:0,smoothconstraint:!0,smoothmonotone:null,connectnulls:!1},brush:um(kn.prototype.brush),buildpath:function(t,e){var></=n},containdata:function(t){return></r.length;s++)"polygon"===r[s].type&&(dn(r[s].exterior,o,a),tt(i,i,o),et(n,n,a));return></=0)){var></e?i=o+1:n=o}return></n;){var></0&&(o=-o,n.reverse());var></=e[1];)t.push(i),i++;return></=e[1]},yl.prototype.normalize=function(t){var></s;g++){var></u;p+=s){s></o&&(this._indices=a),this._count=r,this._extent={},this.getrawindex=this._indices?nl:il,this}}},xa.maparray=function(t,e,i,n){"function"==typeof></=u||isnan(w))&&(a[r++]=m)}else></=x||isnan(b))&&(a[r++]=c),c++}h=!0}}if(!h)if(1===n)for(m=0;m<o;m++){m=this.getrawindex(m);((w=this._getfast(s,m))></=u||isnan(w))&&(b></=u||isnan(w))&&(a[r++]=c),c++;h=!0}else></0)&&(o=u,a=l,n.length=0),n.push(r))}return></s;r++){var></0)return-1;var></n;i++){var></this._rawcount))return></this._count))return></i;o++)n[o]=t[o]}else></s;p++){c[w=r[p]]||(c[w]=[1></t.length;a++)null!=(s=i[r=n[a]])?((u=s.length)?(1===u&&(i[r]=null),s=s.unshift()):i[r]=null,this._update&&this._update(s,a)):this._remove&&this._remove(a);for(var></a.length;l++){var></9&&(o.style.fontsize=9,o.scale=o.scale||[1,1],o.scale[0]*=a></c.count();p++)if(p<l){var></h){var></i.length;++o)n=n[i[o]];return></this._dueend},xi.pipe=function(t){(this._downstream!==t||this._dirty)&&(this._downstream=t,t._upstream=this,t.dirty())},xi.dispose=function(){this._disposed||(this._upstream&&(this._upstream._downstream=null),this._downstream&&(this._downstream._upstream=null),this._dirty=!1,this._disposed=!0)},xi.getupstream=function(){return></a?t:n;return></f)){var></l;s++)ha(n[s].query,e,i)&&a.push(s);return!a.length&&o&&(a=[-1]),a.length&&!ua(a,this._currentmediaindices)&&(r=li(a,function(t){return></=0&&e.unshift("dataset"),e}),h(ui,si);var></0&&s.predecessor.push(t);var></":"&lt;","></f;d++)tt(r,r,t[d]),et(s,s,t[d]);tt(r,r,n[0]),et(s,s,n[1])}for(var></i.length;o++){var></l.length;){switch(i=l[o++],a=o,n=0,i){case></=1;)u=v(g,t,i,o,r),h=v(m,e,n,a,r),x%2?p.moveto(u,h):p.lineto(u,h),r+=f[x]></0&&(d=c+d),d%=c,r=0;r<1;r+=.1)s=v(g,t,i,o,r+.1)-v(g,t,i,o,r),l=v(m,e,n,a,r+.1)-v(m,e,n,a,r),y+=ps(s*s+l*l);for(;x<_&&!((w+=f[x])></u||c<0&&p></l||h<0&&f></=e||c<0&&p></=t||h<0&&f></arguments.length;i++)e[this._len++]=arguments[i];this._prevcmd=t}},_expanddata:function(){if(!(this.data></5;return></0)){var></e.length;i++)this.removeclip(e[i]);t.animation=null},_update:function(){for(var></0&&(t.__drawindex=t.__startindex)})},clear:function(){return></0&&(a.__drawindex=o))}e(o),this.eachbuiltinlayer(function(t,e){!t.__used&&t.getelementcount()></o.length;n++)i=o[n],t.call(e,this._layers[i],i)},eachbuiltinlayer:function(t,e){var></o-1&&!(n[r]<t&&n[r+1]></s.__endindex&&(a=!1),u.prevelclippaths&&l.restore(),l.restore()}return></e.length;i++){var></o.length;a++)n.addcolorstop(o[a].offset,o[a].color);return></lb.length;r++){var></0?this:(n.splice(o,1),t.parent=null,i&&(i.delfromstorage(t),t></=i.y+i.height},clone:function(){return></=i.x+i.width&&e></this._cliplist.length;t++)this._cliplist[t].pause();this._paused=!0},resume:function(){for(var></0?-1:1,r=dw[1]<0?-1:1,s=((dw[0]-a)*o+a)></r;){var></a;){var></o;n++)if(e.call(i,t[n],n,t))return></r;m++)e.push(g_(i[o++]))}return></0||d></n;){var></31?de.createstylesheet().addrule(".zrvml","behavior:url(#default#vml)"):t[0].addrule(".zrvml","behavior:url(#default#vml)")}}function></0){var></e.length;o++){var></2;h++)qo[u[h]]&&(u[h]=yx(n,n.mapdimension(a[h]),u[h]));e.coord=u}}return></l;s++){var></0&&(e[1]=0)),e}function></n[0]&&(n=[nan,nan]),ey(t,n),n}function></n[0]&&(n[0]=e[0]),e[1]></a;o++){var></=1e-6&&t></0||h></m;g++){var></.3?"middle":l[1]></1e-4&&t.pop()}function></u&&(i=math.min(i,s),t.width&&(i=math.min(i,t.width)),s-=i,t.width=i,l--)}),u=(s-a)></r;h++)a[h]&&iv(t.childat(h),e,a[h],n,t,o)}}function></0&&(i=0),y(t.value)?t.value[0]=i:t.value=i}function></i;++h)o[h]=(a-n[h])></0)&&(r=p,s=f,o=u,a.length=0),wp(h,function(t){a.push({seriesindex:e.seriesindex,dataindexinside:t,dataindex:e.getdata().getrawindex(t)})}))}}),{payloadbatch:a,snaptovalue:o}}function></1e-4?e:math.ceil(t)}function></0)&&(o=h-1-t),e[u.index]=d*(o-h></0?-1:0}function></=e[1]}}function></o&&i[n]}}function></=t&&t<=r[1]){a=n;break}}return></=n?1:-1:1}function></n?1:e></o;){var></u;s++)(r=l-(a=t[s]).getlayout().y)></u;s++)(r=l-(a=t[s]).getlayout().x)></e.length;c++)r[c]=1;for(c=0;c<t.length;c++)s[c]=t[c].inedges.length,0===s[c]&&l.push(t[c]);for(;l.length;){for(var></a;){var></o.length;r++){var></0&&(e=0),[t[0],t[e]]}function></0?1:e?-1:1}}function></t.length;l++){var></l&&(u=l);var></d;c++){var></s;r++)(n=t[r].getlayout().area)&&(n<a&&(a=n),n></a&&(s=l,i-=u)}return"asc"===n?o.splice(0,r-s):o.splice(s,r-s),i}function></w;){var></u[0]&&(u[0]=s),null!=l&&l></=i:e<i}function></0&&(i=0),y(t.value)?t.value[0]=i:t.value=i}function></u.getlayout().x&&(u=t),e></r.length;s++)o.push(r[s])}for(;n=a.pop();)e(n,i)}function></0&&(m=2*math.pi+m),(v=w.x<x.x)&&(m-=math.pi)}else(m=math.atan2(p.y-x.y,p.x-x.x))<0&&(m=2*math.pi+m),0===l.children.length||0!==l.children.length&&!1===l.isexpand?(v=p.x<x.x)&&(m-=math.pi):(v=p.x></u;h++)s=math.min(s,i[a][h]),l=math.max(l,i[a][h]),r+=i[a][h];var></t.length;l++)hh(t[l])||(t[l].x<e?r.push(t[l]):s.push(t[l]));fh(s,e,i,n,1,o,a),fh(r,e,i,n,-1,o,a);for(l=0;l<t.length;l++)if(!hh(t[l])){var></0&&s(c-1,h-r);for(p=0;p<c;p++)t[p].y></i&&t[a+1].y></=r&&(d=r+10),t[s].x=i+d*a,r=d}}t.sort(function(t,e){return></l;s++){var></l[0]&&(r=l[0]),o.value=r,s&&(o.status=e.axis.scale.isblank()?"hide":"show")}}function></l.length;f++){var></1.5*fd&&r></.001)return"transparent";d(h,function(t){t.offset=(t.coord-g)></t.length-1;r++){var></a;o++)n.push(nu(i,t,e,o));return></t.length;i++){var></t.length;o++){var></0)break;if(eu(p)){if(h){d+=a;continue}break}if(d===i)t[a></n;f++){var></0)break;if(eu(p)){if(h){d+=a;continue}break}if(d===i)t[a></0&&(i=n[1]),i}function></i.length;a++){var></e}var></=r[1];g+=u)n(g);return></=a[1];l+=s){var></t.length;i++)if(t[i].key===e)return></o;c+=h){var></0&&n<0)}function></0&&s<0&&!u&&(s=0));var></n&&(r=n),r></c&&(i=(i<0?-1:1)*c),p&&(o[r][_][w]+=i);else{var></t.count;o++)e.push(r({bandwidth:n,axiskey:"axis0",stackid:da+o},t));for(var></i[0]&&o.push(e[0]);for(var></t.length;i++)e[i]=$s(t[i]);return></i.length;r++){var></i){for(var></t.length;n++)t[n][i]=e}var></a.length;r++){var></e.length;n+=2){var></e.end;a++)o.dataeach(n,a);else></t.childcount();i++)ar(t.childat(i),e)}function></=0&&m<0){h+=m,f=m;break}}}return></=e:t===e}function></o;n++){var></i.length;c++){var></o.length;a++){var></0?-n:0):t}function></um}function></0?-n:0}var></=e[1])return></=e[0])return></e.length&&(!e[n]||null!=(t=t&&"object"==typeof></(i?r:r-1);s++){var></0&&(s+=2*tm),h.adddata(u,y,x,r,s,_,s,c,a)}function></=-1&&(s=tm),im(w,b)></1.5*math.pi&&(p=-p),h+=p)}}return></=o)&&(f></=o||f+vs></0&&(f=vs+f),(f></2;c++){var></=fs[1]+t?p:0}if(a){var></-i)return></=1){for(var></e&&s<n&&s<a)return></ws[0]?f+=c<e?v:-v:m<ws[1]?f+=d<c?v:-v:f+=s<d?v:-v:m<ws[0]?f+=c<e?v:-v:f+=s<c?v:-v)}return></e&&u<n&&u<a&&u<s)return></gs}function></e&&a<n)return></=o}function></=o||d+zs></0&&(d+=zs),d></i)return!1;if(math.abs(n-o)%zs<1e-4)return!0;if(a){var></t-u&&s<i-u&&s<o-u)&&cn(t,e,i,n,o,a,s,l,null)<=u></e-u&&l<n-u&&l<a-u||s></t-c&&u<i-c&&u<o-c&&u<r-c)&&an(t,e,i,n,o,a,r,s,u,h,null)<=c></e-c&&h<n-c&&h<a-c&&h<s-c||u></t-s&&a<i-s)return!1;if(t===i)return></e-s&&r<n-s||a></a&&r&&(o+=vs),r){var></0&&(o+=vs),(a%=vs)<0&&(a+=vs),o></c)u=p,c=m;else{ds[0]=rn(t,i,o,g),ds[1]=rn(e,n,a,g);var></=1&&(o[l++]=d)}}return></=1&&(o[l++]=c),d></=1&&(o[l++]=c);else></=1&&(o[l++]=c);else{var></v?(c=d,v=p):(ds[0]=qi(t,i,o,r,f),ds[1]=qi(e,n,a,s,f),g=hw(ds,hs),f<=1&&g<v?(c=f,v=g):m*=.5);return></=1&&(o[l++]=d)}}return></=1&&(o[l++]=c),d></=1&&(o[l++]=c);else{var></=1&&(a[f++]=i)}}return></=1&&(a[f++]=m),i></=1&&(a[f++]=m),m></=1&&(a[f++]=m)}else{var></0?-os(-y,us):os(y,us))+(x=x<0?-os(-x,us):os(x,us))))></=1&&(a[f++]=m)}else></=1&&(a[f++]=m),m></=1&&(a[f++]=m);else{var></-rs}function></rs}function></o;n++)for(var></t.length;i++)if(t[i]!==e[i])return!0}function></=c;)ei(t,e,_=b[t],n,m,v,a+_.width></tb.length;b++){var></b&&(!s||c<t?(k.text="",k.textwidth=b=0):(k.text=ze(k.text,c-t,_,c.ellipsis,{minchar:c.minchar}),k.textwidth=le(k.text,_),b=k.textwidth+t))}m+=k.width=b,y&&(g=math.max(g,k.lineheight))}p.width=m,p.lineheight=g,s+=g,l=math.max(l,m)}i.outerwidth=i.width=a(e.textwidth,l),i.outerheight=i.height=a(e.textheight,s),h&&(i.outerwidth+=h[1]+h[3],i.outerheight+=h[0]+h[2]);for(var></t.length&&ue(i,t.substring(o,t.length));var></f;d++)r[d]=ve(r[d],c)}return{lines:r,height:s,outerheight:l,lineheight:a}}function></r&&o<e;a++){var></=i)return></s;r++)a[r]=ve(a[r],o);return></t.pending.length;e++){var></r[t+1]&&t--,i(t)}},this.pushrun=function(t,e){a[l]=t,r[l]=e,l+=1}}function></=r[t]+r[t-1])r[t-1]<r[t+1]&&t--;else></=r[t]+r[t+1]||t></a;r++)t[d+r]=u[r]}var></a;r++)t[d+r]=u[r]}}else{for(f=(c-=n)+1,d=(l-=n)+1,r=n-1;r></0&&(p=0),p+=2}if((s=p)<1&&(s=1),1===a){for(f=(c-=n)+1,d=(l-=n)+1,r=n-1;r></m;r++)t[f+r]=u[d+r];if(a<=1){v=!0;break}}if(t[c--]=t[l--],0==--n){v=!0;break}p--}while(g></0&&(g=0),g+=2}if((s=g)<1&&(s=1),1===n){for(r=0;r<a;r++)t[c+r]=t[h+r];t[c+a]=u[l]}else{if(0===n)throw></0?l=h:r=h+1}return></l;){var></1))<=0&&(l=s);l></s&&a(t,e[i+o+l])></0){for(s=o+1;l<s&&a(t,e[i+o-l])<0;)r=l,(l=1+(l<<1))<=0&&(l=s);l></l;){var></s&&a(t,e[i+o-l])<=0;)r=l,(l=1+(l<<1))<=0&&(l=s);l></1))<=0&&(l=s);l></s&&a(t,e[i+o+l])></0?l=a:s=a+1;var></i;){var></0){for(;o<i&&n(t[o],t[o-1])<0;)o++;ge(t,e,o)}else></0&&(t+=i,i=-i),n<0&&(e+=n,n=-n),this.x=t,this.y=e,this.width=i,this.height=n}function></l.length;h++)l[h].done(function(){--u||a&&a()}).start(o,r)}function></=e);i--);i=math.min(i,u-2)}else{for(i=l;i<u&&!(m[i]></o;r++)t.push(1===i?e[r]:hw.call(e[r]));for(var></a;s++)n[s]=jt(t[s],e[s],i);else></=1){var></=1){i=i||[];var></0&&(i[n]=0);return></3;n++)i[n]=e<0?i[n]*(1-e)|0:(255-i[n])*e+i[n]|0,i[n]></=.5?o*(n+1):o+n-o*n,r=2*o-a;return></=16777215?(zt(e,(16711680&u)></4,1),vt(t,e),e):void></=4095?(zt(e,(3840&u)></1?t+(e-t)*i*6:2*i<1?e:3*i<2?t+(e-t)*(2></0?i+=1:i></0?0:t></0?0:t></-iw}function></a;o++)e[o]=i(t[o])}}else>]]></content>
    
    <summary type="html">
    
      
      
        /*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux性能优化之内存篇</title>
    <link href="http://yoursite.com/2019/03/10/Linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E5%86%85%E5%AD%98%E7%AF%87/"/>
    <id>http://yoursite.com/2019/03/10/Linux性能优化之内存篇/</id>
    <published>2019-03-10T11:05:56.000Z</published>
    <updated>2019-03-10T12:14:19.988Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#linux内存是怎么工作的">Linux内存是怎么工作的？</a><ul><li><a href="#内存映射">内存映射</a></li><li><a href="#虚拟内存空间分布">虚拟内存空间分布</a></li><li><a href="#内存分配与回收">内存分配与回收</a></li><li><a href="#如何查看内存使用情况">如何查看内存使用情况</a></li></ul></li></ul><!-- tocstop --><h1><span id="linux内存是怎么工作的">Linux内存是怎么工作的？</span></h1><p>内存管理是操作系统最核心的功能之一。内存主要用来存储系统和应用程序的指令、数据、缓存等。</p><p>Linux是怎么管理内存的呢？</p><h2><span id="内存映射">内存映射</span></h2><p>物理内存，也称为主存，大多数计算机用的主存都是动态随机访问内存（DRAM）。</p><p>只有内核才可以直接访问物理内存。进程要访问内存时，该怎么办呢？</p><p>Linux内核给每个进程都提供了一个独立的虚拟地址空间，并且这个地址空间是连续的。</p><p>进程可以很方便地访问虚拟内存。</p><p>虚拟地址空间的内部又被分为内核空间和用户空间两部分，不同字长（单个CPU指令可以处理数的最大长度）的处理器，虚拟地址空间的范围也不同。对于常见的32位和64位系统，它们的虚拟地址空间，如下所示：</p><p><img src="/2019/03/10/Linux性能优化之内存篇/1552216929887.png" alt="1552216929887"></p><p>既然每个进程都有一个这么大的地址空间，那么所有进程的虚拟内存加起来，自然要比实际的物理内存大得多。所以，并不是所有的虚拟内存都会分配物理内存，只有哪些实际使用的虚拟内存才分配物理内存，并且分配后的物理内存，是通过内存映射来管理的。</p><p>内存映射，就是将虚拟内存地址映射到物理内存地址。为了完成内存映射，内核为每个进程都维护了一张页表，记录虚拟地址与物理地址的映射关系，如下图所示：</p><p><img src="/2019/03/10/Linux性能优化之内存篇/1552216874797.png" alt="1552216874797"></p><p>页表存储在CPU的内存管理单元MMU中。</p><p>当进程访问的虚拟地址在页表中查不到时，系统会产生一个缺页异常，进入内核空间分配物理内存、更新进程页表，最后再返回用户空间，恢复进程的运行。</p><p>TLB是MMU中页表的高速缓存。由于进程的虚拟地址空间是独立的，而TLB的访问速度又比MMU快得多，所以，通过减少进程的上下文切换，减少TLB的刷新次数，就可以提高TLB缓存的使用率，进而提高CPU的内存访问性能。</p><p>MMU规定了内存映射的最小单位为页，通常是4KB大小，以页为单位来管理内存。这样，每一次内存映射，都需要关联4KB或4KB整数倍的内存空间。</p><p>页的大小只有4KB，整个页表非常大。比如，32位系统就需要100多万个页表项<sup>4GB/4KB=1048576</sup>，才可以实现整个地址空间的映射。</p><p>为了解决页表项过多的问题，Linux提供了两种机制：</p><ul><li><p><strong>多级页表</strong>：把内存分成区块来管理，将原来的映射关系改成区块索引和区块内的偏移。由于虚拟内存空间通常只用了很少一部分，那么，多级页表就只保持这些使用中的区块，这样就可以大大减少页表的项数。</p><p>Linux用四级页表来管理内存页，如下图所示，虚拟内存被分为5个部分，前4个表项用于选择页，而最后一个索引表示页内偏移。</p><p><img src="/2019/03/10/Linux性能优化之内存篇/1552218344165.png" alt="1552218344165"></p></li><li><p><strong>大页</strong></p><p>指的是比普通页更大的内存块，常见的大小有2MB和1GB。通常用在使用大量内存的进程上，如Oracle、DPDK等</p></li></ul><p>通过以上机制，在页表的映射下，进程就可以通过虚拟地址来访问物理内存了。那么，具体到一个Linux进程中，这些内存又是怎么使用的呢？</p><h2><span id="虚拟内存空间分布">虚拟内存空间分布</span></h2><p>虚拟内存空间的分布情况，以32位系统为例，如下所示：</p><p><img src="/2019/03/10/Linux性能优化之内存篇/1552218920555.png" alt="1552218920555"></p><p>最上方的是内核空间。虽然，每个进程的地址空间都包含了内核空间，但这些内核空间，其实关联的都是相同的物理内存。</p><p>下方的用户空间内存被划分成了多个不同的段。</p><p>从低到高分别是五种不同的内存段：</p><ol><li>只读段，包括代码和常量等；</li><li>数据段，包括全局变量等；</li><li>堆，包括动态分配的内存，从低地址开始向上增长；</li><li>文件映射段，包括动态库、共享内存等，从高地址开始向下增长；</li><li>栈，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是8MB。</li></ol><h2><span id="内存分配与回收">内存分配与回收</span></h2><h2><span id="如何查看内存使用情况">如何查看内存使用情况</span></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#linux内存是怎么工作的&quot;&gt;Linux内存是怎么工作的？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#内存映射&quot;&gt;内存映射&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#虚拟内存空间分布&quot;&gt;虚拟内存空间分布&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的监控</title>
    <link href="http://yoursite.com/2019/03/09/MySQL%E7%9A%84%E7%9B%91%E6%8E%A7/"/>
    <id>http://yoursite.com/2019/03/09/MySQL的监控/</id>
    <published>2019-03-08T18:05:10.000Z</published>
    <updated>2019-03-09T06:17:27.047Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL</p><p>监控哪些内容？</p><ul><li>数据库服务的可用性</li><li>数据库性能</li><li>主从同步的情况</li><li>服务器的资源</li><li></li></ul><p>怎么监控？</p><p>调优</p><p>先找出瓶颈所在，然后针对瓶颈做出优化</p><p>如何找瓶颈？</p><p>利用top ps vmstat iostat netstat /proc/</p><p>然后用perf strace ltrace systemtap 追踪进程 定位函数</p><p>zabbix添加自定义监控项</p><p>写脚本 -&gt; 在agentd.conf中添加UserParameter -&gt; 在server中用zabbix-get测试 -&gt;在web添加item和graph</p><p>故障排查思路：</p><p>网络 DNS解析是否正常 ping延时</p><p>主机</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MySQL&lt;/p&gt;
&lt;p&gt;监控哪些内容？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库服务的可用性&lt;/li&gt;
&lt;li&gt;数据库性能&lt;/li&gt;
&lt;li&gt;主从同步的情况&lt;/li&gt;
&lt;li&gt;服务器的资源&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怎么监控？&lt;/p&gt;
&lt;p&gt;调优&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The Kernel of Nginx之用好浏览器的缓存</title>
    <link href="http://yoursite.com/2019/03/06/The-Kernel-of-Nginx%E4%B9%8B%E7%94%A8%E5%A5%BD%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98/"/>
    <id>http://yoursite.com/2019/03/06/The-Kernel-of-Nginx之用好浏览器的缓存/</id>
    <published>2019-03-06T03:02:25.000Z</published>
    <updated>2019-03-08T12:57:26.489Z</updated>
    
    <content type="html"><![CDATA[<p>浏览器的缓存与nginx缓存</p><ul><li><p>浏览器缓存</p><ul><li>优点：<ul><li>使用有效缓存时，没有网络消耗，速度最快</li><li>即使有网络消耗，但对失效缓存使用304响应做到网络流量消耗最小化</li></ul></li><li>缺点：<ul><li>只提升一个用户的体验</li></ul></li></ul></li><li><p>Nginx缓存</p><ul><li>优点<ul><li>提升所有用户的体验</li><li>相比浏览器缓存，有效降低上游服务的负载</li><li>通过304响应减少Nginx与上游服务间的流量消耗</li></ul></li><li>缺点<ul><li>用户仍然保持网络消耗</li></ul></li></ul></li></ul><p>同时使用浏览器和Nginx缓存</p><p>浏览器缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 浏览器请求</span><br><span class="line">op1=&gt;operation: 有缓存</span><br><span class="line">op2=&gt;operation: 向浏览器请求带If-None_Match</span><br><span class="line">op3=&gt;operation: 向浏览器请求带If-Modified-Since</span><br><span class="line">op4=&gt;operation: 从缓存读取 200（from cache）</span><br><span class="line">op5=&gt;operation: 向web服务器请求</span><br><span class="line">op6=&gt;operation: 请求响应，缓存协商</span><br><span class="line">op7=&gt;operation: 从缓存读取</span><br><span class="line">con1=&gt;condition: 是否过期？</span><br><span class="line">con2=&gt;condition: Etag？</span><br><span class="line">con3=&gt;condition: Last-Modified？</span><br><span class="line">con4=&gt;condition: 200 or 304？</span><br><span class="line">end=&gt;end: 呈现</span><br><span class="line">st-&gt;op1-&gt;con1</span><br><span class="line">con1(no)-&gt;op4-&gt;end</span><br><span class="line">con1(yes)-&gt;con2</span><br><span class="line">con2(yes)-&gt;op2-&gt;con4</span><br><span class="line">con2(no)-&gt;con3</span><br><span class="line">con3(yes)-&gt;op3-&gt;con4</span><br><span class="line">con3(no)-&gt;op5-&gt;op6</span><br><span class="line">con4(yes)-&gt;op6</span><br><span class="line">con4(no)-&gt;op7-&gt;end</span><br><span class="line">op6-&gt;end</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax： etag on|off;</span><br><span class="line">Default: etag on;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ngx_sprintf(etag-&gt;value.data, <span class="string">"\"%xT-%xO\""</span>,</span><br><span class="line">           r-&gt;headers_out.last_modified_time,</span><br><span class="line">           r-&gt;headers_out.contect_length_n)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;浏览器的缓存与nginx缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;浏览器缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;使用有效缓存时，没有网络消耗，速度最快&lt;/li&gt;
&lt;li&gt;即使有网络消耗，但对失效缓存使用304响应做到网络流量消耗最小化&lt;/li&gt;
&lt;/ul&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx的优化</title>
    <link href="http://yoursite.com/2019/03/06/nginx%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2019/03/06/nginx的优化/</id>
    <published>2019-03-06T02:26:22.000Z</published>
    <updated>2019-03-09T07:03:53.685Z</updated>
    
    <content type="html"><![CDATA[<p>针对Nginx的优化，思路是什么？</p><p>硬件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;针对Nginx的优化，思路是什么？&lt;/p&gt;
&lt;p&gt;硬件&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>无之文</title>
    <link href="http://yoursite.com/2019/03/04/%E6%97%A0%E9%A2%98/"/>
    <id>http://yoursite.com/2019/03/04/无题/</id>
    <published>2019-03-03T16:28:27.000Z</published>
    <updated>2019-03-10T15:41:08.762Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>‘无意识流’<sup>自撰</sup>码点字儿，权当消遣、游戏。</p><p>具体写些什么，写出什么，我自己也是不知道的。</p><p>不断填充，每更以时间戳为领。19/3/6</p></blockquote><!-- toc --><ul><li><a href="#1934">19/3/4</a></li><li><a href="#1935">19/3/5</a></li><li><a href="#1936">19/3/6</a></li><li><a href="#1938">19/3/8</a></li><li><a href="#1939">19/3/9</a></li><li><a href="#19310">19/3/10</a></li></ul><!-- tocstop --><h1><span id="1934">19/3/4</span></h1><p>老夫聊发少年狂，不自量，频思量，要和困滞斗一场<br>人生不如意十八九，又何必，妄自沉，且奋起，争朝夕，人生百年是不枉</p><p>内核源码纷上阵，战得个天昏又地暗<br>人道是，廿一世纪，人工智能日日新，所能之事无限<br>现如今，百业俱兴于互联网<br>信息流转无量，人人都是网中虫<br>码农立功改了世界，创了互联界，人神之间自此有了个第三界</p><p>微信淘宝千百度，淘了个什么，又信了个什么？<br>大小屏幕满城皆是，人人淹没其间。<br>要在屏幕引源流，码农誓要战到深夜，不眠不休。</p><p>王者荣耀坑起来，坑到王者亦非常人也<br>鲁班后羿虽善射，易被珂切<br>项羽是个霸王，本色是喜欢虞姬<br>妲己是个妖女，总想一套秒<br>凯也是个肉，打不死还善单挑<br>典韦疯癫，满场飞奔…</p><p>恩金克思是个宝<br>鲁啊美月协助跑<br>林刘克思做服务<br>韦伯搞网成了王</p><hr><h1><span id="1935">19/3/5</span></h1><p>iHola!</p><p>¿Como estas?</p><p>香尘已隔犹回面<br>居人匹马映林嘶</p><p>新绿小池塘<br>帘动、碎影、斜阳<br>金屋去来 旧时巢燕<br>土花缭绕 前度霉墙<br>绣阁凤帷理丝簧</p><p>天寒水鸟自相依<br>十百为群戏落辉<br>行人过尽都不起<br>忽闻水响一起飞</p><p>携杖来追凉<br>花桥倚胡床<br>船笛参差起<br>池莲自在香</p><hr><h1><span id="1936">19/3/6</span></h1><p>知海无涯<br>海里行<br>无向即无功<br>看四周，都是极似<br>手中罗盘<br>历历晰晰<br>准方向<br>不旁骛<br>自可离海登陆<br>船体牢靠<br>方向笃定<br>定成航海王，掌控自生</p><hr><p>不自怨艾，稳住，都将烟消云散<br>云开日现<br>金晖永在，云遮不显<br>拨云自可见日<br>谁可拨？<br>大风耶？大风起兮云飞扬<br>大风来，尘土混乌云，暗无天日<br>小风耶？和风暖阳，自是佳时<br>小风何来？自来也<br>拨云见日者，非人力<br>人自求福，不自作孽，静待日开，得其光<br>但日总在，不因云遮就无<br>光透云，人依然可得其几许<br>故莫担心，莫贪心，莫失心<br>阴晴才是此间正道<br>阴晴都是那颗太阳</p><hr><h1><span id="1938">19/3/8</span></h1><p>二月二日 三八女节<br>雌雄合一 天地交泰<br>龙飞凤舞 双翔呈瑞<br>元亨利贞 吉吉吉吉</p><hr><h1><span id="1939">19/3/9</span></h1><p>痛通，痛得不欲生，就通了<br>自不量力者，撞的头破血流，心痛通</p><p>太阳照常升起，逝者从未停歇<br>珍惜光阴，涓滴莫弃<br>昨天已不复存在，明天从未到来，唯有今天，才是所有</p><p>乱 清理 有序<br>减 减 减<br>只剩一个 所向披靡</p><p>不家 于外 往西行</p><hr><h1><span id="19310">19/3/10</span></h1><p>喜鹊上下游嬉<br>貔貅口衔红币<br>金蟾门口招财<br>晶洞坐镇玄武<br>金鸡雄立西方</p><p>尼采句，大乱写：</p><p>能飞之人向上飞<br>于不能飞之人看来，<br>愈高愈渺</p><p>凝视深渊，深渊亦然<br>与恶魔斗，慎成恶魔</p><p>每天<br>若不曾起舞<br>即是<br>辜负生命</p><p>谦逊基于力量<br>傲慢基于无能</p><p>世界弥漫着焦躁不安，因众人皆急于从各自的枷锁中获得解放</p><p>不懂自己才是生命中最难的部分</p><p>曲则全，要曲莫直，曲曲折折，真理渐得显现</p><p>埋怨自己、憎恨他人之时。。。你需要休息了！</p><p>无有音乐，生活是错</p><p>智慧是个女人，她只爱战士——愿你勇敢、无忧、刚强</p><p>明为何而活，自可承受一切，幸与不幸</p><p>受苦之人，没有悲观的权力</p><script type="text/javascript" src="js/echarts.min.js"></script><p><div id="map-wrap" style="width: 600px;height:400px;"></div></p><script>var bmapChart=echarts.init(document.getElementById("map-wrap"));var data=[{name:"上海",value:299},{name:"厦门",value:245},{name:"丰城",value:120},{name:"南昌",value:160},{name:"张家界",value:128},{name:"长沙",value:75},{name:"杭州",value:90},{name:"福州",value:90},{name:"深圳",value:90},{name:"武汉",value:73}];var geoCoordMap={"厦门":[118.105,24.443],"上海":[121.399,31.321],"丰城":[115.801,28.201],"南昌":[115.856,28.691],"张家界":[110.489,29.118],"福州":[119.3,26.08],"长沙":[113,28.21],"杭州":[120.16,30.28],"深圳":[114.06,22.55],"武汉":[114.31,30.52]};var convertData=function(data){var res=[];for(var i=0;i<data.length;i++){var geoCoord=geoCoordMap[data[i].name];if(geoCoord){res.push({name:data[i].name,value:geoCoord.concat(data[i].value)})}}return res};option={title:{text:"我们的足迹 - Our footprints",subtext:"一步一个脚印，让时光见证",sublink:"#",left:"center"},tooltip:{trigger:"item"},bmap:{center:[106.320439,32.58783],zoom:5,roam:true,mapStyle:{styleJson:[{"featureType":"water","elementType":"all","stylers":{"color":"#d1d1d1"}},{"featureType":"land","elementType":"all","stylers":{"color":"#f3f3f3"}},{"featureType":"railway","elementType":"all","stylers":{"visibility":"off"}},{"featureType":"highway","elementType":"all","stylers":{"color":"#fdfdfd"}},{"featureType":"highway","elementType":"labels","stylers":{"visibility":"off"}},{"featureType":"arterial","elementType":"geometry","stylers":{"color":"#fefefe"}},{"featureType":"arterial","elementType":"geometry.fill","stylers":{"color":"#fefefe"}},{"featureType":"poi","elementType":"all","stylers":{"visibility":"off"}},{"featureType":"green","elementType":"all","stylers":{"visibility":"off"}},{"featureType":"subway","elementType":"all","stylers":{"visibility":"off"}},{"featureType":"manmade","elementType":"all","stylers":{"color":"#d1d1d1"}},{"featureType":"local","elementType":"all","stylers":{"color":"#d1d1d1"}},{"featureType":"arterial","elementType":"labels","stylers":{"visibility":"off"}},{"featureType":"boundary","elementType":"all","stylers":{"color":"#fefefe"}},{"featureType":"building","elementType":"all","stylers":{"color":"#d1d1d1"}},{"featureType":"label","elementType":"labels.text.fill","stylers":{"color":"#999999"}}]}},series:[{name:"footmark",type:"scatter",coordinateSystem:"bmap",data:convertData(data),symbolSize:function(val){return val[2]/10},label:{normal:{formatter:"{b}",position:"right",show:false},emphasis:{show:true}},itemStyle:{normal:{color:"#60C0DD"}}},{name:"I miss you",type:"effectScatter",coordinateSystem:"bmap",data:convertData(data.sort(function(a,b){return b.value-a.value}).slice(0,2)),symbolSize:function(val){return val[2]/10},showEffectOn:"render",rippleEffect:{brushType:"stroke"},hoverAnimation:true,label:{normal:{formatter:"{b}",position:"right",show:true}},itemStyle:{normal:{color:"purple",shadowBlur:10,shadowColor:"#333"}},zlevel:1}]};bmapChart.setOption(option);</script><script>    var symbolSize = 20;    var data = [[15, 0], [-50, 10], [-56.5, 20], [-46.5, 30], [-22.1, 40]];    var points = [];    option = {    title: {        text: 'Click to Add Points'    },    tooltip: {        formatter: function (params) {            var data = params.data || [0, 0];            return data[0].toFixed(2) + ', ' + data[1].toFixed(2);        }    },    grid: {        left: '3%',        right: '4%',        bottom: '3%',        containLabel: true    },    xAxis: {        min: -60,        max: 20,        type: 'value',        axisLine: {onZero: false}    },    yAxis: {        min: 0,        max: 40,        type: 'value',        axisLine: {onZero: false}    },    series: [        {            id: 'a',            type: 'line',            smooth: true,            symbolSize: symbolSize,            data: data        }    ]};var zr = myChart.getZr();zr.on('click', function (params) {    var pointInPixel = [params.offsetX, params.offsetY];    var pointInGrid = myChart.convertFromPixel('grid', pointInPixel);    if (myChart.containPixel('grid', pointInPixel)) {        data.push(pointInGrid);        myChart.setOption({            series: [{                id: 'a',                data: data            }]        });    }});zr.on('mousemove', function (params) {    var pointInPixel = [params.offsetX, params.offsetY];    zr.setCursorStyle(myChart.containPixel('grid', pointInPixel) ? 'copy' : 'default');});</script><p><div id="main" style="width: 600px;height:400px;"></div></p><script type="text/javascript">var myChart = echarts.init(document.getElementById('main'));var option = {            title: {                text: 'ECharts 入门示例'            },            tooltip: {},            legend: {                data:['销量']            },            xAxis: {                data: ["衬衫","羊毛衫","雪纺衫","裤子","高跟鞋","袜子"]            },            yAxis: {},            series: [{                name: '销量',                type: 'bar',                data: [5, 20, 36, 10, 10, 20]            }]        };myChart.setOption(option);</script><p>hello world!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;‘无意识流’&lt;sup&gt;自撰&lt;/sup&gt;码点字儿，权当消遣、游戏。&lt;/p&gt;
&lt;p&gt;具体写些什么，写出什么，我自己也是不知道的。&lt;/p&gt;
&lt;p&gt;不断填充，每更以时间戳为领。19/3/6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- toc --&gt;
&lt;u
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx中的位运算</title>
    <link href="http://yoursite.com/2019/03/02/Nginx%E5%92%8C%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2019/03/02/Nginx和位运算/</id>
    <published>2019-03-02T10:39:45.000Z</published>
    <updated>2019-03-03T18:01:08.912Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本篇是学习<a href="https://www.jishuwen.com/d/2EGC/zh-hk" target="_blank" rel="noopener">其他博文</a>的笔记，根据自己的理解，做了些增补和简化。</p></blockquote><p>位运算在Nginx的源码处处可见，如</p><ul><li><p>定义指令的类型</p></li><li><p>标记当前请求是否还有未发送完的数据</p></li><li><p>事件模块里用指针的最低位来标记一个事件是否过期</p></li></ul><p>下面分析以下在Nginx中位运算的经典使用场景。</p><h1><span id="经典使用场景">经典使用场景</span></h1><h2><span id="对齐">对齐</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/core/ngx_config.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ngx_align(d, a)     (((d) + (a - 1)) &amp; ~(a - 1))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ngx_align_ptr(p, a)                                                    \</span></span><br><span class="line">    (u_char *) (((<span class="keyword">uintptr_t</span>) (p) + ((<span class="keyword">uintptr_t</span>) a - <span class="number">1</span>)) &amp; ~((<span class="keyword">uintptr_t</span>) a - <span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>该宏使得d按a对齐<sup>第一个大于等于d的a倍数</sup>，其中a必须是2的幂次。</p><p>此宏就是寻找最小的且大于等于d的a的倍数。</p><p>由于a是2的幂次，因此a的二进制表示为00…1…00这样的形式，即它只有一个1，a-1便是00…01…1这样的形式。</p><p>接着，~(a-1)就会将低n为全部置0，n为a的低位连续0的个数。</p><p>此时，如果再将一个数和~（a-1）进行一次按位与，就能把这个数的低n位都清零（即成为a的倍数）。</p><p>而把这个数的低n位都清零，最多是从这个数减去a-1。</p><p>故而，d+（a-1）在经过和~（a-1）按位与而做了清零操作之后，最多也是减去a-1，也就是说，经过低位清零之后，其值最小是d，这样我们就得到了一个大于等于d，且低n位是0的对齐数，即一个大于等于d的a倍数。且是第一个大于等于d的a的倍数。</p><h2><span id="位图">位图</span></h2><p>位图，用以标记状态，只使用一个比特位来标记事物，从而节约内存，提升性能。</p><p>Nginx在对uri进行转义时，需要判断一个字符是否是一个保留字符，这样的字符需要被转义。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// src/core/ngx_string.c</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span>   uri_component[] = &#123;</span><br><span class="line">        <span class="number">0xffffffff</span>, <span class="comment">/* 1111 1111 1111 1111  1111 1111 1111 1111 */</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">/* ?&gt;=&lt; ;:98 7654 3210  /.-, +*)( '&amp;%$ #"!  */</span></span><br><span class="line">        <span class="number">0xfc009fff</span>, <span class="comment">/* 1111 1100 0000 0000  1001 1111 1111 1111 */</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">/* _^]\ [ZYX WVUT SRQP  ONML KJIH GFED CBA@ */</span></span><br><span class="line">        <span class="number">0x78000001</span>, <span class="comment">/* 0111 1000 0000 0000  0000 0000 0000 0001 */</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">/*  ~&#125;| &#123;zyx wvut srqp  onml kjih gfed cba` */</span></span><br><span class="line">        <span class="number">0xb8000001</span>, <span class="comment">/* 1011 1000 0000 0000  0000 0000 0000 0001 */</span></span><br><span class="line"></span><br><span class="line">        <span class="number">0xffffffff</span>, <span class="comment">/* 1111 1111 1111 1111  1111 1111 1111 1111 */</span></span><br><span class="line">        <span class="number">0xffffffff</span>, <span class="comment">/* 1111 1111 1111 1111  1111 1111 1111 1111 */</span></span><br><span class="line">        <span class="number">0xffffffff</span>, <span class="comment">/* 1111 1111 1111 1111  1111 1111 1111 1111 */</span></span><br><span class="line">        <span class="number">0xffffffff</span>  <span class="comment">/* 1111 1111 1111 1111  1111 1111 1111 1111 */</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>如上所示，一个数组组成一个位图，共包含8各数字，每个数字表示32个状态，因此这个位图标识出了256个字符的状态。为0的位表示一个通用字符，不需要转义，为1的位代表该字符需要转义。<br>如何使用这个位图呢？Nginx在遍历uri的时候，通过一条简单的语句来进行判断：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uri_component[ch &gt;&gt; <span class="number">5</span>] &amp; (<span class="number">1</span> &lt;&lt; (ch &amp; <span class="number">0x1f</span>))</span><br></pre></td></tr></table></figure><p>如上所示，ch表示当前字符，ch&gt;&gt;5是对ch右移5位，这起到一个除以32的效果，这一步操作确定了ch在uri_component的第几个数字上；</p><p>ch&amp;0x1f，则是取出ch低5位的值，相当于取模32，这个值表示ch在对应数字上的第几位；</p><p>1&lt;&lt;(ch&amp;0x1f)，将1左移ch在对应数字上的所在位数。将该数和对应数字相与，就可以取出对应数字上与ch相对应位置的bit位。</p><p>如：ch是‘0’（即数字48），它存在于位图的第二个数字上（48&gt;&gt;5=1)，又在这个数字（0xfc009fff）的第16位上，所以它的状态就是0xfc009fff &amp; 0x10000 = 0，所以‘0’是个通用字符，不用对它转义。</p><blockquote><p>位运算技巧：对一个2的幂次的数进行取模或者除操作的时候，可以通过位运算来实现。</p></blockquote><h2><span id="寻找最低位1的位置">寻找最低位1的位置</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; ~(x - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>~(x-1)使得除了最低位1的那个位置，其他位置和x都是相反的，因此二者进行按位与操作后，结果里只可能有一个1，便是原本x最低位的1。</p><h2><span id="寻找最高位1的位置">寻找最高位1的位置</span></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">size_t</span> bsf(<span class="keyword">size_t</span> input)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">size_t</span> pos;</span><br><span class="line"></span><br><span class="line">    __asm__(<span class="string">"bsfq %1, %0"</span> : <span class="string">"=r"</span> (pos) : <span class="string">"rm"</span> (input));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">size_t bsf(size_t input)</span><br><span class="line">&#123;</span><br><span class="line">    input |= input &gt;&gt; 1;</span><br><span class="line">    input |= input &gt;&gt; 2;</span><br><span class="line">    input |= input &gt;&gt; 4;</span><br><span class="line">    input |= input &gt;&gt; 8;</span><br><span class="line">    input |= input &gt;&gt; 16;</span><br><span class="line">    input |= input &gt;&gt; 32;</span><br><span class="line"></span><br><span class="line">    return input - (input &gt;&gt; 1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="计算1的个数">计算1的个数</span></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本篇是学习&lt;a href=&quot;https://www.jishuwen.com/d/2EGC/zh-hk&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;其他博文&lt;/a&gt;的笔记，根据自己的理解，做了些增补和简化。&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>微服务设计</title>
    <link href="http://yoursite.com/2019/02/28/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2019/02/28/微服务设计/</id>
    <published>2019-02-28T14:53:03.000Z</published>
    <updated>2019-02-28T15:02:21.320Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="微服务">微服务</span></h1><h1><span id="演化式架构师">演化式架构师</span></h1><h1><span id="如何建模服务">如何建模服务</span></h1><h1><span id="集成">集成</span></h1><h1><span id="分解单块系统">分解单块系统</span></h1><h1><span id="部署">部署</span></h1><h1><span id="测试">测试</span></h1><h1><span id="监控">监控</span></h1><h1><span id="安全">安全</span></h1><h1><span id="康威定律和系统设计">康威定律和系统设计</span></h1><h1><span id="规模化微服务">规模化微服务</span></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;微服务&quot;&gt;微服务&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span id=&quot;演化式架构师&quot;&gt;演化式架构师&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span id=&quot;如何建模服务&quot;&gt;如何建模服务&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span id=&quot;集成&quot;&gt;集成&lt;/span
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript In A Nutshell</title>
    <link href="http://yoursite.com/2019/02/26/JavaScript-In-A-Nutshell/"/>
    <id>http://yoursite.com/2019/02/26/JavaScript-In-A-Nutshell/</id>
    <published>2019-02-25T17:49:28.000Z</published>
    <updated>2019-03-02T07:54:16.741Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="基础">基础</span></h1><h2><span id="运行时页面构建过程">运行时页面构建过程</span></h2><h3><span id="生命周期概览">生命周期概览</span></h3><p><img src="/2019/02/26/JavaScript-In-A-Nutshell/1551510836738.png" alt="1551510836738"></p><p>客户端Web应用的周期从用户指定某个网站地址开始，由两个步骤组成：<strong>页面构建和事件处理</strong>。</p><p>来个例子，这个例子展示：每当用户移动鼠标或单击页面就会显示一条消息。</p><p>以下是代码：</p><p><img src="/2019/02/26/JavaScript-In-A-Nutshell/1551511209573.png" alt="1551511209573"></p><p>以下是运行和交互结果：</p><p><img src="/2019/02/26/JavaScript-In-A-Nutshell/1551512582730.png" alt="1551512582730"></p><h3><span id="页面构建阶段">页面构建阶段</span></h3><p>该阶段的目标是建立web应用的UI，主要包括两个步骤：</p><ul><li>解析HTML代码并构建文档对象模型（DOM）；</li><li>执行JavaScript代码。</li></ul><p><img src="/2019/02/26/JavaScript-In-A-Nutshell/1551512933518.png" alt="1551512933518"></p><p><img src="/2019/02/26/JavaScript-In-A-Nutshell/1551513184204.png" alt="1551513184204"></p><h3><span id="事件处理">事件处理</span></h3><h1><span id="理解函数">理解函数</span></h1><p>定义与参数</p><p>理解函数调用</p><p>闭包和作用域</p><p>生成器和promise</p><h1><span id="钻研对象">钻研对象</span></h1><p>面向对象与原型</p><p>控制对象的访问</p><p>处理集合</p><p>正则表达式</p><p>代码模式化</p><h1><span id="洞悉浏览器">洞悉浏览器</span></h1><p>DOM操作</p><p>事件</p><p>跨浏览器的开发技巧</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;基础&quot;&gt;基础&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;运行时页面构建过程&quot;&gt;运行时页面构建过程&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;生命周期概览&quot;&gt;生命周期概览&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2019/02/
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Nginx的配置</title>
    <link href="http://yoursite.com/2019/02/21/Nginx%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/02/21/Nginx的配置/</id>
    <published>2019-02-21T15:21:21.000Z</published>
    <updated>2019-02-24T12:50:13.731Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="运行中的nginx进程间的关系">运行中的Nginx进程间的关系</span></h1><p>在正式提供服务的产品环境中，部署Nginx时都是使用一个master进程来管理多个worker进程，一般情况下，worker进程的数量与服务器上的CPU核心数相等。每一个worker进程都时繁忙的，它们在真正地提供互联网服务，master进程则很“清闲”，只负责监控管理worker进程。worker之间通过共享内存、原子操作等一些进程间通信机制来实现负载均衡等功能。</p><p>Nginx是支持单进程（master进程）提供服务的，那么为什么产品环境下要按照master、worker方式配置同时启动多个进程呢？这样做的好处主要有一下两点：</p><ul><li>由于master进程不会对用户请求提供服务，只用于管理真正提供服务的worker进程，所以master进程可以是唯一的，它仅专注于自己的纯管理工作，为管理员提供命令行服务，包括诸如启动服务、停止服务、重新配置文件、平滑升级程序等。master进程需要拥有较大的权限，例如，通常会使用root用户启动master进程。worker进程的权限要小于或者等于master进程，这样master进程才可以完全地管理worker进程。当任意一个worker进程出现错误从而导致coredump时，master进程会立刻启动新的worker进程继续服务。</li><li>多个worker进程处理互联网请求不但可以提高服务的健壮性，最重要的是，这样可以充分利用现在常见的SMP多核架构，从而实现微观上真正的多核并发处理。为什么要把worker进程数量设置得跟CPU核心数量一致呢？对于Nginx，一个worker进程可以同时处理的请求数只受限于内存大小，而且在架构上，<strong>不同的worker进程之间处理并发请求时几乎没有同步锁的限制</strong>，worker进程通常不会进入睡眠状态，因此，当Nginx上的进程数与CPU核心数相等时（最好每一个worker进程都绑定特定的CPU核心【使用taskset命令来设置进程的CPU亲和性（affinity），将进程绑定到某个或某组CPU核心上】），进程间的切换的代价是最小的。</li></ul><h1><span id="nginx服务的基本配置">Nginx服务的基本配置</span></h1><h2><span id="用于调试进程和定位问题的配置项">用于调试进程和定位问题的配置项</span></h2><ol><li><p>是否以守护进程方式运行Nginx</p><p>语法：daemon on|off;</p><p>默认：daemon on;</p><p>关闭守护进程的模式，方便使用gdb跟踪调试Nginx，在研究Nginx架构时很有用。</p></li><li><p>是否以master/worker方式工作</p><p>语法：master_process on | off;</p><p>默认：master_process on;</p><p>如果用off关闭了master_process方式，就不会fork出worker子进程来处理请求，而是用master进程自身来处理请求。</p></li><li><p>error日志的位置</p><p>语法：error_log /path/file level;</p><p>默认：error_log logs/error.log error;</p><p>error日志是定位Nginx问题的最佳工具，我们可以根据自己的需求妥善设置error日志的路径和级别。<br>/path/file可以是：</p><ul><li>一个具体的文件，例如，默认情况下是logs/error.log文件，最好将它放到一个磁盘空间足够大的位置；</li><li>也可以是/dev/null，这也是关闭error日志的唯一方法；</li><li><p>也可以是stderr，将日志输出到标准错误文件中；</p><p>level是日志的输出级别，取值范围是debug、info、notice、warn、error、crit、alert、emerg，从左到右级别依次增大。当设定一个级别时，大于或者等于该级别的日志都会输出到/path/file文件中，小于该级别的日志则不会输出。</p><p>如果日志级别设定到debug，必须在configure时加入–with-debug配置项。</p></li></ul></li><li><p>是否处理几个特殊的调试点</p><p>语法：debug_points [stop|abort]</p><p>这个配置项也是用来帮助用户跟踪调试Nginx的。Nginx在一些关键的错误逻辑中设置了调试点。如果设置了debug_points为stop，那么Nginx的代码执行到这些调试点时就会发出SIGSTOP信号以用于调试。如果设置为abort，则会产生一个coredump文件，可以使用gdb来查看Nginx当时的各种信息。</p></li><li><p>仅对指定的客户端输出debug级别的日志</p><p>语法：debug_connection [IP|CIDR]</p><p>这个配置项实际上属于事件类配置，因此，它必须放在events {…}中才有效。</p><p>对来自于指定IP地址的请求才会输出debug级别的日志，其他请求仍然沿用error_log中配置的日志级别。</p></li><li><p>限制coredump核心转储文件的大小</p><p>语法：worker_rlimit_core size;</p><p>在Linux系统中，当进程发生错误或收到信号而终止时，系统会将进程执行时的内存内容写入一个文件，以作为调试只用，这就是所谓的核心转储（core dumps）.</p></li><li><p>指定coredump文件生成目录</p><p>语法：working_directory path;</p></li></ol><h2><span id="正常运行的配置项">正常运行的配置项</span></h2><ol><li><p>定义环境变量</p><p>语法：env VAR|VAR=VALUE;</p><p>这个配置项可以让用户直接设置操作系统上的环境变量。</p></li><li><p>嵌入其他配置文件</p><p>语法：include /path/file;</p></li><li><p>pid文件的路径</p><p>语法：pid /path/file;</p><p>默认：pid logs/nginx.pid;</p></li><li><p>Nginx worker进程运行的用户和用户组</p><p>语法：user username [groupname];</p><p>默认：user nobody nodoby;</p></li><li><p>指定Nginx worker进程可以打开的最大句柄描述符个数</p><p>语法：worker_rlimit_nofile limit;</p></li><li><p>限制信号队列</p><p>语法：worker_rlimit_sigpending limit;</p><p>设置每个用户发往Nginx的信号队列的大小。也就是说，当某个用户的信号队列满了，这个用户再发送的信号量就会被丢掉。</p></li></ol><h2><span id="优化性能的配置项">优化性能的配置项</span></h2><ol><li><p>Nginx worker进程个数</p><p>语法：worker_processes number;</p><p>默认：worker_processes 1;</p></li><li><p>绑定Nginx worker进程到指定的CPU内核</p><p>语法：worker_cpu_affinity cpumask [cpumask…]</p><p>例如，如果有4个CPU内核，可以进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">worker_processes 4;</span><br><span class="line">worker_cpu_affinity 1000 0100 0010 0001;</span><br></pre></td></tr></table></figure></li><li><p>SSL硬件加速</p><p>语法：ssl_engine device;</p><p>如果服务器上有ssl硬件加速设备，那么就可以进行配置以加快SSL协议的处理速度。</p></li><li><p>系统调用gettimeofday的执行频率</p><p>语法：timer_resolution t;</p><p>默认情况下，每次内核的事件调用（如epoll、select、poll、kqueue等）返回时，都会执行一次gettimeofday，实现用内核的时钟来更新Nginx中的缓存时钟。</p><p>在早期的内核中，gettimeofday的执行代价不小，因为中间有一次内核态到用户态的内存复制。需要降低gettimeofday的调用频率时，可以使用该配置项，表示至少每t秒才调用一次。</p><p>但在目前的大多数内核中，gettimeofday只是一次vsyscall，仅仅是对共享内存页中的数据做访问，并不是通常的系统调用，代价不大，一般不必使用这个配置。</p></li><li><p>Nginx worker进程优先级设置</p><p>语法：worker_priority nice;</p><p>默认：worker_pricrity 0;</p><p>当有多个进程处于可执行状态时，系统将按照所有进程的优先级来决定本次内核选择哪一个进程执行。</p><p>进程所分配的时间片大小也与进程优先级相关，优先级越高，进程分配到的时间片也就越大。</p><p>（在默认配置下，最小的时间片时5ms，最大的时间片则有800ms。）</p><p>这样，优先级高的进程会占有更多的系统资源。</p></li></ol><h2><span id="事件类配置项">事件类配置项</span></h2><ol><li><p>是否打开accept锁</p><p>语法：accept_mutex [on|off];</p><p>默认：accept_mutex on;</p><p>accept_mutex是Nginx的负载均衡锁。</p><p>这把锁可以让多个worker进程轮流地、序列化地与新的客户端建立TCP连接。</p><p>当某个worker进程建立的连接数量达到worker_connections配置的最大连接数的7/8时，会大大地减小该worker进程试图建立新TCP连接的机会，以此实现所有的worker进程之上处理的客户端请求数尽量接近。</p><p>如果关闭它，那么建立TCP连接的耗时会更短，但worker进程之间的负载会非常不均衡。不建议关闭它。</p></li><li><p>lock文件的路径</p><p>语法：lock_file path/file;</p><p>默认：lock_file logs/nginx.lock;</p><p>accept_mutex为off时，此配置完全不生效。</p><p>accept_mutex为on是，若由于编译程序、操作系统导致Nginx不支持原子锁，这时会用文件锁来实现accecpt锁，此时lock_file所指定的lock文件才会生效。</p><blockquote><p><strong>文件锁</strong>：在多任务操作系统中，如果一个进程尝试对正在被其他进程读取的文件进行写操作，可能会导致正在进行读操作的进程读取到一些被破坏或者不完整的数据；如果两个进程并发对同一个文件进行写操作，可能会导致该文件遭到破坏。因此，为了避免发生这种问题，必须要采用某种机制来<strong>解决多个进程并发访问同一个文件时所面临的同步问题</strong>，由此而产生了文件加锁方面的技术。</p><p>Linux支持的文件锁主要包括劝告锁（advisory lock）和强制锁（mandatory lock）这两种。此外，Linux中还引入了两种强制锁的变种形式：共享模式强制锁（share-mode mandatory lock）和租借锁（lease）。</p></blockquote></li><li><p>使用accept锁后到真正建立连接之间的延迟时间</p><p>语法：accept_mutex_delay Nms;</p><p>默认：accept_mutex_delay 500ms;</p><p>在使用accept锁后，同一时间只有一个worker进程能够取到accept锁。这个锁不是阻塞锁，如果取不到会立刻返回。如果有一个worker进程试图取锁而未得，它至少要等该配置项所定义的时间间隔后才能再次试图取锁。</p></li><li><p>批量建立新连接</p><p>语法：multi_accept [on|off];</p><p>默认：multi_accept off;</p><p>当事件模型通知有新连接时，尽可能地对本次调度中客户端发起的所有TCP请求都建立连接。</p></li><li><p>选择事件模型</p><p>语法：use [kqueue|rtsig|epoll|/dev/poll|select|poll|eventport];</p><p>默认：Nginx会自动使用最合适的事件模型。</p><p>在Linux系统中，epoll性能是最高的。</p></li><li><p>每个worker的最大连接数</p><p>语法：worker_connections number;</p><p>定义每个worker进程可以同时处理的最大连接数。</p></li></ol><h1><span id="使用http核心模块配置一个静态web服务器">使用HTTP核心模块配置一个静态Web服务器</span></h1>]]></content>
    
    <summary type="html">
    
      Nginx的配置详解
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Web性能基础</title>
    <link href="http://yoursite.com/2019/02/21/Web%E6%80%A7%E8%83%BD%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/02/21/Web性能基础/</id>
    <published>2019-02-21T02:54:57.000Z</published>
    <updated>2019-02-24T12:48:20.377Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="网络技术概览">网络技术概览</span></h1><h2><span id="延迟与带宽">延迟与带宽</span></h2><p>速度是关键</p><p>WPO（Web Performance Optimization）产业从无到有，快速增长，充分说明用户越来越重视速度方面的用户体验。</p><p>业绩证实：</p><ul><li>网站越快，用户的黏性越高</li><li>网站越快，用户忠诚度更高</li><li>网站越快，用户转化率越高</li></ul><p>延迟和带宽：</p><ul><li><p>延迟：分组从信息源发送到目的地所需的时间</p></li><li><p>带宽：逻辑或物理通信路径最大的吞吐量</p></li></ul><p>延迟的构成：</p><ul><li>传播延迟<br>消息从发送端到接收端需要的时间，是信号传播距离和速度的函数</li><li>传输延迟<br>把消息中的所有比特转移到链路中需要的时间，是消息长度和链路速率的函数</li><li>处理延迟<br>处理分组首部、检查位错误及确定分组目标所需的时间</li><li>排队延迟<br>到来的分组排队等待处理的时间</li></ul><blockquote><p>在软件交互中，哪怕100-200ms左右的延迟，大多数人都会感觉到‘拖拉’；如果超过了300ms的门槛，就会说“反应迟钝”。</p></blockquote><blockquote><p>光速与分组在介质中传播速度之比，叫做该介质的折射率。我们大都假定光纤的折射率约为1.5，即光通过光纤的速度约为每秒200，000，000米。</p></blockquote><h2><span id="tcp">TCP</span></h2><h2><span id="udp">UDP</span></h2><h2><span id="tls">TLS</span></h2><h1><span id="无线网络性能">无线网络性能</span></h1><h2><span id="wifi">WIFI</span></h2><h2><span id="移动网络">移动网络</span></h2><h1><span id="http">HTTP</span></h1><h2><span id="http-1x">HTTP 1.x</span></h2><h2><span id="http-20">HTTP 2.0</span></h2><h2><span id="优化应用的交付">优化应用的交付</span></h2><h1><span id="浏览器api与协议">浏览器API与协议</span></h1><h2><span id="xmlhttprequest">XMLHttpRequest</span></h2><h2><span id="服务器发送事件">服务器发送事件</span></h2><h2><span id="websocket">websocket</span></h2><p>WebSocket可以实现客户端与服务器间同时双向、基于消息的文本或二进制数据传输。<br>WebSocket使得浏览器具备了实时、双向通信的能力，是由HTML5开始提供的一种浏览器与服务器进行全双工通讯的网络技术，属于应用层协议。基于TCP传输协议，并复用HTTP的握手通道。</p><ul><li>优点：<ul><li>支持双向通信，实时性更强</li><li>更好的支持二进制</li><li>较少的控制开销。连接创建后，ws客户端、服务的进行数据交换时，协议控制的数据包头部较小。</li><li>支持扩展。可以扩展协议，实现自定义的自协议（如自定义压缩算法等）</li></ul></li></ul><h3><span id="1-入门例子">1. 入门例子：</span></h3><ul><li>1.1 <strong>服务端</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="built_in">require</span>(<span class="string">'express'</span>)();</span><br><span class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'http'</span>).Server(app);</span><br><span class="line"><span class="keyword">var</span> WebSocket = <span class="built_in">require</span>(<span class="string">'ws'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wss = <span class="keyword">new</span> WebSocket.Server(&#123; <span class="attr">port</span>: <span class="number">8080</span> &#125;);</span><br><span class="line"></span><br><span class="line">wss.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> <span class="title">connection</span>(<span class="params">ws</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'server: receive connection.'</span>);</span><br><span class="line">    </span><br><span class="line">    ws.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> <span class="title">incoming</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'server: received %s'</span>, message);</span><br><span class="line">        ws.send(<span class="string">'server: reply'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    ws.on(<span class="string">'pong'</span>, () =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'server: received pong from client'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    ws.send(<span class="string">'world'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// setInterval(() =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     ws.ping('', false, true);</span></span><br><span class="line">    <span class="comment">// &#125;, 2000);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.sendfile(__dirname + <span class="string">'/index.html'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><ul><li>1.2 <strong>客户端</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> ws = <span class="keyword">new</span> WebSocket(<span class="string">'ws://localhost:8080'</span>);</span><br><span class="line">  ws.onopen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ws onopen'</span>);</span><br><span class="line">    ws.send(<span class="string">'from client: hello'</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  ws.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ws onmessage'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'from server: '</span> + e.data);</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>1.3 <strong>运行结果</strong></li></ul><p><em>服务端输出</em>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server: receive connection.</span><br><span class="line">server: received hello</span><br></pre></td></tr></table></figure></p><p><em>客户端输出</em>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">client: ws connection is open</span><br><span class="line">client: received world</span><br></pre></td></tr></table></figure></p><h3><span id="2-如何建立连接">2. 如何建立连接</span></h3><p>WebSocket复用了HTTP的握手通道。具体是指，客户端通过HTTP请求与WebSocket服务器协商升级协议。</p><ul><li><p>2.1. 客户端：申请协议升级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: localhost:8080</span><br><span class="line">Origin: http://127.0.0.1:3000</span><br><span class="line">Connection: Upgrade</span><br><span class="line">Upgrade: websocket</span><br><span class="line">Sec-WebSocket-Version: 13</span><br><span class="line">Sec-WebSocket-Key: w4v7O6xFTi36lq3RNcgctw==</span><br></pre></td></tr></table></figure></li><li><p>2.2. 服务端：响应协议升级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 101 Switching Protocols</span><br><span class="line">Connection:Upgrade</span><br><span class="line">Upgrade: websocket</span><br><span class="line">Sec-WebSocket-Accept: Oy4NRAQ13jhfONC7bP8dTKb4PTU=</span><br></pre></td></tr></table></figure></li><li><p>2.3. Sec-WebSocket-Accept的计算</p></li></ul><p>伪代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;toBase64( sha1( Sec-WebSocket-Key +258EAFA5-E914-47DA-95CA-C5AB0DC85B11 )  )</span><br></pre></td></tr></table></figure></p><h3><span id="3-数据帧格式">3. 数据帧格式</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> 0                   1                   2                   3</span><br><span class="line"> 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1</span><br><span class="line">+-+-+-+-+-------+-+-------------+-------------------------------+</span><br><span class="line">|F|R|R|R| opcode|M| Payload len |    Extended payload length    |</span><br><span class="line">|I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |</span><br><span class="line">|N|V|V|V|       |S|             |   (if payload len==126/127)   |</span><br><span class="line">| |1|2|3|       |K|             |                               |</span><br><span class="line">+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +</span><br><span class="line">|     Extended payload length continued, if payload len == 127  |</span><br><span class="line">+ - - - - - - - - - - - - - - - +-------------------------------+</span><br><span class="line">|                               |Masking-key, if MASK set to 1  |</span><br><span class="line">+-------------------------------+-------------------------------+</span><br><span class="line">| Masking-key (continued)       |          Payload Data         |</span><br><span class="line">+-------------------------------- - - - - - - - - - - - - - - - +</span><br><span class="line">:                     Payload Data continued ...                :</span><br><span class="line">+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +</span><br><span class="line">|                     Payload Data continued ...                |</span><br><span class="line">+---------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h3><span id="4-数据传递">4. 数据传递</span></h3><p>使用场景及性能</p><h2><span id="webrtc">WebRTC</span></h2>]]></content>
    
    <summary type="html">
    
      有关于Web性能的基础知识
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Linux性能优化之CPU篇</title>
    <link href="http://yoursite.com/2019/02/20/Linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2019/02/20/Linux性能优化/</id>
    <published>2019-02-20T13:18:11.000Z</published>
    <updated>2019-03-10T12:14:04.088Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#平均负载">平均负载</a></li><li><a href="#上下文切换">上下文切换</a><ul><li><a href="#概述">概述</a></li><li><a href="#怎么查看系统的上下文切换情况">怎么查看系统的上下文切换情况</a></li></ul></li><li><a href="#cpu的使用率">CPU的使用率</a><ul><li><a href="#概述-1">概述</a></li><li><a href="#查看cpu使用率">查看CPU使用率</a></li><li><a href="#cpu使用率过高怎么办">CPU使用率过高怎么办？</a></li></ul></li><li><a href="#不可中断进程和僵尸进程的处理方法">不可中断进程和僵尸进程的处理方法</a><ul><li><a href="#进程状态">进程状态</a></li><li><a href="#处理方法">处理方法</a></li></ul></li><li><a href="#软中断">软中断</a><ul><li><a href="#怎么查看软中断和内核线程呢">怎么查看软中断和内核线程呢？</a></li></ul></li><li><a href="#如何迅速分析出系统cpu的瓶颈在哪里">如何迅速分析出系统CPU的瓶颈在哪里？</a></li><li><a href="#cpu性能优化的几个思路">CPU性能优化的几个思路</a><ul><li><a href="#性能优化方法论">性能优化方法论</a><ul><li><a href="#怎么评估性能优化的效果">怎么评估性能优化的效果？</a></li><li><a href="#多个性能问题同时存在要怎么选择">多个性能问题同时存在，要怎么选择？</a></li><li><a href="#有多种优化方法时要如何选择">有多种优化方法时，要如何选择？</a></li></ul></li><li><a href="#cpu优化">CPU优化</a><ul><li><a href="#应用程序优化">应用程序优化</a></li><li><a href="#系统优化">系统优化</a></li></ul></li><li><a href="#不要过早优化">不要过早优化</a></li></ul></li></ul><!-- tocstop --><h2><span id="平均负载">平均负载</span></h2><p>什么是平均负载？</p><p>是指一定时间内系统中处于可运行状态和不可中断等待状态的进程数的平均数</p><h2><span id="上下文切换">上下文切换</span></h2><h3><span id="概述">概述</span></h3><p>进程在竞争CPU的时候并没有真正运行，为什么还会导致系统的负载升高呢？这是因为CPU上下文切换。</p><p>在每个任务运行前，CPU都需要知道任务从哪里加载，又从哪里开始运行，需要系统事先帮它设置好CPU寄存器和程序计数器（Program Counter，PC）。</p><p>CPU寄存器，是CPU内置的容量小，但速度极快的内存。而程序计数器，则是用来存储CPU正在执行的指令位置、或者即将执行的下一条指令位置。它们都是CPU在运行任何任务前，必须的依赖环境，因此也被叫做CPU上下文。如下图所示：</p><p><img src="/2019/02/20/Linux性能优化/1551593332821.png" alt="1551593332821"></p><p>CPU上下文切换就是先把前一个任务的CPU上下文保存起来，然后加载新任务的上下文到这些寄存器和程序计数器，最后再跳转到程序计数器所指的新位置，运行新任务。</p><p>根据任务的不同，CPU的上下文切换可以分为：</p><ul><li><p>进程上下文切换</p><p>Linux按照特权等级，把进程的运行空间分为内核空间和用户空间，对应的特权等级分别为Ring 0和Ring 3。</p><ul><li><p>内核空间（Ring 0）具有最高权限，可以直接访问所有资源；</p></li><li><p>用户空间（Ring 3）只能访问受限资源，不能访问内存等硬件设备，必须通过系统调用进入到内核中，才能访问这些特权资源。</p><p><img src="/2019/02/20/Linux性能优化/1551594532880.png" alt="1551594532880"></p></li></ul><p>对于一个进程，从用户态到内核态的转变，需要通过系统调用来完成。一次系统调用的过程，会发生两次CPU上下文切换。</p><p>进程的上下文切换：进程是由内核来管理和调度的，进程的切换只能发生再内核态。进程的上下文不仅包括虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的状态。</p><p>因此，进程的上下文切换比系统调用时多了一步：在保存当前进程的内核状态和CPU寄存器之前，需要先把该进程的虚拟内存、栈保存下来；而加载了下一进程的内核态后，还需要刷新进程的虚拟内存和用户栈。</p><p>在进程上下文切换次数较多的情况下，很容易导致CPU将大量实际耗费在寄存器、内核栈以及虚拟内存等资源的保存和恢复上，进而大大缩短了真正运行进程的时间。</p><p>另外，Linux通过TLB（Translation Lookaside Buffer）来管理虚拟内存到物理内存的映射关系。当虚拟内存更新后，TLB也需要更新，内存的访问也会随之变慢。</p></li><li><p>线程上下文切换</p><p>线程是调度的基本单位，而进程是资源拥有的基本单位。</p><p>所谓内核中的任务调度，实际上的调度对象是线程；而进程只是给线程提供了虚拟内存、全局变量等资源。</p><p>所以，对于线程和进程，我们可以这样理解：</p><ul><li>当进程只有一个线程时，可以认为进程就等于线程；</li><li>当进程拥有多个线程时，这些线程会共享相同的虚拟内存和全局变量等资源。这些资源在上下文切换时是不需要修改的。</li><li>线程也有自己的私有数据，比如栈和寄存器等，这些在上下文切换时是需要保存的</li></ul></li><li><p>中断上下文切换</p><p>为了快速响应硬件的事件，中断处理会打断进程的正常调度和执行，转而调用中断处理程序，响应设备事件。</p><p>跟进程上下文不同，中断上下文切换并不涉及到进程的用户态。所以，即便中断过程打断了一个正处在用户态的进程，也不需要保存和恢复这个进程的虚拟内存、全局变量等用户态资源。</p><p>中断上下文，其实只包括内核态中断服务程序执行所必需的状态，包括CPU寄存器、内核堆栈、硬件中断参数等。</p><p>对同一个CPU来说，中断处理比进程拥有更高的优先级，所以中断上下文切换并不会与进程上下文切换同时发生。</p></li></ul><h3><span id="怎么查看系统的上下文切换情况">怎么查看系统的上下文切换情况</span></h3><ol><li>使用vmstat</li></ol><p><img src="/2019/02/20/Linux性能优化/1551598709362.png" alt="1551598709362"></p><ul><li>cs（context switch）是每秒上下文切换的次数</li><li>in（interrupt）是每秒中断的次数</li><li>r（Running or Runnable）是就绪队列的长度，也就是正在运行和等待CPU的进程数</li><li>b（Blocked）则是处于不可中断睡眠状态的进程数</li></ul><ol start="2"><li>对于每个进程的详细情况，可使用pidstat</li></ol><p><img src="/2019/02/20/Linux性能优化/1551599003703.png" alt="1551599003703"></p><p>其中：</p><ul><li>cswch，表示每秒自愿上下文切换（voluntary context switches）的次数</li><li>nvcswch，表示每秒非自愿上下文切换（non  voluntary context switches）的次数。</li></ul><p>这两个概念意味着不同的性能问题：</p><ul><li>自愿上下文切换，是指进程无法获取所需资源，导致的上下文切换。比如说，I/O、内存等系统资源不足时，就会发生自愿上下文切换。</li><li>非自愿上下文切换，则是指进程由于时间片已到等原因，被系统强制调度，进而发生上下文切换。比如说，大量进程都在争抢CPU时，就容易发生非自愿上下文切换。</li></ul><h2><span id="cpu的使用率">CPU的使用率</span></h2><h3><span id="概述">概述</span></h3><p>Linux是多任务操作系统，它将CPU时间划分为时间片，然后通过调度算法轮流分配给各个任务使用。</p><blockquote><p>调度算法：</p><p>Linux的调度算法一直在更新，最新的调度算法是CFS（完全公平调度器）。</p><p>调度算法决定在众多的线程中哪个线程获得执行、什么时候开始执行、执行多久。</p><p>调度器先划分出Scheduler Classes<sup>调度类</sup>，每个不同的Class对应不同类型的线程，每个Class都有自己的优先级。</p><p>调度管理基础代码会遍历在内核中注册了的调度类，选择高优先级的调度类，然后让此调度类按照自己的调度算法选择下一个执行的线程。</p><p>常用的调度类：</p><ul><li><p>SCHED_NORMAL  普通线程调度类</p><p>只具有nice值，映射到用户层的取值范围为-20-19</p><p>调度器要解决一个基本问题是：要先找出‘交互线程’，保证这种线程优先得到调度，然后才考虑其他问题。</p></li><li><p>SCHED_FIFO </p><p>SCHED_RR</p><p>实时线程调度类</p><p>拥有实时优先级（real-time priority）,默认取值为0-99</p></li></ul></blockquote><p>为了维护CPU时间，Linux通过事先定义的节拍率（内核中表示为HZ，表示每秒触发的时间中断的次数），触发时间中断，并使用全局变量Jiffies记录了开机以来的节拍数。每发生一次时间中断，Jiffies的值就加1。</p><p>节拍率HZ是内核的可配选项，可以设置为100、250、1000等。可以通过以下命令查看它的配置值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]<span class="comment"># grep -i "config_hz" /boot/config-$(uname -r)</span></span><br><span class="line"><span class="comment"># CONFIG_HZ_PERIODIC is not set</span></span><br><span class="line"><span class="comment"># CONFIG_HZ_100 is not set</span></span><br><span class="line"><span class="comment"># CONFIG_HZ_250 is not set</span></span><br><span class="line"><span class="comment"># CONFIG_HZ_300 is not set</span></span><br><span class="line">CONFIG_HZ_1000=y</span><br><span class="line">CONFIG_HZ=1000</span><br></pre></td></tr></table></figure><p>内核提供了一个用户空间节拍率USER_HZ，它总是固定为100，也就是说，在用户空间一个节拍的时间为1/100秒。</p><p>/proc/stat提供了系统CPU和任务统计信息。执行以下命令，可以看到CPU的相关信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]# cat /proc/stat | grep ^cpu</span><br><span class="line">cpu  126633 3769 165166 11498685 3763 0 21088 0 0 0</span><br><span class="line">cpu0 126633 3769 165166 11498685 3763 0 21088 0 0 0</span><br></pre></td></tr></table></figure><p>第一列表示的是CPU编号，第一行没有编号的CPU，表示的是所有CPU的累加。</p><p>其他列表示不同场景下CPU的累加节拍数，单位是1/USER_HZ秒，也就是10ms（1/100秒），其实也就是不同场景下的CPU时间。</p><p>后面的列依照顺序，分别为<sup>括号中内容表示缩写</sup>：</p><ul><li>user（us），代表用户态CPU时间，注意它不包括下面的nice时间，但包括了guest时间。</li><li>nice（ni），代表低优先级用户态CPU时间，也就是进程的nice值被调整为1-19之间的CPU时间。</li><li>system（sys），代表内核态CPU时间。</li><li>idle（id），代表空闲时间。注意，它不包括等待I/O的时间（iowait）</li><li>iowait（wa），代表等待I/O的CPU时间。</li><li>irq（hi），代表处理硬中断的CPU时间。</li><li>softirq（si），代表处理软中断的CPU时间。</li><li>steal（st），代表当系统运行在虚拟机中的时候，被其他虚拟机占用的CPU时间。</li><li>guest（guest），代表通过虚拟化运行其他操作系统的时间，也就是运行虚拟机的CPU时间。</li><li>guest_nice（gnice），代表以低优先级运行的虚拟机时间。</li></ul><p><img src="/2019/02/20/Linux性能优化/1551432942707.png" alt="1551432942707"></p><p>为了计算CPU的使用率，性能工具一般都会取间隔一段时间（比如3秒）的两次值，做差后，在计算出这段时间内的平均CPU使用率，即：</p><p><img src="/2019/02/20/Linux性能优化/1551433018852.png" alt="1551433018852"></p><p>跟系统的指标类似，Linux也给每个进程提供了运行情况的统计信息，也就是/proc/[pid]/stat。</p><p>那是不是说要查看CPU使用率，就必须先读取/proc/stat和/proc/[pid]/stat这两个文件，然后再按照上面的公式计算出来呢？</p><p>当然不是，各种各样的性能分析工具已经帮我们计算好了。</p><p>需要注意的是，性能分析工具给出的都是间隔一段时间的平均CPU使用率，所以要注意间隔时间的设置，特别是用多个工具对比分析时，一定要保证它们用的是相同的时间间隔。</p><p>top默认使用3秒时间间隔，而ps使用的是进程的整个生命周期，所以这两个工具报告的CPU使用率，默认的结果很可能是不一样的。</p><h3><span id="查看cpu使用率">查看CPU使用率</span></h3><p>使用top命令，如下：</p><p><img src="/2019/02/20/Linux性能优化/1551436121518.png" alt="1551436121518"></p><p>对于进程的实时信息，每个进程都有一个%CPU列，表示进程的CPU使用率。它是用户态和内核态CPU使用率的总和，包括进程用户空间使用的CPU、提供系统调用执行的内核空间CPU、以及在就绪队列等待运行的CPU。在虚拟化环境中，它还包括了运行虚拟机占用的CPU。</p><p>所以，top并没有细分进程的用户态CPU和内核态CPU。那要怎么查看每个进程的详细情况呢？可以使用pidstat，是一个专门分析每个进程CPU使用情况的工具。</p><p><img src="/2019/02/20/Linux性能优化/1551436602236.png" alt="1551436602236"></p><p>上面的pidstat命令，间隔1s展示了进程的3组CPU使用率，包括：</p><ul><li>用户态CPU使用率（%usr）</li><li>内核态CPU使用率（%system）</li><li>运行虚拟机CPU使用率（%guest）</li><li>以及总的CPU使用率（%CPU）</li></ul><h3><span id="cpu使用率过高怎么办">CPU使用率过高怎么办？</span></h3><p>通过top、ps、pidstat等工具，能够轻松找到CPU使用率较高的进程。接下来，占用CPU的到底是代码中的哪个函数呢？找到它，才能高效有针对性的进行优化。</p><p>怎么找呢？用GDB？GDB是个功能强大的程序调试利器。但它并不适合在性能分析的早期使用。为什么呢？因为GDB调试程序的过程会中断程序运行，这在线上环境往往是不允许的。所以，GDB只适合在性能分析的后期，当你找到了出问题的大致函数后，线下再借助它来进一步调试函数内部的问题。</p><p>哪种工具适合在第一时间分析进程的CPU问题呢？推荐使用perf。</p><p>perf是Linux2.6.31以后内置的性能分析工具。它以性能数据采样为基础，不仅可以分析系统的各种事件和内核性能，还可以用来分析指定应用程序的性能问题。</p><ul><li><p>perf top</p><p><img src="/2019/02/20/Linux性能优化/1551437842824.png" alt="1551437842824"></p><p>输出结果中，第一行包含三个数据，分别是采样数（Samples）、事件类型（event）和事件总数（Event count）。比如以上例子中，perf总共采集了25k个CPU时钟事件，而总事件数则是262083270。</p><p>再往下看，每一行包含四列，分别是：</p><ul><li>第一列Overhead，是该符号的性能事件所在所有采样中的比例</li><li>第二列Shared Object，是该函数或指令所在的动态共享对象（Dynamic Shared Object),如内核、进程名、动态链接库名、内核模块名等</li><li>第三列，是动态共享对象的类型。比如：[.]表示用户空间的可执行程序、或者动态链接库，而[k]表示内核空间</li><li>最后一列Symbol是符号名，也就是函数名。当函数名未知时，用十六进制的地址来表示。</li></ul></li><li><p>perf record &amp; perf report</p><p>使用perf record保持数据，保存后的数据，需要使用perf record解析展示。</p><p><img src="/2019/02/20/Linux性能优化/1551439032460.png" alt="1551439032460"></p></li></ul><h2><span id="不可中断进程和僵尸进程的处理方法">不可中断进程和僵尸进程的处理方法</span></h2><h3><span id="进程状态">进程状态</span></h3><p>top或ps命令输出中，进程状态栏各符号的含义：</p><ul><li><p>R</p><p>Running或Runnable的缩写，表示进程在CPU的就绪队列中，正在运行或者正在等待运行</p></li><li><p>D</p><p>Disk Sleep的缩写，也就是不可中断睡眠，一般表示进程正在和硬件交互，并且交互过程不允许被其他进程或中断打断</p></li><li><p>Z</p><p>Zombie的缩写，表示僵尸进程，也就是进程实际上已经结束了，但是父进程还没有回收它的资源（比如进程的描述符、PID等）</p></li><li><p>S</p><p>Interruptible Sleep的缩写，也就是可中断状态睡眠，表示进程因为等待某个事件而被系统挂起。当进程等待的事件发生时，它会被唤醒并进入R状态。</p></li><li><p>I</p><p>Idle的缩写。也就是空闲状态，用在不可中断睡眠的内核进程上。</p></li><li><p>T或者t</p><p>Stopped或Traced的缩写，表示进程处于暂停或跟踪状态。</p><p>向一个进程发送SIGSTOP信号，它就会响应这个信号变成Stopped，再向它发送SIGCONT信号，进程又会恢复运行。</p><p>当你用调试器调试一个进程时，在使用断点中断进程后，进程就会变成跟踪状态，这其实是一种特殊的暂停状态，只不过你可以用调试器来跟踪并按需要控制进程的运行。</p></li><li><p>X</p><p>Dead的意思。表示进程已经消亡，所以你不会在top或者ps命令输出中看到它。</p></li></ul><p><img src="/2019/02/20/Linux性能优化/1551502558996.png" alt="1551502558996"></p><ul><li><p>s</p><p>session leader的意思。什么是session呢？session指的是相互关联的进程组。</p></li><li><p>+</p><p>表示的是前台进程</p></li></ul><h3><span id="处理方法">处理方法</span></h3><p>出现僵尸进程，是由于父进程没有回收子进程的资源。所以，要找到僵尸进程的父进程，在父进程里解决。</p><p>使用pstree命令，找到父进程。</p><h2><span id="软中断">软中断</span></h2><p>中断是一种异步的事件处理机制，可以提高系统的并发处理能力。</p><p>由于中断处理程序会打断其他进程的运行，所以，为了减少对正常进程运行调度的影响，中断处理程序就需要尽可能快地运行。</p><p>为了解决中断处理程序执行过长和中断丢失的问题，Linux将中断处理过程分成了两个阶段：</p><ul><li><p>上半部用来快速处理中断，它在中断禁止模式下运行，主要处理跟硬件紧密相关的或时间敏感的工作；</p><p>直接处理硬件请求，硬中断，特点是快速执行</p><p>会打断CPU正在执行的任务，然后立即执行中断处理程序</p></li><li><p>下半部用来延迟处理上半部未完成的工作，通常以内核线程的方式运行。</p><p>由内核触发，软中断，特点是延迟执行</p><p>以内核线程的方式执行，每个CPU都对应一个软中断内核线程，名为“ksoftirqd/CPU编号”</p></li></ul><p>软中断不只包括硬件设备中断处理程序的下半部，一些内核自定义的事件也属于软中断，比如内核调度和RCU锁（Read-Copy Update）</p><h3><span id="怎么查看软中断和内核线程呢">怎么查看软中断和内核线程呢？</span></h3><p>/proc/softirqs</p><p>/proc/interrupts</p><h2><span id="如何迅速分析出系统cpu的瓶颈在哪里">如何迅速分析出系统CPU的瓶颈在哪里？</span></h2><h2><span id="cpu性能优化的几个思路">CPU性能优化的几个思路</span></h2><p>在找到CPU的性能瓶颈之后，下一步要做的就是优化了，也就是找出充分利用CPU的方法，以便完成更多的工作。</p><h3><span id="性能优化方法论">性能优化方法论</span></h3><p>在经过千辛万苦，通过各种性能优化方法，终于找到引发性能问题的瓶颈后，是不是立即就要开始优化了呢？</p><p>此时，不必着急，动手之前，可以先看看下面三个问题：</p><ul><li>要怎么判断优化措施是否是有效的？特别是，优化后性能到底又提升了多少呢？</li><li>性能问题通常不是独立的，如果有多个性能问题同时发生，应该先优化哪一个呢？</li><li>提升性能的方法并不是唯一的，当有多种方法可以选择时，选用哪一种呢？是不是总选那个最大程度提升性能的方法就行了呢？</li></ul><p>如果你可以轻松回答这三个问题，那么优化可以立即开始了。</p><h4><span id="怎么评估性能优化的效果">怎么评估性能优化的效果？</span></h4><p>为了评估效果，我们需要对系统的性能指标进行量化，并且要分别测试出优化前、后的性能指标，用前后指标的变化来对比呈现效果。</p><p>性能评估“三步走”：</p><ul><li>确定性能的量化指标</li><li>测试优化前的性能指标</li><li>测试优化后的性能指标</li></ul><h4><span id="多个性能问题同时存在要怎么选择">多个性能问题同时存在，要怎么选择？</span></h4><p><strong>并不是所有的性能问题都值得优化</strong>。</p><p>80%的问题都是由20%的代码导致的。只要找出这20%的位置，你就可以优化80%的性能。</p><h4><span id="有多种优化方法时要如何选择">有多种优化方法时，要如何选择？</span></h4><p>一般情况下，选能最大提升性能的方法，这也是性能优化的目标。</p><p>但是，性能优化并非没有成本。性能优化通常会带来复杂度的提升，降低程序的可维护性，还可能在优化一个指标时，引发其他指标的异常。</p><p>所以，在考虑选哪个性能优化方法时，需要综合多方面的因素。</p><h3><span id="cpu优化">CPU优化</span></h3><p>在清楚了性能优化最基本的三个问题后，接下来从应用程序和系统的角度，分别来看看如何才能降低CPU使用率，提高CPU的并行处理能力：</p><h4><span id="应用程序优化">应用程序优化</span></h4><p>从应用程序的角度来说，降低CPU使用率的最好方法是，排除所有不必要的工作，只保留最核心的逻辑。比如减少循环的层次、减少递归、减少动态内存分配等等。</p><p>此外，还有：</p><ul><li>编译器优化：很多编译器都会提供优化选项，适当开启它们，在编译阶段你就可以获得编译器的帮助，来提升性能。比如，gcc就提供了优化选项-O2，开启后会自动对应用程序的代码进行优化。</li><li>算法优化：使用复杂度更低的算法，可以显著加快处理速度。比如，在数据比较大的情况下，可以用O(nlogn)的排序算法（如快排、归并排序等）代替O(n^2)的排序算法（如冒泡、插入排序等）</li><li>异步处理：使用异步处理，可以避免程序因为等待某个资源而一直阻塞，从而提升程序的并发处理能力。比如，把轮询替换为事件通知，就可以避免轮询耗费CPU的问题</li><li>多线程代替多进程：相对于进程的上下文切换，线程的上下文切换并不切换进程地址空间，因此可以降低上下文切换的成本。</li><li>善用缓存：经常访问的数据或计算过程中的步骤，可以放到内存中缓存起来，只要在下次要用的时候就直接从内存中获取，加快程序的处理速度。</li></ul><h4><span id="系统优化">系统优化</span></h4><p>从系统的角度来说，优化CPU的运行，一方面要充分利用CPU缓存的本地性，加速缓存访问；另一方面，就要控制进程的CPU使用情况，减少进程间的相互影响。</p><ul><li>CPU绑定：把进程绑定到一个或者多个CPU上，可以提高CPU缓存的命中率，减少跨CPU调度带来的上下文切换问题</li><li>CPU独占：跟CPU绑定类似，进一步将CPU分组，并通过CPU亲和性机制为其分配进程。这样，这些CPU就由指定的进程独占，也就是说，不允许其他进程再来使用这些CPU</li><li>优先级调整：使用nice调整进程的优先级，正值调低优先级，负值调高优先级。</li><li>为进程设置资源限制：使用Linux cgroups来设置进程的CPU使用上限，可以防止由于某个应用自身的问题，而耗尽系统资源</li><li>NUMA优化：支持NUMA的处理器会被划分为多个node，每个node都有自己的本地内存空间。NUMA优化，其实就是让CPU尽可能只访问本地内存</li><li>中断负载均衡：无论是软中断还是硬中断，它们的中断处理程序都可能会耗费大量的CPU。开启irqbalance服务或者配置smp_affinity，就可以把中断处理过程自动负载均衡到多个CPU上。</li></ul><h3><span id="不要过早优化">不要过早优化</span></h3><blockquote><p>过早优化是万恶之源。——高纳德</p></blockquote><p>过早优化不可取。这是因为：</p><ul><li>优化会带来复杂性的提升，降低可维护性；</li><li>需求不是一成不变的。针对当前情况进行的优化，很可能并不适应快速变化的新需求。这样，在新需求出现时，这些复杂的优化，反而可能阻碍新功能的开发。</li></ul><p>所以，性能优化最好是逐步完善，动态进行的，不追求一步到位，<strong>而要首先保证能满足当前的性能要求</strong>。当发现性能不满足要求或者出现性能瓶颈时，再根据性能评估的结果，选择最重要的性能问题进行优化。</p>]]></content>
    
    <summary type="html">
    
      如何做Linux的性能优化
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Discover the Secrets of Linux Kernel</title>
    <link href="http://yoursite.com/2019/02/20/Linux-Kernel/"/>
    <id>http://yoursite.com/2019/02/20/Linux-Kernel/</id>
    <published>2019-02-20T08:47:55.000Z</published>
    <updated>2019-02-28T14:46:09.366Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#如何学习内核">如何学习内核：</a><ul><li><a href="#将内核划分成两层减少内核阅读的难度">将内核划分成两层，减少内核阅读的难度</a><ul><li><a href="#内核基础层">内核基础层</a></li><li><a href="#内核应用层">内核应用层</a></li></ul></li><li><a href="#内核学习最终目的">内核学习最终目的：</a></li></ul></li><li><a href="#内核的基础层和应用层">内核的基础层和应用层</a><ul><li><a href="#内核基础层提供的服务">内核基础层提供的服务</a><ul><li><a href="#内核中使用内存">内核中使用内存</a></li><li><a href="#内核中的任务调度">内核中的任务调度</a></li><li><a href="#软中断和tasklet">软中断和tasklet</a></li><li><a href="#工作队列">工作队列</a></li><li><a href="#自旋锁">自旋锁</a></li><li><a href="#内核信号量">内核信号量</a></li><li><a href="#原子变量">原子变量</a></li></ul></li><li><a href="#内核基础层的数据结构">内核基础层的数据结构</a><ul><li><a href="#双向链表">双向链表</a></li><li><a href="#hash链表">hash链表</a></li><li><a href="#单向链表">单向链表</a></li><li><a href="#红黑树">红黑树</a></li><li><a href="#radix树">radix树</a></li></ul></li><li><a href="#内核应用层-1">内核应用层</a></li></ul></li><li><a href="#文件系统">文件系统</a></li><li><a href="#设备的概念和总体架构">设备的概念和总体架构</a></li><li><a href="#为设备服务的特殊文件系统sysfs">为设备服务的特殊文件系统sysfs</a></li><li><a href="#字符设备和input设备">字符设备和input设备</a></li></ul><!-- tocstop --><h1><span id="如何学习内核">如何学习内核：</span></h1><ul><li>以应用为目的来学习，边学边用，学以致用</li><li>以培养内核的阅读能力为主要目标</li><li>阅读和修改真实的代码，而非只是阅读书籍</li><li>需要不断的更新和学习，因为内核的策略和方法一直在不断的变化着</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">勿贪大求全，聚焦关键应用</span><br><span class="line">奠定基础，循序渐进</span><br><span class="line">兴趣是第一驱动力</span><br></pre></td></tr></table></figure><h2><span id="将内核划分成两层减少内核阅读的难度">将内核划分成两层，减少内核阅读的难度</span></h2><h3><span id="内核基础层">内核基础层</span></h3><blockquote><p>内核中提供基础服务的部分</p></blockquote><ul><li>代码总量很少，但难度高</li><li>提供基本稳定的API</li><li>数据结构 </li><li>内核同步机制</li><li>内存管理和任务调度</li><li>学习方法：<ul><li>以API接口学习为主要内容，不细究实现</li><li>日后应该加强基础层的研读</li></ul></li></ul><h3><span id="内核应用层">内核应用层</span></h3><blockquote><p>建立在基础层之上，提供应用服务的部分</p></blockquote><ul><li>占代码的90%以上，数量多，重复性强</li><li>接口经常变化</li><li>文件系统 </li><li>设备和驱动</li><li>网络</li><li>学习方法：<ul><li>文件系统是应用层的基础和灵魂</li><li>从文件系统入手，驻步扩展</li><li>以架构为核心，举一反三</li><li>设备和驱动不依赖具体设备，以通用架构为主</li></ul></li></ul><h2><span id="内核学习最终目的">内核学习最终目的：</span></h2><ul><li>独立思考，独立学习，不断分享成为在该领域有影响力的专家</li></ul><h1><span id="内核的基础层和应用层">内核的基础层和应用层</span></h1><h2><span id="内核基础层提供的服务">内核基础层提供的服务</span></h2><p>内核通常提供的服务是内存管理、进程管理、设备管理和文件系统。</p><h3><span id="内核中使用内存">内核中使用内存</span></h3><p>内核中提供了两个层次的内存分配接口：</p><ul><li><p>从伙伴系统分配：是最底层的内存管理机制，提供页式的内存管理。</p><p>伙伴系统分配内存调用的是alloc_pages，得到的是页面地址，如果要获得能使用的内存地址，还需要用page_address。</p><p>如果要直接获得内存地址，需要使用_get_free_pages。它封装了alloc_pages和page_address两个函数。</p></li><li><p>从slab系统分配：是伙伴系统之上的内存管理，提供基于对象的内存管理。</p><p>alloc_pages申请的内存是以页为单元的，最少是一个页。如果只是申请一小块内存，一个页就很浪费，而且内核中很多应用也希望一种对象化的内存管理，希望内存管理能自动地构造和析构对象，这就是slab内存管理。</p><p>使用kmem_cache_create创建slab对象来从slab申请内存。kmem_cache_create可以提供对象的名字和大小、构造函数和析构函数等，然后通过kmem_cache_alloc和kmem_cache_free来申请和释放内存。</p><p>内核中常用的kmalloc其实也是slab提供的对象管理，只不过内核已经构建了一些固定大小的对象，用户通过kmalloc申请的时候，就直接使用了这些对象。</p><p>一个内核中创建slab对象的例子如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bh_cachep = kmem_cache_create(<span class="string">"buffer_head"</span>,</span><br><span class="line">                              <span class="keyword">sizeof</span>(struct buffer_head), <span class="number">0</span>,</span><br><span class="line">                              (SLAB_RECLAIM_ACCOUNT|SLAB_PANIC|SLAB_MEM_SPREAD),</span><br><span class="line">                              init_buffer_head,</span><br><span class="line">                              <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><p>用以下代码申请一个slab对象：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">buffer_head</span> *<span class="title">ret</span> = <span class="title">kmem_cache_alloc</span>(<span class="title">bh_cachep</span>, <span class="title">gfp_flags</span>);</span></span><br></pre></td></tr></table></figure><p>内核中另一个内存分配调用vmalloc的作用是把物理内存不连续的内存页面拼凑为逻辑地址连续的内存区间。</p></li></ul><h3><span id="内核中的任务调度">内核中的任务调度</span></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> wait_event(wq, condition)</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (condition)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    __wait_event(wq, condition);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">0</span>)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __wait_event(wq, condition)</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    DEFINE_WAIT(__wait);</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        prepare_to_wait(&amp;wq, &amp;__wait, TASK_UNINTERRUPTIBLE);</span><br><span class="line">        <span class="keyword">if</span> (condition)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        schedule();</span><br><span class="line">    &#125;</span><br><span class="line">    finish_wait(&amp;wq, &amp;__wait);</span><br><span class="line">&#125;<span class="keyword">while</span> (<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>上文定义了一个wait结构，然后设置进程睡眠。如果其他进程唤醒这个进程后，判断条件是否满足，如果满足，删除wait对象，否则进程继续睡眠。</p><h3><span id="软中断和tasklet">软中断和tasklet</span></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DECLARE_TASKLET_DISABLED(hil_mlcs_tasklet, hil_mlcs_process, <span class="number">0</span>);</span><br><span class="line">tasklet_schedule(&amp;hil_mlcs_tasklet);</span><br></pre></td></tr></table></figure><h3><span id="工作队列">工作队列</span></h3><p>和tasklet类似，都是一种延缓执行的机制。</p><p>不同之处是工作队列有自己的进程上下文，所以工作队列可以睡眠，也可以被调度，而tasklet不可睡眠。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INIT_WORK(&amp;ioc-&gt;sas_persist_task,</span><br><span class="line">         mptsas_persist_clear_table,</span><br><span class="line">         (<span class="keyword">void</span> *)ioc);</span><br><span class="line">schedule_work(&amp;ioc-&gt;sas_persist_task);</span><br></pre></td></tr></table></figure><h3><span id="自旋锁">自旋锁</span></h3><p>用来在多处理器的环境下保护数据。</p><p>如果内核发现数据未锁，就获取锁并运行；如果数据被锁，就一直旋转（其实是一直反复执行一条指令）。之所以说自旋锁用在多处理器环境，是因为在单处理器环境（非抢占式内核）下，自旋锁其实不起作用。在单处理器抢占式内核的情况下，自旋锁起到禁止抢占的作用。</p><p>因为被自旋锁锁着的进程一直旋转，而不是睡眠，所以自旋锁可以用在中断等禁止睡眠的场景。</p><p>自旋锁的使用：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spin_lock(shost-&gt;host_lock);</span><br><span class="line">shost-&gt;host_busy++;</span><br><span class="line">spin_unlock(shost-&gt;host_lock);</span><br></pre></td></tr></table></figure><h3><span id="内核信号量">内核信号量</span></h3><p>和自旋锁类似，作用是保护数据。</p><p>不同之处在于，进程获取内核信号量的时候，如果不能获取，则进程进入睡眠状态。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">down(&amp;dev-&gt;sem);</span><br><span class="line">up(&amp;dev-&gt;sem);</span><br></pre></td></tr></table></figure><h3><span id="原子变量">原子变量</span></h3><p>提供了一种原子的、不可中断的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atomic_t mapped;</span><br></pre></td></tr></table></figure><p>内核提供了一系列的原子变量操作函数，如下所示</p><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>atomic_add</td><td>加一个整数到原子变量</td></tr><tr><td>atomic_sub</td><td>从原子变量减一个整数</td></tr><tr><td>atomic_read</td><td>读原子变量的数值</td></tr><tr><td>atomic_set</td><td>设置原子变量的数值</td></tr></tbody></table><h2><span id="内核基础层的数据结构">内核基础层的数据结构</span></h2><p>container是Linux中很重要的一个概念，使用container能实现对象的封装。代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> container_of(ptr, type, member) (&#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">const</span> <span class="title">typeof</span><span class="params">(((type *)<span class="number">0</span>)-&gt;member)</span> *__mptr </span>= (ptr);</span><br><span class="line">  (type *)((<span class="keyword">char</span> *)__mptr - offsetof(type, member));&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offsetof(type, member) (size_t)&amp;(((type*)0)-&gt;member)</span></span><br></pre></td></tr></table></figure><p>这个方法可以实现通过结构的一个成员找到整个结构的地址。内核中大量使用了这个方法。</p><h3><span id="双向链表">双向链表</span></h3><p>list是双向链表的一个抽象，定义在/include/linux目录下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> *<span class="title">next</span>, *<span class="title">prev</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> list_entry(ptr, type, member)</span></span><br><span class="line">container_of(ptr, type, member)</span><br></pre></td></tr></table></figure><table><thead><tr><th>内联函数和宏</th><th>作用</th></tr></thead><tbody><tr><td>LIST_HEAD</td><td>定义并初始化一个list链表</td></tr><tr><td>list_add_tail</td><td>加一个成员到链表尾</td></tr><tr><td>list_del</td><td>删除一个list成员</td></tr><tr><td>list_empty</td><td>检测链表是否为空</td></tr><tr><td>list_for_each</td><td>遍历链表</td></tr><tr><td>list_for_each_safe</td><td>遍历链表（可以删除遍历的成员）</td></tr><tr><td>list_for_each_entry</td><td>遍历链表（通过container方法返回结构指针）</td></tr></tbody></table><h3><span id="hash链表">hash链表</span></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hlist_head</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">hlist_node</span> *<span class="title">first</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="单向链表">单向链表</span></h3><h3><span id="红黑树">红黑树</span></h3><p>红黑树是一种自平衡的二叉树，代码位于/lib/rbtree.c文件。</p><h3><span id="radix树">radix树</span></h3><h2><span id="内核应用层">内核应用层</span></h2><h1><span id="文件系统">文件系统</span></h1><p>基本概念</p><p>文件系统的架构</p><p>从代码层深入分析文件系统</p><h1><span id="设备的概念和总体架构">设备的概念和总体架构</span></h1><p>设备的配置表</p><p>访问设备寄存器和设备内存</p><p>设备中断和DMA</p><p>总线对设备的扫描</p><p>设备驱动管理</p><h1><span id="为设备服务的特殊文件系统sysfs">为设备服务的特殊文件系统sysfs</span></h1><p>文件和目录的创建</p><p>sysfs文件的打开操作</p><p>sysfs文件的读写</p><p>kobject结构</p><h1><span id="字符设备和input设备">字符设备和input设备</span></h1><p>文件如何变成设备</p><p>input设备的注册</p><p>input设备架构</p><p>platform总线</p>]]></content>
    
    <summary type="html">
    
      以应用为目的来学习Linux内核，通过阅读和修改代码，培养内核的阅读能力
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>红黑树</title>
    <link href="http://yoursite.com/2018/05/28/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    <id>http://yoursite.com/2018/05/28/红黑树/</id>
    <published>2018-05-28T11:07:51.000Z</published>
    <updated>2019-03-03T21:47:49.471Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="红黑树的性质">红黑树的性质</span></h1><ol><li>每个节点要么是红的要么是黑的；</li><li>根节点是黑的；</li><li>每个叶节点（nil）都是黑的；</li><li>如果一个节点是红的，那么它的两个子节点都是黑的；</li><li>任意节点到叶节点的每条简单路径都包含相同数目的黑节点</li></ol><p><img src="/2018/05/28/红黑树/1551508807317.png" alt="1551508807317"></p><h1><span id="复杂度">复杂度</span></h1><p>因为这5条性质，使得n个节点的红黑树始终保持logn的高度，所以它的查询、插入和删除的时间复杂度都是O(logn)。</p><h1><span id="节点操作">节点操作</span></h1><h2><span id="节点插入">节点插入</span></h2><h3><span id="步骤">步骤：</span></h3><ol><li>将红黑树当作一颗二叉查找树，将节点插入；</li><li>将节点着色为红；</li><li>通过旋转和重新着色等方法来修正该树，使之重新成为一颗红黑树。</li></ol><p>在具体实现的过程中，重点是如何该树重新成为一个红黑树，内容涉及左旋、右旋等专门定义的操作。不必细究。</p><h2><span id="节点删除">节点删除</span></h2><h3><span id="步骤">步骤：</span></h3><ol><li>将红黑树当作一颗二叉查找树，将该节点从二叉查找树中删除；</li><li>通过”旋转和重新着色”等一系列来修正该树，使之重新成为一棵红黑树。</li></ol><p>在具体实现的过程中，重点是如何该树重新成为一个红黑树，内容涉及左旋、右旋等专门定义的操作。不必细究。</p><h1><span id="应用场景">应用场景</span></h1><ol><li><p>著名的linux进程调度<a href="https://en.wikipedia.org/wiki/Completely_Fair_Scheduler" target="_blank" rel="noopener">Completely Fair Scheduler</a>,用红黑树管理进程控制块</p></li><li><p>epoll在内核中的实现，用红黑树管理事件块</p></li><li><p>Nginx中，用红黑树管理<a href="https://www.kancloud.cn/digest/understandingnginx/202602" target="_blank" rel="noopener">timer</a></p></li><li><p>Java的TreeMap实现</p></li><li><p>广泛用在C++的STL中。map和set都是用红黑树实现的。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;红黑树的性质&quot;&gt;红黑树的性质&lt;/span&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;每个节点要么是红的要么是黑的；&lt;/li&gt;
&lt;li&gt;根节点是黑的；&lt;/li&gt;
&lt;li&gt;每个叶节点（nil）都是黑的；&lt;/li&gt;
&lt;li&gt;如果一个节点是红的，那么它的两个子节点都是黑的；
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx和OpenResty的动态流控</title>
    <link href="http://yoursite.com/2018/03/02/nginx%E5%8A%A8%E6%80%81%E6%B5%81%E6%8E%A7/"/>
    <id>http://yoursite.com/2018/03/02/nginx动态流控/</id>
    <published>2018-03-02T12:59:10.000Z</published>
    <updated>2019-03-10T12:20:24.569Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#nginx的动态流控">Nginx的动态流控</a><ul><li><a href="#请求速率限制">请求速率限制</a><ul><li><a href="#limit_req模块">limit_req模块</a></li></ul></li><li><a href="#并发连接数限制">并发连接数限制</a><ul><li><a href="#limit_conn模块">limit_conn模块</a></li></ul></li><li><a href="#下载带宽限制">下载带宽限制</a></li></ul></li><li><a href="#openresty的动态流控">OpenResty的动态流控</a><ul><li><a href="#请求速率限制并发连接数限制">请求速率限制/并发连接数限制</a><ul><li><a href="#restylimitreq模块">resty.limit.req模块</a></li><li><a href="#restylimitconn模块">resty.limit.conn模块</a></li><li><a href="#restylimitcount模块">resty.limit.count模块</a></li></ul></li><li><a href="#跨机器速率限制">跨机器速率限制</a></li></ul></li></ul><!-- tocstop --><h1><span id="nginx的动态流控">Nginx的动态流控</span></h1><h2><span id="请求速率限制">请求速率限制</span></h2><h3><span id="limit_req模块">limit_req模块</span></h3><ol><li>limit_req_zone</li></ol><ul><li><p>语法: limit_req_zone $variable zone=name:size rate=rate;</p></li><li><p>默认值: none</p></li><li><p>配置段: http<br>设置一块共享内存限制域用来保存键值的状态参数。 特别是保存了当前超出请求的数量。 键的值就是指定的变量（空值不会被计算）。如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;</span><br></pre></td></tr></table></figure><p>说明：</p><p>区域名称为one，大小为10m，平均处理的请求频率不能超过每秒一次。<br>键值是客户端IP。</p><p>使用$binary_remote_addr（client address in a binary form, value’s length is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses）变量， 可以将每条状态记录的大小减少到64个字节，这样1M的内存可以保存大约1万6千个64字节的记录。<br>如果限制域的存储空间耗尽了，对于后续所有请求，服务器都会返回 503 (Service Temporarily Unavailable)错误。</p></li></ul><ol start="2"><li>limit_req</li></ol><ul><li><p>语法: limit_req zone=name [burst=number] [nodelay] [delay=number];</p></li><li><p>默认值: —</p></li><li><p>配置段: http, server, location<br>设置对应的共享内存限制域和允许突发数（burst）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">limit_req_zone $binary_remote_addr zone=javfa_com:10m rate=1r/s;</span><br><span class="line">server &#123;</span><br><span class="line">    location /www.javfa.com/ &#123;</span><br><span class="line">        limit_req zone=javfa_com burst=5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不带burst参数，则对于超过频率限制的请求，Nginx直接帮你拒绝掉。</p><p>但在实际业务中，偶尔突增也是正常的。针对这些偶尔突增的情况，Nginx引入burst参数。</p><p>功能参数burst（突发），使得请求频率限制允许一定程度的突发请求。此时：</p><ul><li><p>若无nodelay参数，则将指定个数以内的突发请求排队等候依次处理。</p></li><li><p>若有nodelay参数，可以使得突发时需要等待的请求立即得到处理，与此同时，模拟出一个插槽个数为burst指定数目的令牌桶，该桶每(1/rate)s释放一个令牌，空出的槽位等待新的突发请求进来，若槽位填满，随后突发的请求则会被拒绝。</p><p>这样，真实的请求没有在排队，引入虚拟令牌排队，在它满的情况下是不允许其他请求进来的。</p></li><li><p>若有delay参数（版本1.15.7增加），则可以进行更加精细的控制。如：整体突发（burst）配置成12，超过12个肯定是需要拒绝的，而在12个以内，我们希望前面过来的4-6个并发请求能够更快加载，不要进行无效等待，这里设置delay=8，队列中前8个等待的请求直接传给上游，而不会排队，而第8个之后的请求仍会排队，但不会被直接拒绝，只是会慢一点。</p><blockquote><p>Changes with nginx 1.15.7                                        27 Nov 2018<br>*) Feature: the “proxy_requests” directive in the stream module.</p><p>*) Feature: the “delay” parameter of the “limit_req” directive.<br>  Thanks to Vladislav Shabanov and Peter Shchuchkin.</p><p>*) Bugfix: memory leak on errors during reconfiguration.</p><p>*) Bugfix: in the $upstream_response_time, $upstream_connect_time, and<br>  $upstream_header_time variables.</p><p>*) Bugfix: a segmentation fault might occur in a worker process if the<br>  ngx_http_mp4_module was used on 32-bit platforms.</p></blockquote></li></ul></li></ul><h2><span id="并发连接数限制">并发连接数限制</span></h2><h3><span id="limit_conn模块">limit_conn模块</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">limit_conn_zone $binary_remote_addr zone=addr:10m;</span><br><span class="line"></span><br><span class="line">limit_conn_log_level error;</span><br><span class="line">limit_conn_status 503;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location /download/ &#123;</span><br><span class="line">        limit_conn addr 5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Nginx 有一个模块叫 limit_conn，在下载的场景中，会出现几个用户同时在下载同一个资源，<strong>对于处理中的请求，该模块是在读完请求头全部内容后才开始计数，</strong>比如同时允许在线 5 人下载，那就限制 5 个，超过的 503 拒绝。特别地，<strong>在 HTTP/2 和 SPDY 协议下，每一个并发请求都会当作一个独立的计数项。</strong></p><blockquote><p><strong>HTTP/2</strong>（超文本传输协议第2版，最初命名为<strong>HTTP 2.0</strong>），简称为<strong>h2</strong>（基于TLS/1.2或以上版本的加密连接）或<strong>h2c</strong>（非加密连接）<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-1" target="_blank" rel="noopener">[1]</a>，是<a href="https://zh.wikipedia.org/wiki/HTTP" target="_blank" rel="noopener">HTTP</a>协议的的第二个主要版本，使用于<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" target="_blank" rel="noopener">万维网</a>。</p><p>HTTP/2是<a href="https://zh.wikipedia.org/wiki/HTTP" target="_blank" rel="noopener">HTTP</a>协议自1999年HTTP 1.1发布后的首个更新，主要基于<a href="https://zh.wikipedia.org/wiki/SPDY" target="_blank" rel="noopener">SPDY</a>协议。它由<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84" target="_blank" rel="noopener">互联网工程任务组</a>（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小组进行开发。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-charter-2" target="_blank" rel="noopener">[2]</a>该组织于2014年12月将HTTP/2标准提议递交至<a href="https://zh.wikipedia.org/w/index.php?title=Internet_Engineering_Steering_Group&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">IESG</a>进行讨论<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-3" target="_blank" rel="noopener">[3]</a>，于2015年2月17日被批准。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-approval2-4" target="_blank" rel="noopener">[4]</a></p><p>HTTP/2标准于2015年5月以RFC 7540正式发表。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-rfc7540-5" target="_blank" rel="noopener">[5]</a>HTTP/2的标准化工作由<a href="https://zh.wikipedia.org/wiki/Google_Chrome" target="_blank" rel="noopener">Chrome</a>、<a href="https://zh.wikipedia.org/wiki/Opera%E7%80%8F%E8%A6%BD%E5%99%A8" target="_blank" rel="noopener">Opera</a>、<a href="https://zh.wikipedia.org/wiki/Firefox" target="_blank" rel="noopener">Firefox</a><a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-6" target="_blank" rel="noopener">[6]</a>、<a href="https://zh.wikipedia.org/wiki/Internet_Explorer_11" target="_blank" rel="noopener">Internet Explorer 11</a>、<a href="https://zh.wikipedia.org/wiki/Safari" target="_blank" rel="noopener">Safari</a>、<a href="https://zh.wikipedia.org/w/index.php?title=Amazon_Silk&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">Amazon Silk</a>及<a href="https://zh.wikipedia.org/wiki/Microsoft_Edge" target="_blank" rel="noopener">Edge</a>等浏览器提供支持。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-7" target="_blank" rel="noopener">[7]</a></p><p>多数主流浏览器已经在2015年底支持了该协议。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-browser_support-8" target="_blank" rel="noopener">[8]</a>此外，根据<a href="https://zh.wikipedia.org/w/index.php?title=W3Techs&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">W3Techs</a>的数据，在2017年5月，在排名前一千万的网站中，有13.7%支持了HTTP/2。<a href="https://zh.wikipedia.org/wiki/HTTP/2#cite_note-9" target="_blank" rel="noopener">[9]</a></p></blockquote><h2><span id="下载带宽限制">下载带宽限制</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /download/ &#123;</span><br><span class="line">    limit_rate_after 500k;</span><br><span class="line">    limit_rate 20k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 ngx_http_core_module 模块里面有 limit_rate_after 和 limit_rate 参数，这个是下载带宽限制。如上代码所示，意思是<strong>在下载完前面 500KB 数据后，对接下来的数据以每秒 20KB 速度进行限制，</strong>这个在<strong>文件下载、视频播放等业务场景中应用比较多，可以避免不必要的浪费</strong>。</p><p>例如视频播放，第一个画面能够尽快看到，对用户体验来说很重要，如果用户第一个页面看不到，那他的等待忍耐程度是很差的，所以这个场景下前面的几个字节不应该去限速，在看到第一个画面之后，后面画面是按照一定视频码率播放，所以没必要下载很快，而且快了也没用，它照样是流畅的，但却多浪费了流量资源，如果用户看到一半就关掉，整个视频下载完成，对于用户和内容提供商都是资源浪费。</p><h1><span id="openresty的动态流控">OpenResty的动态流控</span></h1><h2><span id="请求速率限制并发连接数限制">请求速率限制/并发连接数限制</span></h2><p>OpenResty官方有一个叫做<a href="https://github.com/openresty/lua-resty-limit-traffic" target="_blank" rel="noopener">lua-resty-limit-traffic</a>的模块，里面有三种限速策略。</p><h3><span id="restylimitreq模块">resty.limit.req模块</span></h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> limit_req = <span class="built_in">require</span> <span class="string">"resty.limit.req"</span></span><br><span class="line"><span class="keyword">local</span> lim, err = limit_req.new(<span class="string">"mylimit"</span>, <span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line"><span class="keyword">local</span> delay, err = lim:incoming(ngx.var.binary_remote_addr, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> delay <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> err == <span class="string">"rejected"</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">429</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> delay &gt;= <span class="number">0.001</span> <span class="keyword">then</span></span><br><span class="line">    ngx.sleep(delay)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>resty.limit.req 模块的设计与 NGINX limit_req 实现的效果和功能一样，当然它用 Lua 来表达限速逻辑，可以在任何的代码里面去引入，几乎可以在任意上下⽂中使⽤。</p><p>以下是该模块官方示例用法：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- demonstrate the usage of the resty.limit.req module (alone!)</span></span><br><span class="line">http &#123;</span><br><span class="line">    lua_shared_dict my_limit_req_store <span class="number">100</span>m;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        location / &#123;</span><br><span class="line">            access_by_lua_block &#123;</span><br><span class="line">                <span class="comment">-- well, we could put the require() and new() calls in our own Lua</span></span><br><span class="line">                <span class="comment">-- modules to save overhead. here we put them below just for</span></span><br><span class="line">                <span class="comment">-- convenience.</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> limit_req = <span class="built_in">require</span> <span class="string">"resty.limit.req"</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">-- limit the requests under 200 req/sec with a burst of 100 req/sec,</span></span><br><span class="line">                <span class="comment">-- that is, we delay requests under 300 req/sec and above 200</span></span><br><span class="line">                <span class="comment">-- req/sec, and reject any requests exceeding 300 req/sec.</span></span><br><span class="line">                <span class="keyword">local</span> lim, err = limit_req.new(<span class="string">"my_limit_req_store"</span>, <span class="number">200</span>, <span class="number">100</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> lim <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,</span><br><span class="line">                            <span class="string">"failed to instantiate a resty.limit.req object: "</span>, err)</span><br><span class="line">                    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">-- the following call must be per-request.</span></span><br><span class="line">                <span class="comment">-- here we use the remote (IP) address as the limiting key</span></span><br><span class="line">                <span class="keyword">local</span> key = ngx.var.binary_remote_addr</span><br><span class="line">                <span class="keyword">local</span> delay, err = lim:incoming(key, <span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> delay <span class="keyword">then</span></span><br><span class="line">                    <span class="keyword">if</span> err == <span class="string">"rejected"</span> <span class="keyword">then</span></span><br><span class="line">                        <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">503</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR, <span class="string">"failed to limit req: "</span>, err)</span><br><span class="line">                    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> delay &gt;= <span class="number">0.001</span> <span class="keyword">then</span></span><br><span class="line">                    <span class="comment">-- the 2nd return value holds the number of excess requests</span></span><br><span class="line">                    <span class="comment">-- per second for the specified key. for example, number 31</span></span><br><span class="line">                    <span class="comment">-- means the current request rate is at 231 req/sec for the</span></span><br><span class="line">                    <span class="comment">-- specified key.</span></span><br><span class="line">                    <span class="keyword">local</span> excess = err</span><br><span class="line"></span><br><span class="line">                    <span class="comment">-- the request exceeding the 200 req/sec but below 300 req/sec,</span></span><br><span class="line">                    <span class="comment">-- so we intentionally delay it here a bit to conform to the</span></span><br><span class="line">                    <span class="comment">-- 200 req/sec rate.</span></span><br><span class="line">                    ngx.sleep(delay)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            # content handler goes here. <span class="keyword">if</span> it is content_by_lua, <span class="keyword">then</span> you can</span><br><span class="line">            # merge the Lua code above <span class="keyword">in</span> access_by_lua into your content_by_lua<span class="string">'s</span></span><br><span class="line"><span class="string">            # Lua handler to save a little bit of CPU time.</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3><span id="restylimitconn模块">resty.limit.conn模块</span></h3><p>功能和 NGINX limit_conn 一致，但 Lua 版本允许突发连接进行短暂延迟等候。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"># demonstrate the usage of the resty.limit.traffic module（limit.conn &amp;&amp; limit.req）</span><br><span class="line">http &#123;</span><br><span class="line">    lua_shared_dict my_req_store <span class="number">100</span>m;</span><br><span class="line">    lua_shared_dict my_conn_store <span class="number">100</span>m;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        location / &#123;</span><br><span class="line">            access_by_lua_block &#123;</span><br><span class="line">                <span class="keyword">local</span> limit_conn = <span class="built_in">require</span> <span class="string">"resty.limit.conn"</span></span><br><span class="line">                <span class="keyword">local</span> limit_req = <span class="built_in">require</span> <span class="string">"resty.limit.req"</span></span><br><span class="line">                <span class="keyword">local</span> limit_traffic = <span class="built_in">require</span> <span class="string">"resty.limit.traffic"</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> lim1, err = limit_req.new(<span class="string">"my_req_store"</span>, <span class="number">300</span>, <span class="number">200</span>)</span><br><span class="line">                <span class="built_in">assert</span>(lim1, err)</span><br><span class="line">                <span class="keyword">local</span> lim2, err = limit_req.new(<span class="string">"my_req_store"</span>, <span class="number">200</span>, <span class="number">100</span>)</span><br><span class="line">                <span class="built_in">assert</span>(lim2, err)</span><br><span class="line">                <span class="keyword">local</span> lim3, err = limit_conn.new(<span class="string">"my_conn_store"</span>, <span class="number">1000</span>, <span class="number">1000</span>, <span class="number">0.5</span>)</span><br><span class="line">                <span class="built_in">assert</span>(lim3, err)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> limiters = &#123;lim1, lim2, lim3&#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> host = ngx.var.host</span><br><span class="line">                <span class="keyword">local</span> client = ngx.var.binary_remote_addr</span><br><span class="line">                <span class="keyword">local</span> keys = &#123;host, client, client&#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> states = &#123;&#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">local</span> delay, err = limit_traffic.combine(limiters, keys, states)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> delay <span class="keyword">then</span></span><br><span class="line">                    <span class="keyword">if</span> err == <span class="string">"rejected"</span> <span class="keyword">then</span></span><br><span class="line">                        <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">503</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR, <span class="string">"failed to limit traffic: "</span>, err)</span><br><span class="line">                    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> lim3:is_committed() <span class="keyword">then</span></span><br><span class="line">                    <span class="keyword">local</span> ctx = ngx.ctx</span><br><span class="line">                    ctx.limit_conn = lim3</span><br><span class="line">                    ctx.limit_conn_key = keys[<span class="number">3</span>]</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"sleeping "</span>, delay, <span class="string">" sec, states: "</span>,</span><br><span class="line">                      <span class="built_in">table</span>.<span class="built_in">concat</span>(states, <span class="string">", "</span>))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> delay &gt;= <span class="number">0.001</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.sleep(delay)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            # content handler goes here. <span class="keyword">if</span> it is content_by_lua, <span class="keyword">then</span> you can</span><br><span class="line">            # merge the Lua code above <span class="keyword">in</span> access_by_lua into your</span><br><span class="line">            # content_by_lua<span class="string">'s Lua handler to save a little bit of CPU time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            log_by_lua_block &#123;</span></span><br><span class="line"><span class="string">                local ctx = ngx.ctx</span></span><br><span class="line"><span class="string">                local lim = ctx.limit_conn</span></span><br><span class="line"><span class="string">                if lim then</span></span><br><span class="line"><span class="string">                    -- if you are using an upstream module in the content phase,</span></span><br><span class="line"><span class="string">                    -- then you probably want to use $upstream_response_time</span></span><br><span class="line"><span class="string">                    -- instead of $request_time below.</span></span><br><span class="line"><span class="string">                    local latency = tonumber(ngx.var.request_time)</span></span><br><span class="line"><span class="string">                    local key = ctx.limit_conn_key</span></span><br><span class="line"><span class="string">                    assert(key)</span></span><br><span class="line"><span class="string">                    local conn, err = lim:leaving(key, latency)</span></span><br><span class="line"><span class="string">                    if not conn then</span></span><br><span class="line"><span class="string">                        ngx.log(ngx.ERR,</span></span><br><span class="line"><span class="string">                                "failed to record the connection leaving ",</span></span><br><span class="line"><span class="string">                                "request: ", err)</span></span><br><span class="line"><span class="string">                        return</span></span><br><span class="line"><span class="string">                    end</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3><span id="restylimitcount模块">resty.limit.count模块</span></h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> limit_count = <span class="built_in">require</span> <span class="string">"resty.limit.count"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> lim, err = limit_count.new(<span class="string">"mylimit"</span>, <span class="number">5000</span>, <span class="number">3600</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> delay, err = lim:incoming(ngx.req.get_headers()[<span class="string">"Authorization"</span>], <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> delay <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> err == <span class="string">"rejected"</span> <span class="keyword">then</span></span><br><span class="line">        ngx.header[<span class="string">"X-RateLimit-Limit"</span>] = <span class="string">"5000"</span></span><br><span class="line">        ngx.header[<span class="string">"X-RateLimit-Remaining"</span>] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">503</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">ngx.header[<span class="string">"X-RateLimit-Limit"</span>] = <span class="string">"5000"</span></span><br><span class="line">ngx.header[<span class="string">"X-RateLimit_Remaining"</span>] = err <span class="comment">-- current remaining number</span></span><br></pre></td></tr></table></figure><p> resty.limit.count 模块，请求数量限制，这个目前 Nginx 没有，用一句话概括这个模块，就是在<strong>单位时间内确保累计的请求数量不超过一个最大的值</strong>。比如在 1 分钟之内允许累计有 5000个请求，累计超过 5000就拒绝。这个模和 Github API Rate Limiting<strong>的接口设计类似</strong>，也是一个比较经典的限制请求的方式。</p><h2><span id="跨机器速率限制">跨机器速率限制</span></h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> ratelimit = <span class="built_in">require</span> <span class="string">"resty.redis.ratelimit"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> lim, err = ratelimt.new(<span class="string">"mylimit"</span>, <span class="string">"5r/s"</span>, <span class="number">4</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> red = &#123; host = <span class="string">"127.0.0.1"</span>, port = <span class="number">6379</span>, timeout = <span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> delay, err = lim:incoming(ngx.var.binary_remote_addr, red)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> delay <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> err == <span class="string">"rejected"</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">429</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">500</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> delay &gt;= <span class="number">0.001</span> <span class="keyword">then</span></span><br><span class="line">    ngx.sleep(delay)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#nginx的动态流控&quot;&gt;Nginx的动态流控&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#请求速率限制&quot;&gt;请求速率限制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#limit_req模块&quot;&gt;limit_req模块&lt;/
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-Lua-Directives</title>
    <link href="http://yoursite.com/2018/03/01/Nginx-Lua-Directives/"/>
    <id>http://yoursite.com/2018/03/01/Nginx-Lua-Directives/</id>
    <published>2018-03-01T04:44:13.000Z</published>
    <updated>2019-03-01T06:25:52.347Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#nginx-directives-for-lua">Nginx Directives For Lua</a><ul><li><a href="#lua_capture_error_log">lua_capture_error_log</a></li><li><a href="#lua_use_default_type">lua_use_default_type</a></li><li><a href="#lua_malloc_trim">lua_malloc_trim</a></li><li><a href="#lua_code_cache">lua_code_cache</a></li><li><a href="#lua_regex_cache_max_entries">lua_regex_cache_max_entries</a></li><li><a href="#lua_regex_match_limit">lua_regex_match_limit</a></li><li><a href="#lua_package_path">lua_package_path</a></li><li><a href="#lua_package_cpath">lua_package_cpath</a></li><li><a href="#init_by_lua">init_by_lua</a></li><li><a href="#init_by_lua_block">init_by_lua_block</a></li><li><a href="#init_by_lua_file">init_by_lua_file</a></li><li><a href="#init_worker_by_lua">init_worker_by_lua</a></li><li><a href="#init_worker_by_lua_block">init_worker_by_lua_block</a></li><li><a href="#init_worker_by_lua_file">init_worker_by_lua_file</a></li><li><a href="#set_by_lua">set_by_lua</a></li><li><a href="#set_by_lua_block">set_by_lua_block</a></li><li><a href="#set_by_lua_file">set_by_lua_file</a></li><li><a href="#content_by_lua">content_by_lua</a></li><li><a href="#content_by_lua_block">content_by_lua_block</a></li><li><a href="#content_by_lua_file">content_by_lua_file</a></li><li><a href="#rewrite_by_lua">rewrite_by_lua</a></li><li><a href="#rewrite_by_lua_block">rewrite_by_lua_block</a></li><li><a href="#rewrite_by_lua_file">rewrite_by_lua_file</a></li><li><a href="#access_by_lua">access_by_lua</a></li><li><a href="#access_by_lua_block">access_by_lua_block</a></li><li><a href="#access_by_lua_file">access_by_lua_file</a></li><li><a href="#header_filter_by_lua">header_filter_by_lua</a></li><li><a href="#header_filter_by_lua_block">header_filter_by_lua_block</a></li><li><a href="#header_filter_by_lua_file">header_filter_by_lua_file</a></li><li><a href="#body_filter_by_lua">body_filter_by_lua</a></li><li><a href="#body_filter_by_lua_block">body_filter_by_lua_block</a></li><li><a href="#body_filter_by_lua_file">body_filter_by_lua_file</a></li><li><a href="#log_by_lua">log_by_lua</a></li><li><a href="#log_by_lua_block">log_by_lua_block</a></li><li><a href="#log_by_lua_file">log_by_lua_file</a></li><li><a href="#balancer_by_lua_block">balancer_by_lua_block</a></li><li><a href="#balancer_by_lua_file">balancer_by_lua_file</a></li><li><a href="#lua_need_request_body">lua_need_request_body</a></li><li><a href="#ssl_certificate_by_lua_block">ssl_certificate_by_lua_block</a></li><li><a href="#ssl_certificate_by_lua_file">ssl_certificate_by_lua_file</a></li><li><a href="#ssl_session_fetch_by_lua_block">ssl_session_fetch_by_lua_block</a></li><li><a href="#ssl_session_fetch_by_lua_file">ssl_session_fetch_by_lua_file</a></li><li><a href="#ssl_session_store_by_lua_block">ssl_session_store_by_lua_block</a></li><li><a href="#ssl_session_store_by_lua_file">ssl_session_store_by_lua_file</a></li><li><a href="#lua_shared_dict">lua_shared_dict</a></li><li><a href="#lua_socket_connect_timeout">lua_socket_connect_timeout</a></li><li><a href="#lua_socket_send_timeout">lua_socket_send_timeout</a></li><li><a href="#lua_socket_send_lowat">lua_socket_send_lowat</a></li><li><a href="#lua_socket_read_timeout">lua_socket_read_timeout</a></li><li><a href="#lua_socket_buffer_size">lua_socket_buffer_size</a></li><li><a href="#lua_socket_pool_size">lua_socket_pool_size</a></li><li><a href="#lua_socket_keepalive_timeout">lua_socket_keepalive_timeout</a></li><li><a href="#lua_socket_log_errors">lua_socket_log_errors</a></li><li><a href="#lua_ssl_ciphers">lua_ssl_ciphers</a></li><li><a href="#lua_ssl_crl">lua_ssl_crl</a></li><li><a href="#lua_ssl_protocols">lua_ssl_protocols</a></li><li><a href="#lua_ssl_trusted_certificate">lua_ssl_trusted_certificate</a></li><li><a href="#lua_ssl_verify_depth">lua_ssl_verify_depth</a></li><li><a href="#lua_http10_buffering">lua_http10_buffering</a></li><li><a href="#rewrite_by_lua_no_postpone">rewrite_by_lua_no_postpone</a></li><li><a href="#access_by_lua_no_postpone">access_by_lua_no_postpone</a></li><li><a href="#lua_transform_underscores_in_response_headers">lua_transform_underscores_in_response_headers</a></li><li><a href="#lua_check_client_abort">lua_check_client_abort</a></li><li><a href="#lua_max_pending_timers">lua_max_pending_timers</a></li><li><a href="#lua_max_running_timers">lua_max_running_timers</a></li><li><a href="#lua_sa_restart">lua_sa_restart</a></li></ul></li></ul><!-- tocstop --><h1><span id="nginx-directives-for-lua">Nginx Directives For Lua</span></h1><p>The basic building blocks of scripting Nginx with Lua are directives. Directives are used to specify when the user Lua code is run and how the result will be used. Below is a diagram showing the order in which directives are executed.</p><p><a href="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" target="_blank" rel="noopener"><img src="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" alt="Lua Nginx Modules Directives"></a></p><h2><span id="lua_capture_error_log">lua_capture_error_log</span></h2><p><strong>syntax:</strong> <em>lua_capture_error_log size</em></p><p><strong>default:</strong> <em>none</em></p><p><strong>context:</strong> <em>http</em></p><p>Enables a buffer of the specified <code>size</code> for capturing all the nginx error log message data (not just those produced by this module or the nginx http subsystem, but everything) without touching files or disks.</p><p>You can use units like <code>k</code> and <code>m</code> in the <code>size</code> value, as in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lua_capture_error_log 100k;</span><br></pre></td></tr></table></figure><p>As a rule of thumb, a 4KB buffer can usually hold about 20 typical error log messages. So do the maths!</p><p>This buffer never grows. If it is full, new error log messages will replace the oldest ones in the buffer.</p><p>The size of the buffer must be bigger than the maximum length of a single error log message (which is 4K in OpenResty and 2K in stock NGINX).</p><p>You can read the messages in the buffer on the Lua land via the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#get_logs" target="_blank" rel="noopener">get_logs()</a> function of the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme" target="_blank" rel="noopener">ngx.errlog</a> module of the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme" target="_blank" rel="noopener">lua-resty-core</a> library. This Lua API function will return the captured error log messages and also remove these already read from the global capturing buffer, making room for any new error log data. For this reason, the user should not configure this buffer to be too big if the user read the buffered error log data fast enough.</p><p>Note that the log level specified in the standard <a href="http://nginx.org/r/error_log" target="_blank" rel="noopener">error_log</a> directive <em>does</em> have effect on this capturing facility. It only captures log messages of a level no lower than the specified log level in the <a href="http://nginx.org/r/error_log" target="_blank" rel="noopener">error_log</a> directive. The user can still choose to set an even higher filtering log level on the fly via the Lua API function <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#set_filter_level" target="_blank" rel="noopener">errlog.set_filter_level</a>. So it is more flexible than the static <a href="http://nginx.org/r/error_log" target="_blank" rel="noopener">error_log</a>directive.</p><p>It is worth noting that there is no way to capture the debugging logs without building OpenResty or NGINX with the <code>./configure</code> option <code>--with-debug</code>. And enabling debugging logs is strongly discouraged in production builds due to high overhead.</p><p>This directive was first introduced in the <code>v0.10.9</code> release.</p><h2><span id="lua_use_default_type">lua_use_default_type</span></h2><p><strong>syntax:</strong> <em>lua_use_default_type on | off</em></p><p><strong>default:</strong> <em>lua_use_default_type on</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p>Specifies whether to use the MIME type specified by the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#default_type" target="_blank" rel="noopener">default_type</a> directive for the default value of the <code>Content-Type</code>response header. Deactivate this directive if a default <code>Content-Type</code> response header for Lua request handlers is not desired.</p><p>This directive is turned on by default.</p><p>This directive was first introduced in the <code>v0.9.1</code> release.</p><h2><span id="lua_malloc_trim">lua_malloc_trim</span></h2><p><strong>syntax:</strong> <em>lua_malloc_trim <request-count></request-count></em></p><p><strong>default:</strong> <em>lua_malloc_trim 1000</em></p><p><strong>context:</strong> <em>http</em></p><p>Asks the underlying <code>libc</code> runtime library to release its cached free memory back to the operating system every <code>N</code> requests processed by the NGINX core. By default, <code>N</code> is 1000. You can configure the request count by using your own numbers. Smaller numbers mean more frequent releases, which may introduce higher CPU time consumption and smaller memory footprint while larger numbers usually lead to less CPU time overhead and relatively larger memory footprint. Just tune the number for your own use cases.</p><p>Configuring the argument to <code>0</code> essentially turns off the periodical memory trimming altogether.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lua_malloc_trim 0;  # turn off trimming completely</span><br></pre></td></tr></table></figure><p>The current implementation uses an NGINX log phase handler to do the request counting. So the appearance of the<a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#log_subrequest" target="_blank" rel="noopener">log_subrequest on</a> directives in <code>nginx.conf</code> may make the counting faster when subrequests are involved. By default, only “main requests” count.</p><p>Note that this directive does <em>not</em> affect the memory allocated by LuaJIT’s own allocator based on the <code>mmap</code> system call.</p><p>This directive was first introduced in the <code>v0.10.7</code> release.</p><h2><span id="lua_code_cache">lua_code_cache</span></h2><p><strong>syntax:</strong> <em>lua_code_cache on | off</em></p><p><strong>default:</strong> <em>lua_code_cache on</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p>Enables or disables the Lua code cache for Lua code in <code>*_by_lua_file</code> directives (like <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua_file" target="_blank" rel="noopener">set_by_lua_file</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua_file" target="_blank" rel="noopener">content_by_lua_file</a>) and Lua modules.</p><p>When turning off, every request served by ngx_lua will run in a separate Lua VM instance, starting from the <code>0.9.3</code> release. So the Lua files referenced in <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua_file" target="_blank" rel="noopener">set_by_lua_file</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua_file" target="_blank" rel="noopener">content_by_lua_file</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua_file" target="_blank" rel="noopener">access_by_lua_file</a>, and etc will not be cached and all Lua modules used will be loaded from scratch. With this in place, developers can adopt an edit-and-refresh approach.</p><p>Please note however, that Lua code written inlined within nginx.conf such as those specified by <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a>,<a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a>, and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> will not be updated when you edit the inlined Lua code in your <code>nginx.conf</code> file because only the Nginx config file parser can correctly parse the <code>nginx.conf</code> file and the only way is to reload the config file by sending a <code>HUP</code> signal or just to restart Nginx.</p><p>Even when the code cache is enabled, Lua files which are loaded by <code>dofile</code> or <code>loadfile</code> in *_by_lua_file cannot be cached (unless you cache the results yourself). Usually you can either use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_by_lua" target="_blank" rel="noopener">init_by_lua</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init-by_lua_file" target="_blank" rel="noopener">init_by_lua_file</a> directives to load all such files or just make these Lua files true Lua modules and load them via <code>require</code>.</p><p>The ngx_lua module does not support the <code>stat</code> mode available with the Apache <code>mod_lua</code> module (yet).</p><p>Disabling the Lua code cache is strongly discouraged for production use and should only be used during development as it has a significant negative impact on overall performance. For example, the performance of a “hello world” Lua example can drop by an order of magnitude after disabling the Lua code cache.</p><h2><span id="lua_regex_cache_max_entries">lua_regex_cache_max_entries</span></h2><p><strong>syntax:</strong> <em>lua_regex_cache_max_entries <num></num></em></p><p><strong>default:</strong> <em>lua_regex_cache_max_entries 1024</em></p><p><strong>context:</strong> <em>http</em></p><p>Specifies the maximum number of entries allowed in the worker process level compiled regex cache.</p><p>The regular expressions used in <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxrematch" target="_blank" rel="noopener">ngx.re.match</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxregmatch" target="_blank" rel="noopener">ngx.re.gmatch</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxresub" target="_blank" rel="noopener">ngx.re.sub</a>, and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxregsub" target="_blank" rel="noopener">ngx.re.gsub</a> will be cached within this cache if the regex option <code>o</code> (i.e., compile-once flag) is specified.</p><p>The default number of entries allowed is 1024 and when this limit is reached, new regular expressions will not be cached (as if the <code>o</code> option was not specified) and there will be one, and only one, warning in the <code>error.log</code> file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2011/08/27 23:18:26 [warn] 31997#0: *1 lua exceeding regex cache max entries (1024), ...</span><br></pre></td></tr></table></figure><p>If you are using the <code>ngx.re.*</code> implementation of <a href="https://github.com/openresty/lua-resty-core" target="_blank" rel="noopener">lua-resty-core</a> by loading the <code>resty.core.regex</code> module (or just the <code>resty.core</code> module), then an LRU cache is used for the regex cache being used here.</p><p>Do not activate the <code>o</code> option for regular expressions (and/or <code>replace</code> string arguments for <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxresub" target="_blank" rel="noopener">ngx.re.sub</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxregsub" target="_blank" rel="noopener">ngx.re.gsub</a>) that are generated <em>on the fly</em> and give rise to infinite variations to avoid hitting the specified limit.</p><h2><span id="lua_regex_match_limit">lua_regex_match_limit</span></h2><p><strong>syntax:</strong> <em>lua_regex_match_limit <num></num></em></p><p><strong>default:</strong> <em>lua_regex_match_limit 0</em></p><p><strong>context:</strong> <em>http</em></p><p>Specifies the “match limit” used by the PCRE library when executing the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxrematch" target="_blank" rel="noopener">ngx.re API</a>. To quote the PCRE manpage, “the limit … has the effect of limiting the amount of backtracking that can take place.”</p><p>When the limit is hit, the error string “pcre_exec() failed: -8” will be returned by the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxrematch" target="_blank" rel="noopener">ngx.re API</a> functions on the Lua land.</p><p>When setting the limit to 0, the default “match limit” when compiling the PCRE library is used. And this is the default value of this directive.</p><p>This directive was first introduced in the <code>v0.8.5</code> release.</p><h2><span id="lua_package_path">lua_package_path</span></h2><p><strong>syntax:</strong> <em>lua_package_path <lua-style-path-str></lua-style-path-str></em></p><p><strong>default:</strong> <em>The content of LUA_PATH environment variable or Lua’s compiled-in defaults.</em></p><p><strong>context:</strong> <em>http</em></p><p>Sets the Lua module search path used by scripts specified by <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a> and others. The path string is in standard Lua path form, and <code>;;</code> can be used to stand for the original search paths.</p><p>As from the <code>v0.5.0rc29</code> release, the special notation <code>$prefix</code> or <code>${prefix}</code> can be used in the search path string to indicate the path of the <code>server prefix</code> usually determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><h2><span id="lua_package_cpath">lua_package_cpath</span></h2><p><strong>syntax:</strong> <em>lua_package_cpath <lua-style-cpath-str></lua-style-cpath-str></em></p><p><strong>default:</strong> <em>The content of LUA_CPATH environment variable or Lua’s compiled-in defaults.</em></p><p><strong>context:</strong> <em>http</em></p><p>Sets the Lua C-module search path used by scripts specified by <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a>, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a> and others. The cpath string is in standard Lua cpath form, and <code>;;</code> can be used to stand for the original cpath.</p><p>As from the <code>v0.5.0rc29</code> release, the special notation <code>$prefix</code> or <code>${prefix}</code> can be used in the search path string to indicate the path of the <code>server prefix</code> usually determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><h2><span id="init_by_lua">init_by_lua</span></h2><p><strong>syntax:</strong> <em>init_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>loading-config</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_by_lua_block" target="_blank" rel="noopener">init_by_lua_block</a> directive instead.</p><p>Runs the Lua code specified by the argument <code>&lt;lua-script-str&gt;</code> on the global Lua VM level when the Nginx master process (if any) is loading the Nginx config file.</p><p>When Nginx receives the <code>HUP</code> signal and starts reloading the config file, the Lua VM will also be re-created and <code>init_by_lua</code>will run again on the new Lua VM. In case that the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_code_cache" target="_blank" rel="noopener">lua_code_cache</a> directive is turned off (default on), the <code>init_by_lua</code>handler will run upon every request because in this special mode a standalone Lua VM is always created for each request.</p><p>Usually you can pre-load Lua modules at server start-up by means of this hook and take advantage of modern operating systems’ copy-on-write (COW) optimization. Here is an example for pre-loading Lua modules:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># this runs before forking out nginx worker processes:</span><br><span class="line">init_by_lua_block &#123; require &quot;cjson&quot; &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location = /api &#123;</span><br><span class="line">        content_by_lua_block &#123;</span><br><span class="line">            -- the following require() will just  return</span><br><span class="line">            -- the alrady loaded module from package.loaded:</span><br><span class="line">            ngx.say(require &quot;cjson&quot;.encode&#123;dog = 5, cat = 6&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You can also initialize the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_shared_dict" target="_blank" rel="noopener">lua_shared_dict</a> shm storage at this phase. Here is an example for this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">lua_shared_dict dogs 1m;</span><br><span class="line"></span><br><span class="line">init_by_lua_block &#123;</span><br><span class="line">    local dogs = ngx.shared.dogs;</span><br><span class="line">    dogs:set(&quot;Tom&quot;, 56)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location = /api &#123;</span><br><span class="line">        content_by_lua_block &#123;</span><br><span class="line">            local dogs = ngx.shared.dogs;</span><br><span class="line">            ngx.say(dogs:get(&quot;Tom&quot;))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>But note that, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_shared_dict" target="_blank" rel="noopener">lua_shared_dict</a>‘s shm storage will not be cleared through a config reload (via the <code>HUP</code> signal, for example). So if you do <em>not</em> want to re-initialize the shm storage in your <code>init_by_lua</code> code in this case, then you just need to set a custom flag in the shm storage and always check the flag in your <code>init_by_lua</code> code.</p><p>Because the Lua code in this context runs before Nginx forks its worker processes (if any), data or code loaded here will enjoy the <a href="http://en.wikipedia.org/wiki/Copy-on-write" target="_blank" rel="noopener">Copy-on-write (COW)</a> feature provided by many operating systems among all the worker processes, thus saving a lot of memory.</p><p>Do <em>not</em> initialize your own Lua global variables in this context because use of Lua global variables have performance penalties and can lead to global namespace pollution (see the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua-variable-scope" target="_blank" rel="noopener">Lua Variable Scope</a> section for more details). The recommended way is to use proper <a href="http://www.lua.org/manual/5.1/manual.html#5.3" target="_blank" rel="noopener">Lua module</a> files (but do not use the standard Lua function <a href="http://www.lua.org/manual/5.1/manual.html#pdf-module" target="_blank" rel="noopener">module()</a> to define Lua modules because it pollutes the global namespace as well) and call <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require" target="_blank" rel="noopener">require()</a> to load your own module files in <code>init_by_lua</code> or other contexts (<a href="http://www.lua.org/manual/5.1/manual.html#pdf-require" target="_blank" rel="noopener">require()</a>does cache the loaded Lua modules in the global <code>package.loaded</code> table in the Lua registry so your modules will only loaded once for the whole Lua VM instance).</p><p>Only a small set of the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#nginx-api-for-lua" target="_blank" rel="noopener">Nginx API for Lua</a> is supported in this context:</p><ul><li>Logging APIs: <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlog" target="_blank" rel="noopener">ngx.log</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#print" target="_blank" rel="noopener">print</a>,</li><li>Shared Dictionary API: <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxshareddict" target="_blank" rel="noopener">ngx.shared.DICT</a>.</li></ul><p>More Nginx APIs for Lua may be supported in this context upon future user requests.</p><p>Basically you can safely use Lua libraries that do blocking I/O in this very context because blocking the master process during server start-up is completely okay. Even the Nginx core does blocking I/O (at least on resolving upstream’s host names) at the configure-loading phase.</p><p>You should be very careful about potential security vulnerabilities in your Lua code registered in this context because the Nginx master process is often run under the <code>root</code> account.</p><p>This directive was first introduced in the <code>v0.5.5</code> release.</p><h2><span id="init_by_lua_block">init_by_lua_block</span></h2><p><strong>syntax:</strong> <em>init_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>loading-config</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_by_lua" target="_blank" rel="noopener">init_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">init_by_lua_block &#123;</span><br><span class="line">    print(&quot;I need no extra escaping here, for example: \r\nblah&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="init_by_lua_file">init_by_lua_file</span></h2><p><strong>syntax:</strong> <em>init_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>loading-config</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_by_lua" target="_blank" rel="noopener">init_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.5.5</code> release.</p><h2><span id="init_worker_by_lua">init_worker_by_lua</span></h2><p><strong>syntax:</strong> <em>init_worker_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>starting-worker</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_worker_by_lua_block" target="_blank" rel="noopener">init_worker_by_lua_block</a> directive instead.</p><p>Runs the specified Lua code upon every Nginx worker process’s startup when the master process is enabled. When the master process is disabled, this hook will just run after <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_by_lua" target="_blank" rel="noopener">init_by_lua*</a>.</p><p>This hook is often used to create per-worker reoccurring timers (via the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxtimerat" target="_blank" rel="noopener">ngx.timer.at</a> Lua API), either for backend health-check or other timed routine work. Below is an example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">init_worker_by_lua &apos;</span><br><span class="line">    local delay = 3  -- in seconds</span><br><span class="line">    local new_timer = ngx.timer.at</span><br><span class="line">    local log = ngx.log</span><br><span class="line">    local ERR = ngx.ERR</span><br><span class="line">    local check</span><br><span class="line"></span><br><span class="line">    check = function(premature)</span><br><span class="line">        if not premature then</span><br><span class="line">            -- do the health check or other routine work</span><br><span class="line">            local ok, err = new_timer(delay, check)</span><br><span class="line">            if not ok then</span><br><span class="line">                log(ERR, &quot;failed to create timer: &quot;, err)</span><br><span class="line">                return</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    local hdl, err = new_timer(delay, check)</span><br><span class="line">    if not hdl then</span><br><span class="line">        log(ERR, &quot;failed to create timer: &quot;, err)</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line">&apos;;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.5</code> release.</p><p>This hook no longer runs in the cache manager and cache loader processes since the <code>v0.10.12</code> release.</p><h2><span id="init_worker_by_lua_block">init_worker_by_lua_block</span></h2><p><strong>syntax:</strong> <em>init_worker_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>starting-worker</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_worker_by_lua" target="_blank" rel="noopener">init_worker_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">init_worker_by_lua_block &#123;</span><br><span class="line">    print(&quot;I need no extra escaping here, for example: \r\nblah&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><p>This hook no longer runs in the cache manager and cache loader processes since the <code>v0.10.12</code> release.</p><h2><span id="init_worker_by_lua_file">init_worker_by_lua_file</span></h2><p><strong>syntax:</strong> <em>init_worker_by_lua_file <lua-file-path></lua-file-path></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>starting-worker</em></p><p>Similar to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#init_worker_by_lua" target="_blank" rel="noopener">init_worker_by_lua</a>, but accepts the file path to a Lua source file or Lua bytecode file.</p><p>This directive was first introduced in the <code>v0.9.5</code> release.</p><p>This hook no longer runs in the cache manager and cache loader processes since the <code>v0.10.12</code> release.</p><h2><span id="set_by_lua">set_by_lua</span></h2><p><strong>syntax:</strong> <em>set_by_lua $res <lua-script-str> [$arg1 $arg2 …]</lua-script-str></em></p><p><strong>context:</strong> <em>server, server if, location, location if</em></p><p><strong>phase:</strong> <em>rewrite</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua_block" target="_blank" rel="noopener">set_by_lua_block</a> directive instead.</p><p>Executes code specified in <code>&lt;lua-script-str&gt;</code> with optional input arguments <code>$arg1 $arg2 ...</code>, and returns string output to <code>$res</code>. The code in <code>&lt;lua-script-str&gt;</code> can make <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#nginx-api-for-lua" target="_blank" rel="noopener">API calls</a> and can retrieve input arguments from the <code>ngx.arg</code> table (index starts from <code>1</code> and increases sequentially).</p><p>This directive is designed to execute short, fast running code blocks as the Nginx event loop is blocked during code execution. Time consuming code sequences should therefore be avoided.</p><p>This directive is implemented by injecting custom commands into the standard <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>‘s command list. Because <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a> does not support nonblocking I/O in its commands, Lua APIs requiring yielding the current Lua “light thread” cannot work in this directive.</p><p>At least the following API functions are currently disabled within the context of <code>set_by_lua</code>:</p><ul><li>Output API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsay" target="_blank" rel="noopener">ngx.say</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsend_headers" target="_blank" rel="noopener">ngx.send_headers</a>)</li><li>Control API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a>)</li><li>Subrequest API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture" target="_blank" rel="noopener">ngx.location.capture</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture_multi" target="_blank" rel="noopener">ngx.location.capture_multi</a>)</li><li>Cosocket API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">ngx.socket.tcp</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a>).</li><li>Sleeping API function <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsleep" target="_blank" rel="noopener">ngx.sleep</a>.</li></ul><p>In addition, note that this directive can only write out a value to a single Nginx variable at a time. However, a workaround is possible using the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxvarvariable" target="_blank" rel="noopener">ngx.var.VARIABLE</a> interface.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    set $diff &apos;&apos;; # we have to predefine the $diff variable here</span><br><span class="line"></span><br><span class="line">    set_by_lua $sum &apos;</span><br><span class="line">        local a = 32</span><br><span class="line">        local b = 56</span><br><span class="line"></span><br><span class="line">        ngx.var.diff = a - b;  -- write to $diff directly</span><br><span class="line">        return a + b;          -- return the $sum value normally</span><br><span class="line">    &apos;;</span><br><span class="line"></span><br><span class="line">    echo &quot;sum = $sum, diff = $diff&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive can be freely mixed with all directives of the <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>, <a href="http://github.com/openresty/set-misc-nginx-module" target="_blank" rel="noopener">set-misc-nginx-module</a>, and <a href="http://github.com/openresty/array-var-nginx-module" target="_blank" rel="noopener">array-var-nginx-module</a> modules. All of these directives will run in the same order as they appear in the config file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set $foo 32;</span><br><span class="line">set_by_lua $bar &apos;return tonumber(ngx.var.foo) + 1&apos;;</span><br><span class="line">set $baz &quot;bar: $bar&quot;;  # $baz == &quot;bar: 33&quot;</span><br></pre></td></tr></table></figure><p>As from the <code>v0.5.0rc29</code> release, Nginx variable interpolation is disabled in the <code>&lt;lua-script-str&gt;</code> argument of this directive and therefore, the dollar sign character (<code>$</code>) can be used directly.</p><p>This directive requires the <a href="https://github.com/simplresty/ngx_devel_kit" target="_blank" rel="noopener">ngx_devel_kit</a> module.</p><h2><span id="set_by_lua_block">set_by_lua_block</span></h2><p><strong>syntax:</strong> <em>set_by_lua_block $res { lua-script }</em></p><p><strong>context:</strong> <em>server, server if, location, location if</em></p><p><strong>phase:</strong> <em>rewrite</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a> directive except that</p><ol><li>this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping), and</li><li>this directive does not support extra arguments after the Lua script as in <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a>.</li></ol><p>For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_by_lua_block $res &#123; return 32 + math.cos(32) &#125;</span><br><span class="line"># $res now has the value &quot;32.834223360507&quot; or alike.</span><br></pre></td></tr></table></figure><p>No special escaping is required in the Lua code block.</p><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="set_by_lua_file">set_by_lua_file</span></h2><p><strong>syntax:</strong> <em>set_by_lua_file $res <path-to-lua-script-file> [$arg1 $arg2 …]</path-to-lua-script-file></em></p><p><strong>context:</strong> <em>server, server if, location, location if</em></p><p><strong>phase:</strong> <em>rewrite</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#set_by_lua" target="_blank" rel="noopener">set_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>Nginx variable interpolation is supported in the <code>&lt;path-to-lua-script-file&gt;</code> argument string of this directive. But special care must be taken for injection attacks.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_code_cache" target="_blank" rel="noopener">lua_code_cache</a> <code>off</code> in <code>nginx.conf</code> to avoid reloading Nginx.</p><p>This directive requires the <a href="https://github.com/simplresty/ngx_devel_kit" target="_blank" rel="noopener">ngx_devel_kit</a> module.</p><h2><span id="content_by_lua">content_by_lua</span></h2><p><strong>syntax:</strong> <em>content_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>location, location if</em></p><p><strong>phase:</strong> <em>content</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua_block" target="_blank" rel="noopener">content_by_lua_block</a> directive instead.</p><p>Acts as a “content handler” and executes Lua code string specified in <code>&lt;lua-script-str&gt;</code> for every request. The Lua code may make <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#nginx-api-for-lua" target="_blank" rel="noopener">API calls</a> and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).</p><p>Do not use this directive and other content handler directives in the same location. For example, this directive and the <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" target="_blank" rel="noopener">proxy_pass</a> directive should not be used in the same location.</p><h2><span id="content_by_lua_block">content_by_lua_block</span></h2><p><strong>syntax:</strong> <em>content_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>location, location if</em></p><p><strong>phase:</strong> <em>content</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">content_by_lua_block &#123;</span><br><span class="line">    ngx.say(&quot;I need no extra escaping here, for example: \r\nblah&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="content_by_lua_file">content_by_lua_file</span></h2><p><strong>syntax:</strong> <em>content_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>location, location if</em></p><p><strong>phase:</strong> <em>content</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>Nginx variables can be used in the <code>&lt;path-to-lua-script-file&gt;</code> string to provide flexibility. This however carries some risks and is not ordinarily recommended.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_code_cache" target="_blank" rel="noopener">lua_code_cache</a> <code>off</code> in <code>nginx.conf</code> to avoid reloading Nginx.</p><p>Nginx variables are supported in the file path for dynamic dispatch, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># CAUTION: contents in nginx var must be carefully filtered,</span><br><span class="line"># otherwise there&apos;ll be great security risk!</span><br><span class="line">location ~ ^/app/([-_a-zA-Z0-9/]+) &#123;</span><br><span class="line">    set $path $1;</span><br><span class="line">    content_by_lua_file /path/to/lua/app/root/$path.lua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>But be very careful about malicious user inputs and always carefully validate or filter out the user-supplied path components.</p><h2><span id="rewrite_by_lua">rewrite_by_lua</span></h2><p><strong>syntax:</strong> <em>rewrite_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>rewrite tail</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua_block" target="_blank" rel="noopener">rewrite_by_lua_block</a> directive instead.</p><p>Acts as a rewrite phase handler and executes Lua code string specified in <code>&lt;lua-script-str&gt;</code> for every request. The Lua code may make <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#nginx-api-for-lua" target="_blank" rel="noopener">API calls</a> and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).</p><p>Note that this handler always runs <em>after</em> the standard <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>. So the following will work as expected:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    set $a 12; # create and initialize $a</span><br><span class="line">    set $b &quot;&quot;; # create and initialize $b</span><br><span class="line">    rewrite_by_lua &apos;ngx.var.b = tonumber(ngx.var.a) + 1&apos;;</span><br><span class="line">    echo &quot;res = $b&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>because <code>set $a 12</code> and <code>set $b &quot;&quot;</code> run <em>before</em> <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a>.</p><p>On the other hand, the following will not work as expected:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?  location /foo &#123;</span><br><span class="line">?      set $a 12; # create and initialize $a</span><br><span class="line">?      set $b &apos;&apos;; # create and initialize $b</span><br><span class="line">?      rewrite_by_lua &apos;ngx.var.b = tonumber(ngx.var.a) + 1&apos;;</span><br><span class="line">?      if ($b = &apos;13&apos;) &#123;</span><br><span class="line">?         rewrite ^ /bar redirect;</span><br><span class="line">?         break;</span><br><span class="line">?      &#125;</span><br><span class="line">?</span><br><span class="line">?      echo &quot;res = $b&quot;;</span><br><span class="line">?  &#125;</span><br></pre></td></tr></table></figure><p>because <code>if</code> runs <em>before</em> <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> even if it is placed after <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> in the config.</p><p>The right way of doing this is as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    set $a 12; # create and initialize $a</span><br><span class="line">    set $b &apos;&apos;; # create and initialize $b</span><br><span class="line">    rewrite_by_lua &apos;</span><br><span class="line">        ngx.var.b = tonumber(ngx.var.a) + 1</span><br><span class="line">        if tonumber(ngx.var.b) == 13 then</span><br><span class="line">            return ngx.redirect(&quot;/bar&quot;);</span><br><span class="line">        end</span><br><span class="line">    &apos;;</span><br><span class="line"></span><br><span class="line">    echo &quot;res = $b&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note that the <a href="http://www.grid.net.ru/nginx/eval.en.html" target="_blank" rel="noopener">ngx_eval</a> module can be approximated by using <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a>. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    eval $res &#123;</span><br><span class="line">        proxy_pass http://foo.com/check-spam;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($res = &apos;spam&apos;) &#123;</span><br><span class="line">        rewrite ^ /terms-of-use.html redirect;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fastcgi_pass ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>can be implemented in ngx_lua as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location = /check-spam &#123;</span><br><span class="line">    internal;</span><br><span class="line">    proxy_pass http://foo.com/check-spam;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    rewrite_by_lua &apos;</span><br><span class="line">        local res = ngx.location.capture(&quot;/check-spam&quot;)</span><br><span class="line">        if res.body == &quot;spam&quot; then</span><br><span class="line">            return ngx.redirect(&quot;/terms-of-use.html&quot;)</span><br><span class="line">        end</span><br><span class="line">    &apos;;</span><br><span class="line"></span><br><span class="line">    fastcgi_pass ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Just as any other rewrite phase handlers, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> also runs in subrequests.</p><p>Note that when calling <code>ngx.exit(ngx.OK)</code> within a <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> handler, the nginx request processing control flow will still continue to the content handler. To terminate the current request from within a <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> handler, calling <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a> with status &gt;= 200 (<code>ngx.HTTP_OK</code>) and status &lt; 300 (<code>ngx.HTTP_SPECIAL_RESPONSE</code>) for successful quits and <code>ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)</code> (or its friends) for failures.</p><p>If the <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>‘s <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" target="_blank" rel="noopener">rewrite</a> directive is used to change the URI and initiate location re-lookups (internal redirections), then any <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua_file" target="_blank" rel="noopener">rewrite_by_lua_file</a> code sequences within the current location will not be executed. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    rewrite ^ /bar;</span><br><span class="line">    rewrite_by_lua &apos;ngx.exit(503)&apos;;</span><br><span class="line">&#125;</span><br><span class="line">location /bar &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here the Lua code <code>ngx.exit(503)</code> will never run. This will be the case if <code>rewrite ^ /bar last</code> is used as this will similarly initiate an internal redirection. If the <code>break</code> modifier is used instead, there will be no internal redirection and the <code>rewrite_by_lua</code> code will be executed.</p><p>The <code>rewrite_by_lua</code> code will always run at the end of the <code>rewrite</code> request-processing phase unless <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua_no_postpone" target="_blank" rel="noopener">rewrite_by_lua_no_postpone</a> is turned on.</p><h2><span id="rewrite_by_lua_block">rewrite_by_lua_block</span></h2><p><strong>syntax:</strong> <em>rewrite_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>rewrite tail</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rewrite_by_lua_block &#123;</span><br><span class="line">    do_something(&quot;hello, world!\nhiya\n&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="rewrite_by_lua_file">rewrite_by_lua_file</span></h2><p><strong>syntax:</strong> <em>rewrite_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>rewrite tail</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>Nginx variables can be used in the <code>&lt;path-to-lua-script-file&gt;</code> string to provide flexibility. This however carries some risks and is not ordinarily recommended.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_code_cache" target="_blank" rel="noopener">lua_code_cache</a> <code>off</code> in <code>nginx.conf</code> to avoid reloading Nginx.</p><p>The <code>rewrite_by_lua_file</code> code will always run at the end of the <code>rewrite</code> request-processing phase unless <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua_no_postpone" target="_blank" rel="noopener">rewrite_by_lua_no_postpone</a> is turned on.</p><p>Nginx variables are supported in the file path for dynamic dispatch just as in <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua_file" target="_blank" rel="noopener">content_by_lua_file</a>.</p><h2><span id="access_by_lua">access_by_lua</span></h2><p><strong>syntax:</strong> <em>access_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>access tail</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua_block" target="_blank" rel="noopener">access_by_lua_block</a> directive instead.</p><p>Acts as an access phase handler and executes Lua code string specified in <code>&lt;lua-script-str&gt;</code> for every request. The Lua code may make <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#nginx-api-for-lua" target="_blank" rel="noopener">API calls</a> and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).</p><p>Note that this handler always runs <em>after</em> the standard <a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" target="_blank" rel="noopener">ngx_http_access_module</a>. So the following will work as expected:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    deny    192.168.1.1;</span><br><span class="line">    allow   192.168.1.0/24;</span><br><span class="line">    allow   10.1.1.0/16;</span><br><span class="line">    deny    all;</span><br><span class="line"></span><br><span class="line">    access_by_lua &apos;</span><br><span class="line">        local res = ngx.location.capture(&quot;/mysql&quot;, &#123; ... &#125;)</span><br><span class="line">        ...</span><br><span class="line">    &apos;;</span><br><span class="line"></span><br><span class="line">    # proxy_pass/fastcgi_pass/...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>That is, if a client IP address is in the blacklist, it will be denied before the MySQL query for more complex authentication is executed by <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a>.</p><p>Note that the <a href="http://mdounin.ru/hg/ngx_http_auth_request_module/" target="_blank" rel="noopener">ngx_auth_request</a> module can be approximated by using <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    auth_request /auth;</span><br><span class="line"></span><br><span class="line">    # proxy_pass/fastcgi_pass/postgres_pass/...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>can be implemented in ngx_lua as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    access_by_lua &apos;</span><br><span class="line">        local res = ngx.location.capture(&quot;/auth&quot;)</span><br><span class="line"></span><br><span class="line">        if res.status == ngx.HTTP_OK then</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        if res.status == ngx.HTTP_FORBIDDEN then</span><br><span class="line">            ngx.exit(res.status)</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)</span><br><span class="line">    &apos;;</span><br><span class="line"></span><br><span class="line">    # proxy_pass/fastcgi_pass/postgres_pass/...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>As with other access phase handlers, <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a> will <em>not</em> run in subrequests.</p><p>Note that when calling <code>ngx.exit(ngx.OK)</code> within a <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a> handler, the nginx request processing control flow will still continue to the content handler. To terminate the current request from within a <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a> handler, calling <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a> with status &gt;= 200 (<code>ngx.HTTP_OK</code>) and status &lt; 300 (<code>ngx.HTTP_SPECIAL_RESPONSE</code>) for successful quits and <code>ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)</code> (or its friends) for failures.</p><p>Starting from the <code>v0.9.20</code> release, you can use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua_no_postpone" target="_blank" rel="noopener">access_by_lua_no_postpone</a> directive to control when to run this handler inside the “access” request-processing phase of NGINX.</p><h2><span id="access_by_lua_block">access_by_lua_block</span></h2><p><strong>syntax:</strong> <em>access_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>access tail</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">access_by_lua_block &#123;</span><br><span class="line">    do_something(&quot;hello, world!\nhiya\n&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="access_by_lua_file">access_by_lua_file</span></h2><p><strong>syntax:</strong> <em>access_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>access tail</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>Nginx variables can be used in the <code>&lt;path-to-lua-script-file&gt;</code> string to provide flexibility. This however carries some risks and is not ordinarily recommended.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_code_cache" target="_blank" rel="noopener">lua_code_cache</a> <code>off</code> in <code>nginx.conf</code> to avoid repeatedly reloading Nginx.</p><p>Nginx variables are supported in the file path for dynamic dispatch just as in <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua_file" target="_blank" rel="noopener">content_by_lua_file</a>.</p><h2><span id="header_filter_by_lua">header_filter_by_lua</span></h2><p><strong>syntax:</strong> <em>header_filter_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-header-filter</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#header_filter_by_lua_block" target="_blank" rel="noopener">header_filter_by_lua_block</a> directive instead.</p><p>Uses Lua code specified in <code>&lt;lua-script-str&gt;</code> to define an output header filter.</p><p>Note that the following API functions are currently disabled within this context:</p><ul><li>Output API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsay" target="_blank" rel="noopener">ngx.say</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsend_headers" target="_blank" rel="noopener">ngx.send_headers</a>)</li><li>Control API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxredirect" target="_blank" rel="noopener">ngx.redirect</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexec" target="_blank" rel="noopener">ngx.exec</a>)</li><li>Subrequest API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture" target="_blank" rel="noopener">ngx.location.capture</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture_multi" target="_blank" rel="noopener">ngx.location.capture_multi</a>)</li><li>Cosocket API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">ngx.socket.tcp</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a>).</li></ul><p>Here is an example of overriding a response header (or adding one if absent) in our Lua header filter:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://mybackend;</span><br><span class="line">    header_filter_by_lua &apos;ngx.header.Foo = &quot;blah&quot;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.2.1rc20</code> release.</p><h2><span id="header_filter_by_lua_block">header_filter_by_lua_block</span></h2><p><strong>syntax:</strong> <em>header_filter_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-header-filter</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#header_filter_by_lua" target="_blank" rel="noopener">header_filter_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header_filter_by_lua_block &#123;</span><br><span class="line">    ngx.header[&quot;content-length&quot;] = nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="header_filter_by_lua_file">header_filter_by_lua_file</span></h2><p><strong>syntax:</strong> <em>header_filter_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-header-filter</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#header_filter_by_lua" target="_blank" rel="noopener">header_filter_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.2.1rc20</code> release.</p><h2><span id="body_filter_by_lua">body_filter_by_lua</span></h2><p><strong>syntax:</strong> <em>body_filter_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-body-filter</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#body_filter_by_lua_block" target="_blank" rel="noopener">body_filter_by_lua_block</a> directive instead.</p><p>Uses Lua code specified in <code>&lt;lua-script-str&gt;</code> to define an output body filter.</p><p>The input data chunk is passed via <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxarg" target="_blank" rel="noopener">ngx.arg</a>[1] (as a Lua string value) and the “eof” flag indicating the end of the response body data stream is passed via <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxarg" target="_blank" rel="noopener">ngx.arg</a>[2] (as a Lua boolean value).</p><p>Behind the scene, the “eof” flag is just the <code>last_buf</code> (for main requests) or <code>last_in_chain</code> (for subrequests) flag of the Nginx chain link buffers. (Before the <code>v0.7.14</code> release, the “eof” flag does not work at all in subrequests.)</p><p>The output data stream can be aborted immediately by running the following Lua statement:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.ERROR</span><br></pre></td></tr></table></figure><p>This will truncate the response body and usually result in incomplete and also invalid responses.</p><p>The Lua code can pass its own modified version of the input data chunk to the downstream Nginx output body filters by overriding <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxarg" target="_blank" rel="noopener">ngx.arg</a>[1] with a Lua string or a Lua table of strings. For example, to transform all the lowercase letters in the response body, we can just write:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://mybackend;</span><br><span class="line">    body_filter_by_lua &apos;ngx.arg[1] = string.upper(ngx.arg[1])&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>When setting <code>nil</code> or an empty Lua string value to <code>ngx.arg[1]</code>, no data chunk will be passed to the downstream Nginx output filters at all.</p><p>Likewise, new “eof” flag can also be specified by setting a boolean value to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxarg" target="_blank" rel="noopener">ngx.arg</a>[2]. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location /t &#123;</span><br><span class="line">    echo hello world;</span><br><span class="line">    echo hiya globe;</span><br><span class="line"></span><br><span class="line">    body_filter_by_lua &apos;</span><br><span class="line">        local chunk = ngx.arg[1]</span><br><span class="line">        if string.match(chunk, &quot;hello&quot;) then</span><br><span class="line">            ngx.arg[2] = true  -- new eof</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        -- just throw away any remaining chunk data</span><br><span class="line">        ngx.arg[1] = nil</span><br><span class="line">    &apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then <code>GET /t</code> will just return the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure><p>That is, when the body filter sees a chunk containing the word “hello”, then it will set the “eof” flag to true immediately, resulting in truncated but still valid responses.</p><p>When the Lua code may change the length of the response body, then it is required to always clear out the <code>Content-Length</code>response header (if any) in a header filter to enforce streaming output, as in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    # fastcgi_pass/proxy_pass/...</span><br><span class="line"></span><br><span class="line">    header_filter_by_lua_block &#123; ngx.header.content_length = nil &#125;</span><br><span class="line">    body_filter_by_lua &apos;ngx.arg[1] = string.len(ngx.arg[1]) .. &quot;\\n&quot;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note that the following API functions are currently disabled within this context due to the limitations in NGINX output filter’s current implementation:</p><ul><li>Output API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsay" target="_blank" rel="noopener">ngx.say</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsend_headers" target="_blank" rel="noopener">ngx.send_headers</a>)</li><li>Control API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexec" target="_blank" rel="noopener">ngx.exec</a>)</li><li>Subrequest API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture" target="_blank" rel="noopener">ngx.location.capture</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture_multi" target="_blank" rel="noopener">ngx.location.capture_multi</a>)</li><li>Cosocket API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">ngx.socket.tcp</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a>).</li></ul><p>Nginx output filters may be called multiple times for a single request because response body may be delivered in chunks. Thus, the Lua code specified by in this directive may also run multiple times in the lifetime of a single HTTP request.</p><p>This directive was first introduced in the <code>v0.5.0rc32</code> release.</p><h2><span id="body_filter_by_lua_block">body_filter_by_lua_block</span></h2><p><strong>syntax:</strong> <em>body_filter_by_lua_block { lua-script-str }</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-body-filter</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#body_filter_by_lua" target="_blank" rel="noopener">body_filter_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body_filter_by_lua_block &#123;</span><br><span class="line">    local data, eof = ngx.arg[1], ngx.arg[2]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="body_filter_by_lua_file">body_filter_by_lua_file</span></h2><p><strong>syntax:</strong> <em>body_filter_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>output-body-filter</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#body_filter_by_lua" target="_blank" rel="noopener">body_filter_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.5.0rc32</code> release.</p><h2><span id="log_by_lua">log_by_lua</span></h2><p><strong>syntax:</strong> <em>log_by_lua <lua-script-str></lua-script-str></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>log</em></p><p><strong>NOTE</strong> Use of this directive is <em>discouraged</em> following the <code>v0.9.17</code> release. Use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#log_by_lua_block" target="_blank" rel="noopener">log_by_lua_block</a> directive instead.</p><p>Runs the Lua source code inlined as the <code>&lt;lua-script-str&gt;</code> at the <code>log</code> request processing phase. This does not replace the current access logs, but runs before.</p><p>Note that the following API functions are currently disabled within this context:</p><ul><li>Output API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsay" target="_blank" rel="noopener">ngx.say</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsend_headers" target="_blank" rel="noopener">ngx.send_headers</a>)</li><li>Control API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a>)</li><li>Subrequest API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture" target="_blank" rel="noopener">ngx.location.capture</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxlocationcapture_multi" target="_blank" rel="noopener">ngx.location.capture_multi</a>)</li><li>Cosocket API functions (e.g., <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">ngx.socket.tcp</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a>).</li></ul><p>Here is an example of gathering average data for <a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time" target="_blank" rel="noopener">$upstream_response_time</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">lua_shared_dict log_dict 5M;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://mybackend;</span><br><span class="line"></span><br><span class="line">        log_by_lua &apos;</span><br><span class="line">            local log_dict = ngx.shared.log_dict</span><br><span class="line">            local upstream_time = tonumber(ngx.var.upstream_response_time)</span><br><span class="line"></span><br><span class="line">            local sum = log_dict:get(&quot;upstream_time-sum&quot;) or 0</span><br><span class="line">            sum = sum + upstream_time</span><br><span class="line">            log_dict:set(&quot;upstream_time-sum&quot;, sum)</span><br><span class="line"></span><br><span class="line">            local newval, err = log_dict:incr(&quot;upstream_time-nb&quot;, 1)</span><br><span class="line">            if not newval and err == &quot;not found&quot; then</span><br><span class="line">                log_dict:add(&quot;upstream_time-nb&quot;, 0)</span><br><span class="line">                log_dict:incr(&quot;upstream_time-nb&quot;, 1)</span><br><span class="line">            end</span><br><span class="line">        &apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /status &#123;</span><br><span class="line">        content_by_lua_block &#123;</span><br><span class="line">            local log_dict = ngx.shared.log_dict</span><br><span class="line">            local sum = log_dict:get(&quot;upstream_time-sum&quot;)</span><br><span class="line">            local nb = log_dict:get(&quot;upstream_time-nb&quot;)</span><br><span class="line"></span><br><span class="line">            if nb and sum then</span><br><span class="line">                ngx.say(&quot;average upstream response time: &quot;, sum / nb,</span><br><span class="line">                        &quot; (&quot;, nb, &quot; reqs)&quot;)</span><br><span class="line">            else</span><br><span class="line">                ngx.say(&quot;no data yet&quot;)</span><br><span class="line">            end</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.5.0rc31</code> release.</p><h2><span id="log_by_lua_block">log_by_lua_block</span></h2><p><strong>syntax:</strong> <em>log_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>log</em></p><p>Similar to the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#log_by_lua" target="_blank" rel="noopener">log_by_lua</a> directive except that this directive inlines the Lua source directly inside a pair of curly braces (<code>{}</code>) instead of in an NGINX string literal (which requires special character escaping).</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_by_lua_block &#123;</span><br><span class="line">    print(&quot;I need no extra escaping here, for example: \r\nblah&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.9.17</code> release.</p><h2><span id="log_by_lua_file">log_by_lua_file</span></h2><p><strong>syntax:</strong> <em>log_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>log</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#log_by_lua" target="_blank" rel="noopener">log_by_lua</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.5.0rc31</code> release.</p><h2><span id="balancer_by_lua_block">balancer_by_lua_block</span></h2><p><strong>syntax:</strong> <em>balancer_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>upstream</em></p><p><strong>phase:</strong> <em>content</em></p><p>This directive runs Lua code as an upstream balancer for any upstream entities defined by the <code>upstream {}</code> configuration block.</p><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream foo &#123;</span><br><span class="line">    server 127.0.0.1;</span><br><span class="line">    balancer_by_lua_block &#123;</span><br><span class="line">        -- use Lua to do something interesting here</span><br><span class="line">        -- as a dynamic balancer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://foo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The resulting Lua load balancer can work with any existing nginx upstream modules like <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener">ngx_proxy</a> and <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" target="_blank" rel="noopener">ngx_fastcgi</a>.</p><p>Also, the Lua load balancer can work with the standard upstream connection pool mechanism, i.e., the standard <a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" target="_blank" rel="noopener">keepalive</a>directive. Just ensure that the <a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" target="_blank" rel="noopener">keepalive</a> directive is used <em>after</em> this <code>balancer_by_lua_block</code> directive in a single <code>upstream {}</code>configuration block.</p><p>The Lua load balancer can totally ignore the list of servers defined in the <code>upstream {}</code> block and select peer from a completely dynamic server list (even changing per request) via the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md" target="_blank" rel="noopener">ngx.balancer</a> module from the <a href="https://github.com/openresty/lua-resty-core" target="_blank" rel="noopener">lua-resty-core</a> library.</p><p>The Lua code handler registered by this directive might get called more than once in a single downstream request when the nginx upstream mechanism retries the request on conditions specified by directives like the <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream" target="_blank" rel="noopener">proxy_next_upstream</a> directive.</p><p>This Lua code execution context does not support yielding, so Lua APIs that may yield (like cosockets and “light threads”) are disabled in this context. One can usually work around this limitation by doing such operations in an earlier phase handler (like<a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua*</a>) and passing along the result into this context via the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxctx" target="_blank" rel="noopener">ngx.ctx</a> table.</p><p>This directive was first introduced in the <code>v0.10.0</code> release.</p><h2><span id="balancer_by_lua_file">balancer_by_lua_file</span></h2><p><strong>syntax:</strong> <em>balancer_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>upstream</em></p><p><strong>phase:</strong> <em>content</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#balancer_by_lua_block" target="_blank" rel="noopener">balancer_by_lua_block</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.10.0</code> release.</p><h2><span id="lua_need_request_body">lua_need_request_body</span></h2><p><strong>syntax:</strong> <em>lua_need_request_body &lt;on|off&gt;</em></p><p><strong>default:</strong> <em>off</em></p><p><strong>context:</strong> <em>http, server, location, location if</em></p><p><strong>phase:</strong> <em>depends on usage</em></p><p>Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned <code>on</code> or the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqread_body" target="_blank" rel="noopener">ngx.req.read_body</a> function should be called within the Lua code.</p><p>To read the request body data within the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" target="_blank" rel="noopener">$request_body</a> variable, <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" target="_blank" rel="noopener">client_body_buffer_size</a> must have the same value as <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" target="_blank" rel="noopener">client_max_body_size</a>. Because when the content length exceeds <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" target="_blank" rel="noopener">client_body_buffer_size</a> but less than <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" target="_blank" rel="noopener">client_max_body_size</a>, Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" target="_blank" rel="noopener">$request_body</a> variable.</p><p>If the current location includes <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua*</a> directives, then the request body will be read just before the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua*</a>code is run (and also at the <code>rewrite</code> phase). Similarly, if only <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#content_by_lua" target="_blank" rel="noopener">content_by_lua</a> is specified, the request body will not be read until the content handler’s Lua code is about to run (i.e., the request body will be read during the content phase).</p><p>It is recommended however, to use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqread_body" target="_blank" rel="noopener">ngx.req.read_body</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqdiscard_body" target="_blank" rel="noopener">ngx.req.discard_body</a> functions for finer control over the request body reading process instead.</p><p>This also applies to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua*</a>.</p><h2><span id="ssl_certificate_by_lua_block">ssl_certificate_by_lua_block</span></h2><p><strong>syntax:</strong> <em>ssl_certificate_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>server</em></p><p><strong>phase:</strong> <em>right-before-SSL-handshake</em></p><p>This directive runs user Lua code when NGINX is about to start the SSL handshake for the downstream SSL (https) connections.</p><p>It is particularly useful for setting the SSL certificate chain and the corresponding private key on a per-request basis. It is also useful to load such handshake configurations nonblockingly from the remote (for example, with the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">cosocket</a> API). And one can also do per-request OCSP stapling handling in pure Lua here as well.</p><p>Another typical use case is to do SSL handshake traffic control nonblockingly in this context, with the help of the <a href="https://github.com/openresty/lua-resty-limit-traffic" target="_blank" rel="noopener">lua-resty-limit-traffic#readme</a> library, for example.</p><p>One can also do interesting things with the SSL handshake requests from the client side, like rejecting old SSL clients using the SSLv3 protocol or even below selectively.</p><p>The <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md" target="_blank" rel="noopener">ngx.ssl</a> and <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md" target="_blank" rel="noopener">ngx.ocsp</a> Lua modules provided by the <a href="https://github.com/openresty/lua-resty-core/#readme" target="_blank" rel="noopener">lua-resty-core</a> library are particularly useful in this context. You can use the Lua API offered by these two Lua modules to manipulate the SSL certificate chain and private key for the current SSL connection being initiated.</p><p>This Lua handler does not run at all, however, when NGINX/OpenSSL successfully resumes the SSL session via SSL session IDs or TLS session tickets for the current SSL connection. In other words, this Lua handler only runs when NGINX has to initiate a full SSL handshake.</p><p>Below is a trivial example using the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md" target="_blank" rel="noopener">ngx.ssl</a> module at the same time:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name   test.com;</span><br><span class="line"></span><br><span class="line">    ssl_certificate_by_lua_block &#123;</span><br><span class="line">        print(&quot;About to initiate a new SSL handshake!&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>See more complicated examples in the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md" target="_blank" rel="noopener">ngx.ssl</a> and <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md" target="_blank" rel="noopener">ngx.ocsp</a> Lua modules’ official documentation.</p><p>Uncaught Lua exceptions in the user Lua code immediately abort the current SSL session, so does the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxexit" target="_blank" rel="noopener">ngx.exit</a> call with an error code like <code>ngx.ERROR</code>.</p><p>This Lua code execution context <em>does</em> support yielding, so Lua APIs that may yield (like cosockets, sleeping, and “light threads”) are enabled in this context.</p><p>Note, however, you still need to configure the <a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate" target="_blank" rel="noopener">ssl_certificate</a> and <a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key" target="_blank" rel="noopener">ssl_certificate_key</a> directives even though you will not use this static certificate and private key at all. This is because the NGINX core requires their appearance otherwise you are seeing the following error while starting NGINX:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx: [emerg] no ssl configured for the server</span><br></pre></td></tr></table></figure><p>This directive currently requires the following NGINX core patch to work correctly:</p><p><a href="http://mailman.nginx.org/pipermail/nginx-devel/2016-January/007748.html" target="_blank" rel="noopener">http://mailman.nginx.org/pipermail/nginx-devel/2016-January/007748.html</a></p><p>The bundled version of the NGINX core in OpenResty 1.9.7.2 (or above) already has this patch applied.</p><p>Furthermore, one needs at least OpenSSL 1.0.2e for this directive to work.</p><p>This directive was first introduced in the <code>v0.10.0</code> release.</p><h2><span id="ssl_certificate_by_lua_file">ssl_certificate_by_lua_file</span></h2><p><strong>syntax:</strong> <em>ssl_certificate_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>server</em></p><p><strong>phase:</strong> <em>right-before-SSL-handshake</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_certificate_by_lua_block" target="_blank" rel="noopener">ssl_certificate_by_lua_block</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or, as from the <code>v0.5.0rc32</code> release, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.10.0</code> release.</p><h2><span id="ssl_session_fetch_by_lua_block">ssl_session_fetch_by_lua_block</span></h2><p><strong>syntax:</strong> <em>ssl_session_fetch_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>right-before-SSL-handshake</em></p><p>This directive runs Lua code to look up and load the SSL session (if any) according to the session ID provided by the current SSL handshake request for the downstream.</p><p>The Lua API for obtaining the current session ID and loading a cached SSL session data is provided in the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md" target="_blank" rel="noopener">ngx.ssl.session</a> Lua module shipped with the <a href="https://github.com/openresty/lua-resty-core#readme" target="_blank" rel="noopener">lua-resty-core</a> library.</p><p>Lua APIs that may yield, like <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsleep" target="_blank" rel="noopener">ngx.sleep</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">cosockets</a>, are enabled in this context.</p><p>This hook, together with the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_session_store_by_lua_block" target="_blank" rel="noopener">ssl_session_store_by_lua*</a> hook, can be used to implement distributed caching mechanisms in pure Lua (based on the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">cosocket</a> API, for example). If a cached SSL session is found and loaded into the current SSL connection context, SSL session resumption can then get immediately initiated and bypass the full SSL handshake process which is very expensive in terms of CPU time.</p><p>Please note that TLS session tickets are very different and it is the clients’ responsibility to cache the SSL session state when session tickets are used. SSL session resumptions based on TLS session tickets would happen automatically without going through this hook (nor the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_session_store_by_lua_block" target="_blank" rel="noopener">ssl_session_store_by_lua*</a> hook). This hook is mainly for older or less capable SSL clients that can only do SSL sessions by session IDs.</p><p>When <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_certificate_by_lua_block" target="_blank" rel="noopener">ssl_certificate_by_lua*</a> is specified at the same time, this hook usually runs before <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_certificate_by_lua_block" target="_blank" rel="noopener">ssl_certificate_by_lua*</a>. When the SSL session is found and successfully loaded for the current SSL connection, SSL session resumption will happen and thus bypass the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_certificate_by_lua_block" target="_blank" rel="noopener">ssl_certificate_by_lua*</a> hook completely. In this case, NGINX also bypasses the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_session_store_by_lua_block" target="_blank" rel="noopener">ssl_session_store_by_lua*</a> hook, for obvious reasons.</p><p>To easily test this hook locally with a modern web browser, you can temporarily put the following line in your https server block to disable the TLS session ticket support:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssl_session_tickets off;</span><br></pre></td></tr></table></figure><p>But do not forget to comment this line out before publishing your site to the world.</p><p>If you are using the <a href="http://openresty.org/en/linux-packages.html" target="_blank" rel="noopener">official pre-built packages</a> for <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a> 1.11.2.1 or later, then everything should work out of the box.</p><p>If you are using OpenSSL libraries not provided by <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a>, then you need to apply the following patch for OpenSSL 1.0.2h or later:</p><p><a href="https://github.com/openresty/openresty/blob/master/patches/openssl-1.0.2h-sess_set_get_cb_yield.patch" target="_blank" rel="noopener">https://github.com/openresty/openresty/blob/master/patches/openssl-1.0.2h-sess_set_get_cb_yield.patch</a></p><p>If you are not using the NGINX core shipped with <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a> 1.11.2.1 or later, then you need to apply the following patch to the standard NGINX core 1.11.2 or later:</p><p><a href="http://openresty.org/download/nginx-1.11.2-nonblocking_ssl_handshake_hooks.patch" target="_blank" rel="noopener">http://openresty.org/download/nginx-1.11.2-nonblocking_ssl_handshake_hooks.patch</a></p><p>This directive was first introduced in the <code>v0.10.6</code> release.</p><p>Note that: this directive is only allowed to used in <strong>http context</strong> from the <code>v0.10.7</code> release (because SSL session resumption happens before server name dispatch).</p><h2><span id="ssl_session_fetch_by_lua_file">ssl_session_fetch_by_lua_file</span></h2><p><strong>syntax:</strong> <em>ssl_session_fetch_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>right-before-SSL-handshake</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_session_fetch_by_lua_block" target="_blank" rel="noopener">ssl_session_fetch_by_lua_block</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or rather, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.10.6</code> release.</p><p>Note that: this directive is only allowed to used in <strong>http context</strong> from the <code>v0.10.7</code> release (because SSL session resumption happens before server name dispatch).</p><h2><span id="ssl_session_store_by_lua_block">ssl_session_store_by_lua_block</span></h2><p><strong>syntax:</strong> <em>ssl_session_store_by_lua_block { lua-script }</em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>right-after-SSL-handshake</em></p><p>This directive runs Lua code to fetch and save the SSL session (if any) according to the session ID provided by the current SSL handshake request for the downstream. The saved or cached SSL session data can be used for future SSL connections to resume SSL sessions without going through the full SSL handshake process (which is very expensive in terms of CPU time).</p><p>Lua APIs that may yield, like <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsleep" target="_blank" rel="noopener">ngx.sleep</a> and <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsockettcp" target="_blank" rel="noopener">cosockets</a>, are <em>disabled</em> in this context. You can still, however, use the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxtimerat" target="_blank" rel="noopener">ngx.timer.at</a>API to create 0-delay timers to save the SSL session data asynchronously to external services (like <code>redis</code> or <code>memcached</code>).</p><p>The Lua API for obtaining the current session ID and the associated session state data is provided in the <a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md#readme" target="_blank" rel="noopener">ngx.ssl.session</a> Lua module shipped with the <a href="https://github.com/openresty/lua-resty-core#readme" target="_blank" rel="noopener">lua-resty-core</a> library.</p><p>To easily test this hook locally with a modern web browser, you can temporarily put the following line in your https server block to disable the TLS session ticket support:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssl_session_tickets off;</span><br></pre></td></tr></table></figure><p>But do not forget to comment this line out before publishing your site to the world.</p><p>This directive was first introduced in the <code>v0.10.6</code> release.</p><p>Note that: this directive is only allowed to used in <strong>http context</strong> from the <code>v0.10.7</code> release (because SSL session resumption happens before server name dispatch).</p><h2><span id="ssl_session_store_by_lua_file">ssl_session_store_by_lua_file</span></h2><p><strong>syntax:</strong> <em>ssl_session_store_by_lua_file <path-to-lua-script-file></path-to-lua-script-file></em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>right-after-SSL-handshake</em></p><p>Equivalent to <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ssl_session_store_by_lua_block" target="_blank" rel="noopener">ssl_session_store_by_lua_block</a>, except that the file specified by <code>&lt;path-to-lua-script-file&gt;</code> contains the Lua code, or rather, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lualuajit-bytecode-support" target="_blank" rel="noopener">Lua/LuaJIT bytecode</a> to be executed.</p><p>When a relative path like <code>foo/bar.lua</code> is given, they will be turned into the absolute path relative to the <code>server prefix</code> path determined by the <code>-p PATH</code> command-line option while starting the Nginx server.</p><p>This directive was first introduced in the <code>v0.10.6</code> release.</p><p>Note that: this directive is only allowed to used in <strong>http context</strong> from the <code>v0.10.7</code> release (because SSL session resumption happens before server name dispatch).</p><h2><span id="lua_shared_dict">lua_shared_dict</span></h2><p><strong>syntax:</strong> <em>lua_shared_dict <name> <size></size></name></em></p><p><strong>default:</strong> <em>no</em></p><p><strong>context:</strong> <em>http</em></p><p><strong>phase:</strong> <em>depends on usage</em></p><p>Declares a shared memory zone, <code>&lt;name&gt;</code>, to serve as storage for the shm based Lua dictionary <code>ngx.shared.&lt;name&gt;</code>.</p><p>Shared memory zones are always shared by all the nginx worker processes in the current nginx server instance.</p><p>The <code>&lt;size&gt;</code> argument accepts size units such as <code>k</code> and <code>m</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    lua_shared_dict dogs 10m;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The hard-coded minimum size is 8KB while the practical minimum size depends on actual user data set (some people start with 12KB).</p><p>See <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxshareddict" target="_blank" rel="noopener">ngx.shared.DICT</a> for details.</p><p>This directive was first introduced in the <code>v0.3.1rc22</code> release.</p><h2><span id="lua_socket_connect_timeout">lua_socket_connect_timeout</span></h2><p><strong>syntax:</strong> <em>lua_socket_connect_timeout <time></time></em></p><p><strong>default:</strong> <em>lua_socket_connect_timeout 60s</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>This directive controls the default timeout value used in TCP/unix-domain socket object’s <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsockconnect" target="_blank" rel="noopener">connect</a> method and can be overridden by the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeout" target="_blank" rel="noopener">settimeout</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeouts" target="_blank" rel="noopener">settimeouts</a> methods.</p><p>The <code>&lt;time&gt;</code> argument can be an integer, with an optional time unit, like <code>s</code> (second), <code>ms</code> (millisecond), <code>m</code> (minute). The default time unit is <code>s</code>, i.e., “second”. The default setting is <code>60s</code>.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_send_timeout">lua_socket_send_timeout</span></h2><p><strong>syntax:</strong> <em>lua_socket_send_timeout <time></time></em></p><p><strong>default:</strong> <em>lua_socket_send_timeout 60s</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Controls the default timeout value used in TCP/unix-domain socket object’s <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksend" target="_blank" rel="noopener">send</a> method and can be overridden by the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeout" target="_blank" rel="noopener">settimeout</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeouts" target="_blank" rel="noopener">settimeouts</a> methods.</p><p>The <code>&lt;time&gt;</code> argument can be an integer, with an optional time unit, like <code>s</code> (second), <code>ms</code> (millisecond), <code>m</code> (minute). The default time unit is <code>s</code>, i.e., “second”. The default setting is <code>60s</code>.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_send_lowat">lua_socket_send_lowat</span></h2><p><strong>syntax:</strong> <em>lua_socket_send_lowat <size></size></em></p><p><strong>default:</strong> <em>lua_socket_send_lowat 0</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Controls the <code>lowat</code> (low water) value for the cosocket send buffer.</p><h2><span id="lua_socket_read_timeout">lua_socket_read_timeout</span></h2><p><strong>syntax:</strong> <em>lua_socket_read_timeout <time></time></em></p><p><strong>default:</strong> <em>lua_socket_read_timeout 60s</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p><strong>phase:</strong> <em>depends on usage</em></p><p>This directive controls the default timeout value used in TCP/unix-domain socket object’s <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsockreceive" target="_blank" rel="noopener">receive</a> method and iterator functions returned by the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsockreceiveuntil" target="_blank" rel="noopener">receiveuntil</a> method. This setting can be overridden by the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeout" target="_blank" rel="noopener">settimeout</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksettimeouts" target="_blank" rel="noopener">settimeouts</a> methods.</p><p>The <code>&lt;time&gt;</code> argument can be an integer, with an optional time unit, like <code>s</code> (second), <code>ms</code> (millisecond), <code>m</code> (minute). The default time unit is <code>s</code>, i.e., “second”. The default setting is <code>60s</code>.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_buffer_size">lua_socket_buffer_size</span></h2><p><strong>syntax:</strong> <em>lua_socket_buffer_size <size></size></em></p><p><strong>default:</strong> <em>lua_socket_buffer_size 4k/8k</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Specifies the buffer size used by cosocket reading operations.</p><p>This buffer does not have to be that big to hold everything at the same time because cosocket supports 100% non-buffered reading and parsing. So even <code>1</code> byte buffer size should still work everywhere but the performance could be terrible.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_pool_size">lua_socket_pool_size</span></h2><p><strong>syntax:</strong> <em>lua_socket_pool_size <size></size></em></p><p><strong>default:</strong> <em>lua_socket_pool_size 30</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Specifies the size limit (in terms of connection count) for every cosocket connection pool associated with every remote server (i.e., identified by either the host-port pair or the unix domain socket file path).</p><p>Default to 30 connections for every pool.</p><p>When the connection pool exceeds the available size limit, the least recently used (idle) connection already in the pool will be closed to make room for the current connection.</p><p>Note that the cosocket connection pool is per nginx worker process rather than per nginx server instance, so size limit specified here also applies to every single nginx worker process.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_keepalive_timeout">lua_socket_keepalive_timeout</span></h2><p><strong>syntax:</strong> <em>lua_socket_keepalive_timeout <time></time></em></p><p><strong>default:</strong> <em>lua_socket_keepalive_timeout 60s</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>This directive controls the default maximal idle time of the connections in the cosocket built-in connection pool. When this timeout reaches, idle connections will be closed and removed from the pool. This setting can be overridden by cosocket objects’ <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksetkeepalive" target="_blank" rel="noopener">setkeepalive</a> method.</p><p>The <code>&lt;time&gt;</code> argument can be an integer, with an optional time unit, like <code>s</code> (second), <code>ms</code> (millisecond), <code>m</code> (minute). The default time unit is <code>s</code>, i.e., “second”. The default setting is <code>60s</code>.</p><p>This directive was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="lua_socket_log_errors">lua_socket_log_errors</span></h2><p><strong>syntax:</strong> <em>lua_socket_log_errors on|off</em></p><p><strong>default:</strong> <em>lua_socket_log_errors on</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>This directive can be used to toggle error logging when a failure occurs for the TCP or UDP cosockets. If you are already doing proper error handling and logging in your Lua code, then it is recommended to turn this directive off to prevent data flushing in your nginx error log files (which is usually rather expensive).</p><p>This directive was first introduced in the <code>v0.5.13</code> release.</p><h2><span id="lua_ssl_ciphers">lua_ssl_ciphers</span></h2><p><strong>syntax:</strong> <em>lua_ssl_ciphers <ciphers></ciphers></em></p><p><strong>default:</strong> <em>lua_ssl_ciphers DEFAULT</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Specifies the enabled ciphers for requests to a SSL/TLS server in the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksslhandshake" target="_blank" rel="noopener">tcpsock:sslhandshake</a> method. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “openssl ciphers” command.</p><p>This directive was first introduced in the <code>v0.9.11</code> release.</p><h2><span id="lua_ssl_crl">lua_ssl_crl</span></h2><p><strong>syntax:</strong> <em>lua_ssl_crl <file></file></em></p><p><strong>default:</strong> <em>no</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Specifies a file with revoked certificates (CRL) in the PEM format used to verify the certificate of the SSL/TLS server in the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksslhandshake" target="_blank" rel="noopener">tcpsock:sslhandshake</a> method.</p><p>This directive was first introduced in the <code>v0.9.11</code> release.</p><h2><span id="lua_ssl_protocols">lua_ssl_protocols</span></h2><p><strong>syntax:</strong> <em>lua_ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3]</em></p><p><strong>default:</strong> <em>lua_ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Enables the specified protocols for requests to a SSL/TLS server in the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksslhandshake" target="_blank" rel="noopener">tcpsock:sslhandshake</a> method.</p><p>The support for the <code>TLSv1.3</code> parameter requires version <code>v0.10.12</code> <em>and</em> OpenSSL 1.1.1.</p><p>This directive was first introduced in the <code>v0.9.11</code> release.</p><h2><span id="lua_ssl_trusted_certificate">lua_ssl_trusted_certificate</span></h2><p><strong>syntax:</strong> <em>lua_ssl_trusted_certificate <file></file></em></p><p><strong>default:</strong> <em>no</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Specifies a file path with trusted CA certificates in the PEM format used to verify the certificate of the SSL/TLS server in the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#tcpsocksslhandshake" target="_blank" rel="noopener">tcpsock:sslhandshake</a> method.</p><p>This directive was first introduced in the <code>v0.9.11</code> release.</p><p>See also <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_ssl_verify_depth" target="_blank" rel="noopener">lua_ssl_verify_depth</a>.</p><h2><span id="lua_ssl_verify_depth">lua_ssl_verify_depth</span></h2><p><strong>syntax:</strong> <em>lua_ssl_verify_depth <number></number></em></p><p><strong>default:</strong> <em>lua_ssl_verify_depth 1</em></p><p><strong>context:</strong> <em>http, server, location</em></p><p>Sets the verification depth in the server certificates chain.</p><p>This directive was first introduced in the <code>v0.9.11</code> release.</p><p>See also <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#lua_ssl_trusted_certificate" target="_blank" rel="noopener">lua_ssl_trusted_certificate</a>.</p><h2><span id="lua_http10_buffering">lua_http10_buffering</span></h2><p><strong>syntax:</strong> <em>lua_http10_buffering on|off</em></p><p><strong>default:</strong> <em>lua_http10_buffering on</em></p><p><strong>context:</strong> <em>http, server, location, location-if</em></p><p>Enables or disables automatic response buffering for HTTP 1.0 (or older) requests. This buffering mechanism is mainly used for HTTP 1.0 keep-alive which relies on a proper <code>Content-Length</code> response header.</p><p>If the Lua code explicitly sets a <code>Content-Length</code> response header before sending the headers (either explicitly via <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsend_headers" target="_blank" rel="noopener">ngx.send_headers</a> or implicitly via the first <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxsay" target="_blank" rel="noopener">ngx.say</a> or <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxprint" target="_blank" rel="noopener">ngx.print</a> call), then the HTTP 1.0 response buffering will be disabled even when this directive is turned on.</p><p>To output very large response data in a streaming fashion (via the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxflush" target="_blank" rel="noopener">ngx.flush</a> call, for example), this directive MUST be turned off to minimize memory usage.</p><p>This directive is turned <code>on</code> by default.</p><p>This directive was first introduced in the <code>v0.5.0rc19</code> release.</p><h2><span id="rewrite_by_lua_no_postpone">rewrite_by_lua_no_postpone</span></h2><p><strong>syntax:</strong> <em>rewrite_by_lua_no_postpone on|off</em></p><p><strong>default:</strong> <em>rewrite_by_lua_no_postpone off</em></p><p><strong>context:</strong> <em>http</em></p><p>Controls whether or not to disable postponing <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#rewrite_by_lua" target="_blank" rel="noopener">rewrite_by_lua*</a> directives to run at the end of the <code>rewrite</code> request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the <code>rewrite</code> phase.</p><p>This directive was first introduced in the <code>v0.5.0rc29</code> release.</p><h2><span id="access_by_lua_no_postpone">access_by_lua_no_postpone</span></h2><p><strong>syntax:</strong> <em>access_by_lua_no_postpone on|off</em></p><p><strong>default:</strong> <em>access_by_lua_no_postpone off</em></p><p><strong>context:</strong> <em>http</em></p><p>Controls whether or not to disable postponing <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#access_by_lua" target="_blank" rel="noopener">access_by_lua*</a> directives to run at the end of the <code>access</code> request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the <code>access</code> phase.</p><p>This directive was first introduced in the <code>v0.9.20</code> release.</p><h2><span id="lua_transform_underscores_in_response_headers">lua_transform_underscores_in_response_headers</span></h2><p><strong>syntax:</strong> <em>lua_transform_underscores_in_response_headers on|off</em></p><p><strong>default:</strong> <em>lua_transform_underscores_in_response_headers on</em></p><p><strong>context:</strong> <em>http, server, location, location-if</em></p><p>Controls whether to transform underscores (<code>_</code>) in the response header names specified in the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxheaderheader" target="_blank" rel="noopener">ngx.header.HEADER</a> API to hypens (<code>-</code>).</p><p>This directive was first introduced in the <code>v0.5.0rc32</code> release.</p><h2><span id="lua_check_client_abort">lua_check_client_abort</span></h2><p><strong>syntax:</strong> <em>lua_check_client_abort on|off</em></p><p><strong>default:</strong> <em>lua_check_client_abort off</em></p><p><strong>context:</strong> <em>http, server, location, location-if</em></p><p>This directive controls whether to check for premature client connection abortion.</p><p>When this directive is on, the ngx_lua module will monitor the premature connection close event on the downstream connections and when there is such an event, it will call the user Lua function callback (registered by <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxon_abort" target="_blank" rel="noopener">ngx.on_abort</a>) or just stop and clean up all the Lua “light threads” running in the current request’s request handler when there is no user callback function registered.</p><p>According to the current implementation, however, if the client closes the connection before the Lua code finishes reading the request body data via <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a>, then ngx_lua will neither stop all the running “light threads” nor call the user callback (if <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxon_abort" target="_blank" rel="noopener">ngx.on_abort</a> has been called). Instead, the reading operation on <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxreqsocket" target="_blank" rel="noopener">ngx.req.socket</a> will just return the error message “client aborted” as the second return value (the first return value is surely <code>nil</code>).</p><p>When TCP keepalive is disabled, it is relying on the client side to close the socket gracefully (by sending a <code>FIN</code> packet or something like that). For (soft) real-time web applications, it is highly recommended to configure the <a href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" target="_blank" rel="noopener">TCP keepalive</a> support in your system’s TCP stack implementation in order to detect “half-open” TCP connections in time.</p><p>For example, on Linux, you can configure the standard <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#listen" target="_blank" rel="noopener">listen</a> directive in your <code>nginx.conf</code> file like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen 80 so_keepalive=2s:2s:8;</span><br></pre></td></tr></table></figure><p>On FreeBSD, you can only tune the system-wide configuration for TCP keepalive, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sysctl net.inet.tcp.keepintvl=2000</span><br><span class="line"># sysctl net.inet.tcp.keepidle=2000</span><br></pre></td></tr></table></figure><p>This directive was first introduced in the <code>v0.7.4</code> release.</p><p>See also <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxon_abort" target="_blank" rel="noopener">ngx.on_abort</a>.</p><h2><span id="lua_max_pending_timers">lua_max_pending_timers</span></h2><p><strong>syntax:</strong> <em>lua_max_pending_timers <count></count></em></p><p><strong>default:</strong> <em>lua_max_pending_timers 1024</em></p><p><strong>context:</strong> <em>http</em></p><p>Controls the maximum number of pending timers allowed.</p><p>Pending timers are those timers that have not expired yet.</p><p>When exceeding this limit, the <a href="https://github.com/openresty/lua-nginx-module/blob/master/README.markdown#ngxtimerat" target="_blank" rel="noopener">ngx.timer.at</a> call will immediately return <code>nil</code> and the error string “too many pending timers”.</p><p>This directive was first introduced in the <code>v0.8.0</code> release.</p><h2><span id="lua_max_running_timers">lua_max_running_timers</span></h2><p><strong>syntax:</strong> <em>lua_max_running_timers <count></count></em></p><p><strong>default:</strong> <em>lua_max_running_timers 256</em></p><p><strong>context:</strong> <em>http</em></p><p>Controls the maximum number of “running timers” allowed.</p><p>Running timers are those timers whose user callback functions are still running.</p><p>When exceeding this limit, Nginx will stop running the callbacks of newly expired timers and log an error message “N lua_max_running_timers are not enough” where “N” is the current value of this directive.</p><p>This directive was first introduced in the <code>v0.8.0</code> release.</p><h2><span id="lua_sa_restart">lua_sa_restart</span></h2><p><strong>syntax:</strong> <em>lua_sa_restart on|off</em></p><p><strong>default:</strong> <em>lua_sa_restart on</em></p><p><strong>context:</strong> <em>http</em></p><p>When enabled, this module will set the <code>SA_RESTART</code> flag on nginx workers signal dispositions.</p><p>This allows Lua I/O primitives to not be interrupted by nginx’s handling of various signals.</p><p>This directive was first introduced in the <code>v0.10.14</code> release</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#nginx-directives-for-lua&quot;&gt;Nginx Directives For Lua&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#lua_capture_error_log&quot;&gt;lua_capture_
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx-lua-API</title>
    <link href="http://yoursite.com/2018/03/01/nginx-lua-API/"/>
    <id>http://yoursite.com/2018/03/01/nginx-lua-API/</id>
    <published>2018-03-01T04:17:54.000Z</published>
    <updated>2019-03-01T06:26:12.196Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#nginx-api-for-lua">Nginx API for Lua</a><ul><li><a href="#introduction">Introduction</a></li><li><a href="#ngxarg">ngx.arg</a></li><li><a href="#ngxvarvariable">ngx.var.VARIABLE</a></li><li><a href="#core-constants">Core constants</a></li><li><a href="#http-method-constants">HTTP method constants</a></li><li><a href="#http-status-constants">HTTP status constants</a></li><li><a href="#nginx-log-level-constants">Nginx log level constants</a></li><li><a href="#print">print</a></li><li><a href="#ngxctx">ngx.ctx</a></li><li><a href="#ngxlocationcapture">ngx.location.capture</a></li><li><a href="#ngxlocationcapture_multi">ngx.location.capture_multi</a></li><li><a href="#ngxstatus">ngx.status</a></li><li><a href="#ngxheaderheader">ngx.header.HEADER</a></li><li><a href="#ngxrespget_headers">ngx.resp.get_headers</a></li><li><a href="#ngxreqis_internal">ngx.req.is_internal</a></li><li><a href="#ngxreqstart_time">ngx.req.start_time</a></li><li><a href="#ngxreqhttp_version">ngx.req.http_version</a></li><li><a href="#ngxreqraw_header">ngx.req.raw_header</a></li><li><a href="#ngxreqget_method">ngx.req.get_method</a></li><li><a href="#ngxreqset_method">ngx.req.set_method</a></li><li><a href="#ngxreqset_uri">ngx.req.set_uri</a></li><li><a href="#ngxreqset_uri_args">ngx.req.set_uri_args</a></li><li><a href="#ngxreqget_uri_args">ngx.req.get_uri_args</a></li><li><a href="#ngxreqget_post_args">ngx.req.get_post_args</a></li><li><a href="#ngxreqget_headers">ngx.req.get_headers</a></li><li><a href="#ngxreqset_header">ngx.req.set_header</a></li><li><a href="#ngxreqclear_header">ngx.req.clear_header</a></li><li><a href="#ngxreqread_body">ngx.req.read_body</a></li><li><a href="#ngxreqdiscard_body">ngx.req.discard_body</a></li><li><a href="#ngxreqget_body_data">ngx.req.get_body_data</a></li><li><a href="#ngxreqget_body_file">ngx.req.get_body_file</a></li><li><a href="#ngxreqset_body_data">ngx.req.set_body_data</a></li><li><a href="#ngxreqset_body_file">ngx.req.set_body_file</a></li><li><a href="#ngxreqinit_body">ngx.req.init_body</a></li><li><a href="#ngxreqappend_body">ngx.req.append_body</a></li><li><a href="#ngxreqfinish_body">ngx.req.finish_body</a></li><li><a href="#ngxreqsocket">ngx.req.socket</a></li><li><a href="#ngxexec">ngx.exec</a></li><li><a href="#ngxredirect">ngx.redirect</a></li><li><a href="#ngxsend_headers">ngx.send_headers</a></li><li><a href="#ngxheaders_sent">ngx.headers_sent</a></li><li><a href="#ngxprint">ngx.print</a></li><li><a href="#ngxsay">ngx.say</a></li><li><a href="#ngxlog">ngx.log</a></li><li><a href="#ngxflush">ngx.flush</a></li><li><a href="#ngxexit">ngx.exit</a></li><li><a href="#ngxeof">ngx.eof</a></li><li><a href="#ngxsleep">ngx.sleep</a></li><li><a href="#ngxescape_uri">ngx.escape_uri</a></li><li><a href="#ngxunescape_uri">ngx.unescape_uri</a></li><li><a href="#ngxencode_args">ngx.encode_args</a></li><li><a href="#ngxdecode_args">ngx.decode_args</a></li><li><a href="#ngxencode_base64">ngx.encode_base64</a></li><li><a href="#ngxdecode_base64">ngx.decode_base64</a></li><li><a href="#ngxcrc32_short">ngx.crc32_short</a></li><li><a href="#ngxcrc32_long">ngx.crc32_long</a></li><li><a href="#ngxhmac_sha1">ngx.hmac_sha1</a></li><li><a href="#ngxmd5">ngx.md5</a></li><li><a href="#ngxmd5_bin">ngx.md5_bin</a></li><li><a href="#ngxsha1_bin">ngx.sha1_bin</a></li><li><a href="#ngxquote_sql_str">ngx.quote_sql_str</a></li><li><a href="#ngxtoday">ngx.today</a></li><li><a href="#ngxtime">ngx.time</a></li><li><a href="#ngxnow">ngx.now</a></li><li><a href="#ngxupdate_time">ngx.update_time</a></li><li><a href="#ngxlocaltime">ngx.localtime</a></li><li><a href="#ngxutctime">ngx.utctime</a></li><li><a href="#ngxcookie_time">ngx.cookie_time</a></li><li><a href="#ngxhttp_time">ngx.http_time</a></li><li><a href="#ngxparse_http_time">ngx.parse_http_time</a></li><li><a href="#ngxis_subrequest">ngx.is_subrequest</a></li><li><a href="#ngxrematch">ngx.re.match</a></li><li><a href="#ngxrefind">ngx.re.find</a></li><li><a href="#ngxregmatch">ngx.re.gmatch</a></li><li><a href="#ngxresub">ngx.re.sub</a></li><li><a href="#ngxregsub">ngx.re.gsub</a></li><li><a href="#ngxshareddict">ngx.shared.DICT</a></li><li><a href="#ngxshareddictget">ngx.shared.DICT.get</a></li><li><a href="#ngxshareddictget_stale">ngx.shared.DICT.get_stale</a></li><li><a href="#ngxshareddictset">ngx.shared.DICT.set</a></li><li><a href="#ngxshareddictsafe_set">ngx.shared.DICT.safe_set</a></li><li><a href="#ngxshareddictadd">ngx.shared.DICT.add</a></li><li><a href="#ngxshareddictsafe_add">ngx.shared.DICT.safe_add</a></li><li><a href="#ngxshareddictreplace">ngx.shared.DICT.replace</a></li><li><a href="#ngxshareddictdelete">ngx.shared.DICT.delete</a></li><li><a href="#ngxshareddictincr">ngx.shared.DICT.incr</a></li><li><a href="#ngxshareddictlpush">ngx.shared.DICT.lpush</a></li><li><a href="#ngxshareddictrpush">ngx.shared.DICT.rpush</a></li><li><a href="#ngxshareddictlpop">ngx.shared.DICT.lpop</a></li><li><a href="#ngxshareddictrpop">ngx.shared.DICT.rpop</a></li><li><a href="#ngxshareddictllen">ngx.shared.DICT.llen</a></li><li><a href="#ngxshareddictttl">ngx.shared.DICT.ttl</a></li><li><a href="#ngxshareddictexpire">ngx.shared.DICT.expire</a></li><li><a href="#ngxshareddictflush_all">ngx.shared.DICT.flush_all</a></li><li><a href="#ngxshareddictflush_expired">ngx.shared.DICT.flush_expired</a></li><li><a href="#ngxshareddictget_keys">ngx.shared.DICT.get_keys</a></li><li><a href="#ngxshareddictcapacity">ngx.shared.DICT.capacity</a></li><li><a href="#ngxshareddictfree_space">ngx.shared.DICT.free_space</a></li><li><a href="#ngxsocketudp">ngx.socket.udp</a></li><li><a href="#udpsocksetpeername">udpsock:setpeername</a></li><li><a href="#udpsocksend">udpsock:send</a></li><li><a href="#udpsockreceive">udpsock:receive</a></li><li><a href="#udpsockclose">udpsock:close</a></li><li><a href="#udpsocksettimeout">udpsock:settimeout</a></li><li><a href="#ngxsocketstream">ngx.socket.stream</a></li><li><a href="#ngxsockettcp">ngx.socket.tcp</a></li><li><a href="#tcpsockconnect">tcpsock:connect</a></li><li><a href="#tcpsocksslhandshake">tcpsock:sslhandshake</a></li><li><a href="#tcpsocksend">tcpsock:send</a></li><li><a href="#tcpsockreceive">tcpsock:receive</a></li><li><a href="#tcpsockreceiveany">tcpsock:receiveany</a></li><li><a href="#tcpsockreceiveuntil">tcpsock:receiveuntil</a></li><li><a href="#tcpsockclose">tcpsock:close</a></li><li><a href="#tcpsocksettimeout">tcpsock:settimeout</a></li><li><a href="#tcpsocksettimeouts">tcpsock:settimeouts</a></li><li><a href="#tcpsocksetoption">tcpsock:setoption</a></li><li><a href="#tcpsocksetkeepalive">tcpsock:setkeepalive</a></li><li><a href="#tcpsockgetreusedtimes">tcpsock:getreusedtimes</a></li><li><a href="#ngxsocketconnect">ngx.socket.connect</a></li><li><a href="#ngxget_phase">ngx.get_phase</a></li><li><a href="#ngxthreadspawn">ngx.thread.spawn</a></li><li><a href="#ngxthreadwait">ngx.thread.wait</a></li><li><a href="#ngxthreadkill">ngx.thread.kill</a></li><li><a href="#ngxon_abort">ngx.on_abort</a></li><li><a href="#ngxtimerat">ngx.timer.at</a></li><li><a href="#ngxtimerevery">ngx.timer.every</a></li><li><a href="#ngxtimerrunning_count">ngx.timer.running_count</a></li><li><a href="#ngxtimerpending_count">ngx.timer.pending_count</a></li><li><a href="#ngxconfigsubsystem">ngx.config.subsystem</a></li><li><a href="#ngxconfigdebug">ngx.config.debug</a></li><li><a href="#ngxconfigprefix">ngx.config.prefix</a></li><li><a href="#ngxconfignginx_version">ngx.config.nginx_version</a></li><li><a href="#ngxconfignginx_configure">ngx.config.nginx_configure</a></li><li><a href="#ngxconfigngx_lua_version">ngx.config.ngx_lua_version</a></li><li><a href="#ngxworkerexiting">ngx.worker.exiting</a></li><li><a href="#ngxworkerpid">ngx.worker.pid</a></li><li><a href="#ngxworkercount">ngx.worker.count</a></li><li><a href="#ngxworkerid">ngx.worker.id</a></li><li><a href="#ngxsemaphore">ngx.semaphore</a></li><li><a href="#ngxbalancer">ngx.balancer</a></li><li><a href="#ngxssl">ngx.ssl</a></li><li><a href="#ngxocsp">ngx.ocsp</a></li><li><a href="#ndkset_vardirective">ndk.set_var.DIRECTIVE</a></li><li><a href="#coroutinecreate">coroutine.create</a></li><li><a href="#coroutineresume">coroutine.resume</a></li><li><a href="#coroutineyield">coroutine.yield</a></li><li><a href="#coroutinewrap">coroutine.wrap</a></li><li><a href="#coroutinerunning">coroutine.running</a></li><li><a href="#coroutinestatus">coroutine.status</a></li></ul></li></ul><!-- tocstop --><p>本文是GitHub上nginx-lua-module自述文档的一部分，详细列举说明了OpenResty所有的Lua API。</p><p>放到这里，方便查阅。</p><h1><span id="nginx-api-for-lua">Nginx API for Lua</span></h1><h2><span id="introduction">Introduction</span></h2><p>The various <code>*_by_lua</code>, <code>*_by_lua_block</code> and <code>*_by_lua_file</code> configuration directives serve as gateways to the Lua API within the <code>nginx.conf</code> file. The Nginx Lua API described below can only be called within the user Lua code run in the context of these configuration directives.</p><p>The API is exposed to Lua in the form of two standard packages <code>ngx</code> and <code>ndk</code>. These packages are in the default global scope within ngx_lua and are always available within ngx_lua directives.</p><p>The packages can be introduced into external Lua modules like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local say = ngx.say</span><br><span class="line"></span><br><span class="line">local _M = &#123;&#125;</span><br><span class="line"></span><br><span class="line">function _M.foo(a)</span><br><span class="line">    say(a)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">return _M</span><br></pre></td></tr></table></figure><p>Use of the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.seeall" target="_blank" rel="noopener">package.seeall</a> flag is strongly discouraged due to its various bad side-effects.</p><p>It is also possible to directly require the packages in external Lua modules:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local ngx = require &quot;ngx&quot;</span><br><span class="line">local ndk = require &quot;ndk&quot;</span><br></pre></td></tr></table></figure><p>The ability to require these packages was introduced in the <code>v0.2.1rc19</code> release.</p><p>Network I/O operations in user code should only be done through the Nginx Lua API calls as the Nginx event loop may be blocked and performance drop off dramatically otherwise. Disk operations with relatively small amount of data can be done using the standard Lua <code>io</code> library but huge file reading and writing should be avoided wherever possible as they may block the Nginx process significantly. Delegating all network and disk I/O operations to Nginx’s subrequests (via the [ngx.location.capture]</p><h2><span id="ngxarg">ngx.arg</span></h2><p><strong>syntax:</strong> <em>val = ngx.arg[index]</em></p><p><strong>context:</strong> set_by_lua*, body_filter_by_lua*</p><p>When this is used in the context of the [set_by_lua*]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value = ngx.arg[n]</span><br></pre></td></tr></table></figure><p>Here is an example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    set $a 32;</span><br><span class="line">    set $b 56;</span><br><span class="line"></span><br><span class="line">    set_by_lua $sum</span><br><span class="line">        &apos;return tonumber(ngx.arg[1]) + tonumber(ngx.arg[2])&apos;</span><br><span class="line">        $a $b;</span><br><span class="line"></span><br><span class="line">    echo $sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>that writes out <code>88</code>, the sum of <code>32</code> and <code>56</code>.</p><p>When this table is used in the context of [body_filter_by_lua*]</p><p>The data chunk and “eof” flag passed to the downstream Nginx output filters can also be overridden by assigning values directly to the corresponding table elements. When setting <code>nil</code> or an empty Lua string value to <code>ngx.arg[1]</code>, no data chunk will be passed to the downstream Nginx output filters at all.</p><h2><span id="ngxvarvariable">ngx.var.VARIABLE</span></h2><p><strong>syntax:</strong> <em>ngx.var.VAR_NAME</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Read and write Nginx variable values.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">value = ngx.var.some_nginx_variable_name</span><br><span class="line">ngx.var.some_nginx_variable_name = value</span><br></pre></td></tr></table></figure><p>Note that only already defined nginx variables can be written to. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    set $my_var &apos;&apos;; # this line is required to create $my_var at config time</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.var.my_var = 123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>That is, nginx variables cannot be created on-the-fly.</p><p>Some special nginx variables like <code>$args</code> and <code>$limit_rate</code> can be assigned a value, many others are not, like <code>$query_string</code>, <code>$arg_PARAMETER</code>, and <code>$http_NAME</code>.</p><p>Nginx regex group capturing variables <code>$1</code>, <code>$2</code>, <code>$3</code>, and etc, can be read by this interface as well, by writing <code>ngx.var[1]</code>, <code>ngx.var[2]</code>, <code>ngx.var[3]</code>, and etc.</p><p>Setting <code>ngx.var.Foo</code> to a <code>nil</code> value will unset the <code>$Foo</code> Nginx variable.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.var.args = nil</span><br></pre></td></tr></table></figure><p><strong>CAUTION</strong> When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination. So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable, for example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local val = ngx.var.some_var</span><br><span class="line">--- use the val repeatedly later</span><br></pre></td></tr></table></figure><p>to prevent (temporary) memory leaking within the current request’s lifetime. Another way of caching the result is to use the [ngx.ctx]</p><p>Undefined NGINX variables are evaluated to <code>nil</code> while uninitialized (but defined) NGINX variables are evaluated to an empty Lua string.</p><p>This API requires a relatively expensive metamethod call and it is recommended to avoid using it on hot code paths.</p><h2><span id="core-constants">Core constants</span></h2><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, *log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ngx.OK (0)</span><br><span class="line">ngx.ERROR (-1)</span><br><span class="line">ngx.AGAIN (-2)</span><br><span class="line">ngx.DONE (-4)</span><br><span class="line">ngx.DECLINED (-5)</span><br></pre></td></tr></table></figure><p>Note that only three of these constants are utilized by the [Nginx API for Lua]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.null</span><br></pre></td></tr></table></figure><p>The <code>ngx.null</code> constant is a <code>NULL</code> light userdata usually used to represent nil values in Lua tables etc and is similar to the <a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" target="_blank" rel="noopener">lua-cjson</a> library’s <code>cjson.null</code> constant. This constant was first introduced in the <code>v0.5.0rc5</code> release.</p><p>The <code>ngx.DECLINED</code> constant was first introduced in the <code>v0.5.0rc19</code> release.</p><h2><span id="http-method-constants">HTTP method constants</span></h2><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ngx.HTTP_GET</span><br><span class="line">ngx.HTTP_HEAD</span><br><span class="line">ngx.HTTP_PUT</span><br><span class="line">ngx.HTTP_POST</span><br><span class="line">ngx.HTTP_DELETE</span><br><span class="line">ngx.HTTP_OPTIONS   (added in the v0.5.0rc24 release)</span><br><span class="line">ngx.HTTP_MKCOL     (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_COPY      (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_MOVE      (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_PROPFIND  (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_PROPPATCH (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_LOCK      (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_UNLOCK    (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_PATCH     (added in the v0.8.2 release)</span><br><span class="line">ngx.HTTP_TRACE     (added in the v0.8.2 release)</span><br></pre></td></tr></table></figure><p>These constants are usually used in [ngx.location.capture]</p><h2><span id="http-status-constants">HTTP status constants</span></h2><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">value = ngx.HTTP_CONTINUE (100) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_SWITCHING_PROTOCOLS (101) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_OK (200)</span><br><span class="line">value = ngx.HTTP_CREATED (201)</span><br><span class="line">value = ngx.HTTP_ACCEPTED (202) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_NO_CONTENT (204) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_PARTIAL_CONTENT (206) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_SPECIAL_RESPONSE (300)</span><br><span class="line">value = ngx.HTTP_MOVED_PERMANENTLY (301)</span><br><span class="line">value = ngx.HTTP_MOVED_TEMPORARILY (302)</span><br><span class="line">value = ngx.HTTP_SEE_OTHER (303)</span><br><span class="line">value = ngx.HTTP_NOT_MODIFIED (304)</span><br><span class="line">value = ngx.HTTP_TEMPORARY_REDIRECT (307) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_PERMANENT_REDIRECT (308)</span><br><span class="line">value = ngx.HTTP_BAD_REQUEST (400)</span><br><span class="line">value = ngx.HTTP_UNAUTHORIZED (401)</span><br><span class="line">value = ngx.HTTP_PAYMENT_REQUIRED (402) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_FORBIDDEN (403)</span><br><span class="line">value = ngx.HTTP_NOT_FOUND (404)</span><br><span class="line">value = ngx.HTTP_NOT_ALLOWED (405)</span><br><span class="line">value = ngx.HTTP_NOT_ACCEPTABLE (406) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_REQUEST_TIMEOUT (408) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_CONFLICT (409) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_GONE (410)</span><br><span class="line">value = ngx.HTTP_UPGRADE_REQUIRED (426) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_TOO_MANY_REQUESTS (429) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_CLOSE (444) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_ILLEGAL (451) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_INTERNAL_SERVER_ERROR (500)</span><br><span class="line">value = ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)</span><br><span class="line">value = ngx.HTTP_BAD_GATEWAY (502) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_SERVICE_UNAVAILABLE (503)</span><br><span class="line">value = ngx.HTTP_GATEWAY_TIMEOUT (504) (first added in the v0.3.1rc38 release)</span><br><span class="line">value = ngx.HTTP_VERSION_NOT_SUPPORTED (505) (first added in the v0.9.20 release)</span><br><span class="line">value = ngx.HTTP_INSUFFICIENT_STORAGE (507) (first added in the v0.9.20 release)</span><br></pre></td></tr></table></figure><h2><span id="nginx-log-level-constants">Nginx log level constants</span></h2><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ngx.STDERR</span><br><span class="line">ngx.EMERG</span><br><span class="line">ngx.ALERT</span><br><span class="line">ngx.CRIT</span><br><span class="line">ngx.ERR</span><br><span class="line">ngx.WARN</span><br><span class="line">ngx.NOTICE</span><br><span class="line">ngx.INFO</span><br><span class="line">ngx.DEBUG</span><br></pre></td></tr></table></figure><p>These constants are usually used by the [ngx.log]</p><h2><span id="print">print</span></h2><p><strong>syntax:</strong> <em>print(…)</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Writes argument values into the nginx <code>error.log</code> file with the <code>ngx.NOTICE</code> log level.</p><p>It is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.log(ngx.NOTICE, ...)</span><br></pre></td></tr></table></figure><p>Lua <code>nil</code> arguments are accepted and result in literal <code>&quot;nil&quot;</code> strings while Lua booleans result in literal <code>&quot;true&quot;</code> or <code>&quot;false&quot;</code>strings. And the <code>ngx.null</code> constant will yield the <code>&quot;null&quot;</code> string output.</p><p>There is a hard coded <code>2048</code> byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the <code>NGX_MAX_ERROR_STR</code> macro definition in the <code>src/core/ngx_log.h</code> file in the Nginx source tree.</p><h2><span id="ngxctx">ngx.ctx</span></h2><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*</p><p>This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).</p><p>Consider the following example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    rewrite_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.foo = 76</span><br><span class="line">    &#125;</span><br><span class="line">    access_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.foo = ngx.ctx.foo + 3</span><br><span class="line">    &#125;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(ngx.ctx.foo)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then <code>GET /test</code> will yield the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">79</span><br></pre></td></tr></table></figure><p>That is, the <code>ngx.ctx.foo</code> entry persists across the rewrite, access, and content phases of a request.</p><p>Every request, including subrequests, has its own copy of the table. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location /sub &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(&quot;sub pre: &quot;, ngx.ctx.blah)</span><br><span class="line">        ngx.ctx.blah = 32</span><br><span class="line">        ngx.say(&quot;sub post: &quot;, ngx.ctx.blah)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /main &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.blah = 73</span><br><span class="line">        ngx.say(&quot;main pre: &quot;, ngx.ctx.blah)</span><br><span class="line">        local res = ngx.location.capture(&quot;/sub&quot;)</span><br><span class="line">        ngx.print(res.body)</span><br><span class="line">        ngx.say(&quot;main post: &quot;, ngx.ctx.blah)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then <code>GET /main</code> will give the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">main pre: 73</span><br><span class="line">sub pre: nil</span><br><span class="line">sub post: 32</span><br><span class="line">main post: 73</span><br></pre></td></tr></table></figure><p>Here, modification of the <code>ngx.ctx.blah</code> entry in the subrequest does not affect the one in the parent request. This is because they have two separate versions of <code>ngx.ctx.blah</code>.</p><p>Internal redirection will destroy the original request <code>ngx.ctx</code> data (if any) and the new request will have an empty <code>ngx.ctx</code>table. For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location /new &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(ngx.ctx.foo)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /orig &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.foo = &quot;hello&quot;</span><br><span class="line">        ngx.exec(&quot;/new&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then <code>GET /orig</code> will give</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nil</span><br></pre></td></tr></table></figure><p>rather than the original <code>&quot;hello&quot;</code> value.</p><p>Arbitrary data values, including Lua closures and nested tables, can be inserted into this “magic” table. It also allows the registration of custom meta methods.</p><p>Overriding <code>ngx.ctx</code> with a new Lua table is also supported, for example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.ctx = &#123; foo = 32, bar = 54 &#125;</span><br></pre></td></tr></table></figure><p>When being used in the context of [init_worker_by_lua*]</p><p>The <code>ngx.ctx</code> lookup requires relatively expensive metamethod calls and it is much slower than explicitly passing per-request data along by your own function arguments. So do not abuse this API for saving your own function arguments because it usually has quite some performance impact.</p><p>Because of the metamethod magic, never “local” the <code>ngx.ctx</code> table outside your Lua function scope on the Lua module level due to [worker-level data sharing]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- mymodule.lua</span><br><span class="line">local _M = &#123;&#125;</span><br><span class="line"></span><br><span class="line">-- the following line is bad since ngx.ctx is a per-request</span><br><span class="line">-- data while this &lt;code&gt;ctx&lt;/code&gt; variable is on the Lua module level</span><br><span class="line">-- and thus is per-nginx-worker.</span><br><span class="line">local ctx = ngx.ctx</span><br><span class="line"></span><br><span class="line">function _M.main()</span><br><span class="line">    ctx.foo = &quot;bar&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">return _M</span><br></pre></td></tr></table></figure><p>Use the following instead:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- mymodule.lua</span><br><span class="line">local _M = &#123;&#125;</span><br><span class="line"></span><br><span class="line">function _M.main(ctx)</span><br><span class="line">    ctx.foo = &quot;bar&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">return _M</span><br></pre></td></tr></table></figure><p>That is, let the caller pass the <code>ctx</code> table explicitly via a function argument.</p><h2><span id="ngxlocationcapture">ngx.location.capture</span></h2><p><strong>syntax:</strong> <em>res = ngx.location.capture(uri, options?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Issues a synchronous but still non-blocking <em>Nginx Subrequest</em> using <code>uri</code>.</p><p>Nginx’s subrequests provide a powerful way to make non-blocking internal requests to other locations configured with disk file directory or <em>any</em> other nginx C modules like <code>ngx_proxy</code>, <code>ngx_fastcgi</code>, <code>ngx_memc</code>, <code>ngx_postgres</code>, <code>ngx_drizzle</code>, and even ngx_lua itself and etc etc etc.</p><p>Also note that subrequests just mimic the HTTP interface but there is <em>no</em> extra HTTP/TCP traffic <em>nor</em> IPC involved. Everything works internally, efficiently, on the C level.</p><p>Subrequests are completely different from HTTP 301/302 redirection (via [ngx.redirect]</p><p>You should always read the request body (by either calling [ngx.req.read_body]</p><p>This API function (as well as [ngx.location.capture_multi]</p><p>Here is a basic example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = ngx.location.capture(uri)</span><br></pre></td></tr></table></figure><p>Returns a Lua table with 4 slots: <code>res.status</code>, <code>res.header</code>, <code>res.body</code>, and <code>res.truncated</code>.</p><p><code>res.status</code> holds the response status code for the subrequest response.</p><p><code>res.header</code> holds all the response headers of the subrequest and it is a normal Lua table. For multi-value response headers, the value is a Lua (array) table that holds all the values in the order that they appear. For instance, if the subrequest response headers contain the following lines:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: a=3</span><br><span class="line">Set-Cookie: foo=bar</span><br><span class="line">Set-Cookie: baz=blah</span><br></pre></td></tr></table></figure><p>Then <code>res.header[&quot;Set-Cookie&quot;]</code> will be evaluated to the table value <code>{&quot;a=3&quot;, &quot;foo=bar&quot;, &quot;baz=blah&quot;}</code>.</p><p><code>res.body</code> holds the subrequest’s response body data, which might be truncated. You always need to check the <code>res.truncated</code> boolean flag to see if <code>res.body</code> contains truncated data. The data truncation here can only be caused by those unrecoverable errors in your subrequests like the cases that the remote end aborts the connection prematurely in the middle of the response body data stream or a read timeout happens when your subrequest is receiving the response body data from the remote.</p><p>URI query strings can be concatenated to URI itself, for instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = ngx.location.capture(&apos;/foo/bar?a=3&amp;b=4&apos;)</span><br></pre></td></tr></table></figure><p>Named locations like <code>@foo</code> are not allowed due to a limitation in the nginx core. Use normal locations combined with the <code>internal</code> directive to prepare internal-only locations.</p><p>An optional option table can be fed as the second argument, which supports the options:</p><ul><li><code>method</code> specify the subrequest’s request method, which only accepts constants like <code>ngx.HTTP_POST</code>.</li><li><code>body</code> specify the subrequest’s request body (string value only).</li><li><code>args</code> specify the subrequest’s URI query arguments (both string value and Lua tables are accepted)</li><li><code>ctx</code> specify a Lua table to be the [ngx.ctx]</li><li><code>vars</code> take a Lua table which holds the values to set the specified Nginx variables in the subrequest as this option’s value. This option was first introduced in the <code>v0.3.1rc31</code> release.</li><li><code>copy_all_vars</code> specify whether to copy over all the Nginx variable values of the current request to the subrequest in question. modifications of the nginx variables in the subrequest will not affect the current (parent) request. This option was first introduced in the <code>v0.3.1rc31</code> release.</li><li><code>share_all_vars</code> specify whether to share all the Nginx variables of the subrequest with the current (parent) request. modifications of the Nginx variables in the subrequest will affect the current (parent) request. Enabling this option may lead to hard-to-debug issues due to bad side-effects and is considered bad and harmful. Only enable this option when you completely know what you are doing.</li><li><code>always_forward_body</code> when set to true, the current (parent) request’s request body will always be forwarded to the subrequest being created if the <code>body</code> option is not specified. The request body read by either [ngx.req.read_body()]</li></ul><p>Issuing a POST subrequest, for example, can be done as follows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">res = ngx.location.capture(</span><br><span class="line">    &apos;/foo/bar&apos;,</span><br><span class="line">    &#123; method = ngx.HTTP_POST, body = &apos;hello, world&apos; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>See HTTP method constants methods other than POST. The <code>method</code> option is <code>ngx.HTTP_GET</code> by default.</p><p>The <code>args</code> option can specify extra URI arguments, for instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ngx.location.capture(&apos;/foo?a=1&apos;,</span><br><span class="line">    &#123; args = &#123; b = 3, c = &apos;:&apos; &#125; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.location.capture(&apos;/foo?a=1&amp;b=3&amp;c=%3a&apos;)</span><br></pre></td></tr></table></figure><p>that is, this method will escape argument keys and values according to URI rules and concatenate them together into a complete query string. The format for the Lua table passed as the <code>args</code> argument is identical to the format used in the [ngx.encode_args]</p><p>The <code>args</code> option can also take plain query strings:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ngx.location.capture(&apos;/foo?a=1&apos;,</span><br><span class="line">    &#123; args = &apos;b=3&amp;c=%3a&apos; &#125; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>This is functionally identical to the previous examples.</p><p>The <code>share_all_vars</code> option controls whether to share nginx variables among the current request and its subrequests. If this option is set to <code>true</code>, then the current request and associated subrequests will share the same Nginx variable scope. Hence, changes to Nginx variables made by a subrequest will affect the current request.</p><p>Care should be taken in using this option as variable scope sharing can have unexpected side effects. The <code>args</code>, <code>vars</code>, or <code>copy_all_vars</code> options are generally preferable instead.</p><p>This option is set to <code>false</code> by default</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location /other &#123;</span><br><span class="line">    set $dog &quot;$dog world&quot;;</span><br><span class="line">    echo &quot;$uri dog: $dog&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /lua &#123;</span><br><span class="line">    set $dog &apos;hello&apos;;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        res = ngx.location.capture(&quot;/other&quot;,</span><br><span class="line">            &#123; share_all_vars = true &#125;);</span><br><span class="line"></span><br><span class="line">        ngx.print(res.body)</span><br><span class="line">        ngx.say(ngx.var.uri, &quot;: &quot;, ngx.var.dog)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Accessing location <code>/lua</code> gives</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/other dog: hello world</span><br><span class="line">/lua: hello world</span><br></pre></td></tr></table></figure><p>The <code>copy_all_vars</code> option provides a copy of the parent request’s Nginx variables to subrequests when such subrequests are issued. Changes made to these variables by such subrequests will not affect the parent request or any other subrequests sharing the parent request’s variables.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location /other &#123;</span><br><span class="line">    set $dog &quot;$dog world&quot;;</span><br><span class="line">    echo &quot;$uri dog: $dog&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /lua &#123;</span><br><span class="line">    set $dog &apos;hello&apos;;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        res = ngx.location.capture(&quot;/other&quot;,</span><br><span class="line">            &#123; copy_all_vars = true &#125;);</span><br><span class="line"></span><br><span class="line">        ngx.print(res.body)</span><br><span class="line">        ngx.say(ngx.var.uri, &quot;: &quot;, ngx.var.dog)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Request <code>GET /lua</code> will give the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/other dog: hello world</span><br><span class="line">/lua: hello</span><br></pre></td></tr></table></figure><p>Note that if both <code>share_all_vars</code> and <code>copy_all_vars</code> are set to true, then <code>share_all_vars</code> takes precedence.</p><p>In addition to the two settings above, it is possible to specify values for variables in the subrequest using the <code>vars</code> option. These variables are set after the sharing or copying of variables has been evaluated, and provides a more efficient method of passing specific values to a subrequest over encoding them as URL arguments and unescaping them in the Nginx config file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location /other &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(&quot;dog = &quot;, ngx.var.dog)</span><br><span class="line">        ngx.say(&quot;cat = &quot;, ngx.var.cat)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /lua &#123;</span><br><span class="line">    set $dog &apos;&apos;;</span><br><span class="line">    set $cat &apos;&apos;;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        res = ngx.location.capture(&quot;/other&quot;,</span><br><span class="line">            &#123; vars = &#123; dog = &quot;hello&quot;, cat = 32 &#125;&#125;);</span><br><span class="line"></span><br><span class="line">        ngx.print(res.body)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Accessing <code>/lua</code> will yield the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dog = hello</span><br><span class="line">cat = 32</span><br></pre></td></tr></table></figure><p>The <code>ctx</code> option can be used to specify a custom Lua table to serve as the [ngx.ctx]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location /sub &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.foo = &quot;bar&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">location /lua &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        local ctx = &#123;&#125;</span><br><span class="line">        res = ngx.location.capture(&quot;/sub&quot;, &#123; ctx = ctx &#125;)</span><br><span class="line"></span><br><span class="line">        ngx.say(ctx.foo);</span><br><span class="line">        ngx.say(ngx.ctx.foo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then request <code>GET /lua</code> gives</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bar</span><br><span class="line">nil</span><br></pre></td></tr></table></figure><p>It is also possible to use this <code>ctx</code> option to share the same [ngx.ctx]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location /sub &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.ctx.foo = &quot;bar&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">location /lua &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        res = ngx.location.capture(&quot;/sub&quot;, &#123; ctx = ngx.ctx &#125;)</span><br><span class="line">        ngx.say(ngx.ctx.foo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Request <code>GET /lua</code> yields the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bar</span><br></pre></td></tr></table></figure><p>Note that subrequests issued by [ngx.location.capture]</p><p>When the <code>body</code> option is not specified and the <code>always_forward_body</code> option is false (the default value), the <code>POST</code> and <code>PUT</code>subrequests will inherit the request bodies of the parent request (if any).</p><p>There is a hard-coded upper limit on the number of concurrent subrequests possible for every main request. In older versions of Nginx, the limit was <code>50</code> concurrent subrequests and in more recent versions, Nginx <code>1.1.x</code> onwards, this was increased to <code>200</code> concurrent subrequests. When this limit is exceeded, the following error message is added to the <code>error.log</code> file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[error] 13983#0: *1 subrequests cycle while processing &quot;/uri&quot;</span><br></pre></td></tr></table></figure><p>The limit can be manually modified if required by editing the definition of the <code>NGX_HTTP_MAX_SUBREQUESTS</code> macro in the <code>nginx/src/http/ngx_http_request.h</code> file in the Nginx source tree.</p><p>Please also refer to restrictions on capturing locations configured by [subrequest directives of other modules]</p><h2><span id="ngxlocationcapture_multi">ngx.location.capture_multi</span></h2><p><strong>syntax:</strong> <em>res1, res2, … = ngx.location.capture_multi({ {uri, options?}, {uri, options?}, … })</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Just like [ngx.location.capture]</p><p>This function issues several parallel subrequests specified by the input table and returns their results in the same order. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">res1, res2, res3 = ngx.location.capture_multi&#123;</span><br><span class="line">    &#123; &quot;/foo&quot;, &#123; args = &quot;a=3&amp;b=4&quot; &#125; &#125;,</span><br><span class="line">    &#123; &quot;/bar&quot; &#125;,</span><br><span class="line">    &#123; &quot;/baz&quot;, &#123; method = ngx.HTTP_POST, body = &quot;hello&quot; &#125; &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if res1.status == ngx.HTTP_OK then</span><br><span class="line">    ...</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if res2.body == &quot;BLAH&quot; then</span><br><span class="line">    ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This function will not return until all the subrequests terminate. The total latency is the longest latency of the individual subrequests rather than the sum.</p><p>Lua tables can be used for both requests and responses when the number of subrequests to be issued is not known in advance:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- construct the requests table</span><br><span class="line">local reqs = &#123;&#125;</span><br><span class="line">table.insert(reqs, &#123; &quot;/mysql&quot; &#125;)</span><br><span class="line">table.insert(reqs, &#123; &quot;/postgres&quot; &#125;)</span><br><span class="line">table.insert(reqs, &#123; &quot;/redis&quot; &#125;)</span><br><span class="line">table.insert(reqs, &#123; &quot;/memcached&quot; &#125;)</span><br><span class="line"></span><br><span class="line">-- issue all the requests at once and wait until they all return</span><br><span class="line">local resps = &#123; ngx.location.capture_multi(reqs) &#125;</span><br><span class="line"></span><br><span class="line">-- loop over the responses table</span><br><span class="line">for i, resp in ipairs(resps) do</span><br><span class="line">    -- process the response table &quot;resp&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>The [ngx.location.capture]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ngx.location.capture =</span><br><span class="line">    function (uri, args)</span><br><span class="line">        return ngx.location.capture_multi(&#123; &#123;uri, args&#125; &#125;)</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><p>Please also refer to restrictions on capturing locations configured by [subrequest directives of other modules]</p><h2><span id="ngxstatus">ngx.status</span></h2><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Read and write the current request’s response status. This should be called before sending out the response headers.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.status = ngx.HTTP_CREATED</span><br><span class="line">status = ngx.status</span><br></pre></td></tr></table></figure><p>Setting <code>ngx.status</code> after the response header is sent out has no effect but leaving an error message in your nginx’s error log file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attempt to set ngx.status after sending out response headers</span><br></pre></td></tr></table></figure><h2><span id="ngxheaderheader">ngx.header.HEADER</span></h2><p><strong>syntax:</strong> <em>ngx.header.HEADER = VALUE</em></p><p><strong>syntax:</strong> <em>value = ngx.header.HEADER</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Set, add to, or clear the current request’s <code>HEADER</code> response header that is to be sent.</p><p>Underscores (<code>_</code>) in the header names will be replaced by hyphens (<code>-</code>) by default. This transformation can be turned off via the [lua_transform_underscores_in_response_headers]</p><p>The header names are matched case-insensitively.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- equivalent to ngx.header[&quot;Content-Type&quot;] = &apos;text/plain&apos;</span><br><span class="line">ngx.header.content_type = &apos;text/plain&apos;;</span><br><span class="line"></span><br><span class="line">ngx.header[&quot;X-My-Header&quot;] = &apos;blah blah&apos;;</span><br></pre></td></tr></table></figure><p>Multi-value headers can be set this way:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.header[&apos;Set-Cookie&apos;] = &#123;&apos;a=32; path=/&apos;, &apos;b=4; path=/&apos;&#125;</span><br></pre></td></tr></table></figure><p>will yield</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: a=32; path=/</span><br><span class="line">Set-Cookie: b=4; path=/</span><br></pre></td></tr></table></figure><p>in the response headers.</p><p>Only Lua tables are accepted (Only the last element in the table will take effect for standard headers such as <code>Content-Type</code>that only accept a single value).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.header.content_type = &#123;&apos;a&apos;, &apos;b&apos;&#125;</span><br></pre></td></tr></table></figure><p>is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.header.content_type = &apos;b&apos;</span><br></pre></td></tr></table></figure><p>Setting a slot to <code>nil</code> effectively removes it from the response headers:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.header[&quot;X-My-Header&quot;] = nil;</span><br></pre></td></tr></table></figure><p>The same applies to assigning an empty table:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.header[&quot;X-My-Header&quot;] = &#123;&#125;;</span><br></pre></td></tr></table></figure><p>Setting <code>ngx.header.HEADER</code> after sending out response headers (either explicitly with [ngx.send_headers]</p><p>Reading <code>ngx.header.HEADER</code> will return the value of the response header named <code>HEADER</code>.</p><p>Underscores (<code>_</code>) in the header names will also be replaced by dashes (<code>-</code>) and the header names will be matched case-insensitively. If the response header is not present at all, <code>nil</code> will be returned.</p><p>This is particularly useful in the context of [header_filter_by_lua*]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    set $footer &apos;&apos;;</span><br><span class="line"></span><br><span class="line">    proxy_pass http://some-backend;</span><br><span class="line"></span><br><span class="line">    header_filter_by_lua_block &#123;</span><br><span class="line">        if ngx.header[&quot;X-My-Header&quot;] == &quot;blah&quot; then</span><br><span class="line">            ngx.var.footer = &quot;some value&quot;</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    echo_after_body $footer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For multi-value headers, all of the values of header will be collected in order and returned as a Lua table. For example, response headers</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Foo: bar</span><br><span class="line">Foo: baz</span><br></pre></td></tr></table></figure><p>will result in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;bar&quot;, &quot;baz&quot;&#125;</span><br></pre></td></tr></table></figure><p>to be returned when reading <code>ngx.header.Foo</code>.</p><p>Note that <code>ngx.header</code> is not a normal Lua table and as such, it is not possible to iterate through it using the Lua <code>ipairs</code>function.</p><p>For reading <em>request</em> headers, use the [ngx.req.get_headers]</p><h2><span id="ngxrespget_headers">ngx.resp.get_headers</span></h2><p><strong>syntax:</strong> <em>headers, err = ngx.resp.get_headers(max_headers?, raw?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*</p><p>Returns a Lua table holding all the current response headers for the current request.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local h, err = ngx.resp.get_headers()</span><br><span class="line"></span><br><span class="line">if err == &quot;truncated&quot; then</span><br><span class="line">    -- one can choose to ignore or reject the current response here</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">for k, v in pairs(h) do</span><br><span class="line">    ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This function has the same signature as [ngx.req.get_headers]</p><p>Note that a maximum of 100 response headers are parsed by default (including those with the same name) and that additional response headers are silently discarded to guard against potential denial of service attacks. Since <code>v0.10.13</code>, when the limit is exceeded, it will return a second value which is the string <code>&quot;truncated&quot;</code>.</p><p>This API was first introduced in the <code>v0.9.5</code> release.</p><h2><span id="ngxreqis_internal">ngx.req.is_internal</span></h2><p><strong>syntax:</strong> <em>is_internal = ngx.req.is_internal()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Returns a boolean indicating whether the current request is an “internal request”, i.e., a request initiated from inside the current nginx server instead of from the client side.</p><p>Subrequests are all internal requests and so are requests after internal redirects.</p><p>This API was first introduced in the <code>v0.9.20</code> release.</p><h2><span id="ngxreqstart_time">ngx.req.start_time</span></h2><p><strong>syntax:</strong> <em>secs = ngx.req.start_time()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Returns a floating-point number representing the timestamp (including milliseconds as the decimal part) when the current request was created.</p><p>The following example emulates the <code>$request_time</code> variable value (provided by <a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" target="_blank" rel="noopener">ngx_http_log_module</a>) in pure Lua:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local request_time = ngx.now() - ngx.req.start_time()</span><br></pre></td></tr></table></figure><p>This function was first introduced in the <code>v0.7.7</code> release.</p><p>See also [ngx.now]</p><h2><span id="ngxreqhttp_version">ngx.req.http_version</span></h2><p><strong>syntax:</strong> <em>num = ngx.req.http_version()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*</p><p>Returns the HTTP version number for the current request as a Lua number.</p><p>Current possible values are 2.0, 1.0, 1.1, and 0.9. Returns <code>nil</code> for unrecognized values.</p><p>This method was first introduced in the <code>v0.7.17</code> release.</p><h2><span id="ngxreqraw_header">ngx.req.raw_header</span></h2><p><strong>syntax:</strong> <em>str = ngx.req.raw_header(no_request_line?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*</p><p>Returns the original raw HTTP protocol header received by the Nginx server.</p><p>By default, the request line and trailing <code>CR LF</code> terminator will also be included. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.print(ngx.req.raw_header())</span><br></pre></td></tr></table></figure><p>gives something like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /t HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Connection: close</span><br><span class="line">Foo: bar</span><br></pre></td></tr></table></figure><p>You can specify the optional <code>no_request_line</code> argument as a <code>true</code> value to exclude the request line from the result. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.print(ngx.req.raw_header(true))</span><br></pre></td></tr></table></figure><p>outputs something like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host: localhost</span><br><span class="line">Connection: close</span><br><span class="line">Foo: bar</span><br></pre></td></tr></table></figure><p>This method was first introduced in the <code>v0.7.17</code> release.</p><p>This method does not work in HTTP/2 requests yet.</p><h2><span id="ngxreqget_method">ngx.req.get_method</span></h2><p><strong>syntax:</strong> <em>method_name = ngx.req.get_method()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, balancer_by_lua*, log_by_lua*</p><p>Retrieves the current request’s request method name. Strings like <code>&quot;GET&quot;</code> and <code>&quot;POST&quot;</code> are returned instead of numerical [method constants]</p><p>If the current request is an Nginx subrequest, then the subrequest’s method name will be returned.</p><p>This method was first introduced in the <code>v0.5.6</code> release.</p><p>See also [ngx.req.set_method]</p><h2><span id="ngxreqset_method">ngx.req.set_method</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_method(method_id)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*</p><p>Overrides the current request’s request method with the <code>method_id</code> argument. Currently only numerical [method constants]</p><p>If the current request is an Nginx subrequest, then the subrequest’s method will be overridden.</p><p>This method was first introduced in the <code>v0.5.6</code> release.</p><p>See also [ngx.req.get_method]</p><h2><span id="ngxreqset_uri">ngx.req.set_uri</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_uri(uri, jump?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*</p><p>Rewrite the current request’s (parsed) URI by the <code>uri</code> argument. The <code>uri</code> argument must be a Lua string and cannot be of zero length, or a Lua exception will be thrown.</p><p>The optional boolean <code>jump</code> argument can trigger location rematch (or location jump) as <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>‘s <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" target="_blank" rel="noopener">rewrite</a>directive, that is, when <code>jump</code> is <code>true</code> (default to <code>false</code>), this function will never return and it will tell Nginx to try re-searching locations with the new URI value at the later <code>post-rewrite</code> phase and jumping to the new location.</p><p>Location jump will not be triggered otherwise, and only the current request’s URI will be modified, which is also the default behavior. This function will return but with no returned values when the <code>jump</code> argument is <code>false</code> or absent altogether.</p><p>For example, the following nginx config snippet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^ /foo last;</span><br></pre></td></tr></table></figure><p>can be coded in Lua like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri(&quot;/foo&quot;, true)</span><br></pre></td></tr></table></figure><p>Similarly, Nginx config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^ /foo break;</span><br></pre></td></tr></table></figure><p>can be coded in Lua as</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri(&quot;/foo&quot;, false)</span><br></pre></td></tr></table></figure><p>or equivalently,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri(&quot;/foo&quot;)</span><br></pre></td></tr></table></figure><p>The <code>jump</code> argument can only be set to <code>true</code> in [rewrite_by_lua*]</p><p>A more sophisticated example involving regex substitutions is as follows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    rewrite_by_lua_block &#123;</span><br><span class="line">        local uri = ngx.re.sub(ngx.var.uri, &quot;^/test/(.*)&quot;, &quot;/$1&quot;, &quot;o&quot;)</span><br><span class="line">        ngx.req.set_uri(uri)</span><br><span class="line">    &#125;</span><br><span class="line">    proxy_pass http://my_backend;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>which is functionally equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    rewrite ^/test/(.*) /$1 break;</span><br><span class="line">    proxy_pass http://my_backend;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note that it is not possible to use this interface to rewrite URI arguments and that [ngx.req.set_uri_args]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^ /foo?a=3? last;</span><br></pre></td></tr></table></figure><p>can be coded as</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri_args(&quot;a=3&quot;)</span><br><span class="line">ngx.req.set_uri(&quot;/foo&quot;, true)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri_args(&#123;a = 3&#125;)</span><br><span class="line">ngx.req.set_uri(&quot;/foo&quot;, true)</span><br></pre></td></tr></table></figure><p>This interface was first introduced in the <code>v0.3.1rc14</code> release.</p><h2><span id="ngxreqset_uri_args">ngx.req.set_uri_args</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_uri_args(args)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*</p><p>Rewrite the current request’s URI query arguments by the <code>args</code> argument. The <code>args</code> argument can be either a Lua string, as in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri_args(&quot;a=3&amp;b=hello%20world&quot;)</span><br></pre></td></tr></table></figure><p>or a Lua table holding the query arguments’ key-value pairs, as in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri_args(&#123; a = 3, b = &quot;hello world&quot; &#125;)</span><br></pre></td></tr></table></figure><p>where in the latter case, this method will escape argument keys and values according to the URI escaping rule.</p><p>Multi-value arguments are also supported:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_uri_args(&#123; a = 3, b = &#123;5, 6&#125; &#125;)</span><br></pre></td></tr></table></figure><p>which will result in a query string like <code>a=3&amp;b=5&amp;b=6</code>.</p><p>This interface was first introduced in the <code>v0.3.1rc13</code> release.</p><p>See also [ngx.req.set_uri]</p><h2><span id="ngxreqget_uri_args">ngx.req.get_uri_args</span></h2><p><strong>syntax:</strong> <em>args, err = ngx.req.get_uri_args(max_args?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*</p><p>Returns a Lua table holding all the current request URL query arguments.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location = /test &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        local args, err = ngx.req.get_uri_args()</span><br><span class="line"></span><br><span class="line">        if err == &quot;truncated&quot; then</span><br><span class="line">            -- one can choose to ignore or reject the current request here</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        for key, val in pairs(args) do</span><br><span class="line">            if type(val) == &quot;table&quot; then</span><br><span class="line">                ngx.say(key, &quot;: &quot;, table.concat(val, &quot;, &quot;))</span><br><span class="line">            else</span><br><span class="line">                ngx.say(key, &quot;: &quot;, val)</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then <code>GET /test?foo=bar&amp;bar=baz&amp;bar=blah</code> will yield the response body</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo: bar</span><br><span class="line">bar: baz, blah</span><br></pre></td></tr></table></figure><p>Multiple occurrences of an argument key will result in a table value holding all the values for that key in order.</p><p>Keys and values are unescaped according to URI escaping rules. In the settings above, <code>GET /test?a%20b=1%61+2</code> will yield:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a b: 1a 2</span><br></pre></td></tr></table></figure><p>Arguments without the <code>=&lt;value&gt;</code> parts are treated as boolean arguments. <code>GET /test?foo&amp;bar</code> will yield:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo: true</span><br><span class="line">bar: true</span><br></pre></td></tr></table></figure><p>That is, they will take Lua boolean values <code>true</code>. However, they are different from arguments taking empty string values. <code>GET /test?foo=&amp;bar=</code> will give something like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo:</span><br><span class="line">bar:</span><br></pre></td></tr></table></figure><p>Empty key arguments are discarded. <code>GET /test?=hello&amp;=world</code> will yield an empty output for instance.</p><p>Updating query arguments via the nginx variable <code>$args</code> (or <code>ngx.var.args</code> in Lua) at runtime is also supported:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.var.args = &quot;a=3&amp;b=42&quot;</span><br><span class="line">local args, err = ngx.req.get_uri_args()</span><br></pre></td></tr></table></figure><p>Here the <code>args</code> table will always look like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;a = 3, b = 42&#125;</span><br></pre></td></tr></table></figure><p>regardless of the actual request query string.</p><p>Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since <code>v0.10.13</code>, when the limit is exceeded, it will return a second value which is the string <code>&quot;truncated&quot;</code>.</p><p>However, the optional <code>max_args</code> function argument can be used to override this limit:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local args, err = ngx.req.get_uri_args(10)</span><br><span class="line">if err == &quot;truncated&quot; then</span><br><span class="line">    -- one can choose to ignore or reject the current request here</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This argument can be set to zero to remove the limit and to process all request arguments received:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local args, err = ngx.req.get_uri_args(0)</span><br></pre></td></tr></table></figure><p>Removing the <code>max_args</code> cap is strongly discouraged.</p><h2><span id="ngxreqget_post_args">ngx.req.get_post_args</span></h2><p><strong>syntax:</strong> <em>args, err = ngx.req.get_post_args(max_args?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Returns a Lua table holding all the current request POST query arguments (of the MIME type <code>application/x-www-form-urlencoded</code>). Call [ngx.req.read_body]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">location = /test &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.req.read_body()</span><br><span class="line">        local args, err = ngx.req.get_post_args()</span><br><span class="line"></span><br><span class="line">        if err == &quot;truncated&quot; then</span><br><span class="line">            -- one can choose to ignore or reject the current request here</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        if not args then</span><br><span class="line">            ngx.say(&quot;failed to get post args: &quot;, err)</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line">        for key, val in pairs(args) do</span><br><span class="line">            if type(val) == &quot;table&quot; then</span><br><span class="line">                ngx.say(key, &quot;: &quot;, table.concat(val, &quot;, &quot;))</span><br><span class="line">            else</span><br><span class="line">                ngx.say(key, &quot;: &quot;, val)</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Post request with the body &apos;foo=bar&amp;bar=baz&amp;bar=blah&apos;</span><br><span class="line">$ curl --data &apos;foo=bar&amp;bar=baz&amp;bar=blah&apos; localhost/test</span><br></pre></td></tr></table></figure><p>will yield the response body like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo: bar</span><br><span class="line">bar: baz, blah</span><br></pre></td></tr></table></figure><p>Multiple occurrences of an argument key will result in a table value holding all of the values for that key in order.</p><p>Keys and values will be unescaped according to URI escaping rules.</p><p>With the settings above,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># POST request with body &apos;a%20b=1%61+2&apos;</span><br><span class="line">$ curl -d &apos;a%20b=1%61+2&apos; localhost/test</span><br></pre></td></tr></table></figure><p>will yield:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a b: 1a 2</span><br></pre></td></tr></table></figure><p>Arguments without the <code>=&lt;value&gt;</code> parts are treated as boolean arguments. <code>POST /test</code> with the request body <code>foo&amp;bar</code> will yield:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo: true</span><br><span class="line">bar: true</span><br></pre></td></tr></table></figure><p>That is, they will take Lua boolean values <code>true</code>. However, they are different from arguments taking empty string values. <code>POST /test</code> with request body <code>foo=&amp;bar=</code> will return something like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo:</span><br><span class="line">bar:</span><br></pre></td></tr></table></figure><p>Empty key arguments are discarded. <code>POST /test</code> with body <code>=hello&amp;=world</code> will yield empty outputs for instance.</p><p>Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since <code>v0.10.13</code>, when the limit is exceeded, it will return a second value which is the string <code>&quot;truncated&quot;</code>.</p><p>However, the optional <code>max_args</code> function argument can be used to override this limit:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local args, err = ngx.req.get_post_args(10)</span><br><span class="line">if err == &quot;truncated&quot; then</span><br><span class="line">    -- one can choose to ignore or reject the current request here</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This argument can be set to zero to remove the limit and to process all request arguments received:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local args, err = ngx.req.get_post_args(0)</span><br></pre></td></tr></table></figure><p>Removing the <code>max_args</code> cap is strongly discouraged.</p><h2><span id="ngxreqget_headers">ngx.req.get_headers</span></h2><p><strong>syntax:</strong> <em>headers, err = ngx.req.get_headers(max_headers?, raw?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Returns a Lua table holding all the current request headers.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local h, err = ngx.req.get_headers()</span><br><span class="line"></span><br><span class="line">if err == &quot;truncated&quot; then</span><br><span class="line">    -- one can choose to ignore or reject the current request here</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">for k, v in pairs(h) do</span><br><span class="line">    ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>To read an individual header:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.say(&quot;Host: &quot;, ngx.req.get_headers()[&quot;Host&quot;])</span><br></pre></td></tr></table></figure><p>Note that the [ngx.var.HEADER]</p><p>For multiple instances of request headers such as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Foo: foo</span><br><span class="line">Foo: bar</span><br><span class="line">Foo: baz</span><br></pre></td></tr></table></figure><p>the value of <code>ngx.req.get_headers()[&quot;Foo&quot;]</code> will be a Lua (array) table such as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;&#125;</span><br></pre></td></tr></table></figure><p>Note that a maximum of 100 request headers are parsed by default (including those with the same name) and that additional request headers are silently discarded to guard against potential denial of service attacks. Since <code>v0.10.13</code>, when the limit is exceeded, it will return a second value which is the string <code>&quot;truncated&quot;</code>.</p><p>However, the optional <code>max_headers</code> function argument can be used to override this limit:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local headers, err = ngx.req.get_headers(10)</span><br><span class="line"></span><br><span class="line">if err == &quot;truncated&quot; then</span><br><span class="line">    -- one can choose to ignore or reject the current request here</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This argument can be set to zero to remove the limit and to process all request headers received:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local headers, err = ngx.req.get_headers(0)</span><br></pre></td></tr></table></figure><p>Removing the <code>max_headers</code> cap is strongly discouraged.</p><p>Since the <code>0.6.9</code> release, all the header names in the Lua table returned are converted to the pure lower-case form by default, unless the <code>raw</code> argument is set to <code>true</code> (default to <code>false</code>).</p><p>Also, by default, an <code>__index</code> metamethod is added to the resulting Lua table and will normalize the keys to a pure lowercase form with all underscores converted to dashes in case of a lookup miss. For example, if a request header <code>My-Foo-Header</code> is present, then the following invocations will all pick up the value of this header correctly:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ngx.say(headers.my_foo_header)</span><br><span class="line">ngx.say(headers[&quot;My-Foo-Header&quot;])</span><br><span class="line">ngx.say(headers[&quot;my-foo-header&quot;])</span><br></pre></td></tr></table></figure><p>The <code>__index</code> metamethod will not be added when the <code>raw</code> argument is set to <code>true</code>.</p><h2><span id="ngxreqset_header">ngx.req.set_header</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_header(header_name, header_value)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*</p><p>Set the current request’s request header named <code>header_name</code> to value <code>header_value</code>, overriding any existing ones.</p><p>By default, all the subrequests subsequently initiated by [ngx.location.capture]</p><p>Here is an example of setting the <code>Content-Type</code> header:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_header(&quot;Content-Type&quot;, &quot;text/css&quot;)</span><br></pre></td></tr></table></figure><p>The <code>header_value</code> can take an array list of values, for example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_header(&quot;Foo&quot;, &#123;&quot;a&quot;, &quot;abc&quot;&#125;)</span><br></pre></td></tr></table></figure><p>will produce two new request headers:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Foo: a</span><br><span class="line">Foo: abc</span><br></pre></td></tr></table></figure><p>and old <code>Foo</code> headers will be overridden if there is any.</p><p>When the <code>header_value</code> argument is <code>nil</code>, the request header will be removed. So</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.set_header(&quot;X-Foo&quot;, nil)</span><br></pre></td></tr></table></figure><p>is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.clear_header(&quot;X-Foo&quot;)</span><br></pre></td></tr></table></figure><h2><span id="ngxreqclear_header">ngx.req.clear_header</span></h2><p><strong>syntax:</strong> <em>ngx.req.clear_header(header_name)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*</p><p>Clears the current request’s request header named <code>header_name</code>. None of the current request’s existing subrequests will be affected but subsequently initiated subrequests will inherit the change by default.</p><h2><span id="ngxreqread_body">ngx.req.read_body</span></h2><p><strong>syntax:</strong> <em>ngx.req.read_body()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Reads the client request body synchronously without blocking the Nginx event loop.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.read_body()</span><br><span class="line">local args = ngx.req.get_post_args()</span><br></pre></td></tr></table></figure><p>If the request body is already read previously by turning on [lua_need_request_body]</p><p>If the request body has already been explicitly discarded, either by the [ngx.req.discard_body]</p><p>In case of errors, such as connection errors while reading the data, this method will throw out a Lua exception <em>or</em> terminate the current request with a 500 status code immediately.</p><p>The request body data read using this function can be retrieved later via [ngx.req.get_body_data]</p><ol><li>whether the current request body is already larger than the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" target="_blank" rel="noopener">client_body_buffer_size</a>,</li><li>and whether <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" target="_blank" rel="noopener">client_body_in_file_only</a> has been switched on.</li></ol><p>In cases where current request may have a request body and the request body data is not required, The [ngx.req.discard_body]</p><p>This function was first introduced in the <code>v0.3.1rc17</code> release.</p><h2><span id="ngxreqdiscard_body">ngx.req.discard_body</span></h2><p><strong>syntax:</strong> <em>ngx.req.discard_body()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Explicitly discard the request body, i.e., read the data on the connection and throw it away immediately (without using the request body by any means).</p><p>This function is an asynchronous call and returns immediately.</p><p>If the request body has already been read, this function does nothing and returns immediately.</p><p>This function was first introduced in the <code>v0.3.1rc17</code> release.</p><p>See also [ngx.req.read_body]</p><h2><span id="ngxreqget_body_data">ngx.req.get_body_data</span></h2><p><strong>syntax:</strong> <em>data = ngx.req.get_body_data()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, log_by_lua*</p><p>Retrieves in-memory request body data. It returns a Lua string rather than a Lua table holding all the parsed query arguments. Use the [ngx.req.get_post_args]</p><p>This function returns <code>nil</code> if</p><ol><li>the request body has not been read,</li><li>the request body has been read into disk temporary files,</li><li>or the request body has zero size.</li></ol><p>If the request body has not been read yet, call [ngx.req.read_body]</p><p>If the request body has been read into disk files, try calling the [ngx.req.get_body_file]</p><p>To force in-memory request bodies, try setting <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" target="_blank" rel="noopener">client_body_buffer_size</a> to the same size value in <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" target="_blank" rel="noopener">client_max_body_size</a>.</p><p>Note that calling this function instead of using <code>ngx.var.request_body</code> or <code>ngx.var.echo_request_body</code> is more efficient because it can save one dynamic memory allocation and one data copy.</p><p>This function was first introduced in the <code>v0.3.1rc17</code> release.</p><p>See also [ngx.req.get_body_file]</p><h2><span id="ngxreqget_body_file">ngx.req.get_body_file</span></h2><p><strong>syntax:</strong> <em>file_name = ngx.req.get_body_file()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Retrieves the file name for the in-file request body data. Returns <code>nil</code> if the request body has not been read or has been read into memory.</p><p>The returned file is read only and is usually cleaned up by Nginx’s memory pool. It should not be manually modified, renamed, or removed in Lua code.</p><p>If the request body has not been read yet, call [ngx.req.read_body]</p><p>If the request body has been read into memory, try calling the [ngx.req.get_body_data]</p><p>To force in-file request bodies, try turning on <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" target="_blank" rel="noopener">client_body_in_file_only</a>.</p><p>This function was first introduced in the <code>v0.3.1rc17</code> release.</p><p>See also [ngx.req.get_body_data]</p><h2><span id="ngxreqset_body_data">ngx.req.set_body_data</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_body_data(data)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Set the current request’s request body using the in-memory data specified by the <code>data</code> argument.</p><p>If the request body has not been read yet, call [ngx.req.read_body]</p><p>Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.</p><p>This function was first introduced in the <code>v0.3.1rc18</code> release.</p><p>See also [ngx.req.set_body_file]</p><h2><span id="ngxreqset_body_file">ngx.req.set_body_file</span></h2><p><strong>syntax:</strong> <em>ngx.req.set_body_file(file_name, auto_clean?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Set the current request’s request body using the in-file data specified by the <code>file_name</code> argument.</p><p>If the request body has not been read yet, call [ngx.req.read_body]</p><p>If the optional <code>auto_clean</code> argument is given a <code>true</code> value, then this file will be removed at request completion or the next time this function or [ngx.req.set_body_data]</p><p>Please ensure that the file specified by the <code>file_name</code> argument exists and is readable by an Nginx worker process by setting its permission properly to avoid Lua exception errors.</p><p>Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.</p><p>This function was first introduced in the <code>v0.3.1rc18</code> release.</p><p>See also [ngx.req.set_body_data]</p><h2><span id="ngxreqinit_body">ngx.req.init_body</span></h2><p><strong>syntax:</strong> <em>ngx.req.init_body(buffer_size?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Creates a new blank request body for the current request and inializes the buffer for later request body data writing via the [ngx.req.append_body]</p><p>If the <code>buffer_size</code> argument is specified, then its value will be used for the size of the memory buffer for body writing with [ngx.req.append_body]</p><p>When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.</p><p>It is important to always call the [ngx.req.finish_body]</p><p>The usage of this function is often like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.init_body(128 * 1024)  -- buffer is 128KB</span><br><span class="line">for chunk in next_data_chunk() do</span><br><span class="line">    ngx.req.append_body(chunk) -- each chunk can be 4KB</span><br><span class="line">end</span><br><span class="line">ngx.req.finish_body()</span><br></pre></td></tr></table></figure><p>This function can be used with [ngx.req.append_body]</p><p>This function was first introduced in the <code>v0.5.11</code> release.</p><h2><span id="ngxreqappend_body">ngx.req.append_body</span></h2><p><strong>syntax:</strong> <em>ngx.req.append_body(data_chunk)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Append new data chunk specified by the <code>data_chunk</code> argument onto the existing request body created by the [ngx.req.init_body]</p><p>When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.</p><p>It is important to always call the [ngx.req.finish_body]</p><p>This function can be used with [ngx.req.init_body]</p><p>This function was first introduced in the <code>v0.5.11</code> release.</p><p>See also [ngx.req.init_body]</p><h2><span id="ngxreqfinish_body">ngx.req.finish_body</span></h2><p><strong>syntax:</strong> <em>ngx.req.finish_body()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Completes the construction process of the new request body created by the [ngx.req.init_body]</p><p>This function can be used with [ngx.req.init_body]</p><p>This function was first introduced in the <code>v0.5.11</code> release.</p><p>See also [ngx.req.init_body]</p><h2><span id="ngxreqsocket">ngx.req.socket</span></h2><p><strong>syntax:</strong> <em>tcpsock, err = ngx.req.socket()</em></p><p><strong>syntax:</strong> <em>tcpsock, err = ngx.req.socket(raw)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Returns a read-only cosocket object that wraps the downstream connection. Only [receive]</p><p>In case of error, <code>nil</code> will be returned as well as a string describing the error.</p><p>The socket object returned by this method is usually used to read the current request’s body in a streaming fashion. Do not turn on the [lua_need_request_body]</p><p>If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading. Chunked request bodies are not yet supported in this API.</p><p>Since the <code>v0.9.0</code> release, this function accepts an optional boolean <code>raw</code> argument. When this argument is <code>true</code>, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the [receive]</p><p>When the <code>raw</code> argument is <code>true</code>, it is required that no pending data from any previous [ngx.say]</p><p>You can use the “raw request socket” returned by <code>ngx.req.socket(true)</code> to implement fancy protocols like <a href="http://en.wikipedia.org/wiki/WebSocket" target="_blank" rel="noopener">WebSocket</a>, or just emit your own raw HTTP response header or body data. You can refer to the [lua-resty-websocket library]</p><p>This function was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="ngxexec">ngx.exec</span></h2><p><strong>syntax:</strong> <em>ngx.exec(uri, args?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Does an internal redirect to <code>uri</code> with <code>args</code> and is similar to the <a href="http://github.com/openresty/echo-nginx-module#echo_exec" target="_blank" rel="noopener">echo_exec</a> directive of the <a href="http://github.com/openresty/echo-nginx-module" target="_blank" rel="noopener">echo-nginx-module</a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ngx.exec(&apos;/some-location&apos;);</span><br><span class="line">ngx.exec(&apos;/some-location&apos;, &apos;a=3&amp;b=5&amp;c=6&apos;);</span><br><span class="line">ngx.exec(&apos;/some-location?a=3&amp;b=5&apos;, &apos;c=6&apos;);</span><br></pre></td></tr></table></figure><p>The optional second <code>args</code> can be used to specify extra URI query arguments, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.exec(&quot;/foo&quot;, &quot;a=3&amp;b=hello%20world&quot;)</span><br></pre></td></tr></table></figure><p>Alternatively, a Lua table can be passed for the <code>args</code> argument for ngx_lua to carry out URI escaping and string concatenation.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.exec(&quot;/foo&quot;, &#123; a = 3, b = &quot;hello world&quot; &#125;)</span><br></pre></td></tr></table></figure><p>The result is exactly the same as the previous example.</p><p>The format for the Lua table passed as the <code>args</code> argument is identical to the format used in the [ngx.encode_args]</p><p>Named locations are also supported but the second <code>args</code> argument will be ignored if present and the querystring for the new target is inherited from the referring location (if any).</p><p><code>GET /foo/file.php?a=hello</code> will return “hello” and not “goodbye” in the example below</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location /foo &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.exec(&quot;@bar&quot;, &quot;a=goodbye&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location @bar &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        local args = ngx.req.get_uri_args()</span><br><span class="line">        for key, val in pairs(args) do</span><br><span class="line">            if key == &quot;a&quot; then</span><br><span class="line">                ngx.say(val)</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note that the <code>ngx.exec</code> method is different from [ngx.redirect]</p><p>Also note that this method call terminates the processing of the current request and that it <em>must</em> be called before [ngx.send_headers]</p><p>It is recommended that a coding style that combines this method call with the <code>return</code> statement, i.e., <code>return ngx.exec(...)</code>be adopted when this method call is used in contexts other than [header_filter_by_lua*]</p><h2><span id="ngxredirect">ngx.redirect</span></h2><p><strong>syntax:</strong> <em>ngx.redirect(uri, status?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Issue an <code>HTTP 301</code> or <code>302</code> redirection to <code>uri</code>.</p><p>The optional <code>status</code> parameter specifies the HTTP status code to be used. The following status codes are supported right now:</p><ul><li><code>301</code></li><li><code>302</code> (default)</li><li><code>303</code></li><li><code>307</code></li><li><code>308</code></li></ul><p>It is <code>302</code> (<code>ngx.HTTP_MOVED_TEMPORARILY</code>) by default.</p><p>Here is an example assuming the current server name is <code>localhost</code> and that it is listening on port 1984:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&quot;/foo&quot;)</span><br></pre></td></tr></table></figure><p>which is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&quot;/foo&quot;, ngx.HTTP_MOVED_TEMPORARILY)</span><br></pre></td></tr></table></figure><p>Redirecting arbitrary external URLs is also supported, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&quot;http://www.google.com&quot;)</span><br></pre></td></tr></table></figure><p>We can also use the numerical code directly as the second <code>status</code> argument:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&quot;/foo&quot;, 301)</span><br></pre></td></tr></table></figure><p>This method is similar to the <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" target="_blank" rel="noopener">rewrite</a> directive with the <code>redirect</code> modifier in the standard <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">ngx_http_rewrite_module</a>, for example, this <code>nginx.conf</code> snippet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^ /foo? redirect;  # nginx config</span><br></pre></td></tr></table></figure><p>is equivalent to the following Lua code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&apos;/foo&apos;);  -- Lua code</span><br></pre></td></tr></table></figure><p>while</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^ /foo? permanent;  # nginx config</span><br></pre></td></tr></table></figure><p>is equivalent to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&apos;/foo&apos;, ngx.HTTP_MOVED_PERMANENTLY)  -- Lua code</span><br></pre></td></tr></table></figure><p>URI arguments can be specified as well, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return ngx.redirect(&apos;/foo?a=3&amp;b=4&apos;)</span><br></pre></td></tr></table></figure><p>Note that this method call terminates the processing of the current request and that it <em>must</em> be called before [ngx.send_headers]</p><p>It is recommended that a coding style that combines this method call with the <code>return</code> statement, i.e., <code>return ngx.redirect(...)</code> be adopted when this method call is used in contexts other than [header_filter_by_lua*]</p><h2><span id="ngxsend_headers">ngx.send_headers</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.send_headers()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Explicitly send out the response headers.</p><p>Since <code>v0.8.3</code> this function returns <code>1</code> on success, or returns <code>nil</code> and a string describing the error otherwise.</p><p>Note that there is normally no need to manually send out response headers as ngx_lua will automatically send headers out before content is output with [ngx.say]</p><h2><span id="ngxheaders_sent">ngx.headers_sent</span></h2><p><strong>syntax:</strong> <em>value = ngx.headers_sent</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Returns <code>true</code> if the response headers have been sent (by ngx_lua), and <code>false</code> otherwise.</p><p>This API was first introduced in ngx_lua v0.3.1rc6.</p><h2><span id="ngxprint">ngx.print</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.print(…)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Emits arguments concatenated to the HTTP client (as response body). If response headers have not been sent, this function will send headers out first and then output body data.</p><p>Since <code>v0.8.3</code> this function returns <code>1</code> on success, or returns <code>nil</code> and a string describing the error otherwise.</p><p>Lua <code>nil</code> values will output <code>&quot;nil&quot;</code> strings and Lua boolean values will output <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code> literal strings respectively.</p><p>Nested arrays of strings are permitted and the elements in the arrays will be sent one by one:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local table = &#123;</span><br><span class="line">    &quot;hello, &quot;,</span><br><span class="line">    &#123;&quot;world: &quot;, true, &quot; or &quot;, false,</span><br><span class="line">        &#123;&quot;: &quot;, nil&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">ngx.print(table)</span><br></pre></td></tr></table></figure><p>will yield the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello, world: true or false: nil</span><br></pre></td></tr></table></figure><p>Non-array table arguments will cause a Lua exception to be thrown.</p><p>The <code>ngx.null</code> constant will yield the <code>&quot;null&quot;</code> string output.</p><p>This is an asynchronous call and will return immediately without waiting for all the data to be written into the system send buffer. To run in synchronous mode, call <code>ngx.flush(true)</code> after calling <code>ngx.print</code>. This can be particularly useful for streaming output. See [ngx.flush]</p><p>Please note that both <code>ngx.print</code> and [ngx.say] will always invoke the whole Nginx output body filter chain, which is an expensive operation. So be careful when calling either of these two in a tight loop; buffer the data yourself in Lua and save the calls.</p><h2><span id="ngxsay">ngx.say</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.say(…)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Just as [ngx.print]</p><h2><span id="ngxlog">ngx.log</span></h2><p><strong>syntax:</strong> <em>ngx.log(log_level, …)</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Log arguments concatenated to error.log with the given logging level.</p><p>Lua <code>nil</code> arguments are accepted and result in literal <code>&quot;nil&quot;</code> string while Lua booleans result in literal <code>&quot;true&quot;</code> or <code>&quot;false&quot;</code>string outputs. And the <code>ngx.null</code> constant will yield the <code>&quot;null&quot;</code> string output.</p><p>The <code>log_level</code> argument can take constants like <code>ngx.ERR</code> and <code>ngx.WARN</code>. Check out [Nginx log level constants]</p><p>There is a hard coded <code>2048</code> byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the <code>NGX_MAX_ERROR_STR</code> macro definition in the <code>src/core/ngx_log.h</code> file in the Nginx source tree.</p><h2><span id="ngxflush">ngx.flush</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.flush(wait?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Flushes response output to the client.</p><p><code>ngx.flush</code> accepts an optional boolean <code>wait</code> argument (Default: <code>false</code>) first introduced in the <code>v0.3.1rc34</code> release. When called with the default argument, it issues an asynchronous call (Returns immediately without waiting for output data to be written into the system send buffer). Calling the function with the <code>wait</code> argument set to <code>true</code> switches to synchronous mode.</p><p>In synchronous mode, the function will not return until all output data has been written into the system send buffer or until the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout" target="_blank" rel="noopener">send_timeout</a> setting has expired. Note that using the Lua coroutine mechanism means that this function does not block the Nginx event loop even in the synchronous mode.</p><p>When <code>ngx.flush(true)</code> is called immediately after [ngx.print]</p><p>Note that <code>ngx.flush</code> is not functional when in the HTTP 1.0 output buffering mode. See [HTTP 1.0 support]</p><p>Since <code>v0.8.3</code> this function returns <code>1</code> on success, or returns <code>nil</code> and a string describing the error otherwise.</p><h2><span id="ngxexit">ngx.exit</span></h2><p><strong>syntax:</strong> <em>ngx.exit(status)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>When <code>status &gt;= 200</code> (i.e., <code>ngx.HTTP_OK</code> and above), it will interrupt the execution of the current request and return status code to nginx.</p><p>When <code>status == 0</code> (i.e., <code>ngx.OK</code>), it will only quit the current phase handler (or the content handler if the [content_by_lua*]</p><p>The <code>status</code> argument can be <code>ngx.OK</code>, <code>ngx.ERROR</code>, <code>ngx.HTTP_NOT_FOUND</code>, <code>ngx.HTTP_MOVED_TEMPORARILY</code>, or other [HTTP status constants]</p><p>To return an error page with custom contents, use code snippets like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ngx.status = ngx.HTTP_GONE</span><br><span class="line">ngx.say(&quot;This is our own content&quot;)</span><br><span class="line">-- to cause quit the whole request rather than the current phase handler</span><br><span class="line">ngx.exit(ngx.HTTP_OK)</span><br></pre></td></tr></table></figure><p>The effect in action:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i http://localhost/test</span><br><span class="line">HTTP/1.1 410 Gone</span><br><span class="line">Server: nginx/1.0.6</span><br><span class="line">Date: Thu, 15 Sep 2011 00:51:48 GMT</span><br><span class="line">Content-Type: text/plain</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">This is our own content</span><br></pre></td></tr></table></figure><p>Number literals can be used directly as the argument, for instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.exit(501)</span><br></pre></td></tr></table></figure><p>Note that while this method accepts all [HTTP status constants]</p><p>Also note that this method call terminates the processing of the current request and that it is recommended that a coding style that combines this method call with the <code>return</code> statement, i.e., <code>return ngx.exit(...)</code> be used to reinforce the fact that the request processing is being terminated.</p><p>When being used in the contexts of [header_filter_by_lua*]</p><h2><span id="ngxeof">ngx.eof</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.eof()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Explicitly specify the end of the response output stream. In the case of HTTP 1.1 chunked encoded output, it will just trigger the Nginx core to send out the “last chunk”.</p><p>When you disable the HTTP 1.1 keep-alive feature for your downstream connections, you can rely on well written HTTP clients to close the connection actively for you when you call this method. This trick can be used do back-ground jobs without letting the HTTP clients to wait on the connection, as in the following example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location = /async &#123;</span><br><span class="line">    keepalive_timeout 0;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(&quot;got the task!&quot;)</span><br><span class="line">        ngx.eof()  -- well written HTTP clients will close the connection at this point</span><br><span class="line">        -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>But if you create subrequests to access other locations configured by Nginx upstream modules, then you should configure those upstream modules to ignore client connection abortions if they are not by default. For example, by default the standard <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener">ngx_http_proxy_module</a> will terminate both the subrequest and the main request as soon as the client closes the connection, so it is important to turn on the <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort" target="_blank" rel="noopener">proxy_ignore_client_abort</a> directive in your location block configured by <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener">ngx_http_proxy_module</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_ignore_client_abort on;</span><br></pre></td></tr></table></figure><p>A better way to do background jobs is to use the [ngx.timer.at]</p><p>Since <code>v0.8.3</code> this function returns <code>1</code> on success, or returns <code>nil</code> and a string describing the error otherwise.</p><h2><span id="ngxsleep">ngx.sleep</span></h2><p><strong>syntax:</strong> <em>ngx.sleep(seconds)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Sleeps for the specified seconds without blocking. One can specify time resolution up to 0.001 seconds (i.e., one milliseconds).</p><p>Behind the scene, this method makes use of the Nginx timers.</p><p>Since the <code>0.7.20</code> release, The <code>0</code> time argument can also be specified.</p><p>This method was introduced in the <code>0.5.0rc30</code> release.</p><h2><span id="ngxescape_uri">ngx.escape_uri</span></h2><p><strong>syntax:</strong> <em>newstr = ngx.escape_uri(str)</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Escape <code>str</code> as a URI component.</p><h2><span id="ngxunescape_uri">ngx.unescape_uri</span></h2><p><strong>syntax:</strong> <em>newstr = ngx.unescape_uri(str)</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*</p><p>Unescape <code>str</code> as an escaped URI component.</p><p>For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.say(ngx.unescape_uri(&quot;b%20r56+7&quot;))</span><br></pre></td></tr></table></figure><p>gives the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b r56 7</span><br></pre></td></tr></table></figure><h2><span id="ngxencode_args">ngx.encode_args</span></h2><p><strong>syntax:</strong> <em>str = ngx.encode_args(table)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*</p><p>Encode the Lua table to a query args string according to the URI encoded rules.</p><p>For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.encode_args(&#123;foo = 3, [&quot;b r&quot;] = &quot;hello world&quot;&#125;)</span><br></pre></td></tr></table></figure><p>yields</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo=3&amp;b%20r=hello%20world</span><br></pre></td></tr></table></figure><p>The table keys must be Lua strings.</p><p>Multi-value query args are also supported. Just use a Lua table for the argument’s value, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.encode_args(&#123;baz = &#123;32, &quot;hello&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><p>gives</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baz=32&amp;baz=hello</span><br></pre></td></tr></table></figure><p>If the value table is empty and the effect is equivalent to the <code>nil</code> value.</p><p>Boolean argument values are also supported, for instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngx.encode_args(&#123;a = true, b = 1&#125;)</span><br></pre></td></tr></table></figure><p>yields</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&amp;b=1</span><br></pre></td></tr></table></figure><p>If the argument value is <code>false</code>, then the effect is equivalent to the <code>nil</code> value.</p><p>This method was first introduced in the <code>v0.3.1rc27</code> release.</p><h2><span id="ngxdecode_args">ngx.decode_args</span></h2><p><strong>syntax:</strong> <em>table, err = ngx.decode_args(str, max_args?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Decodes a URI encoded query-string into a Lua table. This is the inverse function of [ngx.encode_args]</p><p>The optional <code>max_args</code> argument can be used to specify the maximum number of arguments parsed from the <code>str</code>argument. By default, a maximum of 100 request arguments are parsed (including those with the same name) and that additional URI arguments are silently discarded to guard against potential denial of service attacks. Since <code>v0.10.13</code>, when the limit is exceeded, it will return a second value which is the string <code>&quot;truncated&quot;</code>.</p><p>This argument can be set to zero to remove the limit and to process all request arguments received:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local args = ngx.decode_args(str, 0)</span><br></pre></td></tr></table></figure><p>Removing the <code>max_args</code> cap is strongly discouraged.</p><p>This method was introduced in the <code>v0.5.0rc29</code>.</p><h2><span id="ngxencode_base64">ngx.encode_base64</span></h2><p><strong>syntax:</strong> <em>newstr = ngx.encode_base64(str, no_padding?)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Encodes <code>str</code> to a base64 digest.</p><p>Since the <code>0.9.16</code> release, an optional boolean-typed <code>no_padding</code> argument can be specified to control whether the base64 padding should be appended to the resulting digest (default to <code>false</code>, i.e., with padding enabled).</p><h2><span id="ngxdecode_base64">ngx.decode_base64</span></h2><p><strong>syntax:</strong> <em>newstr = ngx.decode_base64(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Decodes the <code>str</code> argument as a base64 digest to the raw form. Returns <code>nil</code> if <code>str</code> is not well formed.</p><h2><span id="ngxcrc32_short">ngx.crc32_short</span></h2><p><strong>syntax:</strong> <em>intval = ngx.crc32_short(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Calculates the CRC-32 (Cyclic Redundancy Code) digest for the <code>str</code> argument.</p><p>This method performs better on relatively short <code>str</code> inputs (i.e., less than 30 ~ 60 bytes), as compared to [ngx.crc32_long]</p><p>Behind the scene, it is just a thin wrapper around the <code>ngx_crc32_short</code> function defined in the Nginx core.</p><p>This API was first introduced in the <code>v0.3.1rc8</code> release.</p><h2><span id="ngxcrc32_long">ngx.crc32_long</span></h2><p><strong>syntax:</strong> <em>intval = ngx.crc32_long(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Calculates the CRC-32 (Cyclic Redundancy Code) digest for the <code>str</code> argument.</p><p>This method performs better on relatively long <code>str</code> inputs (i.e., longer than 30 ~ 60 bytes), as compared to [ngx.crc32_short]</p><p>Behind the scene, it is just a thin wrapper around the <code>ngx_crc32_long</code> function defined in the Nginx core.</p><p>This API was first introduced in the <code>v0.3.1rc8</code> release.</p><h2><span id="ngxhmac_sha1">ngx.hmac_sha1</span></h2><p><strong>syntax:</strong> <em>digest = ngx.hmac_sha1(secret_key, str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Computes the <a href="http://en.wikipedia.org/wiki/HMAC" target="_blank" rel="noopener">HMAC-SHA1</a> digest of the argument <code>str</code> and turns the result using the secret key <code>&lt;secret_key&gt;</code>.</p><p>The raw binary form of the <code>HMAC-SHA1</code> digest will be generated, use [ngx.encode_base64]</p><p>For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local key = &quot;thisisverysecretstuff&quot;</span><br><span class="line">local src = &quot;some string we want to sign&quot;</span><br><span class="line">local digest = ngx.hmac_sha1(key, src)</span><br><span class="line">ngx.say(ngx.encode_base64(digest))</span><br></pre></td></tr></table></figure><p>yields the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R/pvxzHC4NLtj7S+kXFg/NePTmk=</span><br></pre></td></tr></table></figure><p>This API requires the OpenSSL library enabled in the Nginx build (usually by passing the <code>--with-http_ssl_module</code> option to the <code>./configure</code> script).</p><p>This function was first introduced in the <code>v0.3.1rc29</code> release.</p><h2><span id="ngxmd5">ngx.md5</span></h2><p><strong>syntax:</strong> <em>digest = ngx.md5(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the hexadecimal representation of the MD5 digest of the <code>str</code> argument.</p><p>For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location = /md5 &#123;</span><br><span class="line">    content_by_lua_block &#123; ngx.say(ngx.md5(&quot;hello&quot;)) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>yields the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5d41402abc4b2a76b9719d911017c592</span><br></pre></td></tr></table></figure><p>See [ngx.md5_bin]</p><h2><span id="ngxmd5_bin">ngx.md5_bin</span></h2><p><strong>syntax:</strong> <em>digest = ngx.md5_bin(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the binary form of the MD5 digest of the <code>str</code> argument.</p><p>See [ngx.md5]</p><h2><span id="ngxsha1_bin">ngx.sha1_bin</span></h2><p><strong>syntax:</strong> <em>digest = ngx.sha1_bin(str)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the binary form of the SHA-1 digest of the <code>str</code> argument.</p><p>This function requires SHA-1 support in the Nginx build. (This usually just means OpenSSL should be installed while building Nginx).</p><p>This function was first introduced in the <code>v0.5.0rc6</code>.</p><h2><span id="ngxquote_sql_str">ngx.quote_sql_str</span></h2><p><strong>syntax:</strong> <em>quoted_value = ngx.quote_sql_str(raw_value)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns a quoted SQL string literal according to the MySQL quoting rules.</p><h2><span id="ngxtoday">ngx.today</span></h2><p><strong>syntax:</strong> <em>str = ngx.today()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns current date (in the format <code>yyyy-mm-dd</code>) from the nginx cached time (no syscall involved unlike Lua’s date library).</p><p>This is the local time.</p><h2><span id="ngxtime">ngx.time</span></h2><p><strong>syntax:</strong> <em>secs = ngx.time()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the elapsed seconds from the epoch for the current time stamp from the nginx cached time (no syscall involved unlike Lua’s date library).</p><p>Updates of the Nginx time cache can be forced by calling [ngx.update_time]</p><h2><span id="ngxnow">ngx.now</span></h2><p><strong>syntax:</strong> <em>secs = ngx.now()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the nginx cached time (no syscall involved unlike Lua’s date library).</p><p>You can forcibly update the Nginx time cache by calling [ngx.update_time]</p><p>This API was first introduced in <code>v0.3.1rc32</code>.</p><h2><span id="ngxupdate_time">ngx.update_time</span></h2><p><strong>syntax:</strong> <em>ngx.update_time()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.</p><p>This API was first introduced in <code>v0.3.1rc32</code>.</p><h2><span id="ngxlocaltime">ngx.localtime</span></h2><p><strong>syntax:</strong> <em>str = ngx.localtime()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the current time stamp (in the format <code>yyyy-mm-dd hh:mm:ss</code>) of the nginx cached time (no syscall involved unlike Lua’s <a href="http://www.lua.org/manual/5.1/manual.html#pdf-os.date" target="_blank" rel="noopener">os.date</a> function).</p><p>This is the local time.</p><h2><span id="ngxutctime">ngx.utctime</span></h2><p><strong>syntax:</strong> <em>str = ngx.utctime()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the current time stamp (in the format <code>yyyy-mm-dd hh:mm:ss</code>) of the nginx cached time (no syscall involved unlike Lua’s <a href="http://www.lua.org/manual/5.1/manual.html#pdf-os.date" target="_blank" rel="noopener">os.date</a> function).</p><p>This is the UTC time.</p><h2><span id="ngxcookie_time">ngx.cookie_time</span></h2><p><strong>syntax:</strong> <em>str = ngx.cookie_time(sec)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns a formatted string can be used as the cookie expiration time. The parameter <code>sec</code> is the time stamp in seconds (like those returned from [ngx.time]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.say(ngx.cookie_time(1290079655))</span><br><span class="line">    -- yields &quot;Thu, 18-Nov-10 11:27:35 GMT&quot;</span><br></pre></td></tr></table></figure><h2><span id="ngxhttp_time">ngx.http_time</span></h2><p><strong>syntax:</strong> <em>str = ngx.http_time(sec)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns a formated string can be used as the http header time (for example, being used in <code>Last-Modified</code> header). The parameter <code>sec</code> is the time stamp in seconds (like those returned from [ngx.time]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ngx.say(ngx.http_time(1290079655))</span><br><span class="line">    -- yields &quot;Thu, 18 Nov 2010 11:27:35 GMT&quot;</span><br></pre></td></tr></table></figure><h2><span id="ngxparse_http_time">ngx.parse_http_time</span></h2><p><strong>syntax:</strong> <em>sec = ngx.parse_http_time(str)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Parse the http time string (as returned by [ngx.http_time]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local time = ngx.parse_http_time(&quot;Thu, 18 Nov 2010 11:27:35 GMT&quot;)</span><br><span class="line">if time == nil then</span><br><span class="line">    ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2><span id="ngxis_subrequest">ngx.is_subrequest</span></h2><p><strong>syntax:</strong> <em>value = ngx.is_subrequest</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*</p><p>Returns <code>true</code> if the current request is an nginx subrequest, or <code>false</code> otherwise.</p><h2><span id="ngxrematch">ngx.re.match</span></h2><p><strong>syntax:</strong> <em>captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Matches the <code>subject</code> string using the Perl compatible regular expression <code>regex</code> with the optional <code>options</code>.</p><p>Only the first occurrence of the match is returned, or <code>nil</code> if no match is found. In case of errors, like seeing a bad regular expression or exceeding the PCRE stack limit, <code>nil</code> and a string describing the error will be returned.</p><p>When a match is found, a Lua table <code>captures</code> is returned, where <code>captures[0]</code> holds the whole substring being matched, and <code>captures[1]</code> holds the first parenthesized sub-pattern’s capturing, <code>captures[2]</code> the second, and so on.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">local m, err = ngx.re.match(&quot;hello, 1234&quot;, &quot;[0-9]+&quot;)</span><br><span class="line">if m then</span><br><span class="line">    -- m[0] == &quot;1234&quot;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">    if err then</span><br><span class="line">        ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    ngx.say(&quot;match not found&quot;)</span><br><span class="line">end</span><br><span class="line">local m, err = ngx.re.match(&quot;hello, 1234&quot;, &quot;([0-9])[0-9]+&quot;)</span><br><span class="line">-- m[0] == &quot;1234&quot;</span><br><span class="line">-- m[1] == &quot;1&quot;</span><br></pre></td></tr></table></figure><p>Named captures are also supported since the <code>v0.7.14</code> release and are returned in the same Lua table as key-value pairs as the numbered captures.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local m, err = ngx.re.match(&quot;hello, 1234&quot;, &quot;([0-9][$1]?&lt;remaining&gt;[0-9]+)&quot;)</span><br><span class="line">-- m[0] == &quot;1234&quot;</span><br><span class="line">-- m[1] == &quot;1&quot;</span><br><span class="line">-- m[2] == &quot;234&quot;</span><br><span class="line">-- m[&quot;remaining&quot;] == &quot;234&quot;</span><br></pre></td></tr></table></figure><p>Unmatched subpatterns will have <code>false</code> values in their <code>captures</code> table fields.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local m, err = ngx.re.match(&quot;hello, world&quot;, &quot;(world)|(hello)|(?&lt;named&gt;howdy)&quot;)</span><br><span class="line">-- m[0] == &quot;hello&quot;</span><br><span class="line">-- m[1] == false</span><br><span class="line">-- m[2] == &quot;hello&quot;</span><br><span class="line">-- m[3] == false</span><br><span class="line">-- m[&quot;named&quot;] == false</span><br></pre></td></tr></table></figure><p>Specify <code>options</code> to control how the match operation will be performed. The following option characters are supported:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">a             anchored mode (only match from the beginning)</span><br><span class="line"></span><br><span class="line">d             enable the DFA mode (or the longest token match semantics).</span><br><span class="line">              this requires PCRE 6.0+ or else a Lua exception will be thrown.</span><br><span class="line">              first introduced in ngx_lua v0.3.1rc30.</span><br><span class="line"></span><br><span class="line">D             enable duplicate named pattern support. This allows named</span><br><span class="line">              subpattern names to be repeated, returning the captures in</span><br><span class="line">              an array-like Lua table. for example,</span><br><span class="line">                local m = ngx.re.match(&quot;hello, world&quot;,</span><br><span class="line">                                       &quot;(?&lt;named&gt;\w+), (?&lt;named&gt;\w+)&quot;,</span><br><span class="line">                                       &quot;D&quot;)</span><br><span class="line">                -- m[&quot;named&quot;] == &#123;&quot;hello&quot;, &quot;world&quot;&#125;</span><br><span class="line">              this option was first introduced in the v0.7.14 release.</span><br><span class="line">              this option requires at least PCRE 8.12.</span><br><span class="line"></span><br><span class="line">i             case insensitive mode (similar to Perl&apos;s /i modifier)</span><br><span class="line"></span><br><span class="line">j             enable PCRE JIT compilation, this requires PCRE 8.21+ which</span><br><span class="line">              must be built with the --enable-jit option. for optimum performance,</span><br><span class="line">              this option should always be used together with the &apos;o&apos; option.</span><br><span class="line">              first introduced in ngx_lua v0.3.1rc30.</span><br><span class="line"></span><br><span class="line">J             enable the PCRE Javascript compatible mode. this option was</span><br><span class="line">              first introduced in the v0.7.14 release. this option requires</span><br><span class="line">              at least PCRE 8.12.</span><br><span class="line"></span><br><span class="line">m             multi-line mode (similar to Perl&apos;s /m modifier)</span><br><span class="line"></span><br><span class="line">o             compile-once mode (similar to Perl&apos;s /o modifier),</span><br><span class="line">              to enable the worker-process-level compiled-regex cache</span><br><span class="line"></span><br><span class="line">s             single-line mode (similar to Perl&apos;s /s modifier)</span><br><span class="line"></span><br><span class="line">u             UTF-8 mode. this requires PCRE to be built with</span><br><span class="line">              the --enable-utf8 option or else a Lua exception will be thrown.</span><br><span class="line"></span><br><span class="line">U             similar to &quot;u&quot; but disables PCRE&apos;s UTF-8 validity check on</span><br><span class="line">              the subject string. first introduced in ngx_lua v0.8.1.</span><br><span class="line"></span><br><span class="line">x             extended mode (similar to Perl&apos;s /x modifier)</span><br></pre></td></tr></table></figure><p>These options can be combined:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local m, err = ngx.re.match(&quot;hello, world&quot;, &quot;HEL LO&quot;, &quot;ix&quot;)</span><br><span class="line">-- m[0] == &quot;hello&quot;</span><br><span class="line">local m, err = ngx.re.match(&quot;hello, 美好生活&quot;, &quot;HELLO, (.&#123;2&#125;)&quot;, &quot;iu&quot;)</span><br><span class="line">-- m[0] == &quot;hello, 美好&quot;</span><br><span class="line">-- m[1] == &quot;美好&quot;</span><br></pre></td></tr></table></figure><p>The <code>o</code> option is useful for performance tuning, because the regex pattern in question will only be compiled once, cached in the worker-process level, and shared among all requests in the current Nginx worker process. The upper limit of the regex cache can be tuned via the [lua_regex_cache_max_entries]</p><p>The optional fourth argument, <code>ctx</code>, can be a Lua table holding an optional <code>pos</code> field. When the <code>pos</code> field in the <code>ctx</code> table argument is specified, <code>ngx.re.match</code> will start matching from that offset (starting from 1). Regardless of the presence of the <code>pos</code> field in the <code>ctx</code> table, <code>ngx.re.match</code> will always set this <code>pos</code> field to the position <em>after</em> the substring matched by the whole pattern in case of a successful match. When match fails, the <code>ctx</code> table will be left intact.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">local ctx = &#123;&#125;</span><br><span class="line">local m, err = ngx.re.match(&quot;1234, hello&quot;, &quot;[0-9]+&quot;, &quot;&quot;, ctx)</span><br><span class="line">     -- m[0] = &quot;1234&quot;</span><br><span class="line">     -- ctx.pos == 5</span><br><span class="line">local ctx = &#123; pos = 2 &#125;</span><br><span class="line">local m, err = ngx.re.match(&quot;1234, hello&quot;, &quot;[0-9]+&quot;, &quot;&quot;, ctx)</span><br><span class="line">     -- m[0] = &quot;234&quot;</span><br><span class="line">     -- ctx.pos == 5</span><br></pre></td></tr></table></figure><p>The <code>ctx</code> table argument combined with the <code>a</code> regex modifier can be used to construct a lexer atop <code>ngx.re.match</code>.</p><p>Note that, the <code>options</code> argument is not optional when the <code>ctx</code> argument is specified and that the empty Lua string (<code>&quot;&quot;</code>) must be used as placeholder for <code>options</code> if no meaningful regex options are required.</p><p>This method requires the PCRE library enabled in Nginx. ([Known Issue With Special Escaping Sequences]</p><p>To confirm that PCRE JIT is enabled, activate the Nginx debug log by adding the <code>--with-debug</code> option to Nginx or OpenResty’s <code>./configure</code> script. Then, enable the “debug” error log level in <code>error_log</code> directive. The following message will be generated if PCRE JIT is enabled:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcre JIT compiling result: 1</span><br></pre></td></tr></table></figure><p>Starting from the <code>0.9.4</code> release, this function also accepts a 5th argument, <code>res_table</code>, for letting the caller supply the Lua table used to hold all the capturing results. Starting from <code>0.9.6</code>, it is the caller’s responsibility to ensure this table is empty. This is very useful for recycling Lua tables and saving GC and table allocation overhead.</p><p>This feature was introduced in the <code>v0.2.1rc11</code> release.</p><h2><span id="ngxrefind">ngx.re.find</span></h2><p><strong>syntax:</strong> <em>from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to [ngx.re.match]</p><p>In case of errors (like bad regexes or any PCRE runtime errors), this API function returns two <code>nil</code> values followed by a string describing the error.</p><p>If no match is found, this function just returns a <code>nil</code> value.</p><p>Below is an example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">local s = &quot;hello, 1234&quot;</span><br><span class="line">local from, to, err = ngx.re.find(s, &quot;([0-9]+)&quot;, &quot;jo&quot;)</span><br><span class="line">if from then</span><br><span class="line">    ngx.say(&quot;from: &quot;, from)</span><br><span class="line">    ngx.say(&quot;to: &quot;, to)</span><br><span class="line">    ngx.say(&quot;matched: &quot;, string.sub(s, from, to))</span><br><span class="line">else</span><br><span class="line">    if err then</span><br><span class="line">        ngx.say(&quot;error: &quot;, err)</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line">    ngx.say(&quot;not matched!&quot;)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This example produces the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from: 8</span><br><span class="line">to: 11</span><br><span class="line">matched: 1234</span><br></pre></td></tr></table></figure><p>Because this API function does not create new Lua strings nor new Lua tables, it is much faster than [ngx.re.match]</p><p>Since the <code>0.9.3</code> release, an optional 5th argument, <code>nth</code>, is supported to specify which (submatch) capture’s indexes to return. When <code>nth</code> is 0 (which is the default), the indexes for the whole matched substring is returned; when <code>nth</code> is 1, then the 1st submatch capture’s indexes are returned; when <code>nth</code> is 2, then the 2nd submatch capture is returned, and so on. When the specified submatch does not have a match, then two <code>nil</code> values will be returned. Below is an example for this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local str = &quot;hello, 1234&quot;</span><br><span class="line">local from, to = ngx.re.find(str, &quot;([0-9][$1][0-9]+)&quot;, &quot;jo&quot;, nil, 2)</span><br><span class="line">if from then</span><br><span class="line">    ngx.say(&quot;matched 2nd submatch: &quot;, string.sub(str, from, to))  -- yields &quot;234&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>This API function was first introduced in the <code>v0.9.2</code> release.</p><h2><span id="ngxregmatch">ngx.re.gmatch</span></h2><p><strong>syntax:</strong> <em>iterator, err = ngx.re.gmatch(subject, regex, options?)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to [ngx.re.match]</p><p>In case of errors, like seeing an ill-formed regular expression, <code>nil</code> and a string describing the error will be returned.</p><p>Here is a small example to demonstrate its basic usage:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">local iterator, err = ngx.re.gmatch(&quot;hello, world!&quot;, &quot;([a-z]+)&quot;, &quot;i&quot;)</span><br><span class="line">if not iterator then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local m</span><br><span class="line">m, err = iterator()    -- m[0] == m[1] == &quot;hello&quot;</span><br><span class="line">if err then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">m, err = iterator()    -- m[0] == m[1] == &quot;world&quot;</span><br><span class="line">if err then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">m, err = iterator()    -- m == nil</span><br><span class="line">if err then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>More often we just put it into a Lua loop:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">local it, err = ngx.re.gmatch(&quot;hello, world!&quot;, &quot;([a-z]+)&quot;, &quot;i&quot;)</span><br><span class="line">if not it then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">while true do</span><br><span class="line">    local m, err = it()</span><br><span class="line">    if err then</span><br><span class="line">        ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    if not m then</span><br><span class="line">        -- no match found (any more)</span><br><span class="line">        break</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    -- found a match</span><br><span class="line">    ngx.say(m[0])</span><br><span class="line">    ngx.say(m[1])</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>The optional <code>options</code> argument takes exactly the same semantics as the [ngx.re.match]</p><p>The current implementation requires that the iterator returned should only be used in a single request. That is, one should <em>not</em>assign it to a variable belonging to persistent namespace like a Lua package.</p><p>This method requires the PCRE library enabled in Nginx. ([Known Issue With Special Escaping Sequences]</p><p>This feature was first introduced in the <code>v0.2.1rc12</code> release.</p><h2><span id="ngxresub">ngx.re.sub</span></h2><p><strong>syntax:</strong> <em>newstr, n, err = ngx.re.sub(subject, regex, replace, options?)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Substitutes the first match of the Perl compatible regular expression <code>regex</code> on the <code>subject</code> argument string with the string or function argument <code>replace</code>. The optional <code>options</code> argument has exactly the same meaning as in [ngx.re.match]</p><p>This method returns the resulting new string as well as the number of successful substitutions. In case of failures, like syntax errors in the regular expressions or the <code>&lt;replace&gt;</code> string argument, it will return <code>nil</code> and a string describing the error.</p><p>When the <code>replace</code> is a string, then it is treated as a special template for string replacement. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">local newstr, n, err = ngx.re.sub(&quot;hello, 1234&quot;, &quot;([0-9])[0-9]&quot;, &quot;[$0][$1]&quot;)</span><br><span class="line">if newstr then</span><br><span class="line">    -- newstr == &quot;hello, [12][1]34&quot;</span><br><span class="line">    -- n == 1</span><br><span class="line">else</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>where <code>$0</code> referring to the whole substring matched by the pattern and <code>$1</code> referring to the first parenthesized capturing substring.</p><p>Curly braces can also be used to disambiguate variable names from the background string literals:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local newstr, n, err = ngx.re.sub(&quot;hello, 1234&quot;, &quot;[0-9]&quot;, &quot;$&#123;0&#125;00&quot;)</span><br><span class="line">    -- newstr == &quot;hello, 100234&quot;</span><br><span class="line">    -- n == 1</span><br></pre></td></tr></table></figure><p>Literal dollar sign characters (<code>$</code>) in the <code>replace</code> string argument can be escaped by another dollar sign, for instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local newstr, n, err = ngx.re.sub(&quot;hello, 1234&quot;, &quot;[0-9]&quot;, &quot;$$&quot;)</span><br><span class="line">    -- newstr == &quot;hello, $234&quot;</span><br><span class="line">    -- n == 1</span><br></pre></td></tr></table></figure><p>Do not use backlashes to escape dollar signs; it will not work as expected.</p><p>When the <code>replace</code> argument is of type “function”, then it will be invoked with the “match table” as the argument to generate the replace string literal for substitution. The “match table” fed into the <code>replace</code> function is exactly the same as the return value of [ngx.re.match]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local func = function (m)</span><br><span class="line">    return &quot;[&quot; .. m[0] .. &quot;][&quot; .. m[1] .. &quot;]&quot;</span><br><span class="line">end</span><br><span class="line">local newstr, n, err = ngx.re.sub(&quot;hello, 1234&quot;, &quot;( [0-9] ) [0-9]&quot;, func, &quot;x&quot;)</span><br><span class="line">    -- newstr == &quot;hello, [12][1]34&quot;</span><br><span class="line">    -- n == 1</span><br></pre></td></tr></table></figure><p>The dollar sign characters in the return value of the <code>replace</code> function argument are not special at all.</p><p>This method requires the PCRE library enabled in Nginx. ([Known Issue With Special Escaping Sequences]</p><p>This feature was first introduced in the <code>v0.2.1rc13</code> release.</p><h2><span id="ngxregsub">ngx.re.gsub</span></h2><p><strong>syntax:</strong> <em>newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Just like [ngx.re.sub]</p><p>Here is some examples:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">local newstr, n, err = ngx.re.gsub(&quot;hello, world&quot;, &quot;([a-z])[a-z]+&quot;, &quot;[$0,$1]&quot;, &quot;i&quot;)</span><br><span class="line">if newstr then</span><br><span class="line">    -- newstr == &quot;[hello,h], [world,w]&quot;</span><br><span class="line">    -- n == 2</span><br><span class="line">else</span><br><span class="line">    ngx.log(ngx.ERR, &quot;error: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line">local func = function (m)</span><br><span class="line">    return &quot;[&quot; .. m[0] .. &quot;,&quot; .. m[1] .. &quot;]&quot;</span><br><span class="line">end</span><br><span class="line">local newstr, n, err = ngx.re.gsub(&quot;hello, world&quot;, &quot;([a-z])[a-z]+&quot;, func, &quot;i&quot;)</span><br><span class="line">    -- newstr == &quot;[hello,h], [world,w]&quot;</span><br><span class="line">    -- n == 2</span><br></pre></td></tr></table></figure><p>This method requires the PCRE library enabled in Nginx. ([Known Issue With Special Escaping Sequences]</p><p>This feature was first introduced in the <code>v0.2.1rc15</code> release.</p><h2><span id="ngxshareddict">ngx.shared.DICT</span></h2><p><strong>syntax:</strong> <em>dict = ngx.shared.DICT</em></p><p><strong>syntax:</strong> <em>dict = ngx.shared[name_var]</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Fetching the shm-based Lua dictionary object for the shared memory zone named <code>DICT</code> defined by the [lua_shared_dict]</p><p>Shared memory zones are always shared by all the nginx worker processes in the current nginx server instance.</p><p>The resulting object <code>dict</code> has the following methods:</p><ul><li>[get]</li><li>[get_stale]</li><li>[set]</li><li>[safe_set]</li><li>[add]</li><li>[safe_add]</li><li>[replace]</li><li>[delete]</li><li>[incr]</li><li>[lpush]</li><li>[rpush]</li><li>[lpop]</li><li>[rpop]</li><li>[llen]</li><li>[ttl]</li><li>[expire]</li><li>[flush_all]</li><li>[flush_expired]</li><li>[get_keys]</li><li>[capacity]</li><li>[free_space]</li></ul><p>All these methods are <em>atomic</em> operations, that is, safe from concurrent accesses from multiple nginx worker processes for the same <code>lua_shared_dict</code> zone.</p><p>Here is an example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    lua_shared_dict dogs 10m;</span><br><span class="line">    server &#123;</span><br><span class="line">        location /set &#123;</span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                local dogs = ngx.shared.dogs</span><br><span class="line">                dogs:set(&quot;Jim&quot;, 8)</span><br><span class="line">                ngx.say(&quot;STORED&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        location /get &#123;</span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                local dogs = ngx.shared.dogs</span><br><span class="line">                ngx.say(dogs:get(&quot;Jim&quot;))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Let us test it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ curl localhost/set</span><br><span class="line">STORED</span><br><span class="line"></span><br><span class="line">$ curl localhost/get</span><br><span class="line">8</span><br><span class="line"></span><br><span class="line">$ curl localhost/get</span><br><span class="line">8</span><br></pre></td></tr></table></figure><p>The number <code>8</code> will be consistently output when accessing <code>/get</code> regardless of how many Nginx workers there are because the <code>dogs</code> dictionary resides in the shared memory and visible to <em>all</em> of the worker processes.</p><p>The shared dictionary will retain its contents through a server config reload (either by sending the <code>HUP</code> signal to the Nginx process or by using the <code>-s reload</code> command-line option).</p><p>The contents in the dictionary storage will be lost, however, when the Nginx server quits.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><h2><span id="ngxshareddictget">ngx.shared.DICT.get</span></h2><p><strong>syntax:</strong> <em>value, flags = ngx.shared.DICT:get(key)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Retrieving the value in the dictionary [ngx.shared.DICT]</p><p>In case of errors, <code>nil</code> and a string describing the error will be returned.</p><p>The value returned will have the original data type when they were inserted into the dictionary, for example, Lua booleans, numbers, or strings.</p><p>The first argument to this method must be the dictionary object itself, for example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local value, flags = cats.get(cats, &quot;Marry&quot;)</span><br></pre></td></tr></table></figure><p>or use Lua’s syntactic sugar for method calls:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local value, flags = cats:get(&quot;Marry&quot;)</span><br></pre></td></tr></table></figure><p>These two forms are fundamentally equivalent.</p><p>If the user flags is <code>0</code> (the default), then no flags value will be returned.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictget_stale">ngx.shared.DICT.get_stale</span></h2><p><strong>syntax:</strong> <em>value, flags, stale = ngx.shared.DICT:get_stale(key)</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the [get]</p><p>Returns a 3rd value, <code>stale</code>, indicating whether the key has expired or not.</p><p>Note that the value of an expired key is not guaranteed to be available so one should never rely on the availability of expired items.</p><p>This method was first introduced in the <code>0.8.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictset">ngx.shared.DICT.set</span></h2><p><strong>syntax:</strong> <em>success, err, forcible = ngx.shared.DICT:set(key, value, exptime?, flags?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Unconditionally sets a key-value pair into the shm-based dictionary [ngx.shared.DICT]</p><ul><li><code>success</code>: boolean value to indicate whether the key-value pair is stored or not.</li><li><code>err</code>: textual error message, can be <code>&quot;no memory&quot;</code>.</li><li><code>forcible</code>: a boolean value to indicate whether other valid items have been removed forcibly when out of storage in the shared memory zone.</li></ul><p>The <code>value</code> argument inserted can be Lua booleans, numbers, strings, or <code>nil</code>. Their value type will also be stored into the dictionary and the same data type can be retrieved later via the [get]</p><p>The optional <code>exptime</code> argument specifies expiration time (in seconds) for the inserted key-value pair. The time resolution is <code>0.001</code> seconds. If the <code>exptime</code> takes the value <code>0</code> (which is the default), then the item will never expire.</p><p>The optional <code>flags</code> argument specifies a user flags value associated with the entry to be stored. It can also be retrieved later with the value. The user flags is stored as an unsigned 32-bit integer internally. Defaults to <code>0</code>. The user flags argument was first introduced in the <code>v0.5.0rc2</code> release.</p><p>When it fails to allocate memory for the current key-value item, then <code>set</code> will try removing existing items in the storage according to the Least-Recently Used (LRU) algorithm. Note that, LRU takes priority over expiration time here. If up to tens of existing items have been removed and the storage left is still insufficient (either due to the total capacity limit specified by [lua_shared_dict]</p><p>If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the <code>forcible</code> return value will be <code>true</code>. If it stores the item without forcibly removing other valid items, then the return value <code>forcible</code> will be <code>false</code>.</p><p>The first argument to this method must be the dictionary object itself, for example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local succ, err, forcible = cats.set(cats, &quot;Marry&quot;, &quot;it is a nice cat!&quot;)</span><br></pre></td></tr></table></figure><p>or use Lua’s syntactic sugar for method calls:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local succ, err, forcible = cats:set(&quot;Marry&quot;, &quot;it is a nice cat!&quot;)</span><br></pre></td></tr></table></figure><p>These two forms are fundamentally equivalent.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><p>Please note that while internally the key-value pair is set atomically, the atomicity does not go across the method call boundary.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictsafe_set">ngx.shared.DICT.safe_set</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.shared.DICT:safe_set(key, value, exptime?, flags?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the [set]</p><p>This feature was first introduced in the <code>v0.7.18</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictadd">ngx.shared.DICT.add</span></h2><p><strong>syntax:</strong> <em>success, err, forcible = ngx.shared.DICT:add(key, value, exptime?, flags?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Just like the [set]</p><p>If the <code>key</code> argument already exists in the dictionary (and not expired for sure), the <code>success</code> return value will be <code>false</code> and the <code>err</code> return value will be <code>&quot;exists&quot;</code>.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictsafe_add">ngx.shared.DICT.safe_add</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.shared.DICT:safe_add(key, value, exptime?, flags?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the [add]</p><p>This feature was first introduced in the <code>v0.7.18</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictreplace">ngx.shared.DICT.replace</span></h2><p><strong>syntax:</strong> <em>success, err, forcible = ngx.shared.DICT:replace(key, value, exptime?, flags?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Just like the [set]</p><p>If the <code>key</code> argument does <em>not</em> exist in the dictionary (or expired already), the <code>success</code> return value will be <code>false</code> and the <code>err</code> return value will be <code>&quot;not found&quot;</code>.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictdelete">ngx.shared.DICT.delete</span></h2><p><strong>syntax:</strong> <em>ngx.shared.DICT:delete(key)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Unconditionally removes the key-value pair from the shm-based dictionary [ngx.shared.DICT]</p><p>It is equivalent to <code>ngx.shared.DICT:set(key, nil)</code>.</p><p>This feature was first introduced in the <code>v0.3.1rc22</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictincr">ngx.shared.DICT.incr</span></h2><p><strong>syntax:</strong> <em>newval, err, forcible? = ngx.shared.DICT:incr(key, value, init?, init_ttl?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p><strong>optional requirement:</strong> <code>resty.core.shdict</code> or <code>resty.core</code></p><p>Increments the (numerical) value for <code>key</code> in the shm-based dictionary [ngx.shared.DICT]</p><p>When the key does not exist or has already expired in the shared dictionary,</p><ol><li>if the <code>init</code> argument is not specified or takes the value <code>nil</code>, this method will return <code>nil</code> and the error string <code>&quot;not found&quot;</code>, or</li><li>if the <code>init</code> argument takes a number value, this method will create a new <code>key</code> with the value <code>init + value</code>.</li></ol><p>Like the [add]</p><p>The optional <code>init_ttl</code> argument specifies expiration time (in seconds) of the value when it is initialized via the <code>init</code>argument. The time resolution is <code>0.001</code> seconds. If <code>init_ttl</code> takes the value <code>0</code> (which is the default), then the item will never expire. This argument cannot be provided without providing the <code>init</code> argument as well, and has no effect if the value already exists (e.g., if it was previously inserted via [set]</p><p><strong>Note:</strong> Usage of the <code>init_ttl</code> argument requires the <code>resty.core.shdict</code> or <code>resty.core</code> modules from the [lua-resty-core]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">require &quot;resty.core&quot;</span><br><span class="line"></span><br><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local newval, err = cats:incr(&quot;black_cats&quot;, 1, 0, 0.1)</span><br><span class="line"></span><br><span class="line">print(newval) -- 1</span><br><span class="line"></span><br><span class="line">ngx.sleep(0.2)</span><br><span class="line"></span><br><span class="line">local val, err = cats:get(&quot;black_cats&quot;)</span><br><span class="line">print(val) -- nil</span><br></pre></td></tr></table></figure><p>The <code>forcible</code> return value will always be <code>nil</code> when the <code>init</code> argument is not specified.</p><p>If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the <code>forcible</code> return value will be <code>true</code>. If it stores the item without forcibly removing other valid items, then the return value <code>forcible</code> will be <code>false</code>.</p><p>If the original value is not a valid Lua number in the dictionary, it will return <code>nil</code> and <code>&quot;not a number&quot;</code>.</p><p>The <code>value</code> argument and <code>init</code> argument can be any valid Lua numbers, like negative numbers or floating-point numbers.</p><p>This method was first introduced in the <code>v0.3.1rc22</code> release.</p><p>The optional <code>init</code> parameter was first added in the <code>v0.10.6</code> release.</p><p>The optional <code>init_ttl</code> parameter was introduced in the <code>v0.10.12rc2</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictlpush">ngx.shared.DICT.lpush</span></h2><p><strong>syntax:</strong> <em>length, err = ngx.shared.DICT:lpush(key, value)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Inserts the specified (numerical or string) <code>value</code> at the head of the list named <code>key</code> in the shm-based dictionary [ngx.shared.DICT]</p><p>If <code>key</code> does not exist, it is created as an empty list before performing the push operation. When the <code>key</code> already takes a value that is not a list, it will return <code>nil</code> and <code>&quot;value not a list&quot;</code>.</p><p>It never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return <code>nil</code> and the string “no memory”.</p><p>This feature was first introduced in the <code>v0.10.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictrpush">ngx.shared.DICT.rpush</span></h2><p><strong>syntax:</strong> <em>length, err = ngx.shared.DICT:rpush(key, value)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the [lpush]</p><p>This feature was first introduced in the <code>v0.10.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictlpop">ngx.shared.DICT.lpop</span></h2><p><strong>syntax:</strong> <em>val, err = ngx.shared.DICT:lpop(key)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Removes and returns the first element of the list named <code>key</code> in the shm-based dictionary [ngx.shared.DICT]</p><p>If <code>key</code> does not exist, it will return <code>nil</code>. When the <code>key</code> already takes a value that is not a list, it will return <code>nil</code> and <code>&quot;value not a list&quot;</code>.</p><p>This feature was first introduced in the <code>v0.10.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictrpop">ngx.shared.DICT.rpop</span></h2><p><strong>syntax:</strong> <em>val, err = ngx.shared.DICT:rpop(key)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Removes and returns the last element of the list named <code>key</code> in the shm-based dictionary [ngx.shared.DICT]</p><p>If <code>key</code> does not exist, it will return <code>nil</code>. When the <code>key</code> already takes a value that is not a list, it will return <code>nil</code> and <code>&quot;value not a list&quot;</code>.</p><p>This feature was first introduced in the <code>v0.10.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictllen">ngx.shared.DICT.llen</span></h2><p><strong>syntax:</strong> <em>len, err = ngx.shared.DICT:llen(key)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the number of elements in the list named <code>key</code> in the shm-based dictionary [ngx.shared.DICT]</p><p>If key does not exist, it is interpreted as an empty list and 0 is returned. When the <code>key</code> already takes a value that is not a list, it will return <code>nil</code> and <code>&quot;value not a list&quot;</code>.</p><p>This feature was first introduced in the <code>v0.10.6</code> release.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictttl">ngx.shared.DICT.ttl</span></h2><p><strong>syntax:</strong> <em>ttl, err = ngx.shared.DICT:ttl(key)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p><strong>requires:</strong> <code>resty.core.shdict</code> or <code>resty.core</code></p><p>Retrieves the remaining TTL (time-to-live in seconds) of a key-value pair in the shm-based dictionary [ngx.shared.DICT]</p><p>If the key does not exist (or has already expired), this method will return <code>nil</code> and the error string <code>&quot;not found&quot;</code>.</p><p>The TTL is originally determined by the <code>exptime</code> argument of the [set]</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">require &quot;resty.core&quot;</span><br><span class="line"></span><br><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local succ, err = cats:set(&quot;Marry&quot;, &quot;a nice cat&quot;, 0.5)</span><br><span class="line"></span><br><span class="line">ngx.sleep(0.2)</span><br><span class="line"></span><br><span class="line">local ttl, err = cats:ttl(&quot;Marry&quot;)</span><br><span class="line">ngx.say(ttl) -- 0.3</span><br></pre></td></tr></table></figure><p>This feature was first introduced in the <code>v0.10.11</code> release.</p><p><strong>Note:</strong> This method requires the <code>resty.core.shdict</code> or <code>resty.core</code> modules from the [lua-resty-core]</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictexpire">ngx.shared.DICT.expire</span></h2><p><strong>syntax:</strong> <em>success, err = ngx.shared.DICT:expire(key, exptime)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p><strong>requires:</strong> <code>resty.core.shdict</code> or <code>resty.core</code></p><p>Updates the <code>exptime</code> (in second) of a key-value pair in the shm-based dictionary [ngx.shared.DICT]</p><p>If the key does not exist, this method will return <code>nil</code> and the error string <code>&quot;not found&quot;</code>.</p><p>The <code>exptime</code> argument has a resolution of <code>0.001</code> seconds. If <code>exptime</code> is <code>0</code>, then the item will never expire.</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">require &quot;resty.core&quot;</span><br><span class="line"></span><br><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local succ, err = cats:set(&quot;Marry&quot;, &quot;a nice cat&quot;, 0.1)</span><br><span class="line"></span><br><span class="line">succ, err = cats:expire(&quot;Marry&quot;, 0.5)</span><br><span class="line"></span><br><span class="line">ngx.sleep(0.2)</span><br><span class="line"></span><br><span class="line">local val, err = cats:get(&quot;Marry&quot;)</span><br><span class="line">ngx.say(val) -- &quot;a nice cat&quot;</span><br></pre></td></tr></table></figure><p>This feature was first introduced in the <code>v0.10.11</code> release.</p><p><strong>Note:</strong> This method requires the <code>resty.core.shdict</code> or <code>resty.core</code> modules from the [lua-resty-core]</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictflush_all">ngx.shared.DICT.flush_all</span></h2><p><strong>syntax:</strong> <em>ngx.shared.DICT:flush_all()</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Flushes out all the items in the dictionary. This method does not actuall free up all the memory blocks in the dictionary but just marks all the existing items as expired.</p><p>This feature was first introduced in the <code>v0.5.0rc17</code> release.</p><p>See also [ngx.shared.DICT.flush_expired]</p><h2><span id="ngxshareddictflush_expired">ngx.shared.DICT.flush_expired</span></h2><p><strong>syntax:</strong> <em>flushed = ngx.shared.DICT:flush_expired(max_count?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Flushes out the expired items in the dictionary, up to the maximal number specified by the optional <code>max_count</code> argument. When the <code>max_count</code> argument is given <code>0</code> or not given at all, then it means unlimited. Returns the number of items that have actually been flushed.</p><p>Unlike the [flush_all]</p><p>This feature was first introduced in the <code>v0.6.3</code> release.</p><p>See also [ngx.shared.DICT.flush_all]</p><h2><span id="ngxshareddictget_keys">ngx.shared.DICT.get_keys</span></h2><p><strong>syntax:</strong> <em>keys = ngx.shared.DICT:get_keys(max_count?)</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Fetch a list of the keys from the dictionary, up to <code>&lt;max_count&gt;</code>.</p><p>By default, only the first 1024 keys (if any) are returned. When the <code>&lt;max_count&gt;</code> argument is given the value <code>0</code>, then all the keys will be returned even there is more than 1024 keys in the dictionary.</p><p><strong>CAUTION</strong> Avoid calling this method on dictionaries with a very large number of keys as it may lock the dictionary for significant amount of time and block Nginx worker processes trying to access the dictionary.</p><p>This feature was first introduced in the <code>v0.7.3</code> release.</p><h2><span id="ngxshareddictcapacity">ngx.shared.DICT.capacity</span></h2><p><strong>syntax:</strong> <em>capacity_bytes = ngx.shared.DICT:capacity()</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p><strong>requires:</strong> <code>resty.core.shdict</code> or <code>resty.core</code></p><p>Retrieves the capacity in bytes for the shm-based dictionary [ngx.shared.DICT]</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">require &quot;resty.core.shdict&quot;</span><br><span class="line"></span><br><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local capacity_bytes = cats:capacity()</span><br></pre></td></tr></table></figure><p>This feature was first introduced in the <code>v0.10.11</code> release.</p><p><strong>Note:</strong> This method requires the <code>resty.core.shdict</code> or <code>resty.core</code> modules from the [lua-resty-core]</p><p>This feature requires at least nginx core version <code>0.7.3</code>.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxshareddictfree_space">ngx.shared.DICT.free_space</span></h2><p><strong>syntax:</strong> <em>free_page_bytes = ngx.shared.DICT:free_space()</em></p><p><strong>context:</strong> init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p><strong>requires:</strong> <code>resty.core.shdict</code> or <code>resty.core</code></p><p>Retrieves the free page size in bytes for the shm-based dictionary [ngx.shared.DICT]</p><p><strong>Note:</strong> The memory for ngx.shared.DICT is allocated via the nginx slab allocator which has each slot for data size ranges like ~8, 9~16, 17~32, …, 1025~2048, 2048~ bytes. And pages are assigned to a slot if there is no room in already assigned pages for the slot.</p><p>So even if the return value of the <code>free_space</code> method is zero, there may be room in already assigned pages, so you may successfully set a new key value pair to the shared dict without getting <code>true</code> for <code>forcible</code> or non nil <code>err</code> from the <code>ngx.shared.DICT.set</code>.</p><p>On the other hand, if already assigned pages for a slot are full and a new key value pair is added to the slot and there is no free page, you may get <code>true</code> for <code>forcible</code> or non nil <code>err</code> from the <code>ngx.shared.DICT.set</code> method.</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">require &quot;resty.core.shdict&quot;</span><br><span class="line"></span><br><span class="line">local cats = ngx.shared.cats</span><br><span class="line">local free_page_bytes = cats:free_space()</span><br></pre></td></tr></table></figure><p>This feature was first introduced in the <code>v0.10.11</code> release.</p><p><strong>Note:</strong> This method requires the <code>resty.core.shdict</code> or <code>resty.core</code> modules from the [lua-resty-core]</p><p>This feature requires at least nginx core version <code>1.11.7</code>.</p><p>See also [ngx.shared.DICT]</p><h2><span id="ngxsocketudp">ngx.socket.udp</span></h2><p><strong>syntax:</strong> <em>udpsock = ngx.socket.udp()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Creates and returns a UDP or datagram-oriented unix domain socket object (also known as one type of the “cosocket” objects). The following methods are supported on this object:</p><ul><li>[setpeername]</li><li>[send]</li><li>[receive]</li><li>[close]</li><li>[settimeout]</li></ul><p>It is intended to be compatible with the UDP API of the <a href="http://w3.impa.br/~diego/software/luasocket/udp.html" target="_blank" rel="noopener">LuaSocket</a> library but is 100% nonblocking out of the box.</p><p>This feature was first introduced in the <code>v0.5.7</code> release.</p><p>See also [ngx.socket.tcp]</p><h2><span id="udpsocksetpeername">udpsock:setpeername</span></h2><p><strong>syntax:</strong> <em>ok, err = udpsock:setpeername(host, port)</em></p><p><strong>syntax:</strong> <em>ok, err = udpsock:setpeername(“unix:/path/to/unix-domain.socket”)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Attempts to connect a UDP socket object to a remote server or to a datagram unix domain socket file. Because the datagram protocol is actually connection-less, this method does not really establish a “connection”, but only just set the name of the remote peer for subsequent read/write operations.</p><p>Both IP addresses and domain names can be specified as the <code>host</code> argument. In case of domain names, this method will use Nginx core’s dynamic resolver to parse the domain name without blocking and it is required to configure the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" target="_blank" rel="noopener">resolver</a>directive in the <code>nginx.conf</code> file like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolver 8.8.8.8;  # use Google&apos;s public DNS nameserver</span><br></pre></td></tr></table></figure><p>If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.</p><p>In case of error, the method returns <code>nil</code> followed by a string describing the error. In case of success, the method returns <code>1</code>.</p><p>Here is an example for connecting to a UDP (memcached) server:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    resolver 8.8.8.8;</span><br><span class="line"></span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        local sock = ngx.socket.udp()</span><br><span class="line">        local ok, err = sock:setpeername(&quot;my.memcached.server.domain&quot;, 11211)</span><br><span class="line">        if not ok then</span><br><span class="line">            ngx.say(&quot;failed to connect to memcached: &quot;, err)</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line">        ngx.say(&quot;successfully connected to memcached!&quot;)</span><br><span class="line">        sock:close()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Since the <code>v0.7.18</code> release, connecting to a datagram unix domain socket file is also possible on Linux:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local sock = ngx.socket.udp()</span><br><span class="line">local ok, err = sock:setpeername(&quot;unix:/tmp/some-datagram-service.sock&quot;)</span><br><span class="line">if not ok then</span><br><span class="line">    ngx.say(&quot;failed to connect to the datagram unix domain socket: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>assuming the datagram service is listening on the unix domain socket file <code>/tmp/some-datagram-service.sock</code> and the client socket will use the “autobind” feature on Linux.</p><p>Calling this method on an already connected socket object will cause the original connection to be closed first.</p><p>This method was first introduced in the <code>v0.5.7</code> release.</p><h2><span id="udpsocksend">udpsock:send</span></h2><p><strong>syntax:</strong> <em>ok, err = udpsock:send(data)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Sends data on the current UDP or datagram unix domain socket object.</p><p>In case of success, it returns <code>1</code>. Otherwise, it returns <code>nil</code> and a string describing the error.</p><p>The input argument <code>data</code> can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.</p><p>This feature was first introduced in the <code>v0.5.7</code> release.</p><h2><span id="udpsockreceive">udpsock:receive</span></h2><p><strong>syntax:</strong> <em>data, err = udpsock:receive(size?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Receives data from the UDP or datagram unix domain socket object with an optional receive buffer size argument, <code>size</code>.</p><p>This method is a synchronous operation and is 100% nonblocking.</p><p>In case of success, it returns the data received; in case of error, it returns <code>nil</code> with a string describing the error.</p><p>If the <code>size</code> argument is specified, then this method will use this size as the receive buffer size. But when this size is greater than <code>8192</code>, then <code>8192</code> will be used instead.</p><p>If no argument is specified, then the maximal buffer size, <code>8192</code> is assumed.</p><p>Timeout for the reading operation is controlled by the [lua_socket_read_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sock:settimeout(1000)  -- one second timeout</span><br><span class="line">local data, err = sock:receive()</span><br><span class="line">if not data then</span><br><span class="line">    ngx.say(&quot;failed to read a packet: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line">ngx.say(&quot;successfully read a packet: &quot;, data)</span><br></pre></td></tr></table></figure><p>It is important here to call the [settimeout]</p><p>This feature was first introduced in the <code>v0.5.7</code> release.</p><h2><span id="udpsockclose">udpsock:close</span></h2><p><strong>syntax:</strong> <em>ok, err = udpsock:close()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Closes the current UDP or datagram unix domain socket. It returns the <code>1</code> in case of success and returns <code>nil</code> with a string describing the error otherwise.</p><p>Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.</p><p>This feature was first introduced in the <code>v0.5.7</code> release.</p><h2><span id="udpsocksettimeout">udpsock:settimeout</span></h2><p><strong>syntax:</strong> <em>udpsock:settimeout(time)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Set the timeout value in milliseconds for subsequent socket operations (like [receive]</p><p>Settings done by this method takes priority over those config directives, like [lua_socket_read_timeout]</p><p>This feature was first introduced in the <code>v0.5.7</code> release.</p><h2><span id="ngxsocketstream">ngx.socket.stream</span></h2><p>Just an alias to [ngx.socket.tcp]</p><p>This API function was first added to the <code>v0.10.1</code> release.</p><h2><span id="ngxsockettcp">ngx.socket.tcp</span></h2><p><strong>syntax:</strong> <em>tcpsock = ngx.socket.tcp()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Creates and returns a TCP or stream-oriented unix domain socket object (also known as one type of the “cosocket” objects). The following methods are supported on this object:</p><ul><li>[connect]</li><li>[sslhandshake]</li><li>[send]</li><li>[receive]</li><li>[close]</li><li>[settimeout]</li><li>[settimeouts]</li><li>[setoption]</li><li>[receiveany]</li><li>[receiveuntil]</li><li>[setkeepalive]</li><li>[getreusedtimes]</li></ul><p>It is intended to be compatible with the TCP API of the <a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" target="_blank" rel="noopener">LuaSocket</a> library but is 100% nonblocking out of the box. Also, we introduce some new APIs to provide more functionalities.</p><p>The cosocket object created by this API function has exactly the same lifetime as the Lua handler creating it. So never pass the cosocket object to any other Lua handler (including ngx.timer callback functions) and never share the cosocket object between different NGINX requests.</p><p>For every cosocket object’s underlying connection, if you do not explicitly close it (via [close]</p><ul><li>the current request handler completes, or</li><li>the Lua cosocket object value gets collected by the Lua GC.</li></ul><p>Fatal errors in cosocket operations always automatically close the current connection (note that, read timeout error is the only error that is not fatal), and if you call [close]</p><p>Starting from the <code>0.9.9</code> release, the cosocket object here is full-duplex, that is, a reader “light thread” and a writer “light thread” can operate on a single cosocket object simultaneously (both “light threads” must belong to the same Lua handler though, see reasons above). But you cannot have two “light threads” both reading (or writing or connecting) the same cosocket, otherwise you might get an error like “socket busy reading” when calling the methods of the cosocket object.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><p>See also [ngx.socket.udp]</p><h2><span id="tcpsockconnect">tcpsock:connect</span></h2><p><strong>syntax:</strong> <em>ok, err = tcpsock:connect(host, port, options_table?)</em></p><p><strong>syntax:</strong> <em>ok, err = tcpsock:connect(“unix:/path/to/unix-domain.socket”, options_table?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Attempts to connect a TCP socket object to a remote server or to a stream unix domain socket file without blocking.</p><p>Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method (or the [ngx.socket.connect]</p><p>Both IP addresses and domain names can be specified as the <code>host</code> argument. In case of domain names, this method will use Nginx core’s dynamic resolver to parse the domain name without blocking and it is required to configure the <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" target="_blank" rel="noopener">resolver</a>directive in the <code>nginx.conf</code> file like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolver 8.8.8.8;  # use Google&apos;s public DNS nameserver</span><br></pre></td></tr></table></figure><p>If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.</p><p>In case of error, the method returns <code>nil</code> followed by a string describing the error. In case of success, the method returns <code>1</code>.</p><p>Here is an example for connecting to a TCP server:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">    resolver 8.8.8.8;</span><br><span class="line"></span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        local sock = ngx.socket.tcp()</span><br><span class="line">        local ok, err = sock:connect(&quot;www.google.com&quot;, 80)</span><br><span class="line">        if not ok then</span><br><span class="line">            ngx.say(&quot;failed to connect to google: &quot;, err)</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line">        ngx.say(&quot;successfully connected to google!&quot;)</span><br><span class="line">        sock:close()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Connecting to a Unix Domain Socket file is also possible:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local sock = ngx.socket.tcp()</span><br><span class="line">local ok, err = sock:connect(&quot;unix:/tmp/memcached.sock&quot;)</span><br><span class="line">if not ok then</span><br><span class="line">    ngx.say(&quot;failed to connect to the memcached unix domain socket: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>assuming memcached (or something else) is listening on the unix domain socket file <code>/tmp/memcached.sock</code>.</p><p>Timeout for the connecting operation is controlled by the [lua_socket_connect_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local sock = ngx.socket.tcp()</span><br><span class="line">sock:settimeout(1000)  -- one second timeout</span><br><span class="line">local ok, err = sock:connect(host, port)</span><br></pre></td></tr></table></figure><p>It is important here to call the [settimeout]</p><p>Calling this method on an already connected socket object will cause the original connection to be closed first.</p><p>An optional Lua table can be specified as the last argument to this method to specify various connect options:</p><ul><li><code>pool</code> specify a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template <code>&quot;&lt;host&gt;:&lt;port&gt;&quot;</code> or <code>&quot;&lt;unix-socket-path&gt;&quot;</code>.</li><li><code>pool_size</code> specify the size of the connection pool. If omitted and no <code>backlog</code> option was provided, no pool will be created. If omitted but <code>backlog</code> was provided, the pool will be created with a default size equal to the value of the [lua_socket_pool_size]</li><li><code>backlog</code> if specified, this module will limit the total number of opened connections for this pool. No more connections than <code>pool_size</code> can be opened for this pool at any time. If the connection pool is full, subsequent connect operations will be queued into a queue equal to this option’s value (the “backlog” queue). If the number of queued connect operations is equal to <code>backlog</code>, subsequent connect operations will fail and return <code>nil</code> plus the error string <code>&quot;too many waiting connect operations&quot;</code>. The queued connect operations will be resumed once the number of connections in the pool is less than <code>pool_size</code>. The queued connect operation will abort once they have been queued for more than <code>connect_timeout</code>, controlled by [settimeouts]</li></ul><p>The support for the options table argument was first introduced in the <code>v0.5.7</code> release.</p><p>This method was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsocksslhandshake">tcpsock:sslhandshake</span></h2><p><strong>syntax:</strong> <em>session, err = tcpsock:sslhandshake(reused_session?, server_name?, ssl_verify?, send_status_req?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Does SSL/TLS handshake on the currently established connection.</p><p>The optional <code>reused_session</code> argument can take a former SSL session userdata returned by a previous <code>sslhandshake</code> call for exactly the same target. For short-lived connections, reusing SSL sessions can usually speed up the handshake by one order by magnitude but it is not so useful if the connection pool is enabled. This argument defaults to <code>nil</code>. If this argument takes the boolean <code>false</code> value, no SSL session userdata would return by this call and only a Lua boolean will be returned as the first return value; otherwise the current SSL session will always be returned as the first argument in case of successes.</p><p>The optional <code>server_name</code> argument is used to specify the server name for the new TLS extension Server Name Indication (SNI). Use of SNI can make different servers share the same IP address on the server side. Also, when SSL verification is enabled, this <code>server_name</code> argument is also used to validate the server name specified in the server certificate sent from the remote.</p><p>The optional <code>ssl_verify</code> argument takes a Lua boolean value to control whether to perform SSL verification. When set to <code>true</code>, the server certificate will be verified according to the CA certificates specified by the [lua_ssl_trusted_certificate]</p><p>The optional <code>send_status_req</code> argument takes a boolean that controls whether to send the OCSP status request in the SSL handshake request (which is for requesting OCSP stapling).</p><p>For connections that have already done SSL/TLS handshake, this method returns immediately.</p><p>This method was first introduced in the <code>v0.9.11</code> release.</p><h2><span id="tcpsocksend">tcpsock:send</span></h2><p><strong>syntax:</strong> <em>bytes, err = tcpsock:send(data)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Sends data without blocking on the current TCP or Unix Domain Socket connection.</p><p>This method is a synchronous operation that will not return until <em>all</em> the data has been flushed into the system socket send buffer or an error occurs.</p><p>In case of success, it returns the total number of bytes that have been sent. Otherwise, it returns <code>nil</code> and a string describing the error.</p><p>The input argument <code>data</code> can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.</p><p>Timeout for the sending operation is controlled by the [lua_socket_send_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sock:settimeout(1000)  -- one second timeout</span><br><span class="line">local bytes, err = sock:send(request)</span><br></pre></td></tr></table></figure><p>It is important here to call the [settimeout]</p><p>In case of any connection errors, this method always automatically closes the current connection.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsockreceive">tcpsock:receive</span></h2><p><strong>syntax:</strong> <em>data, err, partial = tcpsock:receive(size)</em></p><p><strong>syntax:</strong> <em>data, err, partial = tcpsock:receive(pattern?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Receives data from the connected socket according to the reading pattern or size.</p><p>This method is a synchronous operation just like the [send]</p><p>In case of success, it returns the data received; in case of error, it returns <code>nil</code> with a string describing the error and the partial data received so far.</p><p>If a number-like argument is specified (including strings that look like numbers), then it is interpreted as a size. This method will not return until it reads exactly this size of data or an error occurs.</p><p>If a non-number-like string argument is specified, then it is interpreted as a “pattern”. The following patterns are supported:</p><ul><li><code>&#39;*a&#39;</code>: reads from the socket until the connection is closed. No end-of-line translation is performed;</li><li><code>&#39;*l&#39;</code>: reads a line of text from the socket. The line is terminated by a <code>Line Feed</code> (LF) character (ASCII 10), optionally preceded by a <code>Carriage Return</code> (CR) character (ASCII 13). The CR and LF characters are not included in the returned line. In fact, all CR characters are ignored by the pattern.</li></ul><p>If no argument is specified, then it is assumed to be the pattern <code>&#39;*l&#39;</code>, that is, the line reading pattern.</p><p>Timeout for the reading operation is controlled by the [lua_socket_read_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sock:settimeout(1000)  -- one second timeout</span><br><span class="line">local line, err, partial = sock:receive()</span><br><span class="line">if not line then</span><br><span class="line">    ngx.say(&quot;failed to read a line: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line">ngx.say(&quot;successfully read a line: &quot;, line)</span><br></pre></td></tr></table></figure><p>It is important here to call the [settimeout]</p><p>Since the <code>v0.8.8</code> release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsockreceiveany">tcpsock:receiveany</span></h2><p><strong>syntax:</strong> <em>data, err = tcpsock:receiveany(max)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Returns any data received by the connected socket, at most <code>max</code> bytes.</p><p>This method is a synchronous operation just like the [send]</p><p>In case of success, it returns the data received; in case of error, it returns <code>nil</code> with a string describing the error.</p><p>If the received data is more than this size, this method will return with exactly this size of data. The remaining data in the underlying receive buffer could be returned in the next reading operation.</p><p>Timeout for the reading operation is controlled by the [lua_socket_read_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sock:settimeouts(1000, 1000, 1000)  -- one second timeout for connect/read/write</span><br><span class="line">local data, err = sock:receiveany(10 * 1024 * 1024) -- read any data, at most 10K</span><br><span class="line">if not data then</span><br><span class="line">    ngx.say(&quot;failed to read any data: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line">ngx.say(&quot;successfully read: &quot;, data)</span><br></pre></td></tr></table></figure><p>This method doesn’t automatically close the current connection when the read timeout error occurs. For other connection errors, this method always automatically closes the connection.</p><p>This feature was first introduced in the <code>v0.10.14</code> release.</p><h2><span id="tcpsockreceiveuntil">tcpsock:receiveuntil</span></h2><p><strong>syntax:</strong> <em>iterator = tcpsock:receiveuntil(pattern, options?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>This method returns an iterator Lua function that can be called to read the data stream until it sees the specified pattern or an error occurs.</p><p>Here is an example for using this method to read a data stream with the boundary sequence <code>--abcedhb</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local reader = sock:receiveuntil(&quot;\r\n--abcedhb&quot;)</span><br><span class="line">local data, err, partial = reader()</span><br><span class="line">if not data then</span><br><span class="line">    ngx.say(&quot;failed to read the data stream: &quot;, err)</span><br><span class="line">end</span><br><span class="line">ngx.say(&quot;read the data stream: &quot;, data)</span><br></pre></td></tr></table></figure><p>When called without any argument, the iterator function returns the received data right <em>before</em> the specified pattern string in the incoming data stream. So for the example above, if the incoming data stream is <code>&#39;hello, world! -agentzh\r\n--abcedhb blah blah&#39;</code>, then the string <code>&#39;hello, world! -agentzh&#39;</code> will be returned.</p><p>In case of error, the iterator function will return <code>nil</code> along with a string describing the error and the partial data bytes that have been read so far.</p><p>The iterator function can be called multiple times and can be mixed safely with other cosocket method calls or other iterator function calls.</p><p>The iterator function behaves differently (i.e., like a real iterator) when it is called with a <code>size</code> argument. That is, it will read that <code>size</code> of data on each invocation and will return <code>nil</code> at the last invocation (either sees the boundary pattern or meets an error). For the last successful invocation of the iterator function, the <code>err</code> return value will be <code>nil</code> too. The iterator function will be reset after the last successful invocation that returns <code>nil</code> data and <code>nil</code> error. Consider the following example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">local reader = sock:receiveuntil(&quot;\r\n--abcedhb&quot;)</span><br><span class="line"></span><br><span class="line">while true do</span><br><span class="line">    local data, err, partial = reader(4)</span><br><span class="line">    if not data then</span><br><span class="line">        if err then</span><br><span class="line">            ngx.say(&quot;failed to read the data stream: &quot;, err)</span><br><span class="line">            break</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        ngx.say(&quot;read done&quot;)</span><br><span class="line">        break</span><br><span class="line">    end</span><br><span class="line">    ngx.say(&quot;read chunk: [&quot;, data, &quot;]&quot;)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>Then for the incoming data stream <code>&#39;hello, world! -agentzh\r\n--abcedhb blah blah&#39;</code>, we shall get the following output from the sample code above:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">read chunk: [hell]</span><br><span class="line">read chunk: [o, w]</span><br><span class="line">read chunk: [orld]</span><br><span class="line">read chunk: [! -a]</span><br><span class="line">read chunk: [gent]</span><br><span class="line">read chunk: [zh]</span><br><span class="line">read done</span><br></pre></td></tr></table></figure><p>Note that, the actual data returned <em>might</em> be a little longer than the size limit specified by the <code>size</code> argument when the boundary pattern has ambiguity for streaming parsing. Near the boundary of the data stream, the data string actually returned could also be shorter than the size limit.</p><p>Timeout for the iterator function’s reading operation is controlled by the [lua_socket_read_timeout]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local readline = sock:receiveuntil(&quot;\r\n&quot;)</span><br><span class="line"></span><br><span class="line">sock:settimeout(1000)  -- one second timeout</span><br><span class="line">line, err, partial = readline()</span><br><span class="line">if not line then</span><br><span class="line">    ngx.say(&quot;failed to read a line: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line">ngx.say(&quot;successfully read a line: &quot;, line)</span><br></pre></td></tr></table></figure><p>It is important here to call the [settimeout]</p><p>As from the <code>v0.5.1</code> release, this method also takes an optional <code>options</code> table argument to control the behavior. The following options are supported:</p><ul><li><code>inclusive</code></li></ul><p>The <code>inclusive</code> takes a boolean value to control whether to include the pattern string in the returned data string. Default to <code>false</code>. For example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local reader = tcpsock:receiveuntil(&quot;_END_&quot;, &#123; inclusive = true &#125;)</span><br><span class="line">local data = reader()</span><br><span class="line">ngx.say(data)</span><br></pre></td></tr></table></figure><p>Then for the input data stream <code>&quot;hello world _END_ blah blah blah&quot;</code>, then the example above will output <code>hello world _END_</code>, including the pattern string <code>_END_</code> itself.</p><p>Since the <code>v0.8.8</code> release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.</p><p>This method was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsockclose">tcpsock:close</span></h2><p><strong>syntax:</strong> <em>ok, err = tcpsock:close()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Closes the current TCP or stream unix domain socket. It returns the <code>1</code> in case of success and returns <code>nil</code> with a string describing the error otherwise.</p><p>Note that there is no need to call this method on socket objects that have invoked the [setkeepalive]</p><p>Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsocksettimeout">tcpsock:settimeout</span></h2><p><strong>syntax:</strong> <em>tcpsock:settimeout(time)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Set the timeout value in milliseconds for subsequent socket operations ([connect]</p><p>Settings done by this method takes priority over those config directives, i.e., [lua_socket_connect_timeout]</p><p>Note that this method does <em>not</em> affect the [lua_socket_keepalive_timeout]</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsocksettimeouts">tcpsock:settimeouts</span></h2><p><strong>syntax:</strong> <em>tcpsock:settimeouts(connect_timeout, send_timeout, read_timeout)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Sets the connect timeout thresold, send timeout threshold, and read timeout threshold, respetively, in milliseconds, for subsequent socket operations ([connect]</p><p>Settings done by this method takes priority over those config directives, i.e., [lua_socket_connect_timeout]</p><p>You are recommended to use [settimeouts]</p><p>Note that this method does <em>not</em> affect the [lua_socket_keepalive_timeout]</p><p>This feature was first introduced in the <code>v0.10.7</code> release.</p><h2><span id="tcpsocksetoption">tcpsock:setoption</span></h2><p><strong>syntax:</strong> <em>tcpsock:setoption(option, value?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>This function is added for <a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" target="_blank" rel="noopener">LuaSocket</a> API compatibility and does nothing for now. Its functionality will be implemented in future.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsocksetkeepalive">tcpsock:setkeepalive</span></h2><p><strong>syntax:</strong> <em>ok, err = tcpsock:setkeepalive(timeout?, size?)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Puts the current socket’s connection immediately into the cosocket built-in connection pool and keep it alive until other [connect]</p><p>The first optional argument, <code>timeout</code>, can be used to specify the maximal idle timeout (in milliseconds) for the current connection. If omitted, the default setting in the [lua_socket_keepalive_timeout]</p><p>The second optional argument <code>size</code> is considered deprecated since the <code>v0.10.14</code> release of this module, in favor of the<code>pool_size</code> option of the [connect]</p><p>In case of success, this method returns <code>1</code>; otherwise, it returns <code>nil</code> and a string describing the error.</p><p>When the system receive buffer for the current connection has unread data, then this method will return the “connection in dubious state” error message (as the second return value) because the previous session has unread data left behind for the next session and the connection is not safe to be reused.</p><p>This method also makes the current cosocket object enter the “closed” state, so there is no need to manually call the [close]</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="tcpsockgetreusedtimes">tcpsock:getreusedtimes</span></h2><p><strong>syntax:</strong> <em>count, err = tcpsock:getreusedtimes()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>This method returns the (successfully) reused times for the current connection. In case of error, it returns <code>nil</code> and a string describing the error.</p><p>If the current connection does not come from the built-in connection pool, then this method always returns <code>0</code>, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="ngxsocketconnect">ngx.socket.connect</span></h2><p><strong>syntax:</strong> <em>tcpsock, err = ngx.socket.connect(host, port)</em></p><p><strong>syntax:</strong> <em>tcpsock, err = ngx.socket.connect(“unix:/path/to/unix-domain.socket”)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.**</p><p>This function is a shortcut for combining [ngx.socket.tcp()]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local sock = ngx.socket.tcp()</span><br><span class="line">local ok, err = sock:connect(...)</span><br><span class="line">if not ok then</span><br><span class="line">    return nil, err</span><br><span class="line">end</span><br><span class="line">return sock</span><br></pre></td></tr></table></figure><p>There is no way to use the [settimeout]</p><p>This feature was first introduced in the <code>v0.5.0rc1</code> release.</p><h2><span id="ngxget_phase">ngx.get_phase</span></h2><p><strong>syntax:</strong> <em>str = ngx.get_phase()</em></p><p><strong>context:</strong> init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Retrieves the current running phase name. Possible return values are</p><ul><li><code>init</code> for the context of [init_by_lua*]</li><li><code>init_worker</code> for the context of [init_worker_by_lua*]</li><li><code>ssl_cert</code> for the context of [ssl_certificate_by_lua*]</li><li><code>ssl_session_fetch</code> for the context of [ssl_session_fetch_by_lua*]</li><li><code>ssl_session_store</code> for the context of [ssl_session_store_by_lua*]</li><li><code>set</code> for the context of [set_by_lua*]</li><li><code>rewrite</code> for the context of [rewrite_by_lua*]</li><li><code>balancer</code> for the context of [balancer_by_lua*]</li><li><code>access</code> for the context of [access_by_lua*]</li><li><code>content</code> for the context of [content_by_lua*]</li><li><code>header_filter</code> for the context of [header_filter_by_lua*]</li><li><code>body_filter</code> for the context of [body_filter_by_lua*]</li><li><code>log</code> for the context of [log_by_lua*]</li><li><code>timer</code> for the context of user callback functions for [ngx.timer.*]</li></ul><p>This API was first introduced in the <code>v0.5.10</code> release.</p><h2><span id="ngxthreadspawn">ngx.thread.spawn</span></h2><p><strong>syntax:</strong> <em>co = ngx.thread.spawn(func, arg1, arg2, …)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Spawns a new user “light thread” with the Lua function <code>func</code> as well as those optional arguments <code>arg1</code>, <code>arg2</code>, and etc. Returns a Lua thread (or Lua coroutine) object represents this “light thread”.</p><p>“Light threads” are just a special kind of Lua coroutines that are scheduled by the ngx_lua module.</p><p>Before <code>ngx.thread.spawn</code> returns, the <code>func</code> will be called with those optional arguments until it returns, aborts with an error, or gets yielded due to I/O operations via the [Nginx API for Lua]</p><p>After <code>ngx.thread.spawn</code> returns, the newly-created “light thread” will keep running asynchronously usually at various I/O events.</p><p>All the Lua code chunks running by [rewrite_by_lua]</p><p>By default, the corresponding Nginx handler (e.g., [rewrite_by_lua]</p><ol><li>both the “entry thread” and all the user “light threads” terminates,</li><li>a “light thread” (either the “entry thread” or a user “light thread” aborts by calling [ngx.exit]</li><li>the “entry thread” terminates with a Lua error.</li></ol><p>When the user “light thread” terminates with a Lua error, however, it will not abort other running “light threads” like the “entry thread” does.</p><p>Due to the limitation in the Nginx subrequest model, it is not allowed to abort a running Nginx subrequest in general. So it is also prohibited to abort a running “light thread” that is pending on one ore more Nginx subrequests. You must call [ngx.thread.wait]</p><p>The “light threads” are not scheduled in a pre-emptive way. In other words, no time-slicing is performed automatically. A “light thread” will keep running exclusively on the CPU until</p><ol><li>a (nonblocking) I/O operation cannot be completed in a single run,</li><li>it calls [coroutine.yield]</li><li>it is aborted by a Lua error or an invocation of [ngx.exit]</li></ol><p>For the first two cases, the “light thread” will usually be resumed later by the ngx_lua scheduler unless a “stop-the-world” event happens.</p><p>User “light threads” can create “light threads” themselves. And normal user coroutines created by [coroutine.create]</p><p>The “parent coroutine” can call [ngx.thread.wait]</p><p>You can call coroutine.status() and coroutine.yield() on the “light thread” coroutines.</p><p>The status of the “light thread” coroutine can be “zombie” if</p><ol><li>the current “light thread” already terminates (either successfully or with an error),</li><li>its parent coroutine is still alive, and</li><li>its parent coroutine is not waiting on it with [ngx.thread.wait]</li></ol><p>The following example demonstrates the use of coroutine.yield() in the “light thread” coroutines to do manual time-slicing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">local yield = coroutine.yield</span><br><span class="line"></span><br><span class="line">function f()</span><br><span class="line">    local self = coroutine.running()</span><br><span class="line">    ngx.say(&quot;f 1&quot;)</span><br><span class="line">    yield(self)</span><br><span class="line">    ngx.say(&quot;f 2&quot;)</span><br><span class="line">    yield(self)</span><br><span class="line">    ngx.say(&quot;f 3&quot;)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local self = coroutine.running()</span><br><span class="line">ngx.say(&quot;0&quot;)</span><br><span class="line">yield(self)</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;1&quot;)</span><br><span class="line">ngx.thread.spawn(f)</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;2&quot;)</span><br><span class="line">yield(self)</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;3&quot;)</span><br><span class="line">yield(self)</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;4&quot;)</span><br></pre></td></tr></table></figure><p>Then it will generate the output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">f 1</span><br><span class="line">2</span><br><span class="line">f 2</span><br><span class="line">3</span><br><span class="line">f 3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>“Light threads” are mostly useful for making concurrent upstream requests in a single Nginx request handler, much like a generalized version of [ngx.location.capture_multi]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-- query mysql, memcached, and a remote http service at the same time,</span><br><span class="line">-- output the results in the order that they</span><br><span class="line">-- actually return the results.</span><br><span class="line"></span><br><span class="line">local mysql = require &quot;resty.mysql&quot;</span><br><span class="line">local memcached = require &quot;resty.memcached&quot;</span><br><span class="line"></span><br><span class="line">local function query_mysql()</span><br><span class="line">    local db = mysql:new()</span><br><span class="line">    db:connect&#123;</span><br><span class="line">                host = &quot;127.0.0.1&quot;,</span><br><span class="line">                port = 3306,</span><br><span class="line">                database = &quot;test&quot;,</span><br><span class="line">                user = &quot;monty&quot;,</span><br><span class="line">                password = &quot;mypass&quot;</span><br><span class="line">              &#125;</span><br><span class="line">    local res, err, errno, sqlstate =</span><br><span class="line">            db:query(&quot;select * from cats order by id asc&quot;)</span><br><span class="line">    db:set_keepalive(0, 100)</span><br><span class="line">    ngx.say(&quot;mysql done: &quot;, cjson.encode(res))</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local function query_memcached()</span><br><span class="line">    local memc = memcached:new()</span><br><span class="line">    memc:connect(&quot;127.0.0.1&quot;, 11211)</span><br><span class="line">    local res, err = memc:get(&quot;some_key&quot;)</span><br><span class="line">    ngx.say(&quot;memcached done: &quot;, res)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local function query_http()</span><br><span class="line">    local res = ngx.location.capture(&quot;/my-http-proxy&quot;)</span><br><span class="line">    ngx.say(&quot;http done: &quot;, res.body)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">ngx.thread.spawn(query_mysql)      -- create thread 1</span><br><span class="line">ngx.thread.spawn(query_memcached)  -- create thread 2</span><br><span class="line">ngx.thread.spawn(query_http)       -- create thread 3</span><br></pre></td></tr></table></figure><p>This API was first enabled in the <code>v0.7.0</code> release.</p><h2><span id="ngxthreadwait">ngx.thread.wait</span></h2><p><strong>syntax:</strong> <em>ok, res1, res2, … = ngx.thread.wait(thread1, thread2, …)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*</p><p>Waits on one or more child “light threads” and returns the results of the first “light thread” that terminates (either successfully or with an error).</p><p>The arguments <code>thread1</code>, <code>thread2</code>, and etc are the Lua thread objects returned by earlier calls of [ngx.thread.spawn]</p><p>The return values have exactly the same meaning as [coroutine.resume]</p><p>Only the direct “parent coroutine” can wait on its child “light thread”, otherwise a Lua exception will be raised.</p><p>The following example demonstrates the use of <code>ngx.thread.wait</code> and [ngx.location.capture]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">local capture = ngx.location.capture</span><br><span class="line">local spawn = ngx.thread.spawn</span><br><span class="line">local wait = ngx.thread.wait</span><br><span class="line">local say = ngx.say</span><br><span class="line"></span><br><span class="line">local function fetch(uri)</span><br><span class="line">    return capture(uri)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local threads = &#123;</span><br><span class="line">    spawn(fetch, &quot;/foo&quot;),</span><br><span class="line">    spawn(fetch, &quot;/bar&quot;),</span><br><span class="line">    spawn(fetch, &quot;/baz&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for i = 1, #threads do</span><br><span class="line">    local ok, res = wait(threads[i])</span><br><span class="line">    if not ok then</span><br><span class="line">        say(i, &quot;: failed to run: &quot;, res)</span><br><span class="line">    else</span><br><span class="line">        say(i, &quot;: status: &quot;, res.status)</span><br><span class="line">        say(i, &quot;: body: &quot;, res.body)</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>Here it essentially implements the “wait all” model.</p><p>And below is an example demonstrating the “wait any” model:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">function f()</span><br><span class="line">    ngx.sleep(0.2)</span><br><span class="line">    ngx.say(&quot;f: hello&quot;)</span><br><span class="line">    return &quot;f done&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">function g()</span><br><span class="line">    ngx.sleep(0.1)</span><br><span class="line">    ngx.say(&quot;g: hello&quot;)</span><br><span class="line">    return &quot;g done&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local tf, err = ngx.thread.spawn(f)</span><br><span class="line">if not tf then</span><br><span class="line">    ngx.say(&quot;failed to spawn thread f: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;f thread created: &quot;, coroutine.status(tf))</span><br><span class="line"></span><br><span class="line">local tg, err = ngx.thread.spawn(g)</span><br><span class="line">if not tg then</span><br><span class="line">    ngx.say(&quot;failed to spawn thread g: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;g thread created: &quot;, coroutine.status(tg))</span><br><span class="line"></span><br><span class="line">ok, res = ngx.thread.wait(tf, tg)</span><br><span class="line">if not ok then</span><br><span class="line">    ngx.say(&quot;failed to wait: &quot;, res)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">ngx.say(&quot;res: &quot;, res)</span><br><span class="line"></span><br><span class="line">-- stop the &quot;world&quot;, aborting other running threads</span><br><span class="line">ngx.exit(ngx.OK)</span><br></pre></td></tr></table></figure><p>And it will generate the following output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f thread created: running</span><br><span class="line">g thread created: running</span><br><span class="line">g: hello</span><br><span class="line">res: g done</span><br></pre></td></tr></table></figure><p>This API was first enabled in the <code>v0.7.0</code> release.</p><h2><span id="ngxthreadkill">ngx.thread.kill</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.thread.kill(thread)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.**</p><p>Kills a running “light thread” created by [ngx.thread.spawn]</p><p>According to the current implementation, only the parent coroutine (or “light thread”) can kill a thread. Also, a running “light thread” with pending NGINX subrequests (initiated by [ngx.location.capture]</p><p>This API was first enabled in the <code>v0.9.9</code> release.</p><h2><span id="ngxon_abort">ngx.on_abort</span></h2><p><strong>syntax:</strong> <em>ok, err = ngx.on_abort(callback)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*</p><p>Registers a user Lua function as the callback which gets called automatically when the client closes the (downstream) connection prematurely.</p><p>Returns <code>1</code> if the callback is registered successfully or returns <code>nil</code> and a string describing the error otherwise.</p><p>All the [Nginx API for Lua]</p><p>The callback function can decide what to do with the client abortion event all by itself. For example, it can simply ignore the event by doing nothing and the current Lua request handler will continue executing without interruptions. And the callback function can also decide to terminate everything by calling [ngx.exit]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">local function my_cleanup()</span><br><span class="line">    -- custom cleanup work goes here, like cancelling a pending DB transaction</span><br><span class="line"></span><br><span class="line">    -- now abort all the &quot;light threads&quot; running in the current request handler</span><br><span class="line">    ngx.exit(499)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local ok, err = ngx.on_abort(my_cleanup)</span><br><span class="line">if not ok then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;failed to register the on_abort callback: &quot;, err)</span><br><span class="line">    ngx.exit(500)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>When [lua_check_client_abort]</p><p>According to the current implementation, this function can only be called once in a single request handler; subsequent calls will return the error message “duplicate call”.</p><p>This API was first introduced in the <code>v0.7.4</code> release.</p><p>See also [lua_check_client_abort]</p><h2><span id="ngxtimerat">ngx.timer.at</span></h2><p><strong>syntax:</strong> <em>hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, …)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Creates an Nginx timer with a user callback function as well as optional user arguments.</p><p>The first argument, <code>delay</code>, specifies the delay for the timer, in seconds. One can specify fractional seconds like <code>0.001</code> to mean 1 millisecond here. <code>0</code> delay can also be specified, in which case the timer will immediately expire when the current handler yields execution.</p><p>The second argument, <code>callback</code>, can be any Lua function, which will be invoked later in a background “light thread” after the delay specified. The user callback will be called automatically by the Nginx core with the arguments <code>premature</code>, <code>user_arg1</code>, <code>user_arg2</code>, and etc, where the <code>premature</code> argument takes a boolean value indicating whether it is a premature timer expiration or not, and <code>user_arg1</code>, <code>user_arg2</code>, and etc, are those (extra) user arguments specified when calling <code>ngx.timer.at</code>as the remaining arguments.</p><p>Premature timer expiration happens when the Nginx worker process is trying to shut down, as in an Nginx configuration reload triggered by the <code>HUP</code> signal or in an Nginx server shutdown. When the Nginx worker is trying to shut down, one can no longer call <code>ngx.timer.at</code> to create new timers with nonzero delays and in that case <code>ngx.timer.at</code> will return a “conditional false” value and a string describing the error, that is, “process exiting”.</p><p>Starting from the <code>v0.9.3</code> release, it is allowed to create zero-delay timers even when the Nginx worker process starts shutting down.</p><p>When a timer expires, the user Lua code in the timer callback is running in a “light thread” detached completely from the original request creating the timer. So objects with the same lifetime as the request creating them, like [cosockets]</p><p>Here is a simple example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    ...</span><br><span class="line">    log_by_lua_block &#123;</span><br><span class="line">        local function push_data(premature, uri, args, status)</span><br><span class="line">            -- push the data uri, args, and status to the remote</span><br><span class="line">            -- via ngx.socket.tcp or ngx.socket.udp</span><br><span class="line">            -- (one may want to buffer the data in Lua a bit to</span><br><span class="line">            -- save I/O operations)</span><br><span class="line">        end</span><br><span class="line">        local ok, err = ngx.timer.at(0, push_data,</span><br><span class="line">                                     ngx.var.uri, ngx.var.args, ngx.header.status)</span><br><span class="line">        if not ok then</span><br><span class="line">            ngx.log(ngx.ERR, &quot;failed to create timer: &quot;, err)</span><br><span class="line">            return</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>One can also create infinite re-occurring timers, for instance, a timer getting triggered every <code>5</code> seconds, by calling <code>ngx.timer.at</code> recursively in the timer callback function. Here is such an example,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">local delay = 5</span><br><span class="line">local handler</span><br><span class="line">handler = function (premature)</span><br><span class="line">    -- do some routine job in Lua just like a cron job</span><br><span class="line">    if premature then</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line">    local ok, err = ngx.timer.at(delay, handler)</span><br><span class="line">    if not ok then</span><br><span class="line">        ngx.log(ngx.ERR, &quot;failed to create the timer: &quot;, err)</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">local ok, err = ngx.timer.at(delay, handler)</span><br><span class="line">if not ok then</span><br><span class="line">    ngx.log(ngx.ERR, &quot;failed to create the timer: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>It is recommended, however, to use the [ngx.timer.every]</p><p>Because timer callbacks run in the background and their running time will not add to any client request’s response time, they can easily accumulate in the server and exhaust system resources due to either Lua programming mistakes or just too much client traffic. To prevent extreme consequences like crashing the Nginx server, there are built-in limitations on both the number of “pending timers” and the number of “running timers” in an Nginx worker process. The “pending timers” here mean timers that have not yet been expired and “running timers” are those whose user callbacks are currently running.</p><p>The maximal number of pending timers allowed in an Nginx worker is controlled by the [lua_max_pending_timers]</p><p>According to the current implementation, each “running timer” will take one (fake) connection record from the global connection record list configured by the standard <a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" target="_blank" rel="noopener">worker_connections</a> directive in <code>nginx.conf</code>. So ensure that the<a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" target="_blank" rel="noopener">worker_connections</a> directive is set to a large enough value that takes into account both the real connections and fake connections required by timer callbacks (as limited by the [lua_max_running_timers]</p><p>A lot of the Lua APIs for Nginx are enabled in the context of the timer callbacks, like stream/datagram cosockets ([ngx.socket.tcp]</p><p>You can pass most of the standard Lua values (nils, booleans, numbers, strings, tables, closures, file handles, and etc) into the timer callback, either explicitly as user arguments or implicitly as upvalues for the callback closure. There are several exceptions, however: you <em>cannot</em> pass any thread objects returned by [coroutine.create]</p><p>This API was first introduced in the <code>v0.8.0</code> release.</p><h2><span id="ngxtimerevery">ngx.timer.every</span></h2><p><strong>syntax:</strong> <em>hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, …)</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the [ngx.timer.at]</p><ol><li><code>delay</code> <em>cannot</em> be zero,</li><li>timer will be created every <code>delay</code> seconds until the current Nginx worker process starts exiting.</li></ol><p>When success, returns a “conditional true” value (but not a <code>true</code>). Otherwise, returns a “conditional false” value and a string describing the error.</p><p>This API also respect the [lua_max_pending_timers]</p><p>This API was first introduced in the <code>v0.10.9</code> release.</p><h2><span id="ngxtimerrunning_count">ngx.timer.running_count</span></h2><p><strong>syntax:</strong> <em>count = ngx.timer.running_count()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the number of timers currently running.</p><p>This directive was first introduced in the <code>v0.9.20</code> release.</p><h2><span id="ngxtimerpending_count">ngx.timer.pending_count</span></h2><p><strong>syntax:</strong> <em>count = ngx.timer.pending_count()</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Returns the number of pending timers.</p><p>This directive was first introduced in the <code>v0.9.20</code> release.</p><h2><span id="ngxconfigsubsystem">ngx.config.subsystem</span></h2><p><strong>syntax:</strong> <em>subsystem = ngx.config.subsystem</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>This string field indicates the current NGINX subsystem the current Lua environment is based on. For this module, this field always takes the string value <code>&quot;http&quot;</code>. For [ngx_stream_lua_module]</p><p>This field was first introduced in the <code>0.10.1</code>.</p><h2><span id="ngxconfigdebug">ngx.config.debug</span></h2><p><strong>syntax:</strong> <em>debug = ngx.config.debug</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the <code>./configure</code> option <code>--with-debug</code>.</p><p>This field was first introduced in the <code>0.8.7</code>.</p><h2><span id="ngxconfigprefix">ngx.config.prefix</span></h2><p><strong>syntax:</strong> <em>prefix = ngx.config.prefix()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>Returns the Nginx server “prefix” path, as determined by the <code>-p</code> command-line option when running the nginx executable, or the path specified by the <code>--prefix</code> command-line option when building Nginx with the <code>./configure</code> script.</p><p>This function was first introduced in the <code>0.9.2</code>.</p><h2><span id="ngxconfignginx_version">ngx.config.nginx_version</span></h2><p><strong>syntax:</strong> <em>ver = ngx.config.nginx_version</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number <code>1.4.3</code> results in the Lua number 1004003.</p><p>This API was first introduced in the <code>0.9.3</code> release.</p><h2><span id="ngxconfignginx_configure">ngx.config.nginx_configure</span></h2><p><strong>syntax:</strong> <em>str = ngx.config.nginx_configure()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*</p><p>This function returns a string for the NGINX <code>./configure</code> command’s arguments string.</p><p>This API was first introduced in the <code>0.9.5</code> release.</p><h2><span id="ngxconfigngx_lua_version">ngx.config.ngx_lua_version</span></h2><p><strong>syntax:</strong> <em>ver = ngx.config.ngx_lua_version</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*</p><p>This field take an integral value indicating the version number of the current <code>ngx_lua</code> module being used. For example, the version number <code>0.9.3</code> results in the Lua number 9003.</p><p>This API was first introduced in the <code>0.9.3</code> release.</p><h2><span id="ngxworkerexiting">ngx.worker.exiting</span></h2><p><strong>syntax:</strong> <em>exiting = ngx.worker.exiting()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).</p><p>This API was first introduced in the <code>0.9.3</code> release.</p><h2><span id="ngxworkerpid">ngx.worker.pid</span></h2><p><strong>syntax:</strong> <em>pid = ngx.worker.pid()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than <code>ngx.var.pid</code> and can be used in contexts where the [ngx.var.VARIABLE]</p><p>This API was first introduced in the <code>0.9.5</code> release.</p><h2><span id="ngxworkercount">ngx.worker.count</span></h2><p><strong>syntax:</strong> <em>count = ngx.worker.count()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*</p><p>Returns the total number of the Nginx worker processes (i.e., the value configured by the <a href="http://nginx.org/en/docs/ngx_core_module.html#worker_processes" target="_blank" rel="noopener">worker_processes</a> directive in <code>nginx.conf</code>).</p><p>This API was first introduced in the <code>0.9.20</code> release.</p><h2><span id="ngxworkerid">ngx.worker.id</span></h2><p><strong>syntax:</strong> <em>count = ngx.worker.id()</em></p><p><strong>context:</strong> set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*</p><p>Returns the ordinal number of the current Nginx worker processes (starting from number 0).</p><p>So if the total number of workers is <code>N</code>, then this method may return a number between 0 and <code>N - 1</code> (inclusive).</p><p>This function returns meaningful values only for NGINX 1.9.1+. With earlier versions of NGINX, it always returns <code>nil</code>.</p><p>See also [ngx.worker.count]</p><p>This API was first introduced in the <code>0.9.20</code> release.</p><h2><span id="ngxsemaphore">ngx.semaphore</span></h2><p><strong>syntax:</strong> <em>local semaphore = require “ngx.semaphore”</em></p><p>This is a Lua module that implements a classic-style semaphore API for efficient synchronizations among different “light threads”. Sharing the same semaphore among different “light threads” created in different (request) contexts are also supported as long as the “light threads” reside in the same NGINX worker process and the [lua_code_cache]</p><p>This Lua module does not ship with this ngx_lua module itself rather it is shipped with the [lua-resty-core]</p><p>Please refer to the [documentation]</p><p>This feature requires at least ngx_lua <code>v0.10.0</code>.</p><h2><span id="ngxbalancer">ngx.balancer</span></h2><p><strong>syntax:</strong> <em>local balancer = require “ngx.balancer”</em></p><p>This is a Lua module that provides a Lua API to allow defining completely dynamic load balancers in pure Lua.</p><p>This Lua module does not ship with this ngx_lua module itself rather it is shipped with the [lua-resty-core]</p><p>Please refer to the [documentation]</p><p>This feature requires at least ngx_lua <code>v0.10.0</code>.</p><h2><span id="ngxssl">ngx.ssl</span></h2><p><strong>syntax:</strong> <em>local ssl = require “ngx.ssl”</em></p><p>This Lua module provides API functions to control the SSL handshake process in contexts like [ssl_certificate_by_lua*]</p><p>This Lua module does not ship with this ngx_lua module itself rather it is shipped with the [lua-resty-core]</p><p>Please refer to the [documentation]</p><p>This feature requires at least ngx_lua <code>v0.10.0</code>.</p><h2><span id="ngxocsp">ngx.ocsp</span></h2><p><strong>syntax:</strong> <em>local ocsp = require “ngx.ocsp”</em></p><p>This Lua module provides API to perform OCSP queries, OCSP response validations, and OCSP stapling planting.</p><p>Usually, this module is used together with the [ngx.ssl]</p><p>This Lua module does not ship with this ngx_lua module itself rather it is shipped with the [lua-resty-core]</p><p>Please refer to the [documentation]</p><p>This feature requires at least ngx_lua <code>v0.10.0</code>.</p><h2><span id="ndkset_vardirective">ndk.set_var.DIRECTIVE</span></h2><p><strong>syntax:</strong> <em>res = ndk.set_var.DIRECTIVE_NAME</em></p><p><strong>context:</strong> init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>This mechanism allows calling other nginx C modules’ directives that are implemented by [Nginx Devel Kit]</p><p>For example, the following <a href="http://github.com/openresty/set-misc-nginx-module" target="_blank" rel="noopener">set-misc-nginx-module</a> directives can be invoked this way:</p><ul><li><a href="http://github.com/openresty/set-misc-nginx-module#set_quote_sql_str" target="_blank" rel="noopener">set_quote_sql_str</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_quote_pgsql_str" target="_blank" rel="noopener">set_quote_pgsql_str</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_quote_json_str" target="_blank" rel="noopener">set_quote_json_str</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_unescape_uri" target="_blank" rel="noopener">set_unescape_uri</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_escape_uri" target="_blank" rel="noopener">set_escape_uri</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base32" target="_blank" rel="noopener">set_encode_base32</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base32" target="_blank" rel="noopener">set_decode_base32</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64" target="_blank" rel="noopener">set_encode_base64</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64" target="_blank" rel="noopener">set_decode_base64</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64" target="_blank" rel="noopener">set_encode_hex</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64" target="_blank" rel="noopener">set_decode_hex</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64" target="_blank" rel="noopener">set_sha1</a></li><li><a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64" target="_blank" rel="noopener">set_md5</a></li></ul><p>For instance,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local res = ndk.set_var.set_escape_uri(&apos;a/b&apos;);</span><br><span class="line">-- now res == &apos;a%2fb&apos;</span><br></pre></td></tr></table></figure><p>Similarly, the following directives provided by <a href="http://github.com/openresty/encrypted-session-nginx-module" target="_blank" rel="noopener">encrypted-session-nginx-module</a> can be invoked from within Lua too:</p><ul><li><a href="http://github.com/openresty/encrypted-session-nginx-module#set_encrypt_session" target="_blank" rel="noopener">set_encrypt_session</a></li><li><a href="http://github.com/openresty/encrypted-session-nginx-module#set_decrypt_session" target="_blank" rel="noopener">set_decrypt_session</a></li></ul><p>This feature requires the [ngx_devel_kit]</p><h2><span id="coroutinecreate">coroutine.create</span></h2><p><strong>syntax:</strong> <em>co = coroutine.create(f)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Creates a user Lua coroutines with a Lua function, and returns a coroutine object.</p><p>Similar to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create" target="_blank" rel="noopener">coroutine.create</a> API, but works in the context of the Lua coroutines created by ngx_lua.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first introduced in the <code>v0.6.0</code> release.</p><h2><span id="coroutineresume">coroutine.resume</span></h2><p><strong>syntax:</strong> <em>ok, … = coroutine.resume(co, …)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Resumes the executation of a user Lua coroutine object previously yielded or just created.</p><p>Similar to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume" target="_blank" rel="noopener">coroutine.resume</a> API, but works in the context of the Lua coroutines created by ngx_lua.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first introduced in the <code>v0.6.0</code> release.</p><h2><span id="coroutineyield">coroutine.yield</span></h2><p><strong>syntax:</strong> <em>… = coroutine.yield(…)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Yields the execution of the current user Lua coroutine.</p><p>Similar to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield" target="_blank" rel="noopener">coroutine.yield</a> API, but works in the context of the Lua coroutines created by ngx_lua.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first introduced in the <code>v0.6.0</code> release.</p><h2><span id="coroutinewrap">coroutine.wrap</span></h2><p><strong>syntax:</strong> <em>co = coroutine.wrap(f)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Similar to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap" target="_blank" rel="noopener">coroutine.wrap</a> API, but works in the context of the Lua coroutines created by ngx_lua.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first introduced in the <code>v0.6.0</code> release.</p><h2><span id="coroutinerunning">coroutine.running</span></h2><p><strong>syntax:</strong> <em>co = coroutine.running()</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Identical to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running" target="_blank" rel="noopener">coroutine.running</a> API.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first enabled in the <code>v0.6.0</code> release.</p><h2><span id="coroutinestatus">coroutine.status</span></h2><p><strong>syntax:</strong> <em>status = coroutine.status(co)</em></p><p><strong>context:</strong> rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*</p><p>Identical to the standard Lua <a href="http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status" target="_blank" rel="noopener">coroutine.status</a> API.</p><p>This API was first usable in the context of [init_by_lua*]</p><p>This API was first enabled in the <code>v0.6.0</code> release.</p><p>##</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#nginx-api-for-lua&quot;&gt;Nginx API for Lua&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx+Lua=OpenResty</title>
    <link href="http://yoursite.com/2018/02/28/Nginx-Lua-OpenResty/"/>
    <id>http://yoursite.com/2018/02/28/Nginx-Lua-OpenResty/</id>
    <published>2018-02-28T08:23:27.000Z</published>
    <updated>2019-03-01T06:26:01.525Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="openresty">openresty</span></h1><h2><span id="应用场景">应用场景</span></h2><p>理论上可以使用ngx_lua开发各种复杂的web应用，不过lua是一种脚本/动态语言，不适合业务逻辑比较重的场景，适合小巧的应用场景，代码行数保持在几十行到几千行。目前见到的一些应用场景有：</p><ul><li>web应用：进行一些业务逻辑的处理，模板渲染，一般流程：mysql/redis/http获取数据-&gt;业务处理-&gt;产生JSON/XML/模板渲染内容，比如京东的列表页/商品详情页；</li><li>接入网关：实现如数据校验前置、缓存前置、数据过滤、API请求聚合、AB测试、灰度发布、降级、监控等功能，比如京东的交易大Nginx节点、无线网关、实时价格、动态服务；</li><li>Web防火墙：可以进行IP/URL/UserAgent/Referer黑名单、限流功能；</li><li>缓存服务器：可以对响应内容进行缓存，减少到后端的请求，从而提高性能；</li><li>其他：如静态资源服务器、消息推送服务、缩略图裁剪等</li></ul><h2><span id="location">location</span></h2><h3><span id="内部调用">内部调用</span></h3><p>对数据库、内部公共函数的统一接口，可以把它们放到统一的location中。</p><p>为了保护这些内部接口，都会把这些接口设置为internal。这么做的好处是可以让这个内部接口相对独立，不受外界干扰。</p><p><em>ngx.say()是怎么调用的？</em></p><p><em>这是个API，供lua调用。那这个api的定义和实现都在哪里呢？</em></p><p>示例代码：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">location = /sum &#123;</span><br><span class="line">    # 只允许内部调用</span><br><span class="line">    internal;</span><br><span class="line"></span><br><span class="line">    # 这里做了一个求和运算只是一个例子，可以在这里完成一些数据库、</span><br><span class="line">    # 缓存服务器的操作，达到基础模块和业务逻辑分离目的</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        <span class="keyword">local</span> args = ngx.req.get_uri_args()</span><br><span class="line">        # ngx.say 打印到response body并换行</span><br><span class="line">        ngx.say(<span class="built_in">tonumber</span>(args.a) + <span class="built_in">tonumber</span>(args.b))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /app/test &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        <span class="keyword">local</span> res = ngx.location.capture(</span><br><span class="line">                        <span class="string">"/sum"</span>, &#123;args=&#123;a=<span class="number">3</span>, b=<span class="number">8</span>&#125;&#125;</span><br><span class="line">                        )</span><br><span class="line">        ngx.say(<span class="string">"status:"</span>, res.<span class="built_in">status</span>, <span class="string">" response:"</span>, res.body)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@geek work]# curl localhost/app/test</span><br><span class="line"><span class="built_in">status</span>:<span class="number">200</span>response:<span class="number">11</span></span><br></pre></td></tr></table></figure><p>并行请求的效果，示例如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">location = /sum &#123;</span><br><span class="line">    internal;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="keyword">local</span> args = ngx.req.get_uri_args()</span><br><span class="line">        ngx.<span class="built_in">print</span>(<span class="built_in">tonumber</span>(args.a) + <span class="built_in">tonumber</span>(args.b))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /subduction &#123;</span><br><span class="line">    internal;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="keyword">local</span> args = ngx.req.get_uri_args()</span><br><span class="line">        ngx.<span class="built_in">print</span>(<span class="built_in">tonumber</span>(args.a) - <span class="built_in">tonumber</span>(args.b))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /app/test_parallels &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        <span class="keyword">local</span> start_time = ngx.now()</span><br><span class="line">        <span class="keyword">local</span> res1, res2 = ngx.location.capture_multi( &#123;</span><br><span class="line">                        &#123;<span class="string">"/sum"</span>, &#123;args=&#123;a=<span class="number">3</span>, b=<span class="number">8</span>&#125;&#125;&#125;,</span><br><span class="line">                        &#123;<span class="string">"/subduction"</span>, &#123;args=&#123;a=<span class="number">3</span>, b=<span class="number">8</span>&#125;&#125;&#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">        ngx.say(<span class="string">"status:"</span>, res1.<span class="built_in">status</span>, <span class="string">" response:"</span>, res1.body)</span><br><span class="line">        ngx.say(<span class="string">"status:"</span>, res2.<span class="built_in">status</span>, <span class="string">" response:"</span>, res2.body)</span><br><span class="line">        ngx.say(<span class="string">"time used:"</span>, ngx.now() - start_time)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /app/test_queue &#123;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        <span class="keyword">local</span> start_time = ngx.now()</span><br><span class="line">        <span class="keyword">local</span> res1 = ngx.location.capture_multi( &#123;</span><br><span class="line">                        &#123;<span class="string">"/sum"</span>, &#123;args=&#123;a=<span class="number">3</span>, b=<span class="number">8</span>&#125;&#125;&#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">local</span> res2 = ngx.location.capture_multi( &#123;</span><br><span class="line">                        &#123;<span class="string">"/subduction"</span>, &#123;args=&#123;a=<span class="number">3</span>, b=<span class="number">8</span>&#125;&#125;&#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">        ngx.say(<span class="string">"status:"</span>, res1.<span class="built_in">status</span>, <span class="string">" response:"</span>, res1.body)</span><br><span class="line">        ngx.say(<span class="string">"status:"</span>, res2.<span class="built_in">status</span>, <span class="string">" response:"</span>, res2.body)</span><br><span class="line">        ngx.say(<span class="string">"time used:"</span>, ngx.now() - start_time)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 测试结果</span><br><span class="line">➜  ~ curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/app/test_parallels</span><br><span class="line"><span class="built_in">status</span>:<span class="number">200</span> response:<span class="number">11</span></span><br><span class="line"><span class="built_in">status</span>:<span class="number">200</span> response:<span class="number">-5</span></span><br><span class="line"><span class="built_in">time</span> used:<span class="number">0.10099983215332</span></span><br><span class="line">➜  ~ curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/app/test_queue</span><br><span class="line"><span class="built_in">status</span>:<span class="number">200</span> response:<span class="number">11</span></span><br><span class="line"><span class="built_in">status</span>:<span class="number">200</span> response:<span class="number">-5</span></span><br><span class="line"><span class="built_in">time</span> used:<span class="number">0.20199990272522</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;openresty&quot;&gt;openresty&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;应用场景&quot;&gt;应用场景&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;理论上可以使用ngx_lua开发各种复杂的web应用，不过lua是一种脚本/动态语言，不适合业务逻辑比较重的场
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>深入剖析Nginx</title>
    <link href="http://yoursite.com/2018/02/26/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90Nginx/"/>
    <id>http://yoursite.com/2018/02/26/深入剖析Nginx/</id>
    <published>2018-02-26T08:29:57.000Z</published>
    <updated>2019-02-28T00:48:00.919Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#跟踪和调试">跟踪和调试</a><ul><li><a href="#利用gdb调试">利用gdb调试</a></li><li><a href="#利用stracepstack调试nginx">利用strace/pstack调试Nginx</a></li><li><a href="#获得nginx完整执行流程">获得Nginx完整执行流程</a></li><li><a href="#加桩调试">加桩调试</a></li><li><a href="#特殊应用逻辑的调试">特殊应用逻辑的调试</a></li></ul></li><li><a href="#进程模型">进程模型</a><ul><li><a href="#整体架构">整体架构</a></li><li><a href="#核心进程模型">核心进程模型</a><ul><li><a href="#master进程">master进程</a></li><li><a href="#工作进程">工作进程</a></li><li><a href="#cache进程模型">Cache进程模型</a></li><li><a href="#cache管理进程">Cache管理进程</a></li><li><a href="#cache加载进程">Cache加载进程</a></li></ul></li><li><a href="#进程通信">进程通信</a></li><li><a href="#共享内存">共享内存</a></li><li><a href="#slab机制">slab机制</a></li><li><a href="#信号处理">信号处理</a></li><li><a href="#准备工作">准备工作</a></li><li><a href="#设置生效">设置生效</a></li><li><a href="#处理实例">处理实例</a></li></ul></li><li><a href="#数据结构">数据结构</a><ul><li><a href="#内存池">内存池</a></li><li><a href="#hash">Hash</a></li><li><a href="#radix-tree">Radix tree</a></li></ul></li><li><a href="#配置解析">配置解析</a><ul><li><a href="#配置文件格式">配置文件格式</a></li><li><a href="#配置项目解析准备">配置项目解析准备</a></li><li><a href="#配置文件解析流程">配置文件解析流程</a></li><li><a href="#配置信息组织结构">配置信息组织结构</a></li><li><a href="#配置信息的继承">配置信息的继承</a></li></ul></li><li><a href="#模块综述">模块综述</a><ul><li><a href="#handler模块">Handler模块</a></li><li><a href="#filter模块">Filter模块</a></li><li><a href="#upstream模块">Upstream模块</a></li><li><a href="#load-balance模块">Load balance模块</a></li></ul></li><li><a href="#事件管理机制">事件管理机制</a><ul><li><a href="#io多路复用模型">IO多路复用模型</a></li><li><a href="#epoll模型">epoll模型</a></li><li><a href="#事件处理">事件处理</a></li><li><a href="#负载均衡">负载均衡</a></li><li><a href="#客户端请求均衡">客户端请求均衡</a></li><li><a href="#多核绑定">多核绑定</a></li><li><a href="#超时管理">超时管理</a></li></ul></li><li><a href="#变量机制">变量机制</a></li><li><a href="#请求处理与响应">请求处理与响应</a></li><li><a href="#请求定位">请求定位</a></li><li><a href="#动态页面请求处理">动态页面请求处理</a></li><li><a href="#过滤模块负载均衡访问控制">过滤模块负载均衡访问控制</a></li></ul><!-- tocstop --><h1><span id="跟踪和调试">跟踪和调试</span></h1><h2><span id="利用gdb调试">利用gdb调试</span></h2><ul><li><p>绑定Nginx到gdb</p><p><code>./configure --with-cc-opt=&#39;-g -O0&#39;</code></p><p>or</p><p><code>CFLAGS=&quot;-g -O0&quot; ./configure</code></p></li></ul><h2><span id="利用stracepstack调试nginx">利用strace/pstack调试Nginx</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@geek example]# ps -ef | grep nginx</span><br><span class="line">root      8971     1  0 2月26 ?       00:00:00 nginx: master process objs</span><br><span class="line">nobody    8972  8971  0 2月26 ?       00:00:00 nginx: worker process</span><br><span class="line">root     14396 12063  0 01:12 pts/1    00:00:00 grep --color=auto nginx</span><br><span class="line">[root@geek example]# strace -p 8972</span><br><span class="line">strace: Process 8972 attached</span><br><span class="line">epoll_wait(8,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@geek example]# wget 127.0.0.1:8080</span><br><span class="line">--2019-02-27 01:12:54--  http://127.0.0.1:8080/</span><br><span class="line">正在连接 127.0.0.1:8080... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">长度：612 [text/html]</span><br><span class="line">正在保存至: “index.html”</span><br><span class="line"></span><br><span class="line">100%[===============================&gt;] 612         --.-K/s 用时 0.004s</span><br><span class="line"></span><br><span class="line">2019-02-27 01:12:54 (167 KB/s) - 已保存 “index.html” [612/612])</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@geek example]<span class="meta"># strace -p 8972</span></span><br><span class="line">strace: Process <span class="number">8972</span> attached</span><br><span class="line">epoll_wait(<span class="number">8</span>, [&#123;EPOLLIN, &#123;u32=<span class="number">1462673424</span>, u64=<span class="number">139776878354448</span>&#125;&#125;], <span class="number">512</span>, <span class="number">-1</span>) = <span class="number">1</span></span><br><span class="line">    <span class="comment">// 返回值为1，表示有1个描述符存在可读/写事件，这里是可读事件</span></span><br><span class="line">accept4(<span class="number">6</span>, &#123;sa_family=AF_INET, sin_port=htons(<span class="number">44738</span>), </span><br><span class="line">sin_addr=inet_addr(<span class="string">"127.0.0.1"</span>)&#125;, [<span class="number">16</span>], SOCK_NONBLOCK) = <span class="number">3</span></span><br><span class="line">    <span class="comment">// 接受该请求，返回的数字3表示socket的文件描述符</span></span><br><span class="line">epoll_ctl(<span class="number">8</span>, EPOLL_CTL_ADD, <span class="number">3</span>, &#123;EPOLLIN|EPOLLRDHUP|EPOLLET, &#123;u32=<span class="number">1462673872</span>, u64=<span class="number">139776878354896</span>&#125;&#125;) = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 把accept4建立的socket套接字（参数3）加入到事件监听机制里</span></span><br><span class="line">epoll_wait(<span class="number">8</span>, [&#123;EPOLLIN, &#123;u32=<span class="number">1462673872</span>, u64=<span class="number">139776878354896</span>&#125;&#125;], <span class="number">512</span>, <span class="number">60000</span>) = <span class="number">1</span></span><br><span class="line">recvfrom(<span class="number">3</span>, <span class="string">"GET / HTTP/1.1\r\nUser-Agent: Wget"</span>..., <span class="number">1024</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>) = <span class="number">112</span></span><br><span class="line">    <span class="comment">// 从发生可读事件的socket文件描述符内读取数据，读取的数据存在第二个参数内，读取了112个字节</span></span><br><span class="line">stat(<span class="string">"/usr/local/nginx/html/index.html"</span>, &#123;st_mode=S_IFREG|<span class="number">0644</span>, st_size=<span class="number">612</span>, ...&#125;) = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 判断客户端请求的html文件是否存在，返回值0表示存在</span></span><br><span class="line">open(<span class="string">"/usr/local/nginx/html/index.html"</span>, O_RDONLY|O_NONBLOCK) = <span class="number">10</span></span><br><span class="line">fstat(<span class="number">10</span>, &#123;st_mode=S_IFREG|<span class="number">0644</span>, st_size=<span class="number">612</span>, ...&#125;) = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 打开并获取文件状态信息</span></span><br><span class="line">writev(<span class="number">3</span>, [&#123;<span class="string">"HTTP/1.1 200 OK\r\nServer: nginx/1"</span>..., <span class="number">238</span>&#125;], <span class="number">1</span>) = <span class="number">238</span></span><br><span class="line">    <span class="comment">// 把响应头通过文件描述符3代表的socket套接字发给客户端</span></span><br><span class="line">sendfile(<span class="number">3</span>, <span class="number">10</span>, [<span class="number">0</span>] =&gt; [<span class="number">612</span>], <span class="number">612</span>)      = <span class="number">612</span></span><br><span class="line">    <span class="comment">// 把文件描述符10代表的响应体通过文件描述符3代表的socket套接字发给客户端</span></span><br><span class="line">write(<span class="number">4</span>, <span class="string">"127.0.0.1 - - [27/Feb/2019:01:12"</span>..., <span class="number">104</span>) = <span class="number">104</span></span><br><span class="line">    <span class="comment">// 往文件描述符4代表的日志文件内write一条日志信息</span></span><br><span class="line">close(<span class="number">10</span>)                               = <span class="number">0</span></span><br><span class="line">setsockopt(<span class="number">3</span>, SOL_TCP, TCP_NODELAY, [<span class="number">1</span>], <span class="number">4</span>) = <span class="number">0</span></span><br><span class="line">epoll_wait(<span class="number">8</span>, [&#123;EPOLLIN|EPOLLRDHUP, &#123;u32=<span class="number">1462673872</span>, u64=<span class="number">139776878354896</span>&#125;&#125;], <span class="number">512</span>, <span class="number">65000</span>) = <span class="number">1</span></span><br><span class="line">recvfrom(<span class="number">3</span>, <span class="string">""</span>, <span class="number">1024</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>)    = <span class="number">0</span></span><br><span class="line">close(<span class="number">3</span>)                                = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 最后，关闭文件描述符3代表的socket套接字</span></span><br><span class="line">epoll_wait(<span class="number">8</span>,</span><br></pre></td></tr></table></figure><p>由于strace能够提供Nginx执行过程中的这些内部信息，所以在出现一些奇怪现象时，比如Nginx启动失败、响应的文件数据和预期不一致、莫名其妙的Segmentation Fault段错误、存在性能瓶颈（利用-T选项跟踪各个函数的消耗时间），利用strace也许能提供一些相关帮助。</p><p>想知道Nginx当前内部到底在执行什么函数，可使用pstack。</p><p>比如在无客户端请求的情况下，Nginx阻塞在epoll_wait系统调用处，此时利用pstack查看Nginx函数调用栈关系，如下所示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@geek example]<span class="meta"># pstack 8972</span></span><br><span class="line">#<span class="number">0</span>  <span class="number">0x00007f205637d463</span> in __epoll_wait_nocancel () from /lib64/libc.so<span class="number">.6</span></span><br><span class="line">#<span class="number">1</span>  <span class="number">0x000000000044c1eb</span> <span class="function">in <span class="title">ngx_epoll_process_events</span> <span class="params">(cycle=<span class="number">0x1eaf0c0</span>,</span></span></span><br><span class="line">    timer=18446744073709551615, flags=1) at src/event/modules/ngx_epoll_module.c:800</span><br><span class="line">#<span class="number">2</span>  <span class="number">0x000000000043ddb6</span> in ngx_process_events_and_timers </span><br><span class="line">        (cycle=<span class="number">0x1eaf0c0</span>) at src/event/ngx_event.c:<span class="number">242</span></span><br><span class="line">#<span class="number">3</span>  <span class="number">0x000000000044a0b8</span> <span class="function">in <span class="title">ngx_worker_process_cycle</span> <span class="params">(cycle=<span class="number">0x1eaf0c0</span>, </span></span></span><br><span class="line">        data=0x0) at src/os/unix/ngx_process_cycle.c:750</span><br><span class="line">#<span class="number">4</span>  <span class="number">0x0000000000446f87</span> <span class="function">in <span class="title">ngx_spawn_process</span> <span class="params">(cycle=<span class="number">0x1eaf0c0</span>, </span></span></span><br><span class="line"><span class="function"><span class="params">            proc=<span class="number">0x44a00a</span> &lt;ngx_worker_process_cycle&gt;, data=<span class="number">0x0</span>, name=<span class="number">0x4cacd0</span></span></span></span><br><span class="line">            "worker process", respawn=-3) at src/os/unix/ngx_process.c:199</span><br><span class="line">#<span class="number">5</span>  <span class="number">0x00000000004492e9</span> in ngx_start_worker_processes </span><br><span class="line">     (cycle=<span class="number">0x1eaf0c0</span>, n=<span class="number">1</span>, type=<span class="number">-3</span>) at src/os/unix/ngx_process_cycle.c:<span class="number">359</span></span><br><span class="line">#<span class="number">6</span>  <span class="number">0x0000000000448a49</span> in ngx_master_process_cycle </span><br><span class="line">                (cycle=<span class="number">0x1eaf0c0</span>) at src/os/unix/ngx_process_cycle.c:<span class="number">131</span></span><br><span class="line">#<span class="number">7</span>  <span class="number">0x000000000040ba0a</span> <span class="function">in <span class="title">main</span> <span class="params">(argc=<span class="number">1</span>, argv=<span class="number">0x7ffdcc4edf68</span>)</span> at</span></span><br><span class="line">           src/core/nginx.c:382</span><br></pre></td></tr></table></figure><p>从main()函数到epoll_wait()函数的调用关系一目了然。</p><h2><span id="获得nginx完整执行流程">获得Nginx完整执行流程</span></h2><p>参照<a href="https://jeychu.github.io/2019/02/27/如何追踪函数的完整调用过程/" target="_blank" rel="noopener">如何追踪函数的完整调用过程</a>中使用gdb的方法，来获取Nginx完整的执行流程。如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]# readelf -s /root/nginx-1.14.2/objs/nginx  | gawk &apos; &#123;    </span><br><span class="line">if($4 == &quot;FUNC&quot; &amp;&amp; $2 != 0) &#123; </span><br><span class="line">  print &quot;# code for &quot; $NF;</span><br><span class="line">  print &quot;b *0x&quot; $2;</span><br><span class="line">  print &quot;commands&quot;;</span><br><span class="line">  print &quot;silent&quot;;   </span><br><span class="line">  print &quot;bt 1&quot;;</span><br><span class="line">  print &quot;c&quot;;</span><br><span class="line">  print &quot;end&quot;;     </span><br><span class="line">  print &quot;&quot;;    </span><br><span class="line">&#125;  </span><br><span class="line">&#125;&apos; &gt; ngsym;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]# cat ngsym</span><br><span class="line"># code for ngx_http_upstream_free_ro</span><br><span class="line">b *0x0000000000480aea</span><br><span class="line">commands</span><br><span class="line">silent</span><br><span class="line">bt 1</span><br><span class="line">c</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># code for ngx_http_test_content_typ</span><br><span class="line">b *0x0000000000452bb8</span><br><span class="line">commands</span><br><span class="line">silent</span><br><span class="line">bt 1</span><br><span class="line">c</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># code for ngx_libc_crypt</span><br><span class="line">b *0x00000000004485b4</span><br><span class="line">commands</span><br><span class="line">silent</span><br><span class="line">bt 1</span><br><span class="line">c</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># code for ngx_timezone_update</span><br><span class="line">b *0x00000000004438f2</span><br><span class="line">commands</span><br><span class="line">silent</span><br><span class="line">bt 1</span><br><span class="line">c</span><br><span class="line">end</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]# gdb --command=ngsym nginx-1.14.2/objs/nginx -q</span><br></pre></td></tr></table></figure><p>进入gdb交互界面，输入r，执行命令，就可以获得Nginx完整的执行流程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@geek ~]# gdb --command=ngsym nginx-1.14.2/objs/nginx -q | tee nginx_flow</span><br></pre></td></tr></table></figure><p>可将输出重定向到<a href="https://github.com/jeychu/nginx-deepin" target="_blank" rel="noopener">nginx_flow</a>文件中。</p><h2><span id="加桩调试">加桩调试</span></h2><p>为了让一个模块执行起来，额外添加一些支撑的代码，称为加桩。</p><p>Nginx很多的基础实现（比如slab机制、红黑树、chain链、array数组等）都比较独立，要调试它们需提供少量的桩代码进行加桩测试。</p><p>以slab为例。</p><h2><span id="特殊应用逻辑的调试">特殊应用逻辑的调试</span></h2><h1><span id="进程模型">进程模型</span></h1><h2><span id="整体架构">整体架构</span></h2><p><img src="/2018/02/26/深入剖析Nginx/1551226860880.png" alt="1551226860880"></p><h2><span id="核心进程模型">核心进程模型</span></h2><p><img src="/2018/02/26/深入剖析Nginx/1551227609447.png" alt="1551227609447"></p><h3><span id="master进程">master进程</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// src/os/unix/ngx_process_cycle.c</span><br><span class="line">void</span><br><span class="line">ngx_master_process_cycle(ngx_cycle_t *cycle)&#123;</span><br><span class="line">    ...</span><br><span class="line">    for (;;) &#123;</span><br><span class="line">        ...</span><br><span class="line">        sigsuspend(&amp;set);</span><br><span class="line">        ...</span><br><span class="line">        if (ngx_reap)&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        if (!live &amp;&amp; (ngx_terminate || ngx_quit)) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        if (ngx_terminate) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        if (ngx_quit) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>master进程的无限for(;;)循环内有一个关键的四个suspend()函数调用，该函数使得master大部分时间处于挂起等待状态，直到master接收到信号为止。</p><h3><span id="工作进程">工作进程</span></h3><h3><span id="cache进程模型">Cache进程模型</span></h3><h3><span id="cache管理进程">Cache管理进程</span></h3><h3><span id="cache加载进程">Cache加载进程</span></h3><h2><span id="进程通信">进程通信</span></h2><h2><span id="共享内存">共享内存</span></h2><h2><span id="slab机制">slab机制</span></h2><h2><span id="信号处理">信号处理</span></h2><h2><span id="准备工作">准备工作</span></h2><h2><span id="设置生效">设置生效</span></h2><h2><span id="处理实例">处理实例</span></h2><h1><span id="数据结构">数据结构</span></h1><h2><span id="内存池">内存池</span></h2><h2><span id="hash">Hash</span></h2><h2><span id="radix-tree">Radix tree</span></h2><h1><span id="配置解析">配置解析</span></h1><h2><span id="配置文件格式">配置文件格式</span></h2><h2><span id="配置项目解析准备">配置项目解析准备</span></h2><h2><span id="配置文件解析流程">配置文件解析流程</span></h2><h2><span id="配置信息组织结构">配置信息组织结构</span></h2><h2><span id="配置信息的继承">配置信息的继承</span></h2><h1><span id="模块综述">模块综述</span></h1><h2><span id="handler模块">Handler模块</span></h2><h2><span id="filter模块">Filter模块</span></h2><h2><span id="upstream模块">Upstream模块</span></h2><h2><span id="load-balance模块">Load balance模块</span></h2><h1><span id="事件管理机制">事件管理机制</span></h1><h2><span id="io多路复用模型">IO多路复用模型</span></h2><h2><span id="epoll模型">epoll模型</span></h2><h2><span id="事件处理">事件处理</span></h2><h2><span id="负载均衡">负载均衡</span></h2><h2><span id="客户端请求均衡">客户端请求均衡</span></h2><h2><span id="多核绑定">多核绑定</span></h2><h2><span id="超时管理">超时管理</span></h2><h1><span id="变量机制">变量机制</span></h1><h1><span id="请求处理与响应">请求处理与响应</span></h1><h1><span id="请求定位">请求定位</span></h1><h1><span id="动态页面请求处理">动态页面请求处理</span></h1><h1><span id="过滤模块负载均衡访问控制">过滤模块负载均衡访问控制</span></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#跟踪和调试&quot;&gt;跟踪和调试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#利用gdb调试&quot;&gt;利用gdb调试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#利用stracepstack调试nginx&quot;&gt;利用strace/p
      
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>持续交付</title>
    <link href="http://yoursite.com/2018/02/23/%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98/"/>
    <id>http://yoursite.com/2018/02/23/持续交付/</id>
    <published>2018-02-23T07:46:12.000Z</published>
    <updated>2019-03-04T12:08:03.463Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#持续交付的价值">持续交付的价值</a><ul><li><a href="#持续交付的定义">持续交付的定义</a></li><li><a href="#持续集成-持续交付和持续部署的关系">持续集成、持续交付和持续部署的关系</a></li><li><a href="#持续交付的显性价值">持续交付的显性价值</a></li><li><a href="#持续交付的隐性价值">持续交付的隐性价值</a></li><li><a href="#如何评估持续交付的价值">如何评估持续交付的价值</a></li></ul></li><li><a href="#影响持续交付的因素">影响持续交付的因素</a><ul><li><a href="#组织和文化因素">组织和文化因素</a></li><li><a href="#代码分支策略的选择">代码分支策略的选择</a><ul><li><a href="#主干开发tbd">主干开发（TBD）</a></li><li><a href="#特性分支开发">特性分支开发</a></li></ul></li></ul></li><li><a href="#依赖管理">依赖管理</a></li><li><a href="#代码回滚">代码回滚</a><ul><li><a href="#什么是代码回滚">什么是代码回滚？</a></li><li><a href="#哪些情况下需要回滚代码">哪些情况下需要回滚代码？</a></li><li><a href="#哪些情况下包的回滚无需回滚代码">哪些情况下包的回滚无需回滚代码？</a></li><li><a href="#代码回滚必须遵循的原则">代码回滚必须遵循的原则</a></li><li><a href="#三种典型回滚场景及回滚策略">三种典型回滚场景及回滚策略</a></li></ul></li><li><a href="#测试环境">测试环境</a><ul><li><a href="#互联网公司测试环境的结构">互联网公司测试环境的结构</a></li><li><a href="#什么是好的测试环境">什么是好的测试环境？</a></li><li><a href="#测试环境的成本">测试环境的成本</a></li><li><a href="#如何调节效率和成本的矛盾">如何调节效率和成本的矛盾？</a></li></ul></li><li><a href="#环境自描性">环境自描性</a><ul><li><a href="#环境一定要标准化">环境一定要标准化</a></li><li><a href="#约定大于配置">约定大于配置</a></li><li><a href="#让环境自己能开口说话">让环境自己能开口说话</a></li></ul></li><li><a href="#各种配置方法">各种配置方法</a></li><li><a href="#分钟级搭建环境">分钟级搭建环境</a><ul><li><a href="#环境构建流水线">环境构建流水线</a></li></ul></li><li><a href="#构建提速">构建提速</a></li><li><a href="#发布">发布</a><ul><li><a href="#发布是持续交付的最后一公里">发布是持续交付的最后一公里</a></li><li><a href="#任何变更都需要发布">任何变更都需要发布</a></li><li><a href="#发布系统一定要注意用户体验">发布系统一定要注意用户体验</a></li><li><a href="#发布系统的核心架构和功能设计">发布系统的核心架构和功能设计</a></li></ul></li><li><a href="#利用监控保障发布质量">利用监控保障发布质量</a></li><li><a href="#代码静态检查">代码静态检查</a></li><li><a href="#破坏性测试">破坏性测试</a></li><li><a href="#自动化回归">自动化回归</a></li><li><a href="#平台化设计持续交付">平台化设计持续交付</a></li><li><a href="#持续交付中的宝贵数据">持续交付中的宝贵数据</a></li><li><a href="#移动app的持续交付生命周期">移动APP的持续交付生命周期</a></li><li><a href="#快速构建持续交付系统">快速构建持续交付系统</a><ul><li><a href="#需求分析">需求分析</a><ul><li><a href="#模拟团队介绍">模拟团队介绍</a></li><li><a href="#模拟系统介绍">模拟系统介绍</a></li></ul></li><li><a href="#gitlab解决代码管理问题">Gitlab解决代码管理问题</a></li><li><a href="#jenkins解决集成打包问题">Jenkins解决集成打包问题</a></li><li><a href="#ansible解决自动部署问题">Ansible解决自动部署问题</a></li></ul></li></ul><!-- tocstop --><h1><span id="持续交付的价值">持续交付的价值</span></h1><h2><span id="持续交付的定义">持续交付的定义</span></h2><blockquote><p>持续交付是软件研发人员，如何将一个好点子，以最快的速度交付给用户的方法。</p><p>From 《持续交付：发布可靠软件的系统方法》</p></blockquote><h2><span id="持续集成-持续交付和持续部署的关系">持续集成、持续交付和持续部署的关系</span></h2><p>我们通常会把软件研发工作拆解，拆分成不同模块或不同团队后进行编码，编码完成后，进行集成构建和测试。这个从编码到构建再到测试的反复持续的过程，就叫做“持续集成”。</p><p>“持续集成”一旦完成，则代表产品处于一个可交付的状态，但并不代表这是最优状态，还需要根据外部使用者的反馈逐步优化。当然这里的使用者并不一定是真正的用户，还可能是测试人员、产品人员、用户体验工程师、安全工程师、企业领导等等。</p><p>这个“持续集成”之后，获取外部对软件的反馈再通过“持续集成”进行优化的过程就叫做“持续交付”，它是“持续集成”的自然延续。</p><p>传统安装型软件，要现场调试，要用户购买等等，其难度可想而知。即使是可达度最高的互联网应用，由于生成环境的多样性、架构的复杂性、影响的广泛性（需要灰度发布）等等，就算产品已是待交付的状态，要真正达到用户可用的标准，还有大量的问题需要解决。</p><p>而“持续部署”就是将可交付产品，快速且安全地交付用户使用的一套方法和系统，它是“持续交付”的最后“一公里”。</p><h2><span id="持续交付的显性价值">持续交付的显性价值</span></h2><p>持续交付也通常以“发布流水线”的方式来解释，即研发团队从开发，到测试，再到部署，最终将产品交付给最终用户使用的过程。</p><p>虽然持续交付着重打造的是发布流水线的部分，但它索要达到的目标是在“最终用户”和“研发团队”之间建立紧密的反馈环：通过持续交付新的软件版本，以验证新想法和软件改动的正确性，并衡量这些改动对软件价值的影响。</p><p>这里所说的“软件价值”，就是收入、日活、GMV等KPI指标了。</p><p>通常我们在实施持续交付后，都能够做到在保证交付质量的前提下，加快交付速度，从而更快地得到市场反馈，引领产品的方向，最终达到扩大收益的目的。</p><p>速度为王的今天，持续交付的能力，正成为评定一家互联网公司研发能力的重要指标。</p><h2><span id="持续交付的隐性价值">持续交付的隐性价值</span></h2><p>无论是什么企业，无论你的职位高低，都可以或者应该尝试持续交付，它一定会让你觉得物超所值。</p><p>它可以实现的能力：</p><ul><li><p>解决技术选型的难题</p><p>技术选型最大的难点在于影响大，又难以验证（或者验证效率低下）。而造成这些困境的绝大多数原因是没有合适的测试环境，比如环境差异造成测试数据缺乏说服力，又比如缺少隔离环境造成服务冲突等等。而这正是持续交付的用武之地。</p><p>持续交付的实施，将全面改善企业对测试环境的关联方法，使得环境管理更合理、更自由。</p></li><li><p>让制定的标准更好落地：</p><p>标准、规范、流程的落地，都需要载体，而最好的载体就是平台工具。而持续交付是一整套平台工具的落地，几乎涵盖了研发的整个生命周期，是天然的、最佳的载体。</p><p>另外，持续交付的落地本身伴随着各类标准、规范、流程的制定和实施，可以说两者相互依存，是非常好的管理思想落地方案。</p></li><li><p>提高跨部门协作的效率</p><p>每一个持续交付的实施团队，都可以说是最厉害的“拆墙大队”，拆的就是各个研发协作部门间的“隔离墙”。</p><p>持续交付能够向各个协作部门输出统一的标准、流程和工具，提升沟通效率；并且通过大量的自动化，进一步提升各部门工作效率；还可以快速集成，把各个分散的团队，无论是横向的业务研发团队，还是纵向的技术框架团队，紧紧地联系在一起，共同进退。</p></li><li><p>从容面对故障</p><p>任何故障都有一个天敌，叫做：快速恢复。</p><p>假设，所有的故障都可以在3分钟内恢复，你是不是觉得天下无敌了。那恢复故障最快、最有效的手段又是什么呢？当然就是回滚（或者重新部署）了，而这正是持续交付所包含和着力打造的能力之一。</p></li><li><p>让知识能够传承</p><p>互联网公司的人才流动之频繁已经远远超过了你我的想象。人来人往，如何将知识传承下来？</p><p>持续交付将团队赖以生存的工作流程进行固化；</p><p>利用代码静态检查等工具，能够很好地传承团队多年来的代码规范，并作为检查项进行自动化校验；</p><p>自动化测试脚本，同样是团队经验的产物。</p></li><li><p>让团队专注于业务而非工程</p><p>持续交付体系也如同中间件一样，能够从日常的业务研发工作中抽象出来，其不同只在于中间件解决架构问题，而持续交付解决工程问题。</p><p>这样研发团队能够全力应付业务的需求，而不用总是重复奔波于一些烦人且耗时的工程问题，比如按照测试机、准备编译服务器等等。</p></li><li><p>让产品经理成为产品真正的第一个用户</p><p>持续交付不仅仅是可以保证每一个变化都能及时得到测试以及反馈，更多的是解决测试与实际发布时存在差异的问题。</p><p>产品人员将真正成为第一个用户，而不再是最后一个QA。</p></li><li><p>让产品经理能够完全知悉当前进度和质量</p><p>持续交付能够实时地反应当前的开发情况，从而帮助产品人员决策和调整。</p></li><li><p>产品随时能发布</p><p>计划永远赶不上变化，如何产品人员都希望自己的产品能够随时处于可发布状态。这样就灵活地交付已完成的功能，迎合市场或业务的需要。</p><p>本质上，<strong>做到代码上线和业务上线的解耦分离</strong>，这也正是交付方法论强调的一个重点。</p></li><li><p>可以让程序员进一步加强对整个软件工程的认识</p><p>持续交付涵盖了软件交付端到端的整个周期，其覆盖面不仅仅包括编码，还包括：设计、测试、部署、运维、运营等等。</p><p>研发效率的提高往往不是个人能力的提高，而是集体协同效率的提高。</p></li><li><p>提高个人的工作效率和质量</p><p>随着持续交付的流行，其配套的实践和工具也层出不穷。ping-pong式结对编程（A写测试，B写实现，然后B写下一个测试，A写重构和实现），让编程充满乐趣，也很好的保证了代码质量。</p></li></ul><h2><span id="如何评估持续交付的价值">如何评估持续交付的价值</span></h2><p>量化？</p><p>产品的交付速度是否变快了。但是，实际情况下影响产品交付速度的因素实在太多，持续交付又积极作用，但到底占比多少呢？难以回答。</p><p>各个自动化过程的速度是否变快了？如：编译速度、发布速度、回滚速度、自动化测试速度等等。这些指标确实很好地反应了持续交付的价值，但总觉得这些并不是全部，持续交付的标准化、推行的新流程、改革的环境治理结构，好像都没有体现出来。</p><p>如果很难量化，也可以具象化。在整个工程生命周期中有多少被开发人员诟病，或者阻碍开发人员自主处理的问题点，即‘不可持续点’：</p><blockquote><p>开发不能按需产生隔离的测试环境；</p><p>生成代码回滚后，要手工处理代码分支；</p><p>预发布流量要能自动分离，以便预发布测试。</p></blockquote><p>以消灭这些不可持续点作为目标，拆解出来的可行动点，作为关键结果，来完成绩效考评。</p><h1><span id="影响持续交付的因素">影响持续交付的因素</span></h1><h2><span id="组织和文化因素">组织和文化因素</span></h2><p>持续交付一定是整个组织层面的事情，是跨部门合作的产物，所以组织和文化因素，是要首先考虑的问题。</p><p>紧密配合</p><p>集思广益</p><p>自我驱动</p><p>组织的问题，还是需要通过组织变更来解决。通常我们会采用以下三种方案：</p><ul><li>成立项目管理办公室</li><li>独立建立工程效能部门</li><li>使用敏捷形式，如Scrum，打破职能部门之间的隔离墙，以产品的形式组织团队</li></ul><h2><span id="代码分支策略的选择">代码分支策略的选择</span></h2><h3><span id="主干开发tbd">主干开发（TBD）</span></h3><p>主干开发是一个源代码控制的分支模型，开发者在一个称为“trunck”的分支（Git称master）中对代码进行协作，除了发布分支外没有其他开发分支。</p><p>Google和Facebook都是采用“主干开发”的方式，代码一般直接提交到主干的头部，这样可以保证所有用户看到的都是同一份代码的最新版本。</p><p>“主干开发”确实避免了合并分支时的麻烦，因此像Google这样的公司一般就不采用分支开发，分支只用来发布。</p><p>大多数时候，发布分支是主干某个时点的快照。以后的改Bug和功能增强，都是提交到主干，必要时cherry-pick（选择部分变更集合并到其他分支）到发布分支。与主干长期并行的特性分支极为少见。</p><p>由于不采用“特性分支开发”，所有提交的代码都被集成到了主干，为了保证主干上线后的有效性，一般会使用特性切换（feature toggle）。特性切换就像一个开关可以在运行期间隐藏、启用或禁用特定功能，项目团队可以借助这种方式加速开发过程。</p><p>特性切换在大型项目持续交付中变得越来越重要，因为它有助于将部署从发布中解耦除了。但是，特性切换也会导致代码更为脆弱、更难测试、更难理解和维护、更难提供技术支持，而且更不安全。（From Jim Bird）</p><p>特性切换需要健壮的工程过程、可靠的技术设计和成熟的特性切换生命周期管理，如果不具备这三个关键的条件，使用特性切换反而会降低生产力。</p><p>根据上面的分析，主干开发的分支策略虽然有利于开展持续交付，但是它对开发团队的能力要求也更高。</p><h3><span id="特性分支开发">特性分支开发</span></h3><p>和主干开发行对的时“特性分支开发”。在这个大类里面，我们来分析Git Flow、Github Flow和Gitlab Flow：</p><ul><li><p>Git Flow</p></li><li><p>Github Flow</p><p>是Github所使用的一种简单流程。该流程只使用master和特性分支，并借助Github的pull request功能。</p><p>在Github Flow中，master分支中包含稳定的代码，它已经或即将部署到生产环境。任何开发人员都不允许把未测试或未审查的代码直接提交到master分支。对代码的任何修改，不可Bug修复、热修复、新功能开发等都在单独的分支中进行。不管是一行代码的小改动，还是需要几个星期开发的新功能，都采用同样的方式来管理。</p><p>当需要修改时，从master分支创建一个新的分支，所有相关的代码修改都在新分支中进行。开发人员可以自由地提交代码和提交到远程仓库。</p><p>当新分支中的代码全部完成之后，通过Github提交一个新的pull request。团队中的其他人员会对代码进行审查，提出相关的修改意见。由持续集成服务器（如Jenkins）对新分支进行自动化测试。当代码通过自动化测试和代码审查之后，该分支的代码被合并到master分支。再从master分支部署到生产环境。</p><p>Github Flow的好处在于非常简单实用，开发人员需要注意的事项非常少，很容易形成习惯。当需要修改时，只要从master分支创建新分支，完成之后通过pull request和相关的代码审查，合并回master分支就可以了。</p></li><li><p>Gitlab Flow</p></li></ul><table><thead><tr><th>分支模型</th><th>说明</th></tr></thead><tbody><tr><td>带生产分支</td><td>1. 无法控制准确的发布时间，但又要求不停集成的。<br>2. 需要创建一个production分支来放置发布的代码</td></tr><tr><td>带环境分支</td><td>1. 要求所有代码都在逐个环境中测试通过。<br>2. 需要为不同的环境建立不同的分支</td></tr><tr><td>带发布分支</td><td>1. 用于对外界发布软件的项目，同时需要维护多个发布版本<br>2. 尽可能晚地从master拉取发布分支。<br>3. Bug修复应先合并到master，然后cherry pick到release分支。</td></tr></tbody></table><h1><span id="依赖管理">依赖管理</span></h1><h1><span id="代码回滚">代码回滚</span></h1><h2><span id="什么是代码回滚">什么是代码回滚？</span></h2><ol><li>包回滚是指，线上运行的系统，从现在的版本回滚到以前稳定的老版本。</li><li>代码回滚是指，Git分支的指针（游标），从指向当前有问题的版本改为指向一个该分支历史树上没问题的版本，而这个版本可以是曾经的commit，也可以是新建的commit。</li></ol><h2><span id="哪些情况下需要回滚代码">哪些情况下需要回滚代码？</span></h2><ul><li>第一种情况：开发人员独立使用的分支上，如果最近产生的commit都没有价值，应该废弃掉，此时就需要把代码回滚到以前的版本。</li><li>第二种情况：代码集成到团队的集成分支且尚未发布，但在后续测试中发现这部分代码有问题，且一时半会儿解决不掉，为了不把问题传递给下次的集成，此时就需要把有问题的代码从集成分支中回滚掉。</li><li>第三种情况：代码已经发布到线上，线上包回滚后发现是新上线的代码引起的问题，且需要一段时间修复，此时又有其他功能需要上线，那么主干分支必须把代码回滚到正确版本产品包对应的commit</li></ul><h2><span id="哪些情况下包的回滚无需回滚代码">哪些情况下包的回滚无需回滚代码？</span></h2><ul><li>线上回滚后，查出并不是因为源代码有问题。</li><li>下次线上发布，就是用来修复刚才线上运行的问题。</li></ul><h2><span id="代码回滚必须遵循的原则">代码回滚必须遵循的原则</span></h2><p>集成分支上代码回滚坚决不用reset –hard的方式，原因如下：</p><ul><li>集成分支上的commit都是项目阶段性的成果，即使最近的发布不需要某些commit的功能，但仍然需要保留这些commit，以备后需。</li><li>开发人员会基于集成分支上的commit拉取新分支，如果集成分支采用reset的方式消除了该commit，下次开发人员把新分支合并回集成分支时，又会把被清除的commit申请合并，很可能导致不需要的功能再次被引入集成分支。</li></ul><h2><span id="三种典型回滚场景及回滚策略">三种典型回滚场景及回滚策略</span></h2><table><thead><tr><th>场景名称</th><th>特点</th><th>策略</th></tr></thead><tbody><tr><td>个人分支回滚</td><td>不会影响团队其他成员</td><td>可以用git reset –hard</td></tr><tr><td>集成分支上线前回滚</td><td>1. 会影响团队其他成员<br>2. 非线上故障，相对不紧急<br>3. 可以对单独的commit做回滚</td><td>1. 一定不用 git reset –hard<br>2. 可在gitlab上找到对应的Merge Request，点击revert</td></tr><tr><td>集成分支上线后回滚</td><td>1. 会影响团队其他成员<br>2. 线上故障，相对紧急<br>3. 需回滚到包对应的commit</td><td>1. 一定不用 git reset <br>2. 再集成分支的头上增加一个commit，该commit的内容等于包回滚后对应的commit</td></tr></tbody></table><h1><span id="测试环境">测试环境</span></h1><p>在整个持续交付生命周期中，测试环境的易用程度会直接影响软件的交付程度，但因为以下两点，它又是最被容易忽略的一环。</p><ol><li>我们总是把环境理想化，忽略了其管理的难度；</li><li>我们也很少设立专职的环境管理员，导致环境长期处于混乱状态。</li></ol><p>通常，我们在项目初期并不会关注测试环境的问题，然而在回顾时却发现在环境问题上浪费的时间非常惊人：硬件资源申请困难，测试环境配置繁琐，测试应用更新困难，基础设施稳定性差，服务调用异常，多项目并行造成互相干扰等等问题。</p><p>构建一整套好的测试环境的关键点以及具体实施方案</p><ol><li>测试环境的结构一般是怎样的？</li><li>什么才是好的测试环境？</li></ol><h2><span id="互联网公司测试环境的结构">互联网公司测试环境的结构</span></h2><p>当公司规模较小时，测试环境的维护相对容易。开发和测试公用一套数据库缓存等基础设施，因为应用数量不多，开发环境可以是单机的，无论是手动或半自动化的更新测试环境的应用，花费的时间都还在可接受范围内。</p><p>这时，公司环境的结构很简单，分为开发环境，测试环境，生产环境即可。</p><p>但实际上，大多数公司的研发过程及配套环境并没有这么简单，一般都会存在5套以上的大环境以及更多的子环境，每个环境的机器数量可能有数十台甚至更多。</p><p>为什么需要这么多套环境呢？</p><ul><li><p>纵向上看，人员的增多提高了项目的并行度，如果这时还使用一套环境的话，就会发生以下问题：</p><ul><li>开发同学在debug一个问题时，发现下游的应用突然就不可用了；</li><li>测试同学在跑了10多分钟测试脚本后，发现应用已经被开发更新掉了。</li></ul><p>这样的体验是让人崩溃的。</p></li><li><p>横向上看，公司的应用架构逐渐转为微服务化，完整的应用数量很容易就达到了几百甚至几千个的量级，建立一套完整的环境变得越来越复杂，往往是研发团队想要构建一套新的环境却构建不出来。</p></li></ul><p>所以，目前互联网公司常见的环境模型一般分为开发环境，功能测试环境，验收测试环境，预发布环境，生产环境这五套大环境。</p><ul><li><p>开发环境</p><p>微服务架构下，单机已经无法完整地运行业务应用，这就需要开发环境内包含一套完整的业务应用依赖以及相关的基础设施，以保证业务开发同学能在本地完成开发测试。</p></li><li><p>功能测试环境</p><p>在开发环境下，每个下游依赖应用都只有一个可用的stable版本。而在实际的开发过程中，由于项目的并行开发，往往会同时存在多个可依赖的版本。而每个项目组的同学在测试时，都希望测试过程中的关键依赖应用是可以被独占的，版本是固定的，不会被其他项目组干扰。</p><p>所以，一套独立的功能测试环境就很有必要了。<em>通常，互联网企业会通过中间件的方式分割出一块隔离区域，在功能测试环境中创建多个子环境来解决问题。</em></p></li><li><p>验收测试环境</p><p>验收测试环境和功能测试环境是完全隔离的。当功能测试通过后，你可以在验收测试环境进行最终的验收。</p><p>它除了可以用作测试之外，还可以用作产品展示。所以，除了测试和开发人员，产品经理也是验收测试环境的主要使用者。</p></li><li><p>预发布环境</p><p>到预发布阶段，应用已经进入了生产网络，和真实的生产应用共享同一套数据库等基础设施。预发布是正式发布前的最后一次测试，在这个环境中往往可以发现线下环境中发现不了的Bug。这个环境的运维标准等同于生产环境，一般不允许开发人员直接登陆机器。</p><p>根据不同的业务需求和部署策略，不同公司对预发布环境的实现也有所不同：</p><ul><li><p>一种比较常见的方式是，将金丝雀发布作为预发布，从接入真实流量的集群中挑选一台或一小组机器先进行版本更新，通过手工测试以及自动化测试和监控系统验证，降低新版本发布的风险。</p><blockquote><p>金丝雀发布：</p><p>17世纪，英国矿井工人发现，金丝雀对瓦斯这种气体十分敏感。空气中哪怕有极其微量的瓦斯，金丝雀也会停止歌唱；而当瓦斯含量超过一定限度时，虽然鲁钝的人类毫无察觉，金丝雀却早已毒发身亡。当时在采矿设备相对简陋的条件下，工人们每次下井都会带上一只金丝雀作为“瓦斯检测指标”，以便在危险状况下紧急撤离</p><p>金丝雀发布是灰度发布的一种方式。灰度发布是指在黑与白之间，能够平滑过渡的一种发布方式。让一部分用户继续用A，一部分用户开始用B，如果用户对B没有什么反对意见，那么逐步扩大范围，把所有的用户都迁移到B上面来。</p><p>部署步骤：</p><ul><li>准备好部署各个阶段的工件，包括：构建工件、测试脚本、配置文件和部署清单文件。</li><li>从负载均衡列表中移除掉“金丝雀”服务器</li><li>升级“金丝雀”应用（排掉原有流量并进行部署）</li><li>对应用进行自动化测试</li><li>将“金丝雀”服务器重新添加到负载均衡列表中（连通性和健康检查）</li><li>如果“金丝雀”在线使用测试成功，升级剩余的其他服务器，否则就回滚。</li></ul></blockquote></li><li><p>另一种做法是，独立出一组始终不接入真实流量的机器，调用在预发布环境中形成闭环。</p><p>相对于第一种方式，第二张方式对生产环境的影响更小，但需要额外的资源和维护成本。</p></li></ul></li><li><p>生产环境</p><p>生产环境是用户真实使用的环境，对安全性和稳定性的要求最高。</p></li></ul><h2><span id="什么是好的测试环境">什么是好的测试环境？</span></h2><p>开发环境、功能测试环境、验收测试环境、预发布环境这四种测试环境形成的原因是什么？</p><p>搭建测试环境的目的是保证最终交付的软件质量，但每套测试环境的用户并不完全一样：</p><ul><li>开发环境的用户是开发同学；</li><li>功能测试环境的主要用户是测试同学；</li><li>验收测试环境的用户是产品经理和测试同学；</li><li>预发布环境的使用者是测试同学，但受益者却是运维同学。</li></ul><p>而每种角色对于产品研发流程中的需求也是不同的：</p><ul><li>开发同学关注研发效率；</li><li>测试同学关注测试的可靠性；</li><li>产品经理更关注的是真实的用户体验和产品的完整性；</li><li>预发布环境的需求其实来自于运维同学，他们需要保证生产环境的稳定性，减少生产环境的变更，所以需要将预发布环境与线下环境完全隔离。</li></ul><p>当然，不论一套环境用户是测试同学还是开发同学，以下几个需求都是必须被做到的。</p><ul><li>可得性，即在开发一个新项目时，能快速获取构建一个环境需要的机器，基础设施。最好的情况是，能随时可得，随时归还。</li><li>快速部署，即在搭建新环境时，能以最快的速度构建出一整套完整的环境。测试环境的部署很频繁，在代码提交后，能在很短的时间内构建代码，在环境上更新，就能更早开始测试。</li><li>独立性，即一个环境在使用过程中，可以不受其他项目测试人员的干扰。</li><li>稳定性，即不会因为下游服务，基础设施的异常，造成测试中断、等待。</li><li>高仿真，主要分为两个方面：“测试数据真实”，即能在测试环境构建出真实的测试用例；“环境真实”，即基础服务的架构和行为与线上环境保持一致，避免因为环境不一致造成测试结果不一致。</li></ul><p>但是，毕竟各个环境的用户和使用场景不同，它们的需求也是有差别的。比如，相对于开发环境，验收测试环境对测试数据的仿真性要求会更高，而开发环境的灵活性，决定了不会过于严格的维护测试数据的真实性。</p><p>当一个环境可以满足其真正核心用户的需求时，就是一个好用的测试环境。</p><h2><span id="测试环境的成本">测试环境的成本</span></h2><ul><li><p>机器资源的成本</p><p>保证环境的独立性，是你构建更多套环境的一个主要原因。但是，一套独立的、拥有完整链路的环境成本是非常高的。</p><p>以阿里云的价格为例：假设一个只有100个应用的微服务架构环境，选取单应用单机2核4G内存的低配置实例方式进行部署，单实例的年价格在2000元左右，100个实例的话，一年的花费就是20万元左右。</p><p>而这只是最保守的计算，随着服务规模的增加，以及更多环境的需要，整体花费上涨两个数量级也是很正常的。</p><p>这样的问题在开发环境和集成环境的表现是最明显的。为了保证这两套环境的独立性，你必然需要有很高的环境副本数。单无论如何，你都不可能让每一个开发和测试人员都拥有一套完整环境的硬件资源。</p></li><li><p>其次是管理成本</p><p>管理成本，包括维护环境的可用性，配置的管理成本，和测试数据的维护成本三个维度。</p><ul><li><p>维护多套环境的第一要点是，维护环境的可用性。</p><p>与云时代之前相比，容器技术已经解决了很多问题。比如，服务器操作系统级别的依赖的标准化更容易了；当出现硬件故障时，迁移和恢复服务也更加方便了。</p><p>但是容器技术并没有解决故障定位的问题。微服务架构下集群的节点数量多，调用链复杂，你不再能确定到底是环境问题，还是程序本身的Bug，也就导致定位故障更加困难了。</p><p>所以，更多套环境就意味着更大的集群规模，出现故障的几率会随之增加，而解决故障也会占用更长的工作时间。</p></li><li><p>维护多套环境的另一大成本，配置管理成本</p><p>配置是环境管理中最核心的内容，创建一套环境时，为了保证它真正的独立可用，不仅要保证应用可以成功运行，还要保证应用在基础设施的配置是正确的。比如集成测试环境下部署了一个应用的多个平行项目，就需要有办法保证测试人员能访问到正确的应用。</p><p>如果是web应用，你就要考虑把应用绑定到不同的域名，这样就会增加域名管理的成本；如果是一个service应用，就要考虑到这些service不会被其他项目的、无关环境的应用调用到，同时也不会调用到其他错误的服务。</p><p>每多一套环境，就会多一套这样的配置，而且这些配置都需要在各类基础设施中生效。</p></li><li><p>测试数据的维护成本</p><p>测试数据也是环境中极为重要的一个组成部分。当并行环境的数量变多后，数据的维护同样是让人头疼的问题。</p><p>为了保证环境的高仿真，哪些环境公用一套数据库，以及测试数据的更新在多套环境中怎么执行等等，都需要非常高的管理成本。</p></li></ul></li><li><p>最后是流程成本</p><ul><li><p>沟通成本</p><p>每增加一套环境，你都需要考虑团队成员如何在新环境上沟通协作。谁在占用，何时退出这些信息，你都需要第一时间告知团队。当环境的数量变得非常多以后，做好这些事儿的难度就很大了。</p></li><li><p>测试成本</p><p>在开发环境、集成测试环境、验收测试环境、预发布环境、生产环境这样的结构下，核心功能的测试流程就至少会执行五次。每引入一套新的环境，测试流程都会变得更加复杂。</p></li></ul></li></ul><h2><span id="如何调节效率和成本的矛盾">如何调节效率和成本的矛盾？</span></h2><p>增加一套环境带来的成本竟然有那么多，但是为了提高持续交付的效率，隔离的多套环境又是必不可少的。</p><p>那么，应该怎样去规划和设计环境呢？</p><ul><li><p>公共与泳道</p><p>第一个关键点是抽象公共环境，而其中的公共服务基本都属于底层服务，相对比较稳定，这是解耦环境的重中之重。比如我们经常会将中间件、框架类服务，底层业务公共服务（账号、登陆、基本信息）部署在这套公共环境上。</p><p>在公共环境的基础上，可以通过泳道的方式隔离相关测试应用，利用LB和SOA中间件对路由功能的支持，在一个大的公共集成测试环境中隔离出一个个独立的功能测试环境，那么增加的机器成本就仅与被并行的项目多少有关系了。</p><p>具体案例：</p><p>比如，你有一个新的下单流程需要测试。你可以将下单web2.0和下单sevice2.0抽离出来</p></li><li><p>避免产生多套公共环境</p><p>用mock service模拟大多数服务</p></li><li><p>减轻配置的复杂度</p><ul><li>制定一套统一配置的解决方案</li><li>要让环境自己说话，有效减少配置项</li></ul></li></ul><h1><span id="环境自描性">环境自描性</span></h1><blockquote><p>要想把环境配置做好，就是要做到让环境自己能说话。</p></blockquote><p>环境配置可以分为:</p><ul><li><p>以环境中每台服务器为对象的运行时配置</p><p>以一个Java Web应用为例，需要哪些运行时配置呢？</p><ol><li>安装war包运行依赖的基础环境，比如JDK、Tomcat等</li><li>修改Tomcat的配置文件，关注点主要包括：应用的日志目录，日志的输出格式，war包的存放位置。Tomcat的server.xml配置包括：连接数、端口、线程池等参数</li><li>配置Java参数，包括JVM堆内存的最大最小方式、GC方式、参数，JMX监控开启等</li><li>考虑操作系统参数，比较常见的一个配置时Linux的文件句柄数，如果应用对网络环境有一些特殊要求的话，还需要调整系统的TCP参数等配置</li></ol><p>经过上面4步，一个简单的运行时环境的配置就算时完成了，可以开始运行一个程序了。</p><p>但我们不光要考虑单个实例初始化配置，还要考虑每次JDK、Tomcat等基础软件的版本升级引起的运行时配置的变更，而且这些变更都需要清晰的记录下来，从而保证扩容出新的服务器时能取到正确的、最新的配置。</p><p>另外，对于一个集群的服务器组来说，还需要强制保证它们的运行时配置是一致的。</p></li><li><p>以一个环境为整体目标的独立环境配置</p><p>独立环境配置的主要目的是，保证一个环境能够完整运作的同时，又保证足够的隔离性，使其成为一个内聚的整体。</p><p>所以，要让一个环境能够符合需求的正常运作，你需要考虑的内容包括：</p><ol><li>这个环境所依赖的数据库该如何配置，缓存服务器又该如何配置</li><li>如果是分布式系统，或者SOA结构的话，就需要考虑服务中心、配置中心等一系列中间件的配置问题</li></ol><p>其中，最为重要的是配置中心的配置。</p><p>只有先访问到正确的配置中心，才能获取到其他相关的环境配置或者应用配置信息。也就是说，如果配置中心的配置错了，那么环境就会陷入混乱状态。</p><ol><li>要考虑访问入口问题。这套环境的入口在哪里？是一个站点还是一个服务入口？如果是一个站点的话，那这个站点的访问域名就需要被特殊配置。如果这是一个内部环境的话，那么这个内部域名的DNS解析也需要被配置。如果这套环境中有多个Web应用，那么你就要考虑7层路由的配置问题了</li><li>还要配置环境对应的基础服务，比如监控、短信、搜索等</li></ol></li></ul><p>再如果你的环境要承载多种语言栈，各类应用依赖的基础软件也不同，环境和环境之间有各种关联设置，数据库的连接分配，环境中负载均衡的设置等等</p><p>虽然环境配置有这么多的待处理事项，但是环境本身也是一个非常强大的工具，本身包含非常多的信息，如果这些糟心的事情环境能和你一起来解决，那就简单了，也就是说要让环境之间来说话。怎么做到呢？</p><h2><span id="环境一定要标准化">环境一定要标准化</span></h2><p>解决复杂问题的办法，无非是先将其分解，再将其简单化，对环境配置这个难题来说也是同样的道理。想要解决它，首先得要想办法分解、简化它。</p><p>最好的简化方法，莫过于标准化了。</p><p>所谓标准化，就是为了在一定范围内获得最佳秩序，对实际的或潜在的问题制定共同、可重复使用的规则。</p><p>标准化也就是让环境学会了一门统一的语言，是自己说话的前提。</p><p>按照这个思路，我们首先可以实现对语言栈的使用、运行时配置模板、独立环境配置的方法等的标准化：、</p><ul><li>规定公司的主流语言栈</li><li>统一服务器安装镜像</li><li>提供默认的运行时配置模板</li><li>统一基础软件的版本，以及更新方式</li><li>在架构层面统一解决环境路由问题</li><li>自动化环境产生过程</li></ul><p>在实施持续交付的同时，推动形成以下几个方面的规范：</p><ul><li>代码及依赖规范</li><li>命名规范</li><li>开发规范</li><li>配置规范</li><li>部署规范</li><li>安全规范</li><li>测试规范</li></ul><p>其实，不管是持续交付还是架构改造，标准先行都是技术实施的前提条件。</p><h2><span id="约定大于配置">约定大于配置</span></h2><p>像代码的部署路径，每个环境的域名定义，FAT、UAT来表示环境的作用，单机单应用，所有服务端端口是8080等等</p><p>约定大于配置的好处是，除了简化配置工作外，还可以提高沟通效率。</p><p>相当于赋予了环境天生的本能，进一步加强了环境的自我描述能力。</p><h2><span id="让环境自己能开口说话">让环境自己能开口说话</span></h2><p>有了环境标准化，以及约定大于配置的基础，你就可以顺利地让环境自己开口说话了。</p><p>也就是，通过环境的自描述文件，让环境能讲清楚自己的作用、依赖，以及状态，而不是由外部配置来解释这些内容。</p><p>以一台服务器为例，一旦生成，除了不能控制自己的生死外，其他运行过程中的配置，都应该根据它自身的描述来决定。</p><p>那么，如何让服务器自己说话呢？</p><ul><li>首先，需要定义Server Spec：在这个文件中，记录了这台服务器的所有身份信息，包括：IDC、型号、归属环境、作用、所属应用、服务类型、访问路径等</li><li>解决配置中心寻址：中间件根据Server Spec的描述，寻找到它所在环境对应的配置中心，从而进一步获取其他配置，如数据库连接字符串、短信服务地址等</li><li>完成服务自发现：根据服务类型、访问路径等，还可以自动生成对应的路由配置、负载均衡配置等</li></ul><h1><span id="各种配置方法">各种配置方法</span></h1><p>配置管理：是通过技术或行政手段对软件产品及其开发过程和生命周期进行控制、规范的一系列措施。它的目标是记录软件产品的演化过程，确保软件开发者在软件生命周期的各个阶段都能得到精确的产品配置信息。</p><p>配置：是指独立于程序之外，但又对程序产生作用的可配变量。也就是说，同一份代码在不同的配置下，会产生不同的运行结果。</p><h1><span id="分钟级搭建环境">分钟级搭建环境</span></h1><h2><span id="环境构建流水线">环境构建流水线</span></h2><ol><li><p>虚拟机环境准备，根据环境的应用数，每个应用需要的硬件配置，准备号环境的硬件资源</p><ul><li>当物理机接到机架上以后，打开交换机端口，等待机器被发现后，调用Nova进行物理机基本的硬件配置</li><li>物理机环境准备完毕后，从openstack获取虚机所需的镜像、网络等信息，调用Openstack API镜像虚机部署。虚机配置的一个关键点是，如何对网络进行配置</li><li>虚机初始化后，需要在虚机上进行一些基础软件比如JDK，Tomcat的安装和配置。业界一般采用的方式是，通过自动化的配置管理工具来进行操作。</li></ul></li><li><p>应用部署流水线，在标准化的虚拟机上进行应用部署，当出现问题时如何容错。</p><ul><li><p>单应用部署标准化，这是整个环境部署的基础。对一套测试环境而言，每个应用就像是环境上的一个零件，如果单个应用无法自动发布或发布失败率很高，那么整个环境就更难以构建出来。而如何实现一个好的发布系统，提升单应用部署速度呢？</p></li><li><p>应用部署的并行度，为了提高环境的部署速度，需要尽可能得最大化应用部署的并行度。理想的情况下，环境中的所有应用都可以一次性地并行部署。</p><p>然而，做到一次性并行部署并不容易，需要保证：应用都是无状态的，并且可以不依赖别的应用进行启动，或者仅仅依赖于基础环境中的应用就可以启动，且可以随时通过中间件进行调用链的切换。</p></li><li><p>流水线的容错机制。对于环境构建工具，通常的做法是力求做到全面的标准化、代码化。但是因为环境的创建本身是一个非常复杂的工作流，在创建过程总会有一些异常中断整个流程。比如，某个应用启动失败了。</p><p>而对于这些工作流中的异常，我们该如何处理呢？</p><ul><li><p>第一种方法是，错误中断法。创建环境过程中，各种资源申请、应用部署出现问题时，我们将工作流快照下来，然后收集所有的异常信息，返回给用户。由用户判断当前的情况，等用户确认问题已经得到解决后，可以触发一次快照重试，继续被中断的流程。</p></li><li><p>第二种方法是，优先完成法。创建环境过程中发生错误时，先进行几次重试。如果重试依然发生错误的话，就忽略当前错误，先走完剩余的流程，等所有的流程都走完了，再一次性将错误返回给用户。</p><p>从整体速度上来看，第二种优先完成的处理方式是更优的，而且也会更少地打断用户。只是方式二需要保证的关键原则是：所有的部署脚本的操作都是幂等的，即两次操作达成的效果是一致的，并不会带来更多的问题。</p></li></ul></li></ul></li><li><p>环境变更，在SOA或微服务的架构体系下，常常会因为测试的需求，将几套环境合并或拆分，创建环境时，你需要考虑如何高效地完成这些操作。</p><p>一般情况下，研发人员变更环境主要有以下4种场景：</p><ul><li>已经有一套新环境，当有新项目时，开发人员会挑选部分应用，组成一个独立的子环境。这里的重点是，要保证子环境和完整环境的调用是互相隔离的</li><li>当存在多个子环境时，可能在某个时间点需要做多个项目的集成，这时开发人员需要合并多个环境。</li><li>和合并的情况相反，有些情况下，开发人员需要将一个子环境种的应用切分开来，分为两个或者多个环境分别进行隔离测试。</li><li>已经存在一个子环境，当多个并行项目时，开发人员会克隆一套完整的子环境做测试。</li></ul></li></ol><h1><span id="构建提速">构建提速</span></h1><h1><span id="发布">发布</span></h1><h2><span id="发布是持续交付的最后一公里">发布是持续交付的最后一公里</span></h2><h2><span id="任何变更都需要发布">任何变更都需要发布</span></h2><h2><span id="发布系统一定要注意用户体验">发布系统一定要注意用户体验</span></h2><h2><span id="发布系统的核心架构和功能设计">发布系统的核心架构和功能设计</span></h2><p>作为整个持续交付体系中极为重要的一个环节，应用的发布时提升交付效率的关键。高效的发布系统架构应该时清晰的、健壮的、低耦合的，从而达到在最糟糕的情况下也能运作的目的。</p><h1><span id="利用监控保障发布质量">利用监控保障发布质量</span></h1><p>发布结束才是最危险的时刻。因为，故障都是伴随发布变更而来的。</p><p>所以，我们需要一套监控系统，及时发现问题，定位问题，帮助我们减少因故障带来的损失。</p><p>监控的分类：</p><ol><li><p>用户侧监控</p><p>随着移动互联网的兴起，用户对于MobileApp的体验成了衡量一个系统的重要指标，所以对用户侧的监控也就变得尤为重要。因为，它能够第一时间向我们反馈用户使用系统的直观感受。</p><p>此类监控通常从以下几个维度进行，这些监控数据既可以通过打点的方式，也可以通过定期回收日志的方式收集。</p><ul><li>端到端的监控，主要包括一些访问量、访问成功率、响应时间、发包回包时间等等监控指标。同时，我们可以从不同维度定义这些指标，比如：地区、运营商、App版本、返回码、网络类型等。因此，通过这些指标，我们就可以获得用户全方位的感受。</li><li>移动端的日志。我们除了关注系统运行的日志外，还会关注系统崩溃或系统异常类的日志，以求第一时间监控到系统故障。</li><li>设备表现监控，设备表现监控，主要指对内存、CPU、温度等的监控，以及一些页面级的卡顿或白屏现象；或者是直接的堆栈分析等；</li><li>唯一用户ID的监控。除了以上三种全局的监控维度外，用户侧的监控一定要具备针对唯一用户ID的监控能力，能够获得某一个独立用户的具体情况</li></ul></li><li><p>网络监控</p><ul><li>公网监控。这部分监控，可以利用模拟请求的手段（比如，CDN节点模拟、用户端模拟），获取对CDN、DNS等公网资源，以及网络延时等监控的数据。也可以通过采样的方式获取这部分数据。</li><li>内网监控。这部分监控，主要是对机房内部核心交换机数据和路由数据的监控。如果你能打造全局的视角，形成直观的路由拓扑，可以大幅度提升监控效率。</li></ul></li><li><p>业务监控</p><p>如果你的业务具有连续性，业务量达到一定数量后呈现比较稳定的变化趋势，那么你就可以利用业务指标来进行监控了。</p><p>一般情况下，单位时间内的订单预测线，是最好的业务监控指标。</p><p>如何系统故障和问题，影响最大的就是业务指标，而一般企业最重要的业务指标就是订单和支付。</p><p>监控企业的核心业务指标，能够以最快的速度反应系统是否稳定。</p><p>核心业务指标需要细心挑选。实时、准确、高效的收集这些指标也很重要。</p></li><li><p>应用监控</p><p>通常称之为调用链监控。监控服务与服务之间的调用关系、速度和结果等问题。</p><p>调用链监控一般需要收集应用层全量的数据进行分析，要分析的内容包括：调用量、响应时长、错误量等；面向的系统包括：应用、中间件、缓存、数据库、存储等；同时也支持对JVM等的监控。</p><p>应用日志监控。将应用日志有效地联合，并进行分析，也可以起到同样的应用监控左右，但其粒度和精准度比中间件采集方式要弱得多。</p></li><li><p>系统监控</p><p>指的是对基础设施的监控。我们通常会收集CPU、内存、IO、磁盘、网络连接等作为监控指标。</p><p>采用定期采样的方式进行采集，一般选取1分钟、3分钟或5分钟的时间间隔，但一般不会超过5分钟。</p></li></ol><h1><span id="代码静态检查">代码静态检查</span></h1><h1><span id="破坏性测试">破坏性测试</span></h1><h1><span id="自动化回归">自动化回归</span></h1><p>对于持续交付的测试来说，自动化回归测试是不可或缺的，占了很大的测试比重。</p><p>进行自动化回归测试，就始终会有三个大问题：</p><ul><li>测试数据的准备和清理</li><li>分布式系统的依赖</li><li>测试用例的高度仿真</li></ul><h1><span id="平台化设计持续交付">平台化设计持续交付</span></h1><h1><span id="持续交付中的宝贵数据">持续交付中的宝贵数据</span></h1><h1><span id="移动app的持续交付生命周期">移动APP的持续交付生命周期</span></h1><h1><span id="快速构建持续交付系统">快速构建持续交付系统</span></h1><h2><span id="需求分析">需求分析</span></h2><h3><span id="模拟团队介绍">模拟团队介绍</span></h3><table><thead><tr><th></th><th>团队1</th><th>团队2</th><th>团队3</th></tr></thead><tbody><tr><td>职责</td><td>中间件服务</td><td>业务后台服务</td><td>业务客户端服务</td></tr><tr><td>代码管理</td><td>Git</td><td>Git</td><td>Git</td></tr><tr><td>语言平台</td><td>Java</td><td>Java</td><td>React Native</td></tr><tr><td>交付产物</td><td>服务/Jar</td><td>服务/War</td><td>App</td></tr></tbody></table><p>整个产品的研发，需要由着3个团队合作完成。</p><h3><span id="模拟系统介绍">模拟系统介绍</span></h3><h2><span id="gitlab解决代码管理问题">Gitlab解决代码管理问题</span></h2><h2><span id="jenkins解决集成打包问题">Jenkins解决集成打包问题</span></h2><h2><span id="ansible解决自动部署问题">Ansible解决自动部署问题</span></h2>]]></content>
    
    <summary type="html">
    
      持续交付——如何将一个好点子，以最快的速度交付给用户
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
</feed>
